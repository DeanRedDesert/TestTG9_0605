//-----------------------------------------------------------------------
// <copyright file = "IGameFunctionStatusCategory.cs" company = "IGT">
//     Copyright (c) 2024 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System.Collections.Generic;
    using Schemas.Internal.GameFunctionStatus;

    /// <summary>
    /// Provides functionality for controlling the behaviour of the denomination selection screen and various on screen
    /// game buttons
    /// Category: 1041; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IGameFunctionStatusCategory
    {
        /// <summary>
        /// Message from the bin to the foundation to request the current expected denomination selection status.
        /// </summary>
        /// <returns>
        /// The content of the GetDenominationPlayableStatusReply message.
        /// </returns>
        DenominationStatusList GetDenominationPlayableStatus();

        /// <summary>
        /// Initiates a request from the bin to the foundation to return any active timeout information
        /// </summary>
        /// <returns>
        /// If the return value is not set, then it should be ignored by the consumer
        /// </returns>
        GetDenominationTimeoutReplyMessage GetDenominationTimeout();

        /// <summary>
        /// Message from the bin to the foundation to request the currently expected game button statuses.
        /// </summary>
        /// <returns>
        /// The content of the GetGameButtonStatusReply message.
        /// </returns>
        IEnumerable<GameButtonBehaviorType> GetGameButtonStatus();

    }

}

