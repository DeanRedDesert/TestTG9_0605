//-----------------------------------------------------------------------
// <copyright file = "IThemeToExtParcelCommCategory.cs" company = "IGT">
//     Copyright (c) 2015 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2L
{
    using System;
    using Schemas.Internal;

    /// <summary>
    /// F2L Theme To Extension Parcel Communication category of messages.  Category: 14  Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IThemeToExtParcelCommCategory
    {
        /// <summary>
        /// Message from Bin to Foundation to make a parcel call to the specified target.  Sent on the GI channel.
        /// </summary>
        /// <param name="extension">
        /// Identifier of the extension to target with the parcel call.
        /// </param>
        /// <param name="payload">
        /// Binary payload that is opaque to the foundation.
        /// </param>
        /// <returns>
        /// The content of the ThemeToExtParcelCommExtensionParcelCallTxReply message.
        /// </returns>
        ThemeToExtParcelCommExtensionParcelCallTxReply ExtensionParcelCallTx(String extension, Byte[] payload);

        /// <summary>
        /// Message from Bin to Foundation to make a transactional parcel call to the specified target.  Sent on the FI channel.
        /// </summary>
        /// <param name="extension">
        /// Identifier of the extension to target with the parcel call.
        /// </param>
        /// <param name="payload">
        /// Binary payload that is opaque to the foundation.
        /// </param>
        /// <returns>
        /// The content of the ThemeToExtParcelCommExtensionTransParcelCallTxReply message.
        /// </returns>
        ThemeToExtParcelCommExtensionTransParcelCallTxReply ExtensionTransParcelCallTx(String extension, Byte[] payload);

    }

}

