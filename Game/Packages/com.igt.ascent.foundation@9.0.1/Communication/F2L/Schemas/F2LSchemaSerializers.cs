// <auto-generated>
//   This file was generated by GenerateSerializers.py.
//   Changes to this file may cause incorrect behavior and will be lost if the file is regenerated.
// </auto-generated>

#pragma warning disable

#if _DYNAMIC_XMLSERIALIZER_COMPILATION
[assembly:System.Security.AllowPartiallyTrustedCallers()]
[assembly:System.Security.SecurityTransparent()]
[assembly:System.Security.SecurityRules(System.Security.SecurityRuleSet.Level1)]
#endif
namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Serializers {

    public class XmlSerializationWriter1 : System.Xml.Serialization.XmlSerializationWriter {

        public void Write399_Connect(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"Connect", @"F2LConnectVer2.xsd");
                return;
            }
            TopLevelElement();
            Write12_Connect(@"Connect", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect)o), false, false);
        }

        public void Write400_LinkControl(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"LinkControl", @"F2LLinkControlVer2.xsd");
                return;
            }
            TopLevelElement();
            Write29_LinkControl(@"LinkControl", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl)o), false, false);
        }

        public void Write401_GameControl(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"GameControl", @"F2LGameControlVer4.xsd");
                return;
            }
            TopLevelElement();
            Write275_GameControl(@"GameControl", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl)o), false, false);
        }

        public void Write402_ShowDemo(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"ShowDemo", @"F2LShowDemoVer2.xsd");
                return;
            }
            TopLevelElement();
            Write282_ShowDemo(@"ShowDemo", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo)o), false, false);
        }

        public void Write403_GameStopReport(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"GameStopReport", @"F2LGameStopReportVer2.xsd");
                return;
            }
            TopLevelElement();
            Write289_GameStopReport(@"GameStopReport", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport)o), false, false);
        }

        public void Write404_Identification(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"Identification", @"F2LIdentificationVer1.xsd");
                return;
            }
            TopLevelElement();
            Write297_Identification(@"Identification", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification)o), false, false);
        }

        public void Write405_GameTilt(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"GameTilt", @"F2LGameTiltVer1.xsd");
                return;
            }
            TopLevelElement();
            Write304_GameTilt(@"GameTilt", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt)o), false, false);
        }

        public void Write406_AutoPlay(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"AutoPlay", @"F2LAutoPlayVer1.xsd");
                return;
            }
            TopLevelElement();
            Write322_AutoPlay(@"AutoPlay", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay)o), false, false);
        }

        public void Write407_GameContextLocking(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"GameContextLocking", @"F2LGameContextLockingVer1.xsd");
                return;
            }
            TopLevelElement();
            Write328_GameContextLocking(@"GameContextLocking", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking)o), false, false);
        }

        public void Write408_VoucherPrint(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"VoucherPrint", @"F2LVoucherPrintVer1.xsd");
                return;
            }
            TopLevelElement();
            Write333_VoucherPrint(@"VoucherPrint", @"F2LVoucherPrintVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint)o), false, false);
        }

        public void Write409_ProtocolIPPForwarding(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"ProtocolIPPForwarding", @"F2LProtocolIPPForwardingVer1.xsd");
                return;
            }
            TopLevelElement();
            Write339_ProtocolIPPForwarding(@"ProtocolIPPForwarding", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding)o), false, false);
        }

        public void Write410_CdsItaly(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"CdsItaly", @"F2LCdsItalyVer1.xsd");
                return;
            }
            TopLevelElement();
            Write364_CdsItaly(@"CdsItaly", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly)o), false, false);
        }

        public void Write411_CdsItalyMockEnrollment(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"CdsItalyMockEnrollment", @"F2LCdsItalyMockEnrollmentVer1.xsd");
                return;
            }
            TopLevelElement();
            Write371_CdsItalyMockEnrollment(@"CdsItalyMockEnrollment", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment)o), false, false);
        }

        public void Write412_ThemeToExtParcelComm(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"ThemeToExtParcelComm", @"F2LThemeToExtParcelCommVer1.xsd");
                return;
            }
            TopLevelElement();
            Write382_ThemeToExtParcelComm(@"ThemeToExtParcelComm", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm)o), false, false);
        }

        public void Write413_ForceGameCompletion(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"ForceGameCompletion", @"F2LForceGameCompletionVer1.xsd");
                return;
            }
            TopLevelElement();
            Write391_ForceGameCompletion(@"ForceGameCompletion", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion)o), false, false);
        }

        public void Write414_WapSignControl(object o) {
            WriteStartDocument();
            if (o == null) {
                WriteEmptyTag(@"WapSignControl", @"F2LWapSignControlVer1.xsd");
                return;
            }
            TopLevelElement();
            Write398_WapSignControl(@"WapSignControl", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl)o), false, false);
        }

        void Write398_WapSignControl(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LWapSignControlVer1.xsd");
            Write2_VersionType(@"Version", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write397_WapSignControlMessageType(@"Message", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write397_WapSignControlMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"WapSignControlMessageType", @"F2LWapSignControlVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinReply) {
                    Write395_Item(@"TransportWAPHostDataToBinReply", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinSend) {
                    Write396_Item(@"TransportWAPHostDataToBinSend", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesReply) {
                    Write393_Item(@"GetProgressiveLevelValuesReply", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesSend) {
                    Write394_Item(@"GetProgressiveLevelValuesSend", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write394_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LWapSignControlVer1.xsd");
            WriteEndElement(o);
        }

        void Write393_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LWapSignControlVer1.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue>)o.@ProgressiveLevelValues;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write392_LevelProgressiveValue(@"ProgressiveLevelValues", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue)a[ia]), false, false);
                    }
                }
            }
            WriteElementStringRaw(@"IsOnlineWithHost", @"F2LWapSignControlVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsOnlineWithHost)));
            Write3_ReplyCodeType(@"Reply", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write3_ReplyCodeType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ReplyCodeType", @"F2LTypeVer2.xsd");
            WriteElementStringRaw(@"ReplyCode", @"F2LTypeVer2.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@ReplyCode)));
            WriteElementString(@"ErrorDescription", @"F2LTypeVer2.xsd", ((global::System.String)o.@ErrorDescription));
            WriteEndElement(o);
        }

        void Write392_LevelProgressiveValue(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"LevelProgressiveValue", @"F2LWapSignControlVer1.xsd");
            WriteElementStringRaw(@"Level", @"F2LWapSignControlVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Level)));
            Write40_AmountType(@"Amount", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@Amount), false, false);
            WriteElementString(@"PrizeString", @"F2LWapSignControlVer1.xsd", ((global::System.String)o.@PrizeString));
            WriteEndElement(o);
        }

        void Write40_AmountType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"AmountType", @"F2LTypeVer2.xsd");
            WriteElementStringRaw(@"Value", @"F2LTypeVer2.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@Value)));
            WriteElementStringRaw(@"CRC", @"F2LTypeVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@CRC)));
            WriteEndElement(o);
        }

        void Write396_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LWapSignControlVer1.xsd");
            WriteElementStringRaw(@"BinaryData", @"F2LWapSignControlVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@BinaryData)));
            WriteEndElement(o);
        }

        void Write395_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LWapSignControlVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LWapSignControlVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write2_VersionType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"VersionType", @"F2LTypeVer2.xsd");
            WriteElementStringRaw(@"MajorVersion", @"F2LTypeVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@MajorVersion)));
            WriteElementStringRaw(@"MinorVersion", @"F2LTypeVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@MinorVersion)));
            WriteEndElement(o);
        }

        void Write391_ForceGameCompletion(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LForceGameCompletionVer1.xsd");
            Write2_VersionType(@"Version", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write390_ForceGameCompletionMessageType(@"Message", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write390_ForceGameCompletionMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ForceGameCompletionMessageType", @"F2LForceGameCompletionVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusReply) {
                    Write388_Item(@"QueryForceGameCompletionStatusReply", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusSend) {
                    Write389_Item(@"QueryForceGameCompletionStatusSend", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedReply) {
                    Write383_Item(@"ForceGameCompletionStatusChangedReply", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedSend) {
                    Write387_Item(@"ForceGameCompletionStatusChangedSend", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write387_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LForceGameCompletionVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LForceGameCompletionVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write386_ForceGameCompletionStatusType(@"ForceGameCompletionStatus", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusType)o.@ForceGameCompletionStatus), false, false);
            WriteEndElement(o);
        }

        void Write386_ForceGameCompletionStatusType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ForceGameCompletionStatusType", @"F2LForceGameCompletionVer1.xsd");
            WriteElementStringRaw(@"ForceCompletion", @"F2LForceGameCompletionVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ForceCompletion)));
            Write385_Item(@"AutoFinishStatus", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusTypeAutoFinishStatus)o.@AutoFinishStatus), false, false);
            WriteEndElement(o);
        }

        void Write385_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusTypeAutoFinishStatus o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusTypeAutoFinishStatus)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LForceGameCompletionVer1.xsd");
            WriteElementStringRaw(@"FinishTime", @"F2LForceGameCompletionVer1.xsd", FromDateTime(((global::System.DateTime)o.@FinishTime)));
            WriteElementStringRaw(@"WarningTime", @"F2LForceGameCompletionVer1.xsd", FromDateTime(((global::System.DateTime)o.@WarningTime)));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType>)o.@ForceCompletionMessage);
                if (a != null){
                    WriteStartElement(@"ForceCompletionMessage", @"F2LForceGameCompletionVer1.xsd", null, false);
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write384_Item(@"ForceCompletionMessageLocalizations", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType)a[ia]), false, false);
                    }
                    WriteEndElement();
                }
            }
            WriteEndElement(o);
        }

        void Write384_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ForceCompletionMessageLocalizationType", @"F2LForceGameCompletionVer1.xsd");
            WriteAttribute(@"Culture", @"F2LForceGameCompletionVer1.xsd", ((global::System.String)o.@Culture));
            WriteElementString(@"Message", @"F2LForceGameCompletionVer1.xsd", ((global::System.String)o.@Message));
            WriteEndElement(o);
        }

        void Write383_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LForceGameCompletionVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write389_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LForceGameCompletionVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LForceGameCompletionVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write388_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LForceGameCompletionVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write386_ForceGameCompletionStatusType(@"ForceGameCompletionStatus", @"F2LForceGameCompletionVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusType)o.@ForceGameCompletionStatus), false, false);
            WriteEndElement(o);
        }

        void Write382_ThemeToExtParcelComm(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            Write2_VersionType(@"Version", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write381_Item(@"Message", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write381_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ThemeToExtParcelCommMessageType", @"F2LThemeToExtParcelCommVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxSend) {
                    Write378_Item(@"ExtensionTransParcelCallRxSend", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxReply) {
                    Write377_Item(@"ExtensionTransParcelCallRxReply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxSend) {
                    Write380_Item(@"ExtensionTransParcelCallTxSend", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxReply) {
                    Write379_Item(@"ExtensionTransParcelCallTxReply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxSend) {
                    Write373_Item(@"ExtensionParcelCallRxSend", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxReply) {
                    Write372_Item(@"ExtensionParcelCallRxReply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxSend) {
                    Write376_Item(@"ExtensionParcelCallTxSend", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxReply) {
                    Write375_Item(@"ExtensionParcelCallTxReply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxReply)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write375_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"Status", @"F2LThemeToExtParcelCommVer1.xsd", Write374_ParcelCallStatus(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus)o.@Status)));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        string Write374_ParcelCallStatus(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Success: s = @"Success"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Busy: s = @"Busy"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Unavailable: s = @"Unavailable"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Rejected: s = @"Rejected"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus");
            }
            return s;
        }

        void Write376_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            WriteElementString(@"Extension", @"F2LThemeToExtParcelCommVer1.xsd", ((global::System.String)o.@Extension));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write372_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"Accepted", @"F2LThemeToExtParcelCommVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Accepted)));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write373_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            WriteElementString(@"Extension", @"F2LThemeToExtParcelCommVer1.xsd", ((global::System.String)o.@Extension));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write379_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"Status", @"F2LThemeToExtParcelCommVer1.xsd", Write374_ParcelCallStatus(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus)o.@Status)));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write380_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LThemeToExtParcelCommVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Extension", @"F2LThemeToExtParcelCommVer1.xsd", ((global::System.String)o.@Extension));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write377_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LThemeToExtParcelCommVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"Accepted", @"F2LThemeToExtParcelCommVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Accepted)));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write378_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LThemeToExtParcelCommVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LThemeToExtParcelCommVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Extension", @"F2LThemeToExtParcelCommVer1.xsd", ((global::System.String)o.@Extension));
            WriteElementStringRaw(@"Payload", @"F2LThemeToExtParcelCommVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write371_CdsItalyMockEnrollment(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyMockEnrollmentVer1.xsd");
            Write2_VersionType(@"Version", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write370_Item(@"Message", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write370_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"CdsItalyMockEnrollmentMessageType", @"F2LCdsItalyMockEnrollmentVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataReply) {
                    Write367_Item(@"SetMockOutcomeDataReply", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataSend) {
                    Write369_Item(@"SetMockOutcomeDataSend", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataReply) {
                    Write365_Item(@"SetMockEnrollmentDataReply", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataSend) {
                    Write366_Item(@"SetMockEnrollmentDataSend", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write366_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyMockEnrollmentVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyMockEnrollmentVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"EnrollementSuccess", @"F2LCdsItalyMockEnrollmentVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@EnrollementSuccess)));
            WriteElementStringRaw(@"EnrollmentResponseData", @"F2LCdsItalyMockEnrollmentVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@EnrollmentResponseData)));
            WriteElementStringRaw(@"JackpotHit", @"F2LCdsItalyMockEnrollmentVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@JackpotHit)));
            WriteElementStringRaw(@"JackpotLevel", @"F2LCdsItalyMockEnrollmentVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@JackpotLevel)));
            Write40_AmountType(@"BonusAmount", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BonusAmount), false, false);
            WriteEndElement(o);
        }

        void Write365_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyMockEnrollmentVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write369_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyMockEnrollmentVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyMockEnrollmentVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData>)o.@CdsItalyMockOutcomeList);
                if (a != null){
                    WriteStartElement(@"CdsItalyMockOutcomeList", @"F2LCdsItalyMockEnrollmentVer1.xsd", null, false);
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write368_CdsItalyMockOutcomeData(@"CdsItalyMockOutcome", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData)a[ia]), false, false);
                    }
                    WriteEndElement();
                }
            }
            WriteEndElement(o);
        }

        void Write368_CdsItalyMockOutcomeData(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"CdsItalyMockOutcomeData", @"F2LCdsItalyMockEnrollmentVer1.xsd");
            WriteElementStringRaw(@"OutcomeGenerated", @"F2LCdsItalyMockEnrollmentVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@OutcomeGenerated)));
            WriteElementStringRaw(@"OutcomeResponseData", @"F2LCdsItalyMockEnrollmentVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@OutcomeResponseData)));
            WriteEndElement(o);
        }

        void Write367_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyMockEnrollmentVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyMockEnrollmentVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write364_CdsItaly(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write2_VersionType(@"Version", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write363_CdsItalyMessageType(@"Message", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write363_CdsItalyMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"CdsItalyMessageType", @"F2LCdsItalyVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoReply) {
                    Write355_CdsItalyGetTaxableWinInfoReply(@"GetTaxableWinInfoReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoSend) {
                    Write356_CdsItalyGetTaxableWinInfoSend(@"GetTaxableWinInfoSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseSend) {
                    Write354_CdsItalyGetOutcomeResponseSend(@"GetOutcomeResponseSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardSend) {
                    Write352_Item(@"GetJackpotBonusAwardSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseReply) {
                    Write353_Item(@"GetOutcomeResponseReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestReply) {
                    Write357_CdsItalyOutcomeRequestReply(@"OutcomeRequestReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataReply) {
                    Write361_Item(@"SetEnrollmentRequestDataReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataSend) {
                    Write362_Item(@"SetEnrollmentRequestDataSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseSend) {
                    Write360_CdsItalyOutcomeResponseSend(@"OutcomeResponseSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestSend) {
                    Write358_CdsItalyOutcomeRequestSend(@"OutcomeRequestSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseReply) {
                    Write359_CdsItalyOutcomeResponseReply(@"OutcomeResponseReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeSend) {
                    Write344_CdsItalyCommitOutcomeSend(@"CommitOutcomeSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledReply) {
                    Write345_Item(@"GetConfigDataJackpotBonusEnabledReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeReply) {
                    Write342_CdsItalyCommitOutcomeReply(@"CommitOutcomeReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedReply) {
                    Write340_Item(@"AwardMismatchDetectedReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedSend) {
                    Write341_Item(@"AwardMismatchDetectedSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledSend) {
                    Write346_Item(@"GetConfigDataJackpotBonusEnabledSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataSend) {
                    Write350_Item(@"GetEnrollmentResponseDataSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardReply) {
                    Write351_Item(@"GetJackpotBonusAwardReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataReply) {
                    Write349_Item(@"GetEnrollmentResponseDataReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoReply) {
                    Write347_Item(@"GetConfigDataTaxInfoReply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoSend) {
                    Write348_Item(@"GetConfigDataTaxInfoSend", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write348_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write347_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write40_AmountType(@"TaxLimit", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@TaxLimit), false, false);
            WriteElementStringRaw(@"TaxPercentage", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Decimal)((global::System.Decimal)o.@TaxPercentage)));
            WriteEndElement(o);
        }

        void Write349_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"GameResponseData", @"F2LCdsItalyVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@GameResponseData)));
            WriteEndElement(o);
        }

        void Write351_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"JackpotHit", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@JackpotHit)));
            WriteElementStringRaw(@"JackpotLevel", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@JackpotLevel)));
            WriteElementStringRaw(@"BonusIdentifier", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@BonusIdentifier)));
            Write40_AmountType(@"BonusAmount", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BonusAmount), false, false);
            WriteEndElement(o);
        }

        void Write350_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write346_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write341_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"LogMessage", @"F2LCdsItalyVer1.xsd", ((global::System.String)o.@LogMessage));
            WriteEndElement(o);
        }

        void Write340_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write342_CdsItalyCommitOutcomeReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write345_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"BonusEnabled", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@BonusEnabled)));
            WriteEndElement(o);
        }

        void Write344_CdsItalyCommitOutcomeSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"CommitType", @"F2LCdsItalyVer1.xsd", Write343_OutcomeCommitType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType)o.@CommitType)));
            Write40_AmountType(@"PendingPreTaxWin", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@PendingPreTaxWin), false, false);
            WriteElementStringRaw(@"CommitRequestData", @"F2LCdsItalyVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@CommitRequestData)));
            WriteEndElement(o);
        }

        string Write343_OutcomeCommitType(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType.@CommitAward: s = @"CommitAward"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType.@InterimCommit: s = @"InterimCommit"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType.@GetOutcomeFailure: s = @"GetOutcomeFailure"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType");
            }
            return s;
        }

        void Write359_CdsItalyOutcomeResponseReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write358_CdsItalyOutcomeRequestSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"WagerAmount", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@WagerAmount), false, false);
            WriteElementStringRaw(@"WagerCatIndex", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@WagerCatIndex)));
            WriteElementStringRaw(@"OutcomeRequestData", @"F2LCdsItalyVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@OutcomeRequestData)));
            WriteEndElement(o);
        }

        void Write360_CdsItalyOutcomeResponseSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"OutcomeGenerated", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@OutcomeGenerated)));
            WriteEndElement(o);
        }

        void Write362_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"WagerAmount", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@WagerAmount), false, false);
            WriteElementStringRaw(@"WagerCatIndex", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@WagerCatIndex)));
            WriteElementStringRaw(@"GameRequestData", @"F2LCdsItalyVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@GameRequestData)));
            WriteEndElement(o);
        }

        void Write361_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write357_CdsItalyOutcomeRequestReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write353_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"OutcomeResponseData", @"F2LCdsItalyVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@OutcomeResponseData)));
            WriteEndElement(o);
        }

        void Write352_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write354_CdsItalyGetOutcomeResponseSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write356_CdsItalyGetTaxableWinInfoSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LCdsItalyVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"TotalWinAmount", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@TotalWinAmount), false, false);
            WriteEndElement(o);
        }

        void Write355_CdsItalyGetTaxableWinInfoReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LCdsItalyVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write40_AmountType(@"NetWinAmount", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@NetWinAmount), false, false);
            Write40_AmountType(@"TaxAmount", @"F2LCdsItalyVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@TaxAmount), false, false);
            WriteEndElement(o);
        }

        void Write339_ProtocolIPPForwarding(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LProtocolIPPForwardingVer1.xsd");
            Write2_VersionType(@"Version", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write338_Item(@"Message", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write338_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ProtocolIPPForwardingMessageType", @"F2LProtocolIPPForwardingVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinReply) {
                    Write336_Item(@"TransportIPPHostDataToBinReply", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinSend) {
                    Write337_Item(@"TransportIPPHostDataToBinSend", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostReply) {
                    Write334_Item(@"TransportBinDataToIPPHostReply", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostSend) {
                    Write335_Item(@"TransportBinDataToIPPHostSend", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write335_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LProtocolIPPForwardingVer1.xsd");
            WriteElementStringRaw(@"BinaryData", @"F2LProtocolIPPForwardingVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@BinaryData)));
            WriteEndElement(o);
        }

        void Write334_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LProtocolIPPForwardingVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write337_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LProtocolIPPForwardingVer1.xsd");
            WriteElementStringRaw(@"BinaryData", @"F2LProtocolIPPForwardingVer1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@BinaryData)));
            WriteEndElement(o);
        }

        void Write336_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LProtocolIPPForwardingVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LProtocolIPPForwardingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write333_VoucherPrint(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LVoucherPrintVer1.xsd");
            Write2_VersionType(@"Version", @"F2LVoucherPrintVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write332_VoucherPrintMessageType(@"Message", @"F2LVoucherPrintVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write332_VoucherPrintMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"VoucherPrintMessageType", @"F2LVoucherPrintVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationSend) {
                    Write331_Item(@"PrintNotificationSend", @"F2LVoucherPrintVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationReply) {
                    Write329_Item(@"PrintNotificationReply", @"F2LVoucherPrintVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationReply)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write329_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LVoucherPrintVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LVoucherPrintVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write331_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LVoucherPrintVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LVoucherPrintVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Notification", @"F2LVoucherPrintVer1.xsd", Write330_VoucherPrintEvent(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent)o.@Notification)));
            Write40_AmountType(@"Value", @"F2LVoucherPrintVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@Value), false, false);
            WriteEndElement(o);
        }

        string Write330_VoucherPrintEvent(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherPrintingInitiated: s = @"VoucherPrintingInitiated"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherPrintingComplete: s = @"VoucherPrintingComplete"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherAwaitingRemoval: s = @"VoucherAwaitingRemoval"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherRemoved: s = @"VoucherRemoved"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent");
            }
            return s;
        }

        void Write328_GameContextLocking(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameContextLockingVer1.xsd");
            Write2_VersionType(@"Version", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write327_GameContextLockingMessageType(@"Message", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write327_GameContextLockingMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"GameContextLockingMessageType", @"F2LGameContextLockingVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockReply) {
                    Write325_Item(@"SetGameContextLockReply", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockSend) {
                    Write326_Item(@"SetGameContextLockSend", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusReply) {
                    Write323_Item(@"GetGameContextLockStatusReply", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusSend) {
                    Write324_Item(@"GetGameContextLockStatusSend", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write324_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameContextLockingVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameContextLockingVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write323_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameContextLockingVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"Locked", @"F2LGameContextLockingVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Locked)));
            WriteEndElement(o);
        }

        void Write326_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameContextLockingVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameContextLockingVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"Locked", @"F2LGameContextLockingVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Locked)));
            WriteEndElement(o);
        }

        void Write325_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameContextLockingVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameContextLockingVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"Success", @"F2LGameContextLockingVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Success)));
            WriteEndElement(o);
        }

        void Write322_AutoPlay(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            Write2_VersionType(@"Version", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write321_AutoPlayMessageType(@"Message", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write321_AutoPlayMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"AutoPlayMessageType", @"F2LAutoPlayVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnReply) {
                    Write315_AutoPlayIsAutoPlayOnReply(@"IsAutoPlayOnReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnSend) {
                    Write316_AutoPlayIsAutoPlayOnSend(@"IsAutoPlayOnSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledReply) {
                    Write313_Item(@"GetConfigDataPlayerAutoPlayEnabledReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledSend) {
                    Write314_Item(@"GetConfigDataPlayerAutoPlayEnabledSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestReply) {
                    Write319_Item(@"SetAutoPlayOnRequestReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestSend) {
                    Write320_Item(@"SetAutoPlayOnRequestSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffReply) {
                    Write317_AutoPlaySetAutoPlayOffReply(@"SetAutoPlayOffReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffSend) {
                    Write318_AutoPlaySetAutoPlayOffSend(@"SetAutoPlayOffSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestReply) {
                    Write307_AutoPlayAutoPlayOnRequestReply(@"AutoPlayOnRequestReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestSend) {
                    Write308_AutoPlayAutoPlayOnRequestSend(@"AutoPlayOnRequestSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffReply) {
                    Write305_AutoPlayAutoPlayOffReply(@"AutoPlayOffReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffSend) {
                    Write306_AutoPlayAutoPlayOffSend(@"AutoPlayOffSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply) {
                    Write311_Item(@"GetConfigDataPlayerAutoPlayConfirmationRequiredReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend) {
                    Write312_Item(@"GetConfigDataPlayerAutoPlayConfirmationRequiredSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply) {
                    Write309_Item(@"GetConfigDataAutoPlaySpeedIncreaseAllowedReply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend) {
                    Write310_Item(@"GetConfigDataAutoPlaySpeedIncreaseAllowedSend", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write310_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write309_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"AutoPlaySpeedIncreaseAllowed", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AutoPlaySpeedIncreaseAllowed)));
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write312_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write311_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"AutoPlayConfirmationRequired", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AutoPlayConfirmationRequired)));
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write306_AutoPlayAutoPlayOffSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write305_AutoPlayAutoPlayOffReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write308_AutoPlayAutoPlayOnRequestSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write307_AutoPlayAutoPlayOnRequestReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"AutoPlayOnRequestSuccessful", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AutoPlayOnRequestSuccessful)));
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write318_AutoPlaySetAutoPlayOffSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write317_AutoPlaySetAutoPlayOffReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write320_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write319_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"SetSuccessful", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@SetSuccessful)));
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write314_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write313_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"AutoPlayEnabled", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AutoPlayEnabled)));
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write316_AutoPlayIsAutoPlayOnSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write315_AutoPlayIsAutoPlayOnReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LAutoPlayVer1.xsd");
            WriteElementStringRaw(@"AutoPlayOn", @"F2LAutoPlayVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AutoPlayOn)));
            Write3_ReplyCodeType(@"Reply", @"F2LAutoPlayVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write304_GameTilt(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameTiltVer1.xsd");
            Write2_VersionType(@"Version", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write303_GameTiltMessageType(@"Message", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write303_GameTiltMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"GameTiltMessageType", @"F2LGameTiltVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltReply) {
                    Write300_GameTiltRequestTiltReply(@"RequestTiltReply", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltSend) {
                    Write302_GameTiltRequestTiltSend(@"RequestTiltSend", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltReply) {
                    Write298_GameTiltRequestClearTiltReply(@"RequestClearTiltReply", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltSend) {
                    Write299_GameTiltRequestClearTiltSend(@"RequestClearTiltSend", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write299_GameTiltRequestClearTiltSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameTiltVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameTiltVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"TiltName", @"F2LGameTiltVer1.xsd", ((global::System.String)o.@TiltName));
            WriteEndElement(o);
        }

        void Write298_GameTiltRequestClearTiltReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameTiltVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"RequestClearTiltSuccess", @"F2LGameTiltVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@RequestClearTiltSuccess)));
            WriteEndElement(o);
        }

        void Write302_GameTiltRequestTiltSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameTiltVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameTiltVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"TiltName", @"F2LGameTiltVer1.xsd", ((global::System.String)o.@TiltName));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization>)o.@TiltLocalizations);
                if (a != null){
                    WriteStartElement(@"TiltLocalizations", @"F2LGameTiltVer1.xsd", null, false);
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write301_TiltLocalization(@"TiltLocalization", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization)a[ia]), false, false);
                    }
                    WriteEndElement();
                }
            }
            WriteElementString(@"TiltAttributes", @"F2LGameTiltVer1.xsd", ((global::System.String)o.@TiltAttributes));
            WriteEndElement(o);
        }

        void Write301_TiltLocalization(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"TiltLocalization", @"F2LGameTiltVer1.xsd");
            WriteAttribute(@"Culture", @"F2LGameTiltVer1.xsd", ((global::System.String)o.@Culture));
            WriteElementString(@"Title", @"F2LGameTiltVer1.xsd", ((global::System.String)o.@Title));
            WriteElementString(@"Message", @"F2LGameTiltVer1.xsd", ((global::System.String)o.@Message));
            WriteEndElement(o);
        }

        void Write300_GameTiltRequestTiltReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameTiltVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameTiltVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"RequestTiltSuccess", @"F2LGameTiltVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@RequestTiltSuccess)));
            WriteEndElement(o);
        }

        void Write297_Identification(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LIdentificationVer1.xsd");
            Write2_VersionType(@"Version", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write296_IdentificationMessageType(@"Message", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write296_IdentificationMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"IdentificationMessageType", @"F2LIdentificationVer1.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierSend) {
                    Write293_Item(@"GetConfigDataG2SThemeIdentifierSend", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberReply) {
                    Write294_Item(@"GetConfigDataMachineSerialNumberReply", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberSend) {
                    Write295_Item(@"GetConfigDataMachineSerialNumberSend", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierReply) {
                    Write290_Item(@"GetConfigDataG2SEGMIdentifierReply", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierSend) {
                    Write291_Item(@"GetConfigDataG2SEGMIdentifierSend", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierReply) {
                    Write292_Item(@"GetConfigDataG2SThemeIdentifierReply", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierReply)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write292_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LIdentificationVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"G2SThemeIdentifier", @"F2LIdentificationVer1.xsd", ((global::System.String)o.@G2SThemeIdentifier));
            WriteEndElement(o);
        }

        void Write291_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LIdentificationVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LIdentificationVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write290_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LIdentificationVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"G2SEGMIdentifier", @"F2LIdentificationVer1.xsd", ((global::System.String)o.@G2SEGMIdentifier));
            WriteEndElement(o);
        }

        void Write295_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LIdentificationVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LIdentificationVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write294_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LIdentificationVer1.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LIdentificationVer1.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"SerialNumber", @"F2LIdentificationVer1.xsd", ((global::System.String)o.@SerialNumber));
            WriteEndElement(o);
        }

        void Write293_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LIdentificationVer1.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LIdentificationVer1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write289_GameStopReport(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameStopReportVer2.xsd");
            Write2_VersionType(@"Version", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write288_GameStopReportMessageType(@"Message", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write288_GameStopReportMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"GameStopReportMessageType", @"F2LGameStopReportVer2.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsReply) {
                    Write286_Item(@"ReportReelStopsReply", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsSend) {
                    Write287_Item(@"ReportReelStopsSend", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandReply) {
                    Write283_Item(@"ReportPokerHandReply", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandSend) {
                    Write285_Item(@"ReportPokerHandSend", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write285_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameStopReportVer2.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameStopReportVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"HandStatus", @"F2LGameStopReportVer2.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@HandStatus)));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard>)o.@Card;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write284_PokerCard(@"Card", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write284_PokerCard(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"PokerCard", @"F2LGameStopReportVer2.xsd");
            WriteElementStringRaw(@"Value", @"F2LGameStopReportVer2.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Value)));
            WriteElementStringRaw(@"Held", @"F2LGameStopReportVer2.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Held)));
            WriteEndElement(o);
        }

        void Write283_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameStopReportVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write287_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameStopReportVer2.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameStopReportVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            {
                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)o.@ReelStop;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"ReelStop", @"F2LGameStopReportVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write286_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameStopReportVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameStopReportVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write282_ShowDemo(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LShowDemoVer2.xsd");
            Write2_VersionType(@"Version", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write281_ShowDemoMessageType(@"Message", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write281_ShowDemoMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ShowDemoMessageType", @"F2LShowDemoVer2.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentReply) {
                    Write279_Item(@"GetShowEnvironmentReply", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentSend) {
                    Write280_ShowDemoGetShowEnvironmentSend(@"GetShowEnvironmentSend", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneyReply) {
                    Write276_ShowDemoAddMoneyReply(@"AddMoneyReply", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneyReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneySend) {
                    Write277_ShowDemoAddMoneySend(@"AddMoneySend", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneySend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write277_ShowDemoAddMoneySend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneySend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneySend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LShowDemoVer2.xsd");
            Write40_AmountType(@"Amount", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@Amount), false, false);
            WriteEndElement(o);
        }

        void Write276_ShowDemoAddMoneyReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneyReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneyReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LShowDemoVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write280_ShowDemoGetShowEnvironmentSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LShowDemoVer2.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LShowDemoVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write279_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LShowDemoVer2.xsd");
            WriteElementString(@"ShowEnvironment", @"F2LShowDemoVer2.xsd", Write278_ShowEnvironment(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment)o.@ShowEnvironment)));
            Write3_ReplyCodeType(@"Reply", @"F2LShowDemoVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        string Write278_ShowEnvironment(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment.@Development: s = @"Development"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment.@Show: s = @"Show"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment");
            }
            return s;
        }

        void Write275_GameControl(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write2_VersionType(@"Version", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write274_GameControlMessageType(@"Message", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write274_GameControlMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"GameControlMessageType", @"F2LGameControlVer4.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInReply) {
                    Write199_GameControlMoneyInReply(@"MoneyInReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedSend) {
                    Write198_Item(@"MoneyCommittedChangedSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInSend) {
                    Write202_GameControlMoneyInSend(@"MoneyInSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutSend) {
                    Write205_GameControlMoneyOutSend(@"MoneyOutSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutReply) {
                    Write203_GameControlMoneyOutReply(@"MoneyOutReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedReply) {
                    Write197_Item(@"MoneyCommittedChangedReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableReply) {
                    Write193_Item(@"IsThemeSelectionMenuOfferableReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableSend) {
                    Write192_Item(@"IsPlayerCashoutOfferableSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableSend) {
                    Write194_Item(@"IsThemeSelectionMenuOfferableSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetSend) {
                    Write196_GameControlMoneyBetSend(@"MoneyBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetReply) {
                    Write195_GameControlMoneyBetReply(@"MoneyBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetReply) {
                    Write206_GameControlMoneySetReply(@"MoneySetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestReply) {
                    Write218_Item(@"OfferAncillaryGameRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextSend) {
                    Write217_GameControlNewThemeContextSend(@"NewThemeContextSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestSend) {
                    Write219_Item(@"OfferAncillaryGameRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetSend) {
                    Write221_GameControlPlaceBetSend(@"PlaceBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetReply) {
                    Write220_GameControlPlaceBetReply(@"PlaceBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextReply) {
                    Write213_Item(@"NewThemeContextReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableReply) {
                    Write208_GameControlMoneyWagerableReply(@"MoneyWagerableReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetSend) {
                    Write207_GameControlMoneySetSend(@"MoneySetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableSend) {
                    Write210_GameControlMoneyWagerableSend(@"MoneyWagerableSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonSend) {
                    Write212_GameControlMoneyWonSend(@"MoneyWonSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonReply) {
                    Write211_GameControlMoneyWonReply(@"MoneyWonReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesSend) {
                    Write169_Item(@"GetCustomConfigItemTypesSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesReply) {
                    Write168_Item(@"GetCustomConfigItemTypesReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReply) {
                    Write171_Item(@"GetListLimitedRandomNumbersReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersReply) {
                    Write175_Item(@"GetPlayerMetersReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSend) {
                    Write173_Item(@"GetListLimitedRandomNumbersSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeSend) {
                    Write166_Item(@"GetCustomConfigItemTypeSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationSend) {
                    Write152_Item(@"GetCustomConfigItemReferencedEnumerationSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReply) {
                    Write150_Item(@"GetCustomConfigItemReferencedEnumerationReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReply) {
                    Write162_Item(@"GetCustomConfigItemReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeReply) {
                    Write165_Item(@"GetCustomConfigItemTypeReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemSend) {
                    Write164_Item(@"GetCustomConfigItemSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersSend) {
                    Write176_GameControlGetPlayerMetersSend(@"GetPlayerMetersSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedSend) {
                    Write188_GameControlIsBankLockedSend(@"IsBankLockedSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedReply) {
                    Write187_GameControlIsBankLockedReply(@"IsBankLockedReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableReply) {
                    Write189_Item(@"IsPlayerBankToWagerableOfferableReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableReply) {
                    Write191_Item(@"IsPlayerCashoutOfferableReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableSend) {
                    Write190_Item(@"IsPlayerBankToWagerableOfferableSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextSend) {
                    Write186_Item(@"InactivateThemeContextSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesSend) {
                    Write180_Item(@"GetProgressiveGameLevelValuesSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReply) {
                    Write179_Item(@"GetProgressiveGameLevelValuesReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReply) {
                    Write182_Item(@"GetRandomNumbersReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextReply) {
                    Write185_Item(@"InactivateThemeContextReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSend) {
                    Write184_Item(@"GetRandomNumbersSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedReply) {
                    Write258_Item(@"ThemeSelectionMenuOfferableStatusChangedReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSend) {
                    Write257_Item(@"SwitchThemeContextSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedSend) {
                    Write259_Item(@"ThemeSelectionMenuOfferableStatusChangedSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteSend) {
                    Write261_Item(@"TransactionCompleteSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteReply) {
                    Write260_Item(@"TransactionCompleteReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextReply) {
                    Write255_Item(@"SwitchThemeContextReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingReply) {
                    Write251_Item(@"StartBonusPlayingReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingSend) {
                    Write250_Item(@"StartAncillaryPlayingSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingSend) {
                    Write252_Item(@"StartBonusPlayingSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingSend) {
                    Write254_GameControlStartPlayingSend(@"StartPlayingSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingReply) {
                    Write253_GameControlStartPlayingReply(@"StartPlayingReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestReply) {
                    Write262_Item(@"TransferBankToWagerableRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleReply) {
                    Write270_Item(@"UnenrollGameCycleReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleSend) {
                    Write269_Item(@"UncommitGameCycleSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleSend) {
                    Write271_Item(@"UnenrollGameCycleSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataSend) {
                    Write273_GameControlWriteCritDataSend(@"WriteCritDataSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataReply) {
                    Write272_GameControlWriteCritDataReply(@"WriteCritDataReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleReply) {
                    Write268_Item(@"UncommitGameCycleReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestReply) {
                    Write264_Item(@"TransferWagerableToBankRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestSend) {
                    Write263_Item(@"TransferBankToWagerableRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestSend) {
                    Write265_Item(@"TransferWagerableToBankRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetSend) {
                    Write267_GameControlUncommitBetSend(@"UncommitBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetReply) {
                    Write266_GameControlUncommitBetReply(@"UncommitBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateSend) {
                    Write230_Item(@"QueryGameCycleStateSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateReply) {
                    Write229_Item(@"QueryGameCycleStateReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReply) {
                    Write233_Item(@"QueryPlayerSelectableDenomsReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataReply) {
                    Write235_GameControlReadCritDataReply(@"ReadCritDataReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsSend) {
                    Write234_Item(@"QueryPlayerSelectableDenomsSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusSend) {
                    Write227_GameControlQueryBankStatusSend(@"QueryBankStatusSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetSend) {
                    Write223_Item(@"PlaceStartingBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetReply) {
                    Write222_Item(@"PlaceStartingBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestReply) {
                    Write224_Item(@"PlayerCashoutRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusReply) {
                    Write226_Item(@"QueryBankStatusReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestSend) {
                    Write225_Item(@"PlayerCashoutRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataSend) {
                    Write237_GameControlReadCritDataSend(@"ReadCritDataSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureSend) {
                    Write245_Item(@"SetDefaultCultureSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureReply) {
                    Write244_Item(@"SetDefaultCultureReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateReply) {
                    Write246_Item(@"SetDisplayControlStateReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingReply) {
                    Write249_Item(@"StartAncillaryPlayingReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateSend) {
                    Write248_Item(@"SetDisplayControlStateSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureSend) {
                    Write243_GameControlSetCultureSend(@"SetCultureSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataSend) {
                    Write239_GameControlRemoveCritDataSend(@"RemoveCritDataSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataReply) {
                    Write238_GameControlRemoveCritDataReply(@"RemoveCritDataReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuReply) {
                    Write240_Item(@"RequestThemeSelectionMenuReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureReply) {
                    Write242_GameControlSetCultureReply(@"SetCultureReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuSend) {
                    Write241_Item(@"RequestThemeSelectionMenuSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferReply) {
                    Write62_Item(@"DisableAncillaryGameOfferReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestSend) {
                    Write61_Item(@"DenominationChangeRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferSend) {
                    Write63_Item(@"DisableAncillaryGameOfferSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleSend) {
                    Write65_GameControlEndGameCycleSend(@"EndGameCycleSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleReply) {
                    Write64_GameControlEndGameCycleReply(@"EndGameCycleReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestReply) {
                    Write60_Item(@"DenominationChangeRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedReply) {
                    Write56_GameControlCultureChangedReply(@"CultureChangedReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleSend) {
                    Write55_GameControlCommitGameCycleSend(@"CommitGameCycleSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedSend) {
                    Write57_GameControlCultureChangedSend(@"CultureChangedSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledSend) {
                    Write59_Item(@"DenominationChangeCancelledSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledReply) {
                    Write58_Item(@"DenominationChangeCancelledReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleReply) {
                    Write66_Item(@"EnrollGameCycleReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestReply) {
                    Write92_Item(@"EvalLastOutcomeRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestSend) {
                    Write91_Item(@"EvalLastBonusOutcomeRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSend) {
                    Write95_Item(@"EvalLastOutcomeRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestSend) {
                    Write97_Item(@"EvalOutcomeRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestReply) {
                    Write96_Item(@"EvalOutcomeRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestReply) {
                    Write90_Item(@"EvalLastBonusOutcomeRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseReply) {
                    Write68_GameControlEnrollResponseReply(@"EnrollResponseReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleSend) {
                    Write67_GameControlEnrollGameCycleSend(@"EnrollGameCycleSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseSend) {
                    Write69_GameControlEnrollResponseSend(@"EnrollResponseSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestSend) {
                    Write89_Item(@"EvalLastAncillaryOutcomeRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestReply) {
                    Write70_Item(@"EvalLastAncillaryOutcomeRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedSend) {
                    Write38_Item(@"BankStatusChangedSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedReply) {
                    Write36_Item(@"BankStatusChangedReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleReply) {
                    Write39_Item(@"CanBetNextGameCycleReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetReply) {
                    Write42_GameControlCanCommitBetReply(@"CanCommitBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleSend) {
                    Write41_Item(@"CanBetNextGameCycleSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextSend) {
                    Write35_Item(@"ActivateThemeContextSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestSend) {
                    Write31_GameControlActionRequestSend(@"ActionRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestReply) {
                    Write30_GameControlActionRequestReply(@"ActionRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseReply) {
                    Write32_GameControlActionResponseReply(@"ActionResponseReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextReply) {
                    Write34_Item(@"ActivateThemeContextReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseSend) {
                    Write33_GameControlActionResponseSend(@"ActionResponseSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetSend) {
                    Write43_GameControlCanCommitBetSend(@"CanCommitBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingSend) {
                    Write51_GameControlCanStartPlayingSend(@"CanStartPlayingSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingReply) {
                    Write50_Item(@"CanStartPlayingReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetReply) {
                    Write52_GameControlCommitBetReply(@"CommitBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleReply) {
                    Write54_Item(@"CommitGameCycleReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetSend) {
                    Write53_GameControlCommitBetSend(@"CommitBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetSend) {
                    Write49_GameControlCanPlaceBetSend(@"CanPlaceBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsSend) {
                    Write45_GameControlCanCommitBetsSend(@"CanCommitBetsSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsReply) {
                    Write44_GameControlCanCommitBetsReply(@"CanCommitBetsReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleReply) {
                    Write46_Item(@"CanCommitGameCycleReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetReply) {
                    Write48_GameControlCanPlaceBetReply(@"CanPlaceBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleSend) {
                    Write47_Item(@"CanCommitGameCycleSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountReply) {
                    Write131_Item(@"GetConfigDataMinBetAmountReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorSend) {
                    Write130_Item(@"GetConfigDataMaxBetButtonBehaviorSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountSend) {
                    Write132_Item(@"GetConfigDataMinBetAmountSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeSend) {
                    Write134_Item(@"GetConfigDataMinimumBaseGamePresentationTimeSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeReply) {
                    Write133_Item(@"GetConfigDataMinimumBaseGamePresentationTimeReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorReply) {
                    Write129_Item(@"GetConfigDataMaxBetButtonBehaviorReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionReply) {
                    Write124_Item(@"GetConfigDataLineSelectionReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsSend) {
                    Write122_Item(@"GetConfigDataHistoryPlayStepsSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionSend) {
                    Write125_Item(@"GetConfigDataLineSelectionSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountSend) {
                    Write127_Item(@"GetConfigDataMaxBetAmountSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountReply) {
                    Write126_Item(@"GetConfigDataMaxBetAmountReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply) {
                    Write135_Item(@"GetConfigDataMinimumFreeSpinPresentationTimeReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoReply) {
                    Write145_Item(@"GetCreditFormatterInfoReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorSend) {
                    Write143_Item(@"GetConfigDataWinCapBehaviorSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoSend) {
                    Write146_Item(@"GetCreditFormatterInfoSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureSend) {
                    Write148_GameControlGetCultureSend(@"GetCultureSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureReply) {
                    Write147_GameControlGetCultureReply(@"GetCultureReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorReply) {
                    Write142_Item(@"GetConfigDataWinCapBehaviorReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply) {
                    Write137_Item(@"GetConfigDataRoundWagerUpPlayoffEnabledReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend) {
                    Write136_Item(@"GetConfigDataMinimumFreeSpinPresentationTimeSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend) {
                    Write138_Item(@"GetConfigDataRoundWagerUpPlayoffEnabledSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountSend) {
                    Write140_Item(@"GetConfigDataWinCapAmountSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountReply) {
                    Write139_Item(@"GetConfigDataWinCapAmountReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesSend) {
                    Write105_Item(@"GetAvailableCulturesSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesReply) {
                    Write104_Item(@"GetAvailableCulturesReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetReply) {
                    Write106_Item(@"GetCommittedBetReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitReply) {
                    Write108_Item(@"GetConfigDataAncillaryCycleLimitReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetSend) {
                    Write107_GameControlGetCommittedBetSend(@"GetCommittedBetSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseSend) {
                    Write103_Item(@"FinalizeAwardResponseSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseSend) {
                    Write99_Item(@"EvalOutcomeResponseSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseReply) {
                    Write98_Item(@"EvalOutcomeResponseReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestReply) {
                    Write100_Item(@"FinalizeAwardRequestReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseReply) {
                    Write102_Item(@"FinalizeAwardResponseReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestSend) {
                    Write101_Item(@"FinalizeAwardRequestSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitSend) {
                    Write109_Item(@"GetConfigDataAncillaryCycleLimitSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountSend) {
                    Write117_Item(@"GetConfigDataButtonPanelMinBetAmountSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountReply) {
                    Write116_Item(@"GetConfigDataButtonPanelMinBetAmountReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorReply) {
                    Write119_Item(@"GetConfigDataCreditMeterDisplayBehaviorReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsReply) {
                    Write121_Item(@"GetConfigDataHistoryPlayStepsReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorSend) {
                    Write120_Item(@"GetConfigDataCreditMeterDisplayBehaviorSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledSend) {
                    Write115_Item(@"GetConfigDataBonusPlayEnabledSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledSend) {
                    Write111_Item(@"GetConfigDataAncillaryGameEnabledSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledReply) {
                    Write110_Item(@"GetConfigDataAncillaryGameEnabledReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitReply) {
                    Write112_Item(@"GetConfigDataAncillaryMonetaryLimitReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledReply) {
                    Write114_Item(@"GetConfigDataBonusPlayEnabledReply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitSend) {
                    Write113_Item(@"GetConfigDataAncillaryMonetaryLimitSend", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write113_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write114_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"BonusPlayEnabled", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@BonusPlayEnabled)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write112_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write40_AmountType(@"AncillaryMonetaryLimit", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@AncillaryMonetaryLimit), false, false);
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write110_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"AncillaryGameEnabled", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AncillaryGameEnabled)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write111_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write115_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write120_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write121_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"NumberOfPlaySteps", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@NumberOfPlaySteps)));
            WriteEndElement(o);
        }

        void Write119_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"CreditMeterDisplayBehavior", @"F2LGameControlVer4.xsd", Write118_CreditMeterDisplayBehaviorType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType)o.@CreditMeterDisplayBehavior)));
            WriteEndElement(o);
        }

        string Write118_CreditMeterDisplayBehaviorType(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@PlayerSelectableDefaultCredits: s = @"PlayerSelectableDefaultCredits"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@PlayerSelectableDefaultCurrency: s = @"PlayerSelectableDefaultCurrency"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@AlwaysCurrency: s = @"AlwaysCurrency"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType");
            }
            return s;
        }

        void Write116_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write40_AmountType(@"ButtonPanelMinBetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@ButtonPanelMinBetAmount), false, false);
            WriteEndElement(o);
        }

        void Write117_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write109_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write101_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write102_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write100_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write98_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write99_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write88_OutcomeList(@"OutcomeList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList)o.@OutcomeList), false, false);
            WriteElementStringRaw(@"IsPlayComplete", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsPlayComplete)));
            WriteEndElement(o);
        }

        void Write88_OutcomeList(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"OutcomeList", @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry>)o.@FeatureEntry;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write86_OutcomeListFeatureEntry(@"FeatureEntry", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry)a[ia]), false, false);
                    }
                }
            }
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry>)o.@GameCycleEntry;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write87_OutcomeListGameCycleEntry(@"GameCycleEntry", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write87_OutcomeListGameCycleEntry(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award>)o.@Award;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write82_Award(@"Award", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award)a[ia]), false, false);
                    }
                }
            }
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward>)o.@ProgressiveAward;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write78_ProgressiveAward(@"ProgressiveAward", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward)a[ia]), false, false);
                    }
                }
            }
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward>)o.@BonusExtensionAward;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write74_BonusExtensionAward(@"BonusExtensionAward", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write74_BonusExtensionAward(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"BonusExtensionAward", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            WriteAttribute(@"is_displayable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_displayable)));
            WriteAttribute(@"displayable_reason", @"F2LGameControlVer4.xsd", ((global::System.String)o.@displayable_reason));
            WriteAttribute(@"prize_string", @"F2LGameControlVer4.xsd", ((global::System.String)o.@prize_string));
            if (o.@is_top_awardSpecified) {
                WriteAttribute(@"is_top_award", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_top_award)));
            }
            if (o.@bonus_identifierSpecified) {
                WriteAttribute(@"bonus_identifier", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@bonus_identifier)));
            }
            Write40_AmountType(@"amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@amount), false, false);
            if (o.@is_top_awardSpecified) {
            }
            if (o.@bonus_identifierSpecified) {
            }
            WriteEndElement(o);
        }

        string Write72_OutcomeOrigin(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin.@Bin: s = @"Bin"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin.@Foundation: s = @"Foundation"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin");
            }
            return s;
        }

        void Write78_ProgressiveAward(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward)) {
                }
                else if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward)) {
                    Write79_FeatureProgressiveAward(n, ns,(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward)o, isNullable, true);
                    return;
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ProgressiveAward", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            WriteAttribute(@"is_displayable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_displayable)));
            WriteAttribute(@"displayable_reason", @"F2LGameControlVer4.xsd", ((global::System.String)o.@displayable_reason));
            WriteAttribute(@"prize_string", @"F2LGameControlVer4.xsd", ((global::System.String)o.@prize_string));
            if (o.@is_top_awardSpecified) {
                WriteAttribute(@"is_top_award", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_top_award)));
            }
            WriteAttribute(@"hit_state", @"F2LGameControlVer4.xsd", Write77_ProgressiveAwardHit_state(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state)o.@hit_state)));
            if (o.@game_levelSpecified) {
                WriteAttribute(@"game_level", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@game_level)));
            }
            Write40_AmountType(@"amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@amount), false, false);
            if (o.@is_top_awardSpecified) {
            }
            if (o.@game_levelSpecified) {
            }
            WriteEndElement(o);
        }

        string Write77_ProgressiveAwardHit_state(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state.@PotentialHit: s = @"PotentialHit"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state.@Hit: s = @"Hit"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state.@NotHit: s = @"NotHit"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state");
            }
            return s;
        }

        void Write79_FeatureProgressiveAward(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"FeatureProgressiveAward", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            WriteAttribute(@"is_displayable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_displayable)));
            WriteAttribute(@"displayable_reason", @"F2LGameControlVer4.xsd", ((global::System.String)o.@displayable_reason));
            WriteAttribute(@"prize_string", @"F2LGameControlVer4.xsd", ((global::System.String)o.@prize_string));
            if (o.@is_top_awardSpecified) {
                WriteAttribute(@"is_top_award", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_top_award)));
            }
            WriteAttribute(@"hit_state", @"F2LGameControlVer4.xsd", Write77_ProgressiveAwardHit_state(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state)o.@hit_state)));
            if (o.@game_levelSpecified) {
                WriteAttribute(@"game_level", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@game_level)));
            }
            Write40_AmountType(@"amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@amount), false, false);
            if (o.@is_top_awardSpecified) {
            }
            if (o.@game_levelSpecified) {
            }
            Write40_AmountType(@"consolation_amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@consolation_amount), false, false);
            WriteEndElement(o);
        }

        void Write82_Award(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award)) {
                }
                else if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward)) {
                    Write84_AncillaryAward(n, ns,(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward)o, isNullable, true);
                    return;
                }
                else if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward)) {
                    Write78_ProgressiveAward(n, ns,(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward)o, isNullable, true);
                    return;
                }
                else if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward)) {
                    Write79_FeatureProgressiveAward(n, ns,(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward)o, isNullable, true);
                    return;
                }
                else if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward)) {
                    Write80_FeatureAward(n, ns,(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward)o, isNullable, true);
                    return;
                }
                else if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward)) {
                    Write76_RiskAward(n, ns,(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward)o, isNullable, true);
                    return;
                }
                else if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward)) {
                    Write74_BonusExtensionAward(n, ns,(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward)o, isNullable, true);
                    return;
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"Award", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            WriteAttribute(@"is_displayable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_displayable)));
            WriteAttribute(@"displayable_reason", @"F2LGameControlVer4.xsd", ((global::System.String)o.@displayable_reason));
            WriteAttribute(@"prize_string", @"F2LGameControlVer4.xsd", ((global::System.String)o.@prize_string));
            if (o.@is_top_awardSpecified) {
                WriteAttribute(@"is_top_award", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_top_award)));
            }
            Write40_AmountType(@"amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@amount), false, false);
            if (o.@is_top_awardSpecified) {
            }
            WriteEndElement(o);
        }

        void Write76_RiskAward(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"RiskAward", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            WriteAttribute(@"is_displayable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_displayable)));
            WriteAttribute(@"displayable_reason", @"F2LGameControlVer4.xsd", ((global::System.String)o.@displayable_reason));
            WriteAttribute(@"prize_string", @"F2LGameControlVer4.xsd", ((global::System.String)o.@prize_string));
            if (o.@is_top_awardSpecified) {
                WriteAttribute(@"is_top_award", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_top_award)));
            }
            WriteAttribute(@"award_type", @"F2LGameControlVer4.xsd", Write75_RiskAwardAward_type(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAwardAward_type)o.@award_type)));
            Write40_AmountType(@"amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@amount), false, false);
            if (o.@is_top_awardSpecified) {
            }
            Write40_AmountType(@"risk_amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@risk_amount), false, false);
            WriteEndElement(o);
        }

        string Write75_RiskAwardAward_type(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAwardAward_type v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAwardAward_type.@RoundWagerUpPlayoff: s = @"RoundWagerUpPlayoff"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAwardAward_type");
            }
            return s;
        }

        void Write80_FeatureAward(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"FeatureAward", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            WriteAttribute(@"is_displayable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_displayable)));
            WriteAttribute(@"displayable_reason", @"F2LGameControlVer4.xsd", ((global::System.String)o.@displayable_reason));
            WriteAttribute(@"prize_string", @"F2LGameControlVer4.xsd", ((global::System.String)o.@prize_string));
            if (o.@is_top_awardSpecified) {
                WriteAttribute(@"is_top_award", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_top_award)));
            }
            WriteAttribute(@"win_level_index", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@win_level_index)));
            Write40_AmountType(@"amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@amount), false, false);
            if (o.@is_top_awardSpecified) {
            }
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward>)o.@FeatureProgressiveAward;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write79_FeatureProgressiveAward(@"FeatureProgressiveAward", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward)a[ia]), false, false);
                    }
                }
            }
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit>)o.@ProgressiveNearHit;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write73_ProgressiveNearHit(@"ProgressiveNearHit", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write73_ProgressiveNearHit(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ProgressiveNearHit", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            if (o.@game_levelSpecified) {
                WriteAttribute(@"game_level", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@game_level)));
            }
            if (o.@game_levelSpecified) {
            }
            WriteEndElement(o);
        }

        void Write84_AncillaryAward(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"AncillaryAward", @"F2LGameControlVer4.xsd");
            WriteAttribute(@"origin", @"F2LGameControlVer4.xsd", Write72_OutcomeOrigin(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin)o.@origin)));
            WriteAttribute(@"tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@tag));
            WriteAttribute(@"source", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source));
            WriteAttribute(@"source_detail", @"F2LGameControlVer4.xsd", ((global::System.String)o.@source_detail));
            WriteAttribute(@"is_displayable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_displayable)));
            WriteAttribute(@"displayable_reason", @"F2LGameControlVer4.xsd", ((global::System.String)o.@displayable_reason));
            WriteAttribute(@"prize_string", @"F2LGameControlVer4.xsd", ((global::System.String)o.@prize_string));
            if (o.@is_top_awardSpecified) {
                WriteAttribute(@"is_top_award", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@is_top_award)));
            }
            WriteAttribute(@"win_type", @"F2LGameControlVer4.xsd", Write83_AncillaryAwardWin_type(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type)o.@win_type)));
            Write40_AmountType(@"amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@amount), false, false);
            if (o.@is_top_awardSpecified) {
            }
            Write40_AmountType(@"risk_amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@risk_amount), false, false);
            WriteEndElement(o);
        }

        string Write83_AncillaryAwardWin_type(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Win: s = @"Win"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Loss: s = @"Loss"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Tie: s = @"Tie"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Cancel: s = @"Cancel"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type");
            }
            return s;
        }

        void Write86_OutcomeListFeatureEntry(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteAttribute(@"feature_index", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@feature_index)));
            Write71_Item(@"FeatureRngNumbers", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryFeatureRngNumbers)o.@FeatureRngNumbers), false, false);
            Write85_OutcomeListFeatureEntryAwards(@"Awards", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryAwards)o.@Awards), false, false);
            WriteEndElement(o);
        }

        void Write85_OutcomeListFeatureEntryAwards(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryAwards o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryAwards)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award>)o.@Items;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award ai = (global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award)a[ia];
                        if ((object)(ai) != null){
                            if (ai is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward) {
                                Write76_RiskAward(@"RiskAward", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward)ai), false, false);
                            }
                            else if (ai is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward) {
                                Write80_FeatureAward(@"FeatureAward", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward)ai), false, false);
                            }
                            else if (ai is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward) {
                                Write84_AncillaryAward(@"AncillaryAward", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward)ai), false, false);
                            }
                            else  if ((object)(ai) != null){
                                throw CreateUnknownTypeException(ai);
                            }
                        }
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write71_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryFeatureRngNumbers o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryFeatureRngNumbers)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.Int32> a = (global::System.Collections.Generic.List<global::System.Int32>)o.@Number;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"Number", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write103_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write107_GameControlGetCommittedBetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write108_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"AncillaryCycleLimit", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@AncillaryCycleLimit)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write106_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write40_AmountType(@"CommittedBetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@CommittedBetAmount), false, false);
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write104_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.String> a = (global::System.Collections.Generic.List<global::System.String>)o.@AvailableCulture;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementString(@"AvailableCulture", @"F2LGameControlVer4.xsd", ((global::System.String)a[ia]));
                    }
                }
            }
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write105_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write139_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write40_AmountType(@"WinCapAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@WinCapAmount), false, false);
            WriteEndElement(o);
        }

        void Write140_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write138_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write136_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write137_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"RoundWagerUpPlayoffEnabled", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@RoundWagerUpPlayoffEnabled)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write142_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"WinCapBehavior", @"F2LGameControlVer4.xsd", Write141_WinCapBehavior(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior)o.@WinCapBehavior)));
            if (o.@WinCapMultiplierSpecified) {
                WriteElementStringRaw(@"WinCapMultiplier", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@WinCapMultiplier)));
            }
            Write40_AmountType(@"WinCapAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@WinCapAmount), false, false);
            WriteEndElement(o);
        }

        string Write141_WinCapBehavior(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior.@FixedWinCapAmount: s = @"FixedWinCapAmount"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior.@MultipliedByCurrentBet: s = @"MultipliedByCurrentBet"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior.@MultipliedByMaxBet: s = @"MultipliedByMaxBet"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior");
            }
            return s;
        }

        void Write147_GameControlGetCultureReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementString(@"CurrentCulture", @"F2LGameControlVer4.xsd", ((global::System.String)o.@CurrentCulture));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write148_GameControlGetCultureSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write146_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write143_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write145_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write144_CreditFormatterInfoType(@"CreditFormatterInfo", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditFormatterInfoType)o.@CreditFormatterInfo), false, false);
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write144_CreditFormatterInfoType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditFormatterInfoType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditFormatterInfoType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"CreditFormatterInfoType", @"F2LLocalizationTypeVer1.xsd");
            WriteElementString(@"NumericDecimalSeparator", @"F2LLocalizationTypeVer1.xsd", ((global::System.String)o.@NumericDecimalSeparator));
            WriteElementString(@"NumericGroupSeparator", @"F2LLocalizationTypeVer1.xsd", ((global::System.String)o.@NumericGroupSeparator));
            WriteElementString(@"WholeUnitCurrencySymbol", @"F2LLocalizationTypeVer1.xsd", ((global::System.String)o.@WholeUnitCurrencySymbol));
            WriteElementString(@"BaseUnitCurrencySymbol", @"F2LLocalizationTypeVer1.xsd", ((global::System.String)o.@BaseUnitCurrencySymbol));
            if (o.@UseGroupSeparatorForNonMonetaryNumbersSpecified) {
                WriteElementStringRaw(@"UseGroupSeparatorForNonMonetaryNumbers", @"F2LLocalizationTypeVer1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@UseGroupSeparatorForNonMonetaryNumbers)));
            }
            WriteEndElement(o);
        }

        void Write135_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"MinimumFreeSpinPresentationTime", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@MinimumFreeSpinPresentationTime)));
            WriteEndElement(o);
        }

        void Write126_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write40_AmountType(@"MaxBetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@MaxBetAmount), false, false);
            WriteEndElement(o);
        }

        void Write127_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write125_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write122_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write124_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"LineSelection", @"F2LGameControlVer4.xsd", Write123_LineSelectionType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType)o.@LineSelection)));
            WriteEndElement(o);
        }

        string Write123_LineSelectionType(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType.@Undefined: s = @"Undefined"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType.@Forced: s = @"Forced"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType.@PlayerSelectable: s = @"PlayerSelectable"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType");
            }
            return s;
        }

        void Write129_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"MaxBetButtonBehavior", @"F2LGameControlVer4.xsd", Write128_MaxBetButtonBehavior(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior)o.@MaxBetButtonBehavior)));
            WriteEndElement(o);
        }

        string Write128_MaxBetButtonBehavior(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior.@BetMaxCreditsOnly: s = @"BetMaxCreditsOnly"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior.@BetAvailableCredits: s = @"BetAvailableCredits"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior");
            }
            return s;
        }

        void Write133_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"MinimumBaseGamePresentationTime", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@MinimumBaseGamePresentationTime)));
            WriteEndElement(o);
        }

        void Write134_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write132_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write130_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write131_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write40_AmountType(@"MinBetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@MinBetAmount), false, false);
            WriteEndElement(o);
        }

        void Write47_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write48_GameControlCanPlaceBetReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"BetAllowed", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@BetAllowed)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write46_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"CommitAllowed", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@CommitAllowed)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write44_GameControlCanCommitBetsReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.Boolean> a = (global::System.Collections.Generic.List<global::System.Boolean>)o.@CommitAllowed;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"CommitAllowed", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)a[ia])));
                    }
                }
            }
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write45_GameControlCanCommitBetsSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType>)o.@BetAmount;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write40_AmountType(@"BetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write49_GameControlCanPlaceBetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"BetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetAmount), false, false);
            Write40_AmountType(@"BetFromCreditsAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetFromCreditsAmount), false, false);
            Write40_AmountType(@"BetFromUncommittedGameWinsAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetFromUncommittedGameWinsAmount), false, false);
            Write40_AmountType(@"PendingWinsAvailableForThisBet", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@PendingWinsAvailableForThisBet), false, false);
            WriteEndElement(o);
        }

        void Write53_GameControlCommitBetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write40_AmountType(@"BetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetAmount), false, false);
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write54_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"CommitSuccessful", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@CommitSuccessful)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write52_GameControlCommitBetReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"BetCommitted", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@BetCommitted)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write50_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"StartAllowed", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@StartAllowed)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write51_GameControlCanStartPlayingSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write43_GameControlCanCommitBetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write40_AmountType(@"BetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetAmount), false, false);
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write33_GameControlActionResponseSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"Payload", @"F2LGameControlVer4.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write34_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write32_GameControlActionResponseReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write30_GameControlActionRequestReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write31_GameControlActionRequestSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"Payload", @"F2LGameControlVer4.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Payload)));
            WriteEndElement(o);
        }

        void Write35_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write41_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType>)o.@BetAmount;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write40_AmountType(@"BetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write42_GameControlCanCommitBetReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"CommitAllowed", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@CommitAllowed)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write39_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.Boolean> a = (global::System.Collections.Generic.List<global::System.Boolean>)o.@BetAllowed;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"BetAllowed", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)a[ia])));
                    }
                }
            }
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write36_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write38_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write37_BankStatus(@"BankStatus", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BankStatus)o.@BankStatus), false, false);
            WriteEndElement(o);
        }

        void Write37_BankStatus(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BankStatus o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BankStatus)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"BankStatus", @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"BankLocked", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@BankLocked)));
            WriteElementStringRaw(@"PlayerCashoutOfferable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PlayerCashoutOfferable)));
            WriteElementStringRaw(@"BankToWagerableOfferable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@BankToWagerableOfferable)));
            WriteEndElement(o);
        }

        void Write70_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write89_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write88_OutcomeList(@"OutcomeList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList)o.@OutcomeList), false, false);
            WriteEndElement(o);
        }

        void Write69_GameControlEnrollResponseSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"EnrollSuccess", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@EnrollSuccess)));
            WriteElementStringRaw(@"HostEnrollmentData", @"F2LGameControlVer4.xsd", FromByteArrayBase64(((global::System.Byte[])o.@HostEnrollmentData)));
            WriteEndElement(o);
        }

        void Write67_GameControlEnrollGameCycleSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"HostEnrollmentData", @"F2LGameControlVer4.xsd", FromByteArrayBase64(((global::System.Byte[])o.@HostEnrollmentData)));
            WriteEndElement(o);
        }

        void Write68_GameControlEnrollResponseReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write90_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write96_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write97_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write88_OutcomeList(@"OutcomeList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList)o.@OutcomeList), false, false);
            WriteEndElement(o);
        }

        void Write95_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write88_OutcomeList(@"OutcomeList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList)o.@OutcomeList), false, false);
            Write94_Item(@"WagerCatOutcomes", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSendWagerCatOutcomes)o.@WagerCatOutcomes), false, false);
            WriteEndElement(o);
        }

        void Write94_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSendWagerCatOutcomes o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSendWagerCatOutcomes)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome>)o.@WagerCatOutcome;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write93_WagerCatOutcome(@"WagerCatOutcome", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write93_WagerCatOutcome(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"WagerCatOutcome", @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"WagerCatIndex", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@WagerCatIndex)));
            Write40_AmountType(@"WagerAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@WagerAmount), false, false);
            WriteEndElement(o);
        }

        void Write91_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write88_OutcomeList(@"OutcomeList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList)o.@OutcomeList), false, false);
            WriteEndElement(o);
        }

        void Write92_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write66_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write58_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write59_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"Denomination", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Denomination)));
            WriteEndElement(o);
        }

        void Write57_GameControlCultureChangedSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Culture", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Culture));
            WriteEndElement(o);
        }

        void Write55_GameControlCommitGameCycleSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write56_GameControlCultureChangedReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write60_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"RequestAccepted", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@RequestAccepted)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write64_GameControlEndGameCycleReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write65_GameControlEndGameCycleSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"NumberOfSteps", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@NumberOfSteps)));
            WriteEndElement(o);
        }

        void Write63_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write61_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"Denomination", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Denomination)));
            WriteEndElement(o);
        }

        void Write62_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write241_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write242_GameControlSetCultureReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write240_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write238_GameControlRemoveCritDataReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"RemoveCritDataSuccess", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@RemoveCritDataSuccess)));
            WriteEndElement(o);
        }

        void Write239_GameControlRemoveCritDataSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"CriticalDataScope", @"F2LGameControlVer4.xsd", Write236_CriticalDataScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope)o.@CriticalDataScope)));
            WriteElementString(@"ItemName", @"F2LGameControlVer4.xsd", ((global::System.String)o.@ItemName));
            WriteEndElement(o);
        }

        string Write236_CriticalDataScope(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@Feature: s = @"Feature"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@GameCycle: s = @"Game-Cycle"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@History: s = @"History"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@Payvar: s = @"Payvar"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@PayvarPersistent: s = @"PayvarPersistent"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@PayvarAnalytics: s = @"PayvarAnalytics"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@Theme: s = @"Theme"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@ThemePersistent: s = @"ThemePersistent"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@ThemeAnalytics: s = @"ThemeAnalytics"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope");
            }
            return s;
        }

        void Write243_GameControlSetCultureSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Culture", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Culture));
            WriteEndElement(o);
        }

        void Write248_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"DisplayControlState", @"F2LGameControlVer4.xsd", Write247_DisplayControlState(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState)o.@DisplayControlState)));
            WriteEndElement(o);
        }

        string Write247_DisplayControlState(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@DisplayAsHidden: s = @"DisplayAsHidden"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@DisplayAsNormal: s = @"DisplayAsNormal"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@DisplayAsSuspended: s = @"DisplayAsSuspended"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState");
            }
            return s;
        }

        void Write249_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"StartSuccessful", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@StartSuccessful)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write246_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write244_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementString(@"Culture", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Culture));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write245_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write237_GameControlReadCritDataSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"CriticalDataScope", @"F2LGameControlVer4.xsd", Write236_CriticalDataScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope)o.@CriticalDataScope)));
            WriteElementString(@"ItemName", @"F2LGameControlVer4.xsd", ((global::System.String)o.@ItemName));
            WriteEndElement(o);
        }

        void Write225_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write226_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write37_BankStatus(@"BankStatus", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BankStatus)o.@BankStatus), false, false);
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write224_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write222_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write223_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"IsMaxBet", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsMaxBet)));
            WriteEndElement(o);
        }

        void Write227_GameControlQueryBankStatusSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write234_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write235_GameControlReadCritDataReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"ReadCritDataSuccess", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ReadCritDataSuccess)));
            WriteElementStringRaw(@"Data", @"F2LGameControlVer4.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Data)));
            WriteEndElement(o);
        }

        void Write233_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write231_Item(@"DenominationList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyDenominationList)o.@DenominationList), false, false);
            Write232_Item(@"ProgressiveDenominationList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList)o.@ProgressiveDenominationList), false, false);
            if (o.@DefaultDenomSpecified) {
                WriteElementStringRaw(@"DefaultDenom", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@DefaultDenom)));
            }
            WriteEndElement(o);
        }

        void Write232_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)o.@Denom;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"Denom", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write231_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyDenominationList o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyDenominationList)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)o.@Denom;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"Denom", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write229_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementString(@"CurrentGameCycleState", @"F2LGameControlVer4.xsd", Write228_GameCycleState(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState)o.@CurrentGameCycleState)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        string Write228_GameCycleState(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Idle: s = @"Idle"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Committed: s = @"Committed"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@EnrollPending: s = @"EnrollPending"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@EnrollComplete: s = @"EnrollComplete"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Playing: s = @"Playing"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@EvaluatePending: s = @"EvaluatePending"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@MainPlayComplete: s = @"MainPlayComplete"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@AncillaryPlaying: s = @"AncillaryPlaying"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@AncillaryEvaluatePending: s = @"AncillaryEvaluatePending"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@AncillaryPlayComplete: s = @"AncillaryPlayComplete"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@BonusPlaying: s = @"BonusPlaying"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@BonusEvaluatePending: s = @"BonusEvaluatePending"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@BonusPlayComplete: s = @"BonusPlayComplete"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@FinalizeAwardPending: s = @"FinalizeAwardPending"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Finalized: s = @"Finalized"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState");
            }
            return s;
        }

        void Write230_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write266_GameControlUncommitBetReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write267_GameControlUncommitBetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write265_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write263_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write264_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransferAccepted", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@TransferAccepted)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write268_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write272_GameControlWriteCritDataReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write273_GameControlWriteCritDataSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"CriticalDataScope", @"F2LGameControlVer4.xsd", Write236_CriticalDataScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope)o.@CriticalDataScope)));
            WriteElementString(@"ItemName", @"F2LGameControlVer4.xsd", ((global::System.String)o.@ItemName));
            WriteElementStringRaw(@"Data", @"F2LGameControlVer4.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Data)));
            WriteEndElement(o);
        }

        void Write271_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write269_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write270_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write262_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write253_GameControlStartPlayingReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write254_GameControlStartPlayingSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write252_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write250_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write251_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write255_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write260_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write261_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write259_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"IsThemeSelectionMenuOfferable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsThemeSelectionMenuOfferable)));
            WriteEndElement(o);
        }

        void Write257_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"ThemeTag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@ThemeTag));
            WriteElementString(@"ThemeTagDataFile", @"F2LGameControlVer4.xsd", ((global::System.String)o.@ThemeTagDataFile));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths>)o.@ResourcePaths;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write256_Item(@"ResourcePaths", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths)a[ia]), false, false);
                    }
                }
            }
            WriteElementStringRaw(@"Denom", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Denom)));
            WriteElementString(@"PayvarTag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@PayvarTag));
            WriteElementString(@"PayvarTagDataFile", @"F2LGameControlVer4.xsd", ((global::System.String)o.@PayvarTagDataFile));
            WriteEndElement(o);
        }

        void Write256_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementString(@"Tag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Tag));
            WriteElementString(@"Path", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Path));
            WriteEndElement(o);
        }

        void Write258_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write184_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"Count", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Count)));
            WriteElementStringRaw(@"Duplicates", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Duplicates)));
            WriteElementStringRaw(@"MinimumValue", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@MinimumValue)));
            WriteElementStringRaw(@"MaximumValue", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@MaximumValue)));
            WriteElementString(@"Name", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Name));
            Write183_Item(@"AlreadyPickedNumbers", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSendAlreadyPickedNumbers)o.@AlreadyPickedNumbers), false, false);
            WriteEndElement(o);
        }

        void Write183_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSendAlreadyPickedNumbers o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSendAlreadyPickedNumbers)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.Int32> a = (global::System.Collections.Generic.List<global::System.Int32>)o.@AlreadyPickedNumber;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"AlreadyPickedNumber", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write185_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write182_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write181_Item(@"RandomNumbers", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReplyRandomNumbers)o.@RandomNumbers), false, false);
            WriteEndElement(o);
        }

        void Write181_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReplyRandomNumbers o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReplyRandomNumbers)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.Int32> a = (global::System.Collections.Generic.List<global::System.Int32>)o.@RandomNumber;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"RandomNumber", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write179_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues>)o.@ProgressiveGameLevelValues;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write178_Item(@"ProgressiveGameLevelValues", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues)a[ia]), false, false);
                    }
                }
            }
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write178_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"Denomination", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Denomination)));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue>)o.@GameLevelProgressives;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write177_GameLevelProgressiveValue(@"GameLevelProgressives", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write177_GameLevelProgressiveValue(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"GameLevelProgressiveValue", @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"GameLevel", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@GameLevel)));
            Write40_AmountType(@"Amount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@Amount), false, false);
            WriteElementString(@"PrizeString", @"F2LGameControlVer4.xsd", ((global::System.String)o.@PrizeString));
            WriteEndElement(o);
        }

        void Write180_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)o.@Denominations;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"Denominations", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write186_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write190_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write191_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"IsPlayerCashoutOfferable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsPlayerCashoutOfferable)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write189_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"IsPlayerBankToWagerableOfferable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsPlayerBankToWagerableOfferable)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write187_GameControlIsBankLockedReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"IsBankLocked", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsBankLocked)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write188_GameControlIsBankLockedSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write176_GameControlGetPlayerMetersSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write164_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Name", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Name));
            WriteElementString(@"Scope", @"F2LGameControlVer4.xsd", Write151_CustomConfigItemScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope)o.@Scope)));
            WriteElementString(@"Type", @"F2LGameControlVer4.xsd", Write163_CustomConfigItemType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType)o.@Type)));
            WriteEndElement(o);
        }

        string Write163_CustomConfigItemType(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Amount: s = @"Amount"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Boolean: s = @"Boolean"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Enumeration: s = @"Enumeration"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@FlagList: s = @"FlagList"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Float: s = @"Float"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Int64: s = @"Int64"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Item: s = @"Item"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@String: s = @"String"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType");
            }
            return s;
        }

        string Write151_CustomConfigItemScope(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope.@Payvar: s = @"Payvar"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope.@Theme: s = @"Theme"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope");
            }
            return s;
        }

        void Write165_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementString(@"Type", @"F2LGameControlVer4.xsd", Write163_CustomConfigItemType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType)o.@Type)));
            WriteEndElement(o);
        }

        void Write162_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write161_Item(@"CustomConfigItem", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItem)o.@CustomConfigItem), false, false);
            WriteEndElement(o);
        }

        void Write161_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItem o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItem)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::System.Boolean) {
                    WriteElementStringRaw(@"BooleanData", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Item)));
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data) {
                    Write158_Item(@"Int64Data", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemItemData) {
                    Write159_Item(@"ItemData", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemItemData)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemStringData) {
                    Write160_Item(@"StringData", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemStringData)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFloatData) {
                    Write157_Item(@"FloatData", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFloatData)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemAmountData) {
                    Write153_Item(@"AmountData", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemAmountData)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData) {
                    Write154_Item(@"EnumerationData", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData) {
                    Write156_Item(@"FlagListData", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write156_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType>)o.@FlagList;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write155_FlagListType(@"FlagList", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write155_FlagListType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"FlagListType", @"F2LGameControlVer4.xsd");
            WriteElementString(@"Item", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Item));
            WriteElementStringRaw(@"Value", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Value)));
            WriteEndElement(o);
        }

        void Write154_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.String> a = (global::System.Collections.Generic.List<global::System.String>)o.@Item;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementString(@"Item", @"F2LGameControlVer4.xsd", ((global::System.String)a[ia]));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write153_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemAmountData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemAmountData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write40_AmountType(@"Value", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@Value), false, false);
            Write40_AmountType(@"Min", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@Min), false, false);
            Write40_AmountType(@"Max", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@Max), false, false);
            WriteEndElement(o);
        }

        void Write157_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFloatData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFloatData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteAttribute(@"Max", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@Max)));
            WriteAttribute(@"Min", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@Min)));
            {
                WriteValue(System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@Value)));
            }
            WriteEndElement(o);
        }

        void Write160_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemStringData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemStringData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteAttribute(@"MaxLength", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@MaxLength)));
            if ((object)(o.@Value) != null){
                WriteValue(((global::System.String)o.@Value));
            }
            WriteEndElement(o);
        }

        void Write159_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemItemData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemItemData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteAttribute(@"EnumerationReferenceName", @"F2LGameControlVer4.xsd", ((global::System.String)o.@EnumerationReferenceName));
            WriteAttribute(@"EnumerationReferenceScope", @"F2LGameControlVer4.xsd", Write151_CustomConfigItemScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope)o.@EnumerationReferenceScope)));
            if ((object)(o.@Value) != null){
                WriteValue(((global::System.String)o.@Value));
            }
            WriteEndElement(o);
        }

        void Write158_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteAttribute(@"Min", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@Min)));
            WriteAttribute(@"Max", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@Max)));
            {
                WriteValue(System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@Value)));
            }
            WriteEndElement(o);
        }

        void Write150_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write149_Item(@"EnumerationData", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData)o.@EnumerationData), false, false);
            WriteEndElement(o);
        }

        void Write149_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.String> a = (global::System.Collections.Generic.List<global::System.String>)o.@Item;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementString(@"Item", @"F2LGameControlVer4.xsd", ((global::System.String)a[ia]));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write152_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Name", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Name));
            WriteElementString(@"Scope", @"F2LGameControlVer4.xsd", Write151_CustomConfigItemScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope)o.@Scope)));
            WriteEndElement(o);
        }

        void Write166_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Name", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Name));
            WriteElementString(@"Scope", @"F2LGameControlVer4.xsd", Write151_CustomConfigItemScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope)o.@Scope)));
            WriteEndElement(o);
        }

        void Write173_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementStringRaw(@"Count", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Count)));
            WriteElementString(@"Name", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Name));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange>)o.@RangeList);
                if (a != null){
                    WriteStartElement(@"RangeList", @"F2LGameControlVer4.xsd", null, false);
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write172_Item(@"Range", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange)a[ia]), false, false);
                    }
                    WriteEndElement();
                }
            }
            WriteEndElement(o);
        }

        void Write172_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteAttribute(@"MinimumValue", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@MinimumValue)));
            WriteAttribute(@"MaximumValue", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@MaximumValue)));
            WriteEndElement(o);
        }

        void Write175_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write174_PlayerMeters(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"PlayerMeters", @"F2LGameControlVer4.xsd");
            Write40_AmountType(@"PlayerWagerableMeter", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@PlayerWagerableMeter), false, false);
            Write40_AmountType(@"PlayerBankMeter", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@PlayerBankMeter), false, false);
            Write40_AmountType(@"PlayerPaidMeter", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@PlayerPaidMeter), false, false);
            WriteEndElement(o);
        }

        void Write171_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write170_Item(@"RandomNumbers", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReplyRandomNumbers)o.@RandomNumbers), false, false);
            WriteEndElement(o);
        }

        void Write170_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReplyRandomNumbers o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReplyRandomNumbers)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            {
                global::System.Collections.Generic.List<global::System.Int32> a = (global::System.Collections.Generic.List<global::System.Int32>)o.@RandomNumber;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementStringRaw(@"RandomNumber", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write168_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair>)o.@CustomConfigItemTypePairs);
                if (a != null){
                    WriteStartElement(@"CustomConfigItemTypePairs", @"F2LGameControlVer4.xsd", null, false);
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write167_CustomConfigItemTypePair(@"CustomConfigItemTypePair", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair)a[ia]), false, false);
                    }
                    WriteEndElement();
                }
            }
            WriteEndElement(o);
        }

        void Write167_CustomConfigItemTypePair(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"CustomConfigItemTypePair", @"F2LGameControlVer4.xsd");
            WriteElementString(@"Name", @"F2LGameControlVer4.xsd", ((global::System.String)o.@Name));
            WriteElementString(@"Type", @"F2LGameControlVer4.xsd", Write163_CustomConfigItemType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType)o.@Type)));
            WriteEndElement(o);
        }

        void Write169_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"Scope", @"F2LGameControlVer4.xsd", Write151_CustomConfigItemScope(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope)o.@Scope)));
            WriteEndElement(o);
        }

        void Write211_GameControlMoneyWonReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write212_GameControlMoneyWonSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"AmountWon", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@AmountWon), false, false);
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            WriteEndElement(o);
        }

        void Write210_GameControlMoneyWagerableSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"AmountMoved", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@AmountMoved), false, false);
            WriteElementString(@"WagerableDirection", @"F2LGameControlVer4.xsd", Write209_MoneyWagerableDirection(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection)o.@WagerableDirection)));
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            WriteEndElement(o);
        }

        string Write209_MoneyWagerableDirection(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@ToUnknownSource: s = @"ToUnknownSource"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@FromUnknownSource: s = @"FromUnknownSource"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@ToBankMeter: s = @"ToBankMeter"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@FromBankMeter: s = @"FromBankMeter"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@FromCashEscrow: s = @"FromCashEscrow"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection");
            }
            return s;
        }

        void Write207_GameControlMoneySetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            WriteEndElement(o);
        }

        void Write208_GameControlMoneyWagerableReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write213_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write220_GameControlPlaceBetReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"BetPlaced", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@BetPlaced)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write221_GameControlPlaceBetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"BetAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetAmount), false, false);
            Write40_AmountType(@"BetFromCreditsAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetFromCreditsAmount), false, false);
            Write40_AmountType(@"BetFromUncommittedGameWinsAmount", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@BetFromUncommittedGameWinsAmount), false, false);
            Write40_AmountType(@"PendingWinsAvailableForThisBet", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@PendingWinsAvailableForThisBet), false, false);
            WriteEndElement(o);
        }

        void Write219_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write217_GameControlNewThemeContextSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteElementString(@"GameMode", @"F2LGameControlVer4.xsd", Write214_GameMode(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode)o.@GameMode)));
            if (((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode)o.@GameSubMode) != global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode.@Standard) {
                WriteElementString(@"GameSubMode", @"F2LGameControlVer4.xsd", Write215_GameSubMode(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode)o.@GameSubMode)));
            }
            WriteElementStringRaw(@"Denom", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Denom)));
            WriteElementString(@"PayvarTag", @"F2LGameControlVer4.xsd", ((global::System.String)o.@PayvarTag));
            WriteElementString(@"PayvarTagDataFile", @"F2LGameControlVer4.xsd", ((global::System.String)o.@PayvarTagDataFile));
            WriteElementStringRaw(@"NewlySelectedForPlay", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@NewlySelectedForPlay)));
            WriteElementString(@"SecurityLevel", @"F2LGameControlVer4.xsd", Write216_SecurityLevelType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType)o.@SecurityLevel)));
            WriteEndElement(o);
        }

        string Write216_SecurityLevelType(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securitynone: s = @"security-none"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securityattendant: s = @"security-attendant"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securityoperator: s = @"security-operator"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securityekey: s = @"security-ekey"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType");
            }
            return s;
        }

        string Write215_GameSubMode(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode.@Standard: s = @"Standard"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode.@Tournament: s = @"Tournament"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode");
            }
            return s;
        }

        string Write214_GameMode(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@Play: s = @"Play"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@History: s = @"History"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@Utility: s = @"Utility"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode");
            }
            return s;
        }

        void Write218_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"OfferAncillaryGame", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@OfferAncillaryGame)));
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write206_GameControlMoneySetReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write195_GameControlMoneyBetReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write196_GameControlMoneyBetSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"AmountBet", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@AmountBet), false, false);
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            WriteEndElement(o);
        }

        void Write194_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write192_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            WriteEndElement(o);
        }

        void Write193_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteElementStringRaw(@"IsThemeSelectionMenuOfferable", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsThemeSelectionMenuOfferable)));
            WriteEndElement(o);
        }

        void Write197_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write203_GameControlMoneyOutReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write205_GameControlMoneyOutSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"AmountOut", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@AmountOut), false, false);
            WriteElementString(@"MoneyOutSource", @"F2LGameControlVer4.xsd", Write204_MoneyOutSource(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource)o.@MoneyOutSource)));
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            WriteEndElement(o);
        }

        string Write204_MoneyOutSource(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@OtherSource: s = @"OtherSource"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Bill: s = @"Bill"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Coin: s = @"Coin"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Ticket: s = @"Ticket"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@FundsTransfer: s = @"FundsTransfer"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Handpay: s = @"Handpay"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource");
            }
            return s;
        }

        void Write202_GameControlMoneyInSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"AmountIn", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@AmountIn), false, false);
            WriteElementString(@"MoneyInSource", @"F2LGameControlVer4.xsd", Write200_MoneyInSource(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource)o.@MoneyInSource)));
            if (o.@FundsTransferAccountSourceSpecified) {
                WriteElementString(@"FundsTransferAccountSource", @"F2LGameControlVer4.xsd", Write201_FundsTransferAccountSource(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource)o.@FundsTransferAccountSource)));
            }
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            WriteEndElement(o);
        }

        string Write201_FundsTransferAccountSource(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@OtherAccount: s = @"OtherAccount"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@CasinoAccount: s = @"CasinoAccount"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@BankAccount: s = @"BankAccount"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@BonusSystem: s = @"BonusSystem"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@NonWinBonusSystem: s = @"NonWinBonusSystem"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource");
            }
            return s;
        }

        string Write200_MoneyInSource(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Invalid: s = @"Invalid"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@OtherSource: s = @"OtherSource"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Bill: s = @"Bill"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Coin: s = @"Coin"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Ticket: s = @"Ticket"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@FundsTransfer: s = @"FundsTransfer"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource");
            }
            return s;
        }

        void Write198_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            WriteElementStringRaw(@"TransactionID", @"F2LGameControlVer4.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TransactionID)));
            Write40_AmountType(@"AmountCommitted", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType)o.@AmountCommitted), false, false);
            Write174_PlayerMeters(@"PlayerMeters", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters)o.@PlayerMeters), false, false);
            WriteEndElement(o);
        }

        void Write199_GameControlMoneyInReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LGameControlVer4.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LGameControlVer4.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write29_LinkControl(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            Write2_VersionType(@"Version", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write28_LinkControlMessageType(@"Message", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write28_LinkControlMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"LinkControlMessageType", @"F2LLinkControlVer2.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkSend) {
                    Write24_LinkControlParkSend(@"ParkSend", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsReply) {
                    Write25_Item(@"SetThemeApiVersionsReply", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSend) {
                    Write27_Item(@"SetThemeApiVersionsSend", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReply) {
                    Write14_Item(@"GetThemeApiVersionsReply", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSend) {
                    Write22_Item(@"GetThemeApiVersionsSend", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkReply) {
                    Write23_LinkControlParkReply(@"ParkReply", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkReply)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write23_LinkControlParkReply(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write22_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            WriteElementString(@"BinTag", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@BinTag));
            WriteElementString(@"BinConnectToken", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@BinConnectToken));
            WriteElementString(@"BinTagDataFile", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@BinTagDataFile));
            WriteElementString(@"ThemeTag", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@ThemeTag));
            WriteElementString(@"ThemeTagDataFile", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@ThemeTagDataFile));
            Write17_Item(@"ResourcePaths", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendResourcePaths)o.@ResourcePaths), false, false);
            Write19_Item(@"EnvironmentAttributes", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendEnvironmentAttributes)o.@EnvironmentAttributes), false, false);
            WriteElementString(@"Jurisdiction", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@Jurisdiction));
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension>)o.@Extensions);
                if (a != null){
                    WriteStartElement(@"Extensions", @"F2LLinkControlVer2.xsd", null, false);
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write21_ExtensionListExtension(@"Extension", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension)a[ia]), false, false);
                    }
                    WriteEndElement();
                }
            }
            WriteEndElement(o);
        }

        void Write21_ExtensionListExtension(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            WriteElementString(@"ExtensionIdentifier", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@ExtensionIdentifier));
            Write20_ExtensionVersion(@"ExtensionVersion", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionVersion)o.@ExtensionVersion), false, false);
            WriteElementString(@"ResourceDirectoryBase", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@ResourceDirectoryBase));
            WriteEndElement(o);
        }

        void Write20_ExtensionVersion(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionVersion o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionVersion)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ExtensionVersion", @"F2LLinkControlVer2.xsd");
            WriteElementStringRaw(@"MajorVersion", @"F2LLinkControlVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@MajorVersion)));
            WriteElementStringRaw(@"MinorVersion", @"F2LLinkControlVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@MinorVersion)));
            WriteElementStringRaw(@"PatchVersion", @"F2LLinkControlVer2.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@PatchVersion)));
            WriteEndElement(o);
        }

        void Write19_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendEnvironmentAttributes o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendEnvironmentAttributes)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType>)o.@EnvironmentAttribute;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        WriteElementString(@"EnvironmentAttribute", @"F2LLinkControlVer2.xsd", Write18_EnvironmentAttributeType(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType)a[ia])));
                    }
                }
            }
            WriteEndElement(o);
        }

        string Write18_EnvironmentAttributeType(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType.@bankedcredit: s = @"banked-credit"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType.@CDS: s = @"CDS"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType.@showdemo: s = @"show-demo"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType");
            }
            return s;
        }

        void Write17_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendResourcePaths o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendResourcePaths)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType>)o.@ResourcePath;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write16_GameDiscovPathType(@"ResourcePath", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write16_GameDiscovPathType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"GameDiscovPathType", @"F2LLinkControlVer2.xsd");
            WriteElementString(@"InclusionType", @"F2LLinkControlVer2.xsd", Write15_Item(((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType)o.@InclusionType)));
            WriteElementString(@"Tag", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@Tag));
            WriteElementString(@"Path", @"F2LLinkControlVer2.xsd", ((global::System.String)o.@Path));
            WriteEndElement(o);
        }

        string Write15_Item(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType v) {
            string s = null;
            switch (v) {
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType.@Bin: s = @"Bin"; break;
                case global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType.@Theme: s = @"Theme"; break;
                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType");
            }
            return s;
        }

        void Write14_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write13_Item(@"CategoryVersions", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReplyCategoryVersions)o.@CategoryVersions), false, false);
            WriteEndElement(o);
        }

        void Write13_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReplyCategoryVersions o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReplyCategoryVersions)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>)o.@CategoryVersion;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write4_CategoryVersionType(@"CategoryVersion", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write4_CategoryVersionType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"CategoryVersionType", @"F2LTypeVer2.xsd");
            WriteElementStringRaw(@"Category", @"F2LTypeVer2.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@Category)));
            Write2_VersionType(@"Version", @"F2LTypeVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            WriteEndElement(o);
        }

        void Write27_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            Write26_Item(@"CategoryVersions", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSendCategoryVersions)o.@CategoryVersions), false, false);
            WriteEndElement(o);
        }

        void Write26_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSendCategoryVersions o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSendCategoryVersions)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>)o.@CategoryVersion;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write4_CategoryVersionType(@"CategoryVersion", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write25_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LLinkControlVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write24_LinkControlParkSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LLinkControlVer2.xsd");
            WriteEndElement(o);
        }

        void Write12_Connect(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LConnectVer2.xsd");
            Write2_VersionType(@"Version", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType)o.@Version), false, false);
            Write11_ConnectMessageType(@"Message", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectMessageType)o.@Message), false, false);
            WriteEndElement(o);
        }

        void Write11_ConnectMessageType(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectMessageType o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectMessageType)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(@"ConnectMessageType", @"F2LConnectVer2.xsd");
            if ((object)(o.@Item) != null){
                if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionSend) {
                    Write9_Item(@"SetLinkControlApiVersionSend", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectShutdownSend) {
                    Write10_ConnectShutdownSend(@"ShutdownSend", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectShutdownSend)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionReply) {
                    Write8_Item(@"SetLinkControlApiVersionReply", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReply) {
                    Write6_Item(@"GetLinkControlApiVersionsReply", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReply)o.@Item), false, false);
                }
                else if (o.@Item is global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsSend) {
                    Write7_Item(@"GetLinkControlApiVersionsSend", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsSend)o.@Item), false, false);
                }
                else  if ((object)(o.@Item) != null){
                    throw CreateUnknownTypeException(o.@Item);
                }
            }
            WriteEndElement(o);
        }

        void Write7_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LConnectVer2.xsd");
            WriteEndElement(o);
        }

        void Write6_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LConnectVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            Write5_Item(@"CategoryVersions", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReplyCategoryVersions)o.@CategoryVersions), false, false);
            WriteEndElement(o);
        }

        void Write5_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReplyCategoryVersions o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReplyCategoryVersions)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LConnectVer2.xsd");
            {
                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>)o.@CategoryVersion;
                if (a != null) {
                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {
                        Write4_CategoryVersionType(@"CategoryVersion", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType)a[ia]), false, false);
                    }
                }
            }
            WriteEndElement(o);
        }

        void Write8_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionReply o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionReply)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LConnectVer2.xsd");
            Write3_ReplyCodeType(@"Reply", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType)o.@Reply), false, false);
            WriteEndElement(o);
        }

        void Write10_ConnectShutdownSend(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectShutdownSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectShutdownSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LConnectVer2.xsd");
            WriteEndElement(o);
        }

        void Write9_Item(string n, string ns, global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionSend o, bool isNullable, bool needType) {
            if ((object)o == null) {
                if (isNullable) WriteNullTagLiteral(n, ns);
                return;
            }
            if (!needType) {
                System.Type t = o.GetType();
                if (t == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionSend)) {
                }
                else {
                    throw CreateUnknownTypeException(o);
                }
            }
            WriteStartElement(n, ns, o, false, null);
            if (needType) WriteXsiType(null, @"F2LConnectVer2.xsd");
            Write4_CategoryVersionType(@"CategoryVersion", @"F2LConnectVer2.xsd", ((global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType)o.@CategoryVersion), false, false);
            WriteEndElement(o);
        }

        protected override void InitCallbacks() {
        }
    }

    public class XmlSerializationReader1 : System.Xml.Serialization.XmlSerializationReader {

        public object Read399_Connect() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id1_Connect && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                    o = Read12_Connect(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LConnectVer2.xsd:Connect");
            }
            return (object)o;
        }

        public object Read400_LinkControl() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id3_LinkControl && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                    o = Read29_LinkControl(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LLinkControlVer2.xsd:LinkControl");
            }
            return (object)o;
        }

        public object Read401_GameControl() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id5_GameControl && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o = Read275_GameControl(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LGameControlVer4.xsd:GameControl");
            }
            return (object)o;
        }

        public object Read402_ShowDemo() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id7_ShowDemo && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                    o = Read282_ShowDemo(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LShowDemoVer2.xsd:ShowDemo");
            }
            return (object)o;
        }

        public object Read403_GameStopReport() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id9_GameStopReport && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                    o = Read289_GameStopReport(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LGameStopReportVer2.xsd:GameStopReport");
            }
            return (object)o;
        }

        public object Read404_Identification() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id11_Identification && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                    o = Read297_Identification(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LIdentificationVer1.xsd:Identification");
            }
            return (object)o;
        }

        public object Read405_GameTilt() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id13_GameTilt && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                    o = Read304_GameTilt(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LGameTiltVer1.xsd:GameTilt");
            }
            return (object)o;
        }

        public object Read406_AutoPlay() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id15_AutoPlay && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                    o = Read322_AutoPlay(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LAutoPlayVer1.xsd:AutoPlay");
            }
            return (object)o;
        }

        public object Read407_GameContextLocking() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id17_GameContextLocking && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                    o = Read328_GameContextLocking(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LGameContextLockingVer1.xsd:GameContextLocking");
            }
            return (object)o;
        }

        public object Read408_VoucherPrint() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id19_VoucherPrint && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                    o = Read333_VoucherPrint(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LVoucherPrintVer1.xsd:VoucherPrint");
            }
            return (object)o;
        }

        public object Read409_ProtocolIPPForwarding() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id21_ProtocolIPPForwarding && (object) Reader.NamespaceURI == (object)id22_Item)) {
                    o = Read339_ProtocolIPPForwarding(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LProtocolIPPForwardingVer1.xsd:ProtocolIPPForwarding");
            }
            return (object)o;
        }

        public object Read410_CdsItaly() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id23_CdsItaly && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                    o = Read364_CdsItaly(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LCdsItalyVer1.xsd:CdsItaly");
            }
            return (object)o;
        }

        public object Read411_CdsItalyMockEnrollment() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id25_CdsItalyMockEnrollment && (object) Reader.NamespaceURI == (object)id26_Item)) {
                    o = Read371_CdsItalyMockEnrollment(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LCdsItalyMockEnrollmentVer1.xsd:CdsItalyMockEnrollment");
            }
            return (object)o;
        }

        public object Read412_ThemeToExtParcelComm() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id27_ThemeToExtParcelComm && (object) Reader.NamespaceURI == (object)id28_Item)) {
                    o = Read382_ThemeToExtParcelComm(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LThemeToExtParcelCommVer1.xsd:ThemeToExtParcelComm");
            }
            return (object)o;
        }

        public object Read413_ForceGameCompletion() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id29_ForceGameCompletion && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                    o = Read391_ForceGameCompletion(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LForceGameCompletionVer1.xsd:ForceGameCompletion");
            }
            return (object)o;
        }

        public object Read414_WapSignControl() {
            object o = null;
            Reader.MoveToContent();
            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                if (((object) Reader.LocalName == (object)id31_WapSignControl && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                    o = Read398_WapSignControl(false, true);
                }
                else {
                    throw CreateUnknownNodeException();
                }
            }
            else {
                UnknownNode(null, @"F2LWapSignControlVer1.xsd:WapSignControl");
            }
            return (object)o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl Read398_WapSignControl(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_F2LWapSignControlVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations0 = 0;
            int readerCount0 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Message = Read397_WapSignControlMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:Version, F2LWapSignControlVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:Version, F2LWapSignControlVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations0, ref readerCount0);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlMessageType Read397_WapSignControlMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id36_WapSignControlMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_F2LWapSignControlVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations1 = 0;
            int readerCount1 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id37_GetProgressiveLevelValuesReply && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Item = Read393_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id38_GetProgressiveLevelValuesSend && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Item = Read394_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id39_TransportWAPHostDataToBinReply && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Item = Read395_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id40_TransportWAPHostDataToBinSend && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Item = Read396_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:GetProgressiveLevelValuesReply, F2LWapSignControlVer1.xsd:GetProgressiveLevelValuesSend, F2LWapSignControlVer1.xsd:TransportWAPHostDataToBinReply, F2LWapSignControlVer1.xsd:TransportWAPHostDataToBinSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:GetProgressiveLevelValuesReply, F2LWapSignControlVer1.xsd:GetProgressiveLevelValuesSend, F2LWapSignControlVer1.xsd:TransportWAPHostDataToBinReply, F2LWapSignControlVer1.xsd:TransportWAPHostDataToBinSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations1, ref readerCount1);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinSend Read396_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_F2LWapSignControlVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations2 = 0;
            int readerCount2 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id41_BinaryData && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        {
                            o.@BinaryData = ToByteArrayBase64(false);
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:BinaryData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:BinaryData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations2, ref readerCount2);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinReply Read395_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_F2LWapSignControlVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlTransportWAPHostDataToBinReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations3 = 0;
            int readerCount3 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations3, ref readerCount3);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType Read3_ReplyCodeType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id43_ReplyCodeType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_F2LTypeVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ReplyCodeType();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations4 = 0;
            int readerCount4 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id45_ReplyCode && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        {
                            o.@ReplyCode = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id46_ErrorDescription && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        {
                            o.@ErrorDescription = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LTypeVer2.xsd:ReplyCode, F2LTypeVer2.xsd:ErrorDescription");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LTypeVer2.xsd:ReplyCode, F2LTypeVer2.xsd:ErrorDescription");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations4, ref readerCount4);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesSend Read394_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_F2LWapSignControlVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesSend();
            bool[] paramsRead = new bool[0];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations5 = 0;
            int readerCount5 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations5, ref readerCount5);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesReply Read393_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_F2LWapSignControlVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControlGetProgressiveLevelValuesReply();
            if ((object)(o.@ProgressiveLevelValues) == null) o.@ProgressiveLevelValues = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue>)o.@ProgressiveLevelValues;
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations6 = 0;
            int readerCount6 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id47_ProgressiveLevelValues && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read392_LevelProgressiveValue(false, true));
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id48_IsOnlineWithHost && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        {
                            o.@IsOnlineWithHost = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:ProgressiveLevelValues, F2LWapSignControlVer1.xsd:IsOnlineWithHost, F2LWapSignControlVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:ProgressiveLevelValues, F2LWapSignControlVer1.xsd:IsOnlineWithHost, F2LWapSignControlVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations6, ref readerCount6);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue Read392_LevelProgressiveValue(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id49_LevelProgressiveValue && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_F2LWapSignControlVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LevelProgressiveValue();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations7 = 0;
            int readerCount7 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id50_Level && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        {
                            o.@Level = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id51_Amount && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        o.@Amount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id52_PrizeString && (object) Reader.NamespaceURI == (object)id32_F2LWapSignControlVer1xsd)) {
                        {
                            o.@PrizeString = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:Level, F2LWapSignControlVer1.xsd:Amount, F2LWapSignControlVer1.xsd:PrizeString");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LWapSignControlVer1.xsd:Level, F2LWapSignControlVer1.xsd:Amount, F2LWapSignControlVer1.xsd:PrizeString");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations7, ref readerCount7);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType Read40_AmountType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id53_AmountType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_F2LTypeVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations8 = 0;
            int readerCount8 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id54_Value && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        {
                            o.@Value = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id55_CRC && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        {
                            o.@CRC = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LTypeVer2.xsd:Value, F2LTypeVer2.xsd:CRC");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LTypeVer2.xsd:Value, F2LTypeVer2.xsd:CRC");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations8, ref readerCount8);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType Read2_VersionType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id56_VersionType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_F2LTypeVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VersionType();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations9 = 0;
            int readerCount9 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id57_MajorVersion && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        {
                            o.@MajorVersion = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id58_MinorVersion && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        {
                            o.@MinorVersion = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LTypeVer2.xsd:MajorVersion, F2LTypeVer2.xsd:MinorVersion");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LTypeVer2.xsd:MajorVersion, F2LTypeVer2.xsd:MinorVersion");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations9, ref readerCount9);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion Read391_ForceGameCompletion(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations10 = 0;
            int readerCount10 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Message = Read390_ForceGameCompletionMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Version, F2LForceGameCompletionVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Version, F2LForceGameCompletionVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations10, ref readerCount10);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionMessageType Read390_ForceGameCompletionMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id59_ForceGameCompletionMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations11 = 0;
            int readerCount11 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id60_Item && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Item = Read383_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_Item && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Item = Read387_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id62_Item && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Item = Read388_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id63_Item && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Item = Read389_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatusChangedReply, F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatusChangedSend, F2LForceGameCompletionVer1.xsd:QueryForceGameCompletionStatusReply, F2LForceGameCompletionVer1.xsd:QueryForceGameCompletionStatusSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatusChangedReply, F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatusChangedSend, F2LForceGameCompletionVer1.xsd:QueryForceGameCompletionStatusReply, F2LForceGameCompletionVer1.xsd:QueryForceGameCompletionStatusSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations11, ref readerCount11);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusSend Read389_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations12 = 0;
            int readerCount12 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations12, ref readerCount12);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusReply Read388_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionQueryForceGameCompletionStatusReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations13 = 0;
            int readerCount13 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id65_ForceGameCompletionStatus && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@ForceGameCompletionStatus = Read386_ForceGameCompletionStatusType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Reply, F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatus");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Reply, F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatus");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations13, ref readerCount13);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusType Read386_ForceGameCompletionStatusType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id66_ForceGameCompletionStatusType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusType();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations14 = 0;
            int readerCount14 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id67_ForceCompletion && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        {
                            o.@ForceCompletion = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id68_AutoFinishStatus && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@AutoFinishStatus = Read385_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:ForceCompletion, F2LForceGameCompletionVer1.xsd:AutoFinishStatus");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:ForceCompletion, F2LForceGameCompletionVer1.xsd:AutoFinishStatus");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations14, ref readerCount14);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusTypeAutoFinishStatus Read385_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusTypeAutoFinishStatus o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionStatusTypeAutoFinishStatus();
            if ((object)(o.@ForceCompletionMessage) == null) o.@ForceCompletionMessage = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType> a_2 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType>)o.@ForceCompletionMessage;
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations15 = 0;
            int readerCount15 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id69_FinishTime && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        {
                            o.@FinishTime = ToDateTime(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id70_WarningTime && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        {
                            o.@WarningTime = ToDateTime(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id71_ForceCompletionMessage && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        if (!ReadNull()) {
                            if ((object)(o.@ForceCompletionMessage) == null) o.@ForceCompletionMessage = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType>();
                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType> a_2_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType>)o.@ForceCompletionMessage;
                            if ((Reader.IsEmptyElement)) {
                                Reader.Skip();
                            }
                            else {
                                Reader.ReadStartElement();
                                Reader.MoveToContent();
                                int whileIterations16 = 0;
                                int readerCount16 = ReaderCount;
                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                                        if (((object) Reader.LocalName == (object)id72_Item && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                                            if ((object)(a_2_0) == null) Reader.Skip(); else a_2_0.Add(Read384_Item(false, true));
                                        }
                                        else {
                                            UnknownNode(null, @"F2LForceGameCompletionVer1.xsd:ForceCompletionMessageLocalizations");
                                        }
                                    }
                                    else {
                                        UnknownNode(null, @"F2LForceGameCompletionVer1.xsd:ForceCompletionMessageLocalizations");
                                    }
                                    Reader.MoveToContent();
                                    CheckReaderCount(ref whileIterations16, ref readerCount16);
                                }
                            ReadEndElement();
                            }
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:FinishTime, F2LForceGameCompletionVer1.xsd:WarningTime, F2LForceGameCompletionVer1.xsd:ForceCompletionMessage");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:FinishTime, F2LForceGameCompletionVer1.xsd:WarningTime, F2LForceGameCompletionVer1.xsd:ForceCompletionMessage");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations15, ref readerCount15);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType Read384_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id73_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceCompletionMessageLocalizationType();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id74_Culture && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                    o.@Culture = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Culture");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations17 = 0;
            int readerCount17 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        {
                            o.@Message = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations17, ref readerCount17);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedSend Read387_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations18 = 0;
            int readerCount18 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id65_ForceGameCompletionStatus && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@ForceGameCompletionStatus = Read386_ForceGameCompletionStatusType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:TransactionID, F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatus");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:TransactionID, F2LForceGameCompletionVer1.xsd:ForceGameCompletionStatus");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations18, ref readerCount18);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedReply Read383_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_F2LForceGameCompletionVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletionForceGameCompletionStatusChangedReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations19 = 0;
            int readerCount19 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id30_F2LForceGameCompletionVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LForceGameCompletionVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations19, ref readerCount19);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm Read382_ThemeToExtParcelComm(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations20 = 0;
            int readerCount20 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Message = Read381_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Version, F2LThemeToExtParcelCommVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Version, F2LThemeToExtParcelCommVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations20, ref readerCount20);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommMessageType Read381_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id75_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations21 = 0;
            int readerCount21 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id76_ExtensionParcelCallRxReply && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read372_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id77_ExtensionParcelCallRxSend && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read373_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id78_ExtensionParcelCallTxReply && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read375_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id79_ExtensionParcelCallTxSend && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read376_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id80_Item && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read377_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id81_ExtensionTransParcelCallRxSend && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read378_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id82_Item && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read379_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id83_ExtensionTransParcelCallTxSend && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Item = Read380_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallRxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallRxSend, F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallTxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallTxSend, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallRxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallRxSend, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallTxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallTxSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallRxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallRxSend, F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallTxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionParcelCallTxSend, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallRxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallRxSend, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallTxReply, F2LThemeToExtParcelCommVer1.xsd:ExtensionTransParcelCallTxSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations21, ref readerCount21);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxSend Read380_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations22 = 0;
            int readerCount22 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id84_Extension && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Extension = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:TransactionID, F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:TransactionID, F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations22, ref readerCount22);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxReply Read379_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallTxReply();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations23 = 0;
            int readerCount23 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id86_Status && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Status = Read374_ParcelCallStatus(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Status, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Status, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations23, ref readerCount23);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus Read374_ParcelCallStatus(string s) {
            switch (s) {
                case @"Success": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Success;
                case @"Busy": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Busy;
                case @"Unavailable": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Unavailable;
                case @"Rejected": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus.@Rejected;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ParcelCallStatus));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxSend Read378_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations24 = 0;
            int readerCount24 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id84_Extension && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Extension = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:TransactionID, F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:TransactionID, F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations24, ref readerCount24);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxReply Read377_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionTransParcelCallRxReply();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations25 = 0;
            int readerCount25 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id87_Accepted && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Accepted = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Accepted, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Accepted, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations25, ref readerCount25);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxSend Read376_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations26 = 0;
            int readerCount26 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id84_Extension && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Extension = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations26, ref readerCount26);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxReply Read375_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallTxReply();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations27 = 0;
            int readerCount27 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id86_Status && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Status = Read374_ParcelCallStatus(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Status, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Status, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations27, ref readerCount27);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxSend Read373_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations28 = 0;
            int readerCount28 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id84_Extension && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Extension = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Extension, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations28, ref readerCount28);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxReply Read372_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelCommExtensionParcelCallRxReply();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations29 = 0;
            int readerCount29 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id87_Accepted && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Accepted = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id28_Item)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Accepted, F2LThemeToExtParcelCommVer1.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LThemeToExtParcelCommVer1.xsd:Reply, F2LThemeToExtParcelCommVer1.xsd:Accepted, F2LThemeToExtParcelCommVer1.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations29, ref readerCount29);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment Read371_CdsItalyMockEnrollment(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations30 = 0;
            int readerCount30 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Message = Read370_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:Version, F2LCdsItalyMockEnrollmentVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:Version, F2LCdsItalyMockEnrollmentVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations30, ref readerCount30);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentMessageType Read370_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id88_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations31 = 0;
            int readerCount31 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id89_SetMockEnrollmentDataReply && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Item = Read365_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id90_SetMockEnrollmentDataSend && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Item = Read366_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id91_SetMockOutcomeDataReply && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Item = Read367_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id92_SetMockOutcomeDataSend && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Item = Read369_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:SetMockEnrollmentDataReply, F2LCdsItalyMockEnrollmentVer1.xsd:SetMockEnrollmentDataSend, F2LCdsItalyMockEnrollmentVer1.xsd:SetMockOutcomeDataReply, F2LCdsItalyMockEnrollmentVer1.xsd:SetMockOutcomeDataSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:SetMockEnrollmentDataReply, F2LCdsItalyMockEnrollmentVer1.xsd:SetMockEnrollmentDataSend, F2LCdsItalyMockEnrollmentVer1.xsd:SetMockOutcomeDataReply, F2LCdsItalyMockEnrollmentVer1.xsd:SetMockOutcomeDataSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations31, ref readerCount31);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataSend Read369_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataSend();
            if ((object)(o.@CdsItalyMockOutcomeList) == null) o.@CdsItalyMockOutcomeList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData>)o.@CdsItalyMockOutcomeList;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations32 = 0;
            int readerCount32 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id93_CdsItalyMockOutcomeList && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        if (!ReadNull()) {
                            if ((object)(o.@CdsItalyMockOutcomeList) == null) o.@CdsItalyMockOutcomeList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData>();
                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData>)o.@CdsItalyMockOutcomeList;
                            if ((Reader.IsEmptyElement)) {
                                Reader.Skip();
                            }
                            else {
                                Reader.ReadStartElement();
                                Reader.MoveToContent();
                                int whileIterations33 = 0;
                                int readerCount33 = ReaderCount;
                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                                        if (((object) Reader.LocalName == (object)id94_CdsItalyMockOutcome && (object) Reader.NamespaceURI == (object)id26_Item)) {
                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read368_CdsItalyMockOutcomeData(false, true));
                                        }
                                        else {
                                            UnknownNode(null, @"F2LCdsItalyMockEnrollmentVer1.xsd:CdsItalyMockOutcome");
                                        }
                                    }
                                    else {
                                        UnknownNode(null, @"F2LCdsItalyMockEnrollmentVer1.xsd:CdsItalyMockOutcome");
                                    }
                                    Reader.MoveToContent();
                                    CheckReaderCount(ref whileIterations33, ref readerCount33);
                                }
                            ReadEndElement();
                            }
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:TransactionID, F2LCdsItalyMockEnrollmentVer1.xsd:CdsItalyMockOutcomeList");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:TransactionID, F2LCdsItalyMockEnrollmentVer1.xsd:CdsItalyMockOutcomeList");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations32, ref readerCount32);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData Read368_CdsItalyMockOutcomeData(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id95_CdsItalyMockOutcomeData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockOutcomeData();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations34 = 0;
            int readerCount34 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id96_OutcomeGenerated && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@OutcomeGenerated = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id97_OutcomeResponseData && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@OutcomeResponseData = ToByteArrayBase64(false);
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:OutcomeGenerated, F2LCdsItalyMockEnrollmentVer1.xsd:OutcomeResponseData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:OutcomeGenerated, F2LCdsItalyMockEnrollmentVer1.xsd:OutcomeResponseData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations34, ref readerCount34);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataReply Read367_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockOutcomeDataReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations35 = 0;
            int readerCount35 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations35, ref readerCount35);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataSend Read366_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataSend();
            bool[] paramsRead = new bool[6];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations36 = 0;
            int readerCount36 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id98_EnrollementSuccess && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@EnrollementSuccess = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id99_EnrollmentResponseData && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@EnrollmentResponseData = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id100_JackpotHit && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@JackpotHit = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id101_JackpotLevel && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        {
                            o.@JackpotLevel = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());
                        }
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id102_BonusAmount && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@BonusAmount = Read40_AmountType(false, true);
                        paramsRead[5] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:TransactionID, F2LCdsItalyMockEnrollmentVer1.xsd:EnrollementSuccess, F2LCdsItalyMockEnrollmentVer1.xsd:EnrollmentResponseData, F2LCdsItalyMockEnrollmentVer1.xsd:JackpotHit, F2LCdsItalyMockEnrollmentVer1.xsd:JackpotLevel, F2LCdsItalyMockEnrollmentVer1.xsd:BonusAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:TransactionID, F2LCdsItalyMockEnrollmentVer1.xsd:EnrollementSuccess, F2LCdsItalyMockEnrollmentVer1.xsd:EnrollmentResponseData, F2LCdsItalyMockEnrollmentVer1.xsd:JackpotHit, F2LCdsItalyMockEnrollmentVer1.xsd:JackpotLevel, F2LCdsItalyMockEnrollmentVer1.xsd:BonusAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations36, ref readerCount36);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataReply Read365_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollmentSetMockEnrollmentDataReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations37 = 0;
            int readerCount37 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id26_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyMockEnrollmentVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations37, ref readerCount37);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly Read364_CdsItaly(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations38 = 0;
            int readerCount38 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Message = Read363_CdsItalyMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Version, F2LCdsItalyVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Version, F2LCdsItalyVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations38, ref readerCount38);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMessageType Read363_CdsItalyMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id103_CdsItalyMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations39 = 0;
            int readerCount39 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id104_AwardMismatchDetectedReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read340_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id105_AwardMismatchDetectedSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read341_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id106_CommitOutcomeReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read342_CdsItalyCommitOutcomeReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id107_CommitOutcomeSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read344_CdsItalyCommitOutcomeSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id108_Item && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read345_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id109_Item && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read346_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id110_GetConfigDataTaxInfoReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read347_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id111_GetConfigDataTaxInfoSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read348_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id112_GetEnrollmentResponseDataReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read349_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id113_GetEnrollmentResponseDataSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read350_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id114_GetJackpotBonusAwardReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read351_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id115_GetJackpotBonusAwardSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read352_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id116_GetOutcomeResponseReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read353_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id117_GetOutcomeResponseSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read354_CdsItalyGetOutcomeResponseSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id118_GetTaxableWinInfoReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read355_CdsItalyGetTaxableWinInfoReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id119_GetTaxableWinInfoSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read356_CdsItalyGetTaxableWinInfoSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id120_OutcomeRequestReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read357_CdsItalyOutcomeRequestReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id121_OutcomeRequestSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read358_CdsItalyOutcomeRequestSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id122_OutcomeResponseReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read359_CdsItalyOutcomeResponseReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id123_OutcomeResponseSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read360_CdsItalyOutcomeResponseSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id124_SetEnrollmentRequestDataReply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read361_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id125_SetEnrollmentRequestDataSend && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Item = Read362_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:AwardMismatchDetectedReply, F2LCdsItalyVer1.xsd:AwardMismatchDetectedSend, F2LCdsItalyVer1.xsd:CommitOutcomeReply, F2LCdsItalyVer1.xsd:CommitOutcomeSend, F2LCdsItalyVer1.xsd:GetConfigDataJackpotBonusEnabledReply, F2LCdsItalyVer1.xsd:GetConfigDataJackpotBonusEnabledSend, F2LCdsItalyVer1.xsd:GetConfigDataTaxInfoReply, F2LCdsItalyVer1.xsd:GetConfigDataTaxInfoSend, F2LCdsItalyVer1.xsd:GetEnrollmentResponseDataReply, F2LCdsItalyVer1.xsd:GetEnrollmentResponseDataSend, F2LCdsItalyVer1.xsd:GetJackpotBonusAwardReply, F2LCdsItalyVer1.xsd:GetJackpotBonusAwardSend, F2LCdsItalyVer1.xsd:GetOutcomeResponseReply, F2LCdsItalyVer1.xsd:GetOutcomeResponseSend, F2LCdsItalyVer1.xsd:GetTaxableWinInfoReply, F2LCdsItalyVer1.xsd:GetTaxableWinInfoSend, F2LCdsItalyVer1.xsd:OutcomeRequestReply, F2LCdsItalyVer1.xsd:OutcomeRequestSend, F2LCdsItalyVer1.xsd:OutcomeResponseReply, F2LCdsItalyVer1.xsd:OutcomeResponseSend, F2LCdsItalyVer1.xsd:SetEnrollmentRequestDataReply, F2LCdsItalyVer1.xsd:SetEnrollmentRequestDataSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:AwardMismatchDetectedReply, F2LCdsItalyVer1.xsd:AwardMismatchDetectedSend, F2LCdsItalyVer1.xsd:CommitOutcomeReply, F2LCdsItalyVer1.xsd:CommitOutcomeSend, F2LCdsItalyVer1.xsd:GetConfigDataJackpotBonusEnabledReply, F2LCdsItalyVer1.xsd:GetConfigDataJackpotBonusEnabledSend, F2LCdsItalyVer1.xsd:GetConfigDataTaxInfoReply, F2LCdsItalyVer1.xsd:GetConfigDataTaxInfoSend, F2LCdsItalyVer1.xsd:GetEnrollmentResponseDataReply, F2LCdsItalyVer1.xsd:GetEnrollmentResponseDataSend, F2LCdsItalyVer1.xsd:GetJackpotBonusAwardReply, F2LCdsItalyVer1.xsd:GetJackpotBonusAwardSend, F2LCdsItalyVer1.xsd:GetOutcomeResponseReply, F2LCdsItalyVer1.xsd:GetOutcomeResponseSend, F2LCdsItalyVer1.xsd:GetTaxableWinInfoReply, F2LCdsItalyVer1.xsd:GetTaxableWinInfoSend, F2LCdsItalyVer1.xsd:OutcomeRequestReply, F2LCdsItalyVer1.xsd:OutcomeRequestSend, F2LCdsItalyVer1.xsd:OutcomeResponseReply, F2LCdsItalyVer1.xsd:OutcomeResponseSend, F2LCdsItalyVer1.xsd:SetEnrollmentRequestDataReply, F2LCdsItalyVer1.xsd:SetEnrollmentRequestDataSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations39, ref readerCount39);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataSend Read362_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataSend();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations40 = 0;
            int readerCount40 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id126_WagerAmount && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@WagerAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id127_WagerCatIndex && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@WagerCatIndex = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id128_GameRequestData && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@GameRequestData = ToByteArrayBase64(false);
                        }
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:WagerAmount, F2LCdsItalyVer1.xsd:WagerCatIndex, F2LCdsItalyVer1.xsd:GameRequestData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:WagerAmount, F2LCdsItalyVer1.xsd:WagerCatIndex, F2LCdsItalyVer1.xsd:GameRequestData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations40, ref readerCount40);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataReply Read361_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalySetEnrollmentRequestDataReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations41 = 0;
            int readerCount41 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations41, ref readerCount41);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseSend Read360_CdsItalyOutcomeResponseSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations42 = 0;
            int readerCount42 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id96_OutcomeGenerated && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@OutcomeGenerated = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:OutcomeGenerated");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:OutcomeGenerated");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations42, ref readerCount42);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseReply Read359_CdsItalyOutcomeResponseReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeResponseReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations43 = 0;
            int readerCount43 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations43, ref readerCount43);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestSend Read358_CdsItalyOutcomeRequestSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestSend();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations44 = 0;
            int readerCount44 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id126_WagerAmount && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@WagerAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id127_WagerCatIndex && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@WagerCatIndex = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id129_OutcomeRequestData && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@OutcomeRequestData = ToByteArrayBase64(false);
                        }
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:WagerAmount, F2LCdsItalyVer1.xsd:WagerCatIndex, F2LCdsItalyVer1.xsd:OutcomeRequestData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:WagerAmount, F2LCdsItalyVer1.xsd:WagerCatIndex, F2LCdsItalyVer1.xsd:OutcomeRequestData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations44, ref readerCount44);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestReply Read357_CdsItalyOutcomeRequestReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyOutcomeRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations45 = 0;
            int readerCount45 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations45, ref readerCount45);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoSend Read356_CdsItalyGetTaxableWinInfoSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations46 = 0;
            int readerCount46 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id130_TotalWinAmount && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@TotalWinAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:TotalWinAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:TotalWinAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations46, ref readerCount46);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoReply Read355_CdsItalyGetTaxableWinInfoReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetTaxableWinInfoReply();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations47 = 0;
            int readerCount47 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id131_NetWinAmount && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@NetWinAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id132_TaxAmount && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@TaxAmount = Read40_AmountType(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:NetWinAmount, F2LCdsItalyVer1.xsd:TaxAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:NetWinAmount, F2LCdsItalyVer1.xsd:TaxAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations47, ref readerCount47);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseSend Read354_CdsItalyGetOutcomeResponseSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations48 = 0;
            int readerCount48 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations48, ref readerCount48);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseReply Read353_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetOutcomeResponseReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations49 = 0;
            int readerCount49 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id97_OutcomeResponseData && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@OutcomeResponseData = ToByteArrayBase64(false);
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:OutcomeResponseData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:OutcomeResponseData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations49, ref readerCount49);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardSend Read352_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations50 = 0;
            int readerCount50 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations50, ref readerCount50);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardReply Read351_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetJackpotBonusAwardReply();
            bool[] paramsRead = new bool[5];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations51 = 0;
            int readerCount51 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id100_JackpotHit && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@JackpotHit = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id101_JackpotLevel && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@JackpotLevel = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id133_BonusIdentifier && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@BonusIdentifier = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());
                        }
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id102_BonusAmount && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@BonusAmount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:JackpotHit, F2LCdsItalyVer1.xsd:JackpotLevel, F2LCdsItalyVer1.xsd:BonusIdentifier, F2LCdsItalyVer1.xsd:BonusAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:JackpotHit, F2LCdsItalyVer1.xsd:JackpotLevel, F2LCdsItalyVer1.xsd:BonusIdentifier, F2LCdsItalyVer1.xsd:BonusAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations51, ref readerCount51);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataSend Read350_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations52 = 0;
            int readerCount52 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations52, ref readerCount52);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataReply Read349_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetEnrollmentResponseDataReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations53 = 0;
            int readerCount53 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id134_GameResponseData && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@GameResponseData = ToByteArrayBase64(false);
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:GameResponseData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:GameResponseData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations53, ref readerCount53);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoSend Read348_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations54 = 0;
            int readerCount54 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations54, ref readerCount54);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoReply Read347_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataTaxInfoReply();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations55 = 0;
            int readerCount55 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id135_TaxLimit && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@TaxLimit = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id136_TaxPercentage && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TaxPercentage = System.Xml.XmlConvert.ToDecimal(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:TaxLimit, F2LCdsItalyVer1.xsd:TaxPercentage");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:TaxLimit, F2LCdsItalyVer1.xsd:TaxPercentage");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations55, ref readerCount55);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledSend Read346_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations56 = 0;
            int readerCount56 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations56, ref readerCount56);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledReply Read345_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyGetConfigDataJackpotBonusEnabledReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations57 = 0;
            int readerCount57 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id137_BonusEnabled && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@BonusEnabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:BonusEnabled");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply, F2LCdsItalyVer1.xsd:BonusEnabled");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations57, ref readerCount57);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeSend Read344_CdsItalyCommitOutcomeSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeSend();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations58 = 0;
            int readerCount58 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id138_CommitType && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@CommitType = Read343_OutcomeCommitType(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id139_PendingPreTaxWin && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@PendingPreTaxWin = Read40_AmountType(false, true);
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id140_CommitRequestData && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@CommitRequestData = ToByteArrayBase64(false);
                        }
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:CommitType, F2LCdsItalyVer1.xsd:PendingPreTaxWin, F2LCdsItalyVer1.xsd:CommitRequestData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:CommitType, F2LCdsItalyVer1.xsd:PendingPreTaxWin, F2LCdsItalyVer1.xsd:CommitRequestData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations58, ref readerCount58);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType Read343_OutcomeCommitType(string s) {
            switch (s) {
                case @"CommitAward": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType.@CommitAward;
                case @"InterimCommit": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType.@InterimCommit;
                case @"GetOutcomeFailure": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType.@GetOutcomeFailure;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeCommitType));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeReply Read342_CdsItalyCommitOutcomeReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyCommitOutcomeReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations59 = 0;
            int readerCount59 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations59, ref readerCount59);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedSend Read341_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations60 = 0;
            int readerCount60 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id141_LogMessage && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        {
                            o.@LogMessage = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:LogMessage");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:TransactionID, F2LCdsItalyVer1.xsd:LogMessage");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations60, ref readerCount60);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedReply Read340_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_F2LCdsItalyVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyAwardMismatchDetectedReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations61 = 0;
            int readerCount61 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id24_F2LCdsItalyVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LCdsItalyVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations61, ref readerCount61);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding Read339_ProtocolIPPForwarding(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations62 = 0;
            int readerCount62 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Message = Read338_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:Version, F2LProtocolIPPForwardingVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:Version, F2LProtocolIPPForwardingVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations62, ref readerCount62);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingMessageType Read338_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id142_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations63 = 0;
            int readerCount63 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id143_TransportBinDataToIPPHostReply && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Item = Read334_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id144_TransportBinDataToIPPHostSend && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Item = Read335_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_TransportIPPHostDataToBinReply && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Item = Read336_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id146_TransportIPPHostDataToBinSend && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Item = Read337_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:TransportBinDataToIPPHostReply, F2LProtocolIPPForwardingVer1.xsd:TransportBinDataToIPPHostSend, F2LProtocolIPPForwardingVer1.xsd:TransportIPPHostDataToBinReply, F2LProtocolIPPForwardingVer1.xsd:TransportIPPHostDataToBinSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:TransportBinDataToIPPHostReply, F2LProtocolIPPForwardingVer1.xsd:TransportBinDataToIPPHostSend, F2LProtocolIPPForwardingVer1.xsd:TransportIPPHostDataToBinReply, F2LProtocolIPPForwardingVer1.xsd:TransportIPPHostDataToBinSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations63, ref readerCount63);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinSend Read337_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations64 = 0;
            int readerCount64 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id41_BinaryData && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        {
                            o.@BinaryData = ToByteArrayBase64(false);
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:BinaryData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:BinaryData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations64, ref readerCount64);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinReply Read336_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportIPPHostDataToBinReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations65 = 0;
            int readerCount65 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations65, ref readerCount65);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostSend Read335_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations66 = 0;
            int readerCount66 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id41_BinaryData && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        {
                            o.@BinaryData = ToByteArrayBase64(false);
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:BinaryData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:BinaryData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations66, ref readerCount66);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostReply Read334_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_Item)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwardingTransportBinDataToIPPHostReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations67 = 0;
            int readerCount67 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id22_Item)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LProtocolIPPForwardingVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations67, ref readerCount67);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint Read333_VoucherPrint(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_F2LVoucherPrintVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations68 = 0;
            int readerCount68 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        o.@Message = Read332_VoucherPrintMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:Version, F2LVoucherPrintVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:Version, F2LVoucherPrintVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations68, ref readerCount68);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintMessageType Read332_VoucherPrintMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id147_VoucherPrintMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_F2LVoucherPrintVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations69 = 0;
            int readerCount69 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id148_PrintNotificationReply && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        o.@Item = Read329_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id149_PrintNotificationSend && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        o.@Item = Read331_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:PrintNotificationReply, F2LVoucherPrintVer1.xsd:PrintNotificationSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:PrintNotificationReply, F2LVoucherPrintVer1.xsd:PrintNotificationSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations69, ref readerCount69);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationSend Read331_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_F2LVoucherPrintVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations70 = 0;
            int readerCount70 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id150_Notification && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        {
                            o.@Notification = Read330_VoucherPrintEvent(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id54_Value && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        o.@Value = Read40_AmountType(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:TransactionID, F2LVoucherPrintVer1.xsd:Notification, F2LVoucherPrintVer1.xsd:Value");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:TransactionID, F2LVoucherPrintVer1.xsd:Notification, F2LVoucherPrintVer1.xsd:Value");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations70, ref readerCount70);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent Read330_VoucherPrintEvent(string s) {
            switch (s) {
                case @"VoucherPrintingInitiated": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherPrintingInitiated;
                case @"VoucherPrintingComplete": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherPrintingComplete;
                case @"VoucherAwaitingRemoval": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherAwaitingRemoval;
                case @"VoucherRemoved": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent.@VoucherRemoved;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintEvent));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationReply Read329_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_F2LVoucherPrintVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrintPrintNotificationReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations71 = 0;
            int readerCount71 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id20_F2LVoucherPrintVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LVoucherPrintVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations71, ref readerCount71);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking Read328_GameContextLocking(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_F2LGameContextLockingVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations72 = 0;
            int readerCount72 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Message = Read327_GameContextLockingMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:Version, F2LGameContextLockingVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:Version, F2LGameContextLockingVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations72, ref readerCount72);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingMessageType Read327_GameContextLockingMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id151_GameContextLockingMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_F2LGameContextLockingVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations73 = 0;
            int readerCount73 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id152_GetGameContextLockStatusReply && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Item = Read323_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id153_GetGameContextLockStatusSend && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Item = Read324_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id154_SetGameContextLockReply && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Item = Read325_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id155_SetGameContextLockSend && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Item = Read326_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:GetGameContextLockStatusReply, F2LGameContextLockingVer1.xsd:GetGameContextLockStatusSend, F2LGameContextLockingVer1.xsd:SetGameContextLockReply, F2LGameContextLockingVer1.xsd:SetGameContextLockSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:GetGameContextLockStatusReply, F2LGameContextLockingVer1.xsd:GetGameContextLockStatusSend, F2LGameContextLockingVer1.xsd:SetGameContextLockReply, F2LGameContextLockingVer1.xsd:SetGameContextLockSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations73, ref readerCount73);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockSend Read326_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_F2LGameContextLockingVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations74 = 0;
            int readerCount74 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id156_Locked && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        {
                            o.@Locked = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:TransactionID, F2LGameContextLockingVer1.xsd:Locked");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:TransactionID, F2LGameContextLockingVer1.xsd:Locked");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations74, ref readerCount74);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockReply Read325_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_F2LGameContextLockingVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingSetGameContextLockReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations75 = 0;
            int readerCount75 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id157_Success && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        {
                            o.@Success = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:Reply, F2LGameContextLockingVer1.xsd:Success");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:Reply, F2LGameContextLockingVer1.xsd:Success");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations75, ref readerCount75);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusSend Read324_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_F2LGameContextLockingVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations76 = 0;
            int readerCount76 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations76, ref readerCount76);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusReply Read323_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_F2LGameContextLockingVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLockingGetGameContextLockStatusReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations77 = 0;
            int readerCount77 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id156_Locked && (object) Reader.NamespaceURI == (object)id18_F2LGameContextLockingVer1xsd)) {
                        {
                            o.@Locked = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:Reply, F2LGameContextLockingVer1.xsd:Locked");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameContextLockingVer1.xsd:Reply, F2LGameContextLockingVer1.xsd:Locked");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations77, ref readerCount77);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay Read322_AutoPlay(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations78 = 0;
            int readerCount78 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Message = Read321_AutoPlayMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:Version, F2LAutoPlayVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:Version, F2LAutoPlayVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations78, ref readerCount78);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayMessageType Read321_AutoPlayMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id158_AutoPlayMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations79 = 0;
            int readerCount79 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id159_AutoPlayOffReply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read305_AutoPlayAutoPlayOffReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id160_AutoPlayOffSend && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read306_AutoPlayAutoPlayOffSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_AutoPlayOnRequestReply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read307_AutoPlayAutoPlayOnRequestReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id162_AutoPlayOnRequestSend && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read308_AutoPlayAutoPlayOnRequestSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id163_Item && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read309_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id164_Item && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read310_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id165_Item && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read311_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id166_Item && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read312_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id167_Item && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read313_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id168_Item && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read314_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id169_IsAutoPlayOnReply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read315_AutoPlayIsAutoPlayOnReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id170_IsAutoPlayOnSend && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read316_AutoPlayIsAutoPlayOnSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id171_SetAutoPlayOffReply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read317_AutoPlaySetAutoPlayOffReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id172_SetAutoPlayOffSend && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read318_AutoPlaySetAutoPlayOffSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id173_SetAutoPlayOnRequestReply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read319_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id174_SetAutoPlayOnRequestSend && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Item = Read320_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayOffReply, F2LAutoPlayVer1.xsd:AutoPlayOffSend, F2LAutoPlayVer1.xsd:AutoPlayOnRequestReply, F2LAutoPlayVer1.xsd:AutoPlayOnRequestSend, F2LAutoPlayVer1.xsd:GetConfigDataAutoPlaySpeedIncreaseAllowedReply, F2LAutoPlayVer1.xsd:GetConfigDataAutoPlaySpeedIncreaseAllowedSend, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayConfirmationRequiredReply, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayConfirmationRequiredSend, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayEnabledReply, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayEnabledSend, F2LAutoPlayVer1.xsd:IsAutoPlayOnReply, F2LAutoPlayVer1.xsd:IsAutoPlayOnSend, F2LAutoPlayVer1.xsd:SetAutoPlayOffReply, F2LAutoPlayVer1.xsd:SetAutoPlayOffSend, F2LAutoPlayVer1.xsd:SetAutoPlayOnRequestReply, F2LAutoPlayVer1.xsd:SetAutoPlayOnRequestSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayOffReply, F2LAutoPlayVer1.xsd:AutoPlayOffSend, F2LAutoPlayVer1.xsd:AutoPlayOnRequestReply, F2LAutoPlayVer1.xsd:AutoPlayOnRequestSend, F2LAutoPlayVer1.xsd:GetConfigDataAutoPlaySpeedIncreaseAllowedReply, F2LAutoPlayVer1.xsd:GetConfigDataAutoPlaySpeedIncreaseAllowedSend, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayConfirmationRequiredReply, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayConfirmationRequiredSend, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayEnabledReply, F2LAutoPlayVer1.xsd:GetConfigDataPlayerAutoPlayEnabledSend, F2LAutoPlayVer1.xsd:IsAutoPlayOnReply, F2LAutoPlayVer1.xsd:IsAutoPlayOnSend, F2LAutoPlayVer1.xsd:SetAutoPlayOffReply, F2LAutoPlayVer1.xsd:SetAutoPlayOffSend, F2LAutoPlayVer1.xsd:SetAutoPlayOnRequestReply, F2LAutoPlayVer1.xsd:SetAutoPlayOnRequestSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations79, ref readerCount79);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestSend Read320_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations80 = 0;
            int readerCount80 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations80, ref readerCount80);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestReply Read319_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOnRequestReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations81 = 0;
            int readerCount81 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id175_SetSuccessful && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@SetSuccessful = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:SetSuccessful, F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:SetSuccessful, F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations81, ref readerCount81);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffSend Read318_AutoPlaySetAutoPlayOffSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations82 = 0;
            int readerCount82 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations82, ref readerCount82);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffReply Read317_AutoPlaySetAutoPlayOffReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlaySetAutoPlayOffReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations83 = 0;
            int readerCount83 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations83, ref readerCount83);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnSend Read316_AutoPlayIsAutoPlayOnSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations84 = 0;
            int readerCount84 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations84, ref readerCount84);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnReply Read315_AutoPlayIsAutoPlayOnReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayIsAutoPlayOnReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations85 = 0;
            int readerCount85 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id176_AutoPlayOn && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@AutoPlayOn = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayOn, F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayOn, F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations85, ref readerCount85);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledSend Read314_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations86 = 0;
            int readerCount86 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations86, ref readerCount86);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledReply Read313_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayEnabledReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations87 = 0;
            int readerCount87 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id177_AutoPlayEnabled && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@AutoPlayEnabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayEnabled, F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayEnabled, F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations87, ref readerCount87);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend Read312_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations88 = 0;
            int readerCount88 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations88, ref readerCount88);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply Read311_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations89 = 0;
            int readerCount89 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id178_AutoPlayConfirmationRequired && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@AutoPlayConfirmationRequired = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayConfirmationRequired, F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayConfirmationRequired, F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations89, ref readerCount89);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend Read310_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations90 = 0;
            int readerCount90 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations90, ref readerCount90);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply Read309_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations91 = 0;
            int readerCount91 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id179_AutoPlaySpeedIncreaseAllowed && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@AutoPlaySpeedIncreaseAllowed = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlaySpeedIncreaseAllowed, F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlaySpeedIncreaseAllowed, F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations91, ref readerCount91);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestSend Read308_AutoPlayAutoPlayOnRequestSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations92 = 0;
            int readerCount92 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations92, ref readerCount92);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestReply Read307_AutoPlayAutoPlayOnRequestReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOnRequestReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations93 = 0;
            int readerCount93 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id180_AutoPlayOnRequestSuccessful && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@AutoPlayOnRequestSuccessful = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayOnRequestSuccessful, F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:AutoPlayOnRequestSuccessful, F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations93, ref readerCount93);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffSend Read306_AutoPlayAutoPlayOffSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations94 = 0;
            int readerCount94 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations94, ref readerCount94);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffReply Read305_AutoPlayAutoPlayOffReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_F2LAutoPlayVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlayAutoPlayOffReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations95 = 0;
            int readerCount95 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id16_F2LAutoPlayVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LAutoPlayVer1.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations95, ref readerCount95);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt Read304_GameTilt(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_F2LGameTiltVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations96 = 0;
            int readerCount96 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Message = Read303_GameTiltMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Version, F2LGameTiltVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Version, F2LGameTiltVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations96, ref readerCount96);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltMessageType Read303_GameTiltMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id181_GameTiltMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_F2LGameTiltVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations97 = 0;
            int readerCount97 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id182_RequestClearTiltReply && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Item = Read298_GameTiltRequestClearTiltReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id183_RequestClearTiltSend && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Item = Read299_GameTiltRequestClearTiltSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id184_RequestTiltReply && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Item = Read300_GameTiltRequestTiltReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id185_RequestTiltSend && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Item = Read302_GameTiltRequestTiltSend(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameTiltVer1.xsd:RequestClearTiltReply, F2LGameTiltVer1.xsd:RequestClearTiltSend, F2LGameTiltVer1.xsd:RequestTiltReply, F2LGameTiltVer1.xsd:RequestTiltSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:RequestClearTiltReply, F2LGameTiltVer1.xsd:RequestClearTiltSend, F2LGameTiltVer1.xsd:RequestTiltReply, F2LGameTiltVer1.xsd:RequestTiltSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations97, ref readerCount97);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltSend Read302_GameTiltRequestTiltSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_F2LGameTiltVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltSend();
            if ((object)(o.@TiltLocalizations) == null) o.@TiltLocalizations = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization> a_2 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization>)o.@TiltLocalizations;
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations98 = 0;
            int readerCount98 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id186_TiltName && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@TiltName = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id187_TiltLocalizations && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        if (!ReadNull()) {
                            if ((object)(o.@TiltLocalizations) == null) o.@TiltLocalizations = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization>();
                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization> a_2_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization>)o.@TiltLocalizations;
                            if ((Reader.IsEmptyElement)) {
                                Reader.Skip();
                            }
                            else {
                                Reader.ReadStartElement();
                                Reader.MoveToContent();
                                int whileIterations99 = 0;
                                int readerCount99 = ReaderCount;
                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                                        if (((object) Reader.LocalName == (object)id188_TiltLocalization && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                                            if ((object)(a_2_0) == null) Reader.Skip(); else a_2_0.Add(Read301_TiltLocalization(false, true));
                                        }
                                        else {
                                            UnknownNode(null, @"F2LGameTiltVer1.xsd:TiltLocalization");
                                        }
                                    }
                                    else {
                                        UnknownNode(null, @"F2LGameTiltVer1.xsd:TiltLocalization");
                                    }
                                    Reader.MoveToContent();
                                    CheckReaderCount(ref whileIterations99, ref readerCount99);
                                }
                            ReadEndElement();
                            }
                        }
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id189_TiltAttributes && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@TiltAttributes = Reader.ReadElementString();
                        }
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameTiltVer1.xsd:TransactionID, F2LGameTiltVer1.xsd:TiltName, F2LGameTiltVer1.xsd:TiltLocalizations, F2LGameTiltVer1.xsd:TiltAttributes");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:TransactionID, F2LGameTiltVer1.xsd:TiltName, F2LGameTiltVer1.xsd:TiltLocalizations, F2LGameTiltVer1.xsd:TiltAttributes");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations98, ref readerCount98);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization Read301_TiltLocalization(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id188_TiltLocalization && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_F2LGameTiltVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.TiltLocalization();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id74_Culture && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                    o.@Culture = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Culture");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations100 = 0;
            int readerCount100 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id190_Title && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@Title = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@Message = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Title, F2LGameTiltVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Title, F2LGameTiltVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations100, ref readerCount100);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltReply Read300_GameTiltRequestTiltReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_F2LGameTiltVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestTiltReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations101 = 0;
            int readerCount101 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id191_RequestTiltSuccess && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@RequestTiltSuccess = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Reply, F2LGameTiltVer1.xsd:RequestTiltSuccess");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Reply, F2LGameTiltVer1.xsd:RequestTiltSuccess");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations101, ref readerCount101);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltSend Read299_GameTiltRequestClearTiltSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_F2LGameTiltVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations102 = 0;
            int readerCount102 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id186_TiltName && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@TiltName = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameTiltVer1.xsd:TransactionID, F2LGameTiltVer1.xsd:TiltName");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:TransactionID, F2LGameTiltVer1.xsd:TiltName");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations102, ref readerCount102);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltReply Read298_GameTiltRequestClearTiltReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_F2LGameTiltVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTiltRequestClearTiltReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations103 = 0;
            int readerCount103 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id192_RequestClearTiltSuccess && (object) Reader.NamespaceURI == (object)id14_F2LGameTiltVer1xsd)) {
                        {
                            o.@RequestClearTiltSuccess = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Reply, F2LGameTiltVer1.xsd:RequestClearTiltSuccess");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameTiltVer1.xsd:Reply, F2LGameTiltVer1.xsd:RequestClearTiltSuccess");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations103, ref readerCount103);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification Read297_Identification(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations104 = 0;
            int readerCount104 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Message = Read296_IdentificationMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Version, F2LIdentificationVer1.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Version, F2LIdentificationVer1.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations104, ref readerCount104);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationMessageType Read296_IdentificationMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id193_IdentificationMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations105 = 0;
            int readerCount105 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id194_Item && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Item = Read290_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id195_Item && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Item = Read291_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id196_Item && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Item = Read292_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id197_Item && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Item = Read293_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id198_Item && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Item = Read294_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id199_Item && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Item = Read295_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:GetConfigDataG2SEGMIdentifierReply, F2LIdentificationVer1.xsd:GetConfigDataG2SEGMIdentifierSend, F2LIdentificationVer1.xsd:GetConfigDataG2SThemeIdentifierReply, F2LIdentificationVer1.xsd:GetConfigDataG2SThemeIdentifierSend, F2LIdentificationVer1.xsd:GetConfigDataMachineSerialNumberReply, F2LIdentificationVer1.xsd:GetConfigDataMachineSerialNumberSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:GetConfigDataG2SEGMIdentifierReply, F2LIdentificationVer1.xsd:GetConfigDataG2SEGMIdentifierSend, F2LIdentificationVer1.xsd:GetConfigDataG2SThemeIdentifierReply, F2LIdentificationVer1.xsd:GetConfigDataG2SThemeIdentifierSend, F2LIdentificationVer1.xsd:GetConfigDataMachineSerialNumberReply, F2LIdentificationVer1.xsd:GetConfigDataMachineSerialNumberSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations105, ref readerCount105);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberSend Read295_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations106 = 0;
            int readerCount106 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations106, ref readerCount106);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberReply Read294_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataMachineSerialNumberReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations107 = 0;
            int readerCount107 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id200_SerialNumber && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        {
                            o.@SerialNumber = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Reply, F2LIdentificationVer1.xsd:SerialNumber");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Reply, F2LIdentificationVer1.xsd:SerialNumber");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations107, ref readerCount107);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierSend Read293_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations108 = 0;
            int readerCount108 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations108, ref readerCount108);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierReply Read292_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SThemeIdentifierReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations109 = 0;
            int readerCount109 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id201_G2SThemeIdentifier && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        {
                            o.@G2SThemeIdentifier = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Reply, F2LIdentificationVer1.xsd:G2SThemeIdentifier");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Reply, F2LIdentificationVer1.xsd:G2SThemeIdentifier");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations109, ref readerCount109);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierSend Read291_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations110 = 0;
            int readerCount110 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations110, ref readerCount110);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierReply Read290_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_F2LIdentificationVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.IdentificationGetConfigDataG2SEGMIdentifierReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations111 = 0;
            int readerCount111 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id202_G2SEGMIdentifier && (object) Reader.NamespaceURI == (object)id12_F2LIdentificationVer1xsd)) {
                        {
                            o.@G2SEGMIdentifier = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Reply, F2LIdentificationVer1.xsd:G2SEGMIdentifier");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LIdentificationVer1.xsd:Reply, F2LIdentificationVer1.xsd:G2SEGMIdentifier");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations111, ref readerCount111);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport Read289_GameStopReport(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_F2LGameStopReportVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations112 = 0;
            int readerCount112 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Message = Read288_GameStopReportMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Version, F2LGameStopReportVer2.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Version, F2LGameStopReportVer2.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations112, ref readerCount112);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportMessageType Read288_GameStopReportMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id203_GameStopReportMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_F2LGameStopReportVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations113 = 0;
            int readerCount113 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id204_ReportPokerHandReply && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Item = Read283_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id205_ReportPokerHandSend && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Item = Read285_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id206_ReportReelStopsReply && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Item = Read286_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id207_ReportReelStopsSend && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Item = Read287_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:ReportPokerHandReply, F2LGameStopReportVer2.xsd:ReportPokerHandSend, F2LGameStopReportVer2.xsd:ReportReelStopsReply, F2LGameStopReportVer2.xsd:ReportReelStopsSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:ReportPokerHandReply, F2LGameStopReportVer2.xsd:ReportPokerHandSend, F2LGameStopReportVer2.xsd:ReportReelStopsReply, F2LGameStopReportVer2.xsd:ReportReelStopsSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations113, ref readerCount113);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsSend Read287_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_F2LGameStopReportVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsSend();
            if ((object)(o.@ReelStop) == null) o.@ReelStop = new global::System.Collections.Generic.List<global::System.UInt32>();
            global::System.Collections.Generic.List<global::System.UInt32> a_1 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@ReelStop;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations114 = 0;
            int readerCount114 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id208_ReelStop && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        {
                            a_1.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:TransactionID, F2LGameStopReportVer2.xsd:ReelStop");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:TransactionID, F2LGameStopReportVer2.xsd:ReelStop");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations114, ref readerCount114);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsReply Read286_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_F2LGameStopReportVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportReelStopsReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations115 = 0;
            int readerCount115 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations115, ref readerCount115);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandSend Read285_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_F2LGameStopReportVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandSend();
            if ((object)(o.@Card) == null) o.@Card = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard> a_2 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard>)o.@Card;
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations116 = 0;
            int readerCount116 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id209_HandStatus && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        {
                            o.@HandStatus = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id210_Card && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        if ((object)(a_2) == null) Reader.Skip(); else a_2.Add(Read284_PokerCard(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:TransactionID, F2LGameStopReportVer2.xsd:HandStatus, F2LGameStopReportVer2.xsd:Card");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:TransactionID, F2LGameStopReportVer2.xsd:HandStatus, F2LGameStopReportVer2.xsd:Card");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations116, ref readerCount116);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard Read284_PokerCard(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id211_PokerCard && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_F2LGameStopReportVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PokerCard();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations117 = 0;
            int readerCount117 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id54_Value && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        {
                            o.@Value = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id212_Held && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        {
                            o.@Held = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Value, F2LGameStopReportVer2.xsd:Held");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Value, F2LGameStopReportVer2.xsd:Held");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations117, ref readerCount117);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandReply Read283_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_F2LGameStopReportVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReportReportPokerHandReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations118 = 0;
            int readerCount118 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id10_F2LGameStopReportVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameStopReportVer2.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations118, ref readerCount118);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo Read282_ShowDemo(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_F2LShowDemoVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations119 = 0;
            int readerCount119 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Message = Read281_ShowDemoMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LShowDemoVer2.xsd:Version, F2LShowDemoVer2.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LShowDemoVer2.xsd:Version, F2LShowDemoVer2.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations119, ref readerCount119);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoMessageType Read281_ShowDemoMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id213_ShowDemoMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_F2LShowDemoVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations120 = 0;
            int readerCount120 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id214_AddMoneyReply && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Item = Read276_ShowDemoAddMoneyReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id215_AddMoneySend && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Item = Read277_ShowDemoAddMoneySend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id216_GetShowEnvironmentReply && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Item = Read279_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id217_GetShowEnvironmentSend && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Item = Read280_ShowDemoGetShowEnvironmentSend(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LShowDemoVer2.xsd:AddMoneyReply, F2LShowDemoVer2.xsd:AddMoneySend, F2LShowDemoVer2.xsd:GetShowEnvironmentReply, F2LShowDemoVer2.xsd:GetShowEnvironmentSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LShowDemoVer2.xsd:AddMoneyReply, F2LShowDemoVer2.xsd:AddMoneySend, F2LShowDemoVer2.xsd:GetShowEnvironmentReply, F2LShowDemoVer2.xsd:GetShowEnvironmentSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations120, ref readerCount120);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentSend Read280_ShowDemoGetShowEnvironmentSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_F2LShowDemoVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations121 = 0;
            int readerCount121 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LShowDemoVer2.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LShowDemoVer2.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations121, ref readerCount121);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentReply Read279_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_F2LShowDemoVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoGetShowEnvironmentReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations122 = 0;
            int readerCount122 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id218_ShowEnvironment && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        {
                            o.@ShowEnvironment = Read278_ShowEnvironment(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LShowDemoVer2.xsd:ShowEnvironment, F2LShowDemoVer2.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LShowDemoVer2.xsd:ShowEnvironment, F2LShowDemoVer2.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations122, ref readerCount122);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment Read278_ShowEnvironment(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment.@Invalid;
                case @"Development": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment.@Development;
                case @"Show": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment.@Show;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowEnvironment));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneySend Read277_ShowDemoAddMoneySend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_F2LShowDemoVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneySend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneySend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations123 = 0;
            int readerCount123 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id51_Amount && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Amount = Read40_AmountType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LShowDemoVer2.xsd:Amount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LShowDemoVer2.xsd:Amount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations123, ref readerCount123);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneyReply Read276_ShowDemoAddMoneyReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_F2LShowDemoVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneyReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemoAddMoneyReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations124 = 0;
            int readerCount124 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id8_F2LShowDemoVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LShowDemoVer2.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LShowDemoVer2.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations124, ref readerCount124);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl Read275_GameControl(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations125 = 0;
            int readerCount125 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Message = Read274_GameControlMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Version, F2LGameControlVer4.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Version, F2LGameControlVer4.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations125, ref readerCount125);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMessageType Read274_GameControlMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id219_GameControlMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations126 = 0;
            int readerCount126 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id220_ActionRequestReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read30_GameControlActionRequestReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id221_ActionRequestSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read31_GameControlActionRequestSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id222_ActionResponseReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read32_GameControlActionResponseReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id223_ActionResponseSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read33_GameControlActionResponseSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id224_ActivateThemeContextReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read34_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id225_ActivateThemeContextSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read35_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id226_BankStatusChangedReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read36_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id227_BankStatusChangedSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read38_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id228_CanBetNextGameCycleReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read39_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_CanBetNextGameCycleSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read41_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id230_CanCommitBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read42_GameControlCanCommitBetReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id231_CanCommitBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read43_GameControlCanCommitBetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id232_CanCommitBetsReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read44_GameControlCanCommitBetsReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id233_CanCommitBetsSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read45_GameControlCanCommitBetsSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id234_CanCommitGameCycleReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read46_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id235_CanCommitGameCycleSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read47_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id236_CanPlaceBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read48_GameControlCanPlaceBetReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id237_CanPlaceBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read49_GameControlCanPlaceBetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id238_CanStartPlayingReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read50_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id239_CanStartPlayingSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read51_GameControlCanStartPlayingSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id240_CommitBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read52_GameControlCommitBetReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id241_CommitBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read53_GameControlCommitBetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id242_CommitGameCycleReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read54_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id243_CommitGameCycleSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read55_GameControlCommitGameCycleSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id244_CultureChangedReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read56_GameControlCultureChangedReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id245_CultureChangedSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read57_GameControlCultureChangedSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id246_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read58_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id247_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read59_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id248_DenominationChangeRequestReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read60_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id249_DenominationChangeRequestSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read61_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id250_DisableAncillaryGameOfferReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read62_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id251_DisableAncillaryGameOfferSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read63_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id252_EndGameCycleReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read64_GameControlEndGameCycleReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id253_EndGameCycleSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read65_GameControlEndGameCycleSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id254_EnrollGameCycleReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read66_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id255_EnrollGameCycleSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read67_GameControlEnrollGameCycleSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id256_EnrollResponseReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read68_GameControlEnrollResponseReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id257_EnrollResponseSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read69_GameControlEnrollResponseSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id258_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read70_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id259_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read89_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id260_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read90_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id261_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read91_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id262_EvalLastOutcomeRequestReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read92_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id263_EvalLastOutcomeRequestSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read95_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id264_EvalOutcomeRequestReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read96_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id265_EvalOutcomeRequestSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read97_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id266_EvalOutcomeResponseReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read98_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id267_EvalOutcomeResponseSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read99_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id268_FinalizeAwardRequestReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read100_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id269_FinalizeAwardRequestSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read101_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id270_FinalizeAwardResponseReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read102_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id271_FinalizeAwardResponseSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read103_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id272_GetAvailableCulturesReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read104_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id273_GetAvailableCulturesSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read105_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id274_GetCommittedBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read106_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id275_GetCommittedBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read107_GameControlGetCommittedBetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id276_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read108_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id277_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read109_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id278_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read110_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id279_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read111_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id280_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read112_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id281_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read113_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id282_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read114_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id283_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read115_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id284_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read116_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id285_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read117_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id286_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read119_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id287_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read120_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id288_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read121_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id289_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read122_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id290_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read124_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id291_GetConfigDataLineSelectionSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read125_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id292_GetConfigDataMaxBetAmountReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read126_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id293_GetConfigDataMaxBetAmountSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read127_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id294_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read129_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id295_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read130_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id296_GetConfigDataMinBetAmountReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read131_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id297_GetConfigDataMinBetAmountSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read132_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id298_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read133_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id299_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read134_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id300_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read135_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id301_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read136_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id302_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read137_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id303_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read138_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id304_GetConfigDataWinCapAmountReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read139_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id305_GetConfigDataWinCapAmountSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read140_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id306_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read142_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id307_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read143_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id308_GetCreditFormatterInfoReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read145_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id309_GetCreditFormatterInfoSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read146_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id310_GetCultureReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read147_GameControlGetCultureReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id311_GetCultureSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read148_GameControlGetCultureSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id312_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read150_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id313_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read152_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id314_GetCustomConfigItemReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read162_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id315_GetCustomConfigItemSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read164_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id316_GetCustomConfigItemTypeReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read165_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id317_GetCustomConfigItemTypeSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read166_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id318_GetCustomConfigItemTypesReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read168_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id319_GetCustomConfigItemTypesSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read169_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id320_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read171_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id321_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read173_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id322_GetPlayerMetersReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read175_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id323_GetPlayerMetersSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read176_GameControlGetPlayerMetersSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id324_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read179_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id325_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read180_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id326_GetRandomNumbersReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read182_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id327_GetRandomNumbersSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read184_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id328_InactivateThemeContextReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read185_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id329_InactivateThemeContextSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read186_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id330_IsBankLockedReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read187_GameControlIsBankLockedReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id331_IsBankLockedSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read188_GameControlIsBankLockedSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id332_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read189_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id333_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read190_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id334_IsPlayerCashoutOfferableReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read191_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id335_IsPlayerCashoutOfferableSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read192_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id336_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read193_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id337_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read194_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id338_MoneyBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read195_GameControlMoneyBetReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id339_MoneyBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read196_GameControlMoneyBetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id340_MoneyCommittedChangedReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read197_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id341_MoneyCommittedChangedSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read198_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id342_MoneyInReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read199_GameControlMoneyInReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id343_MoneyInSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read202_GameControlMoneyInSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id344_MoneyOutReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read203_GameControlMoneyOutReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id345_MoneyOutSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read205_GameControlMoneyOutSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id346_MoneySetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read206_GameControlMoneySetReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id347_MoneySetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read207_GameControlMoneySetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id348_MoneyWagerableReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read208_GameControlMoneyWagerableReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id349_MoneyWagerableSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read210_GameControlMoneyWagerableSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id350_MoneyWonReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read211_GameControlMoneyWonReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id351_MoneyWonSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read212_GameControlMoneyWonSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id352_NewThemeContextReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read213_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id353_NewThemeContextSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read217_GameControlNewThemeContextSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id354_OfferAncillaryGameRequestReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read218_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id355_OfferAncillaryGameRequestSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read219_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id356_PlaceBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read220_GameControlPlaceBetReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id357_PlaceBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read221_GameControlPlaceBetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id358_PlaceStartingBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read222_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id359_PlaceStartingBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read223_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id360_PlayerCashoutRequestReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read224_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id361_PlayerCashoutRequestSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read225_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id362_QueryBankStatusReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read226_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id363_QueryBankStatusSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read227_GameControlQueryBankStatusSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id364_QueryGameCycleStateReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read229_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id365_QueryGameCycleStateSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read230_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id366_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read233_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id367_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read234_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id368_ReadCritDataReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read235_GameControlReadCritDataReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id369_ReadCritDataSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read237_GameControlReadCritDataSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id370_RemoveCritDataReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read238_GameControlRemoveCritDataReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id371_RemoveCritDataSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read239_GameControlRemoveCritDataSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id372_RequestThemeSelectionMenuReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read240_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id373_RequestThemeSelectionMenuSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read241_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id374_SetCultureReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read242_GameControlSetCultureReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id375_SetCultureSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read243_GameControlSetCultureSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id376_SetDefaultCultureReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read244_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id377_SetDefaultCultureSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read245_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id378_SetDisplayControlStateReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read246_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id379_SetDisplayControlStateSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read248_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id380_StartAncillaryPlayingReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read249_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id381_StartAncillaryPlayingSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read250_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id382_StartBonusPlayingReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read251_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id383_StartBonusPlayingSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read252_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id384_StartPlayingReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read253_GameControlStartPlayingReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id385_StartPlayingSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read254_GameControlStartPlayingSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id386_SwitchThemeContextReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read255_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id387_SwitchThemeContextSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read257_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id388_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read258_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id389_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read259_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id390_TransactionCompleteReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read260_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id391_TransactionCompleteSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read261_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id392_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read262_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id393_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read263_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id394_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read264_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id395_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read265_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id396_UncommitBetReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read266_GameControlUncommitBetReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id397_UncommitBetSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read267_GameControlUncommitBetSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id398_UncommitGameCycleReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read268_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id399_UncommitGameCycleSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read269_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id400_UnenrollGameCycleReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read270_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id401_UnenrollGameCycleSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read271_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id402_WriteCritDataReply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read272_GameControlWriteCritDataReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id403_WriteCritDataSend && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read273_GameControlWriteCritDataSend(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:ActionRequestReply, F2LGameControlVer4.xsd:ActionRequestSend, F2LGameControlVer4.xsd:ActionResponseReply, F2LGameControlVer4.xsd:ActionResponseSend, F2LGameControlVer4.xsd:ActivateThemeContextReply, F2LGameControlVer4.xsd:ActivateThemeContextSend, F2LGameControlVer4.xsd:BankStatusChangedReply, F2LGameControlVer4.xsd:BankStatusChangedSend, F2LGameControlVer4.xsd:CanBetNextGameCycleReply, F2LGameControlVer4.xsd:CanBetNextGameCycleSend, F2LGameControlVer4.xsd:CanCommitBetReply, F2LGameControlVer4.xsd:CanCommitBetSend, F2LGameControlVer4.xsd:CanCommitBetsReply, F2LGameControlVer4.xsd:CanCommitBetsSend, F2LGameControlVer4.xsd:CanCommitGameCycleReply, F2LGameControlVer4.xsd:CanCommitGameCycleSend, F2LGameControlVer4.xsd:CanPlaceBetReply, F2LGameControlVer4.xsd:CanPlaceBetSend, F2LGameControlVer4.xsd:CanStartPlayingReply, F2LGameControlVer4.xsd:CanStartPlayingSend, F2LGameControlVer4.xsd:CommitBetReply, F2LGameControlVer4.xsd:CommitBetSend, F2LGameControlVer4.xsd:CommitGameCycleReply, F2LGameControlVer4.xsd:CommitGameCycleSend, F2LGameControlVer4.xsd:CultureChangedReply, F2LGameControlVer4.xsd:CultureChangedSend, F2LGameControlVer4.xsd:DenominationChangeCancelledReply, F2LGameControlVer4.xsd:DenominationChangeCancelledSend, F2LGameControlVer4.xsd:DenominationChangeRequestReply, F2LGameControlVer4.xsd:DenominationChangeRequestSend, F2LGameControlVer4.xsd:DisableAncillaryGameOfferReply, F2LGameControlVer4.xsd:DisableAncillaryGameOfferSend, F2LGameControlVer4.xsd:EndGameCycleReply, F2LGameControlVer4.xsd:EndGameCycleSend, F2LGameControlVer4.xsd:EnrollGameCycleReply, F2LGameControlVer4.xsd:EnrollGameCycleSend, F2LGameControlVer4.xsd:EnrollResponseReply, F2LGameControlVer4.xsd:EnrollResponseSend, F2LGameControlVer4.xsd:EvalLastAncillaryOutcomeRequestReply, F2LGameControlVer4.xsd:EvalLastAncillaryOutcomeRequestSend, F2LGameControlVer4.xsd:EvalLastBonusOutcomeRequestReply, F2LGameControlVer4.xsd:EvalLastBonusOutcomeRequestSend, F2LGameControlVer4.xsd:EvalLastOutcomeRequestReply, F2LGameControlVer4.xsd:EvalLastOutcomeRequestSend, F2LGameControlVer4.xsd:EvalOutcomeRequestReply, F2LGameControlVer4.xsd:EvalOutcomeRequestSend, F2LGameControlVer4.xsd:EvalOutcomeResponseReply, F2LGameControlVer4.xsd:EvalOutcomeResponseSend, F2LGameControlVer4.xsd:FinalizeAwardRequestReply, F2LGameControlVer4.xsd:FinalizeAwardRequestSend, F2LGameControlVer4.xsd:FinalizeAwardResponseReply, F2LGameControlVer4.xsd:FinalizeAwardResponseSend, F2LGameControlVer4.xsd:GetAvailableCulturesReply, F2LGameControlVer4.xsd:GetAvailableCulturesSend, F2LGameControlVer4.xsd:GetCommittedBetReply, F2LGameControlVer4.xsd:GetCommittedBetSend, F2LGameControlVer4.xsd:GetConfigDataAncillaryCycleLimitReply, F2LGameControlVer4.xsd:GetConfigDataAncillaryCycleLimitSend, F2LGameControlVer4.xsd:GetConfigDataAncillaryGameEnabledReply, F2LGameControlVer4.xsd:GetConfigDataAncillaryGameEnabledSend, F2LGameControlVer4.xsd:GetConfigDataAncillaryMonetaryLimitReply, F2LGameControlVer4.xsd:GetConfigDataAncillaryMonetaryLimitSend, F2LGameControlVer4.xsd:GetConfigDataBonusPlayEnabledReply, F2LGameControlVer4.xsd:GetConfigDataBonusPlayEnabledSend, F2LGameControlVer4.xsd:GetConfigDataButtonPanelMinBetAmountReply, F2LGameControlVer4.xsd:GetConfigDataButtonPanelMinBetAmountSend, F2LGameControlVer4.xsd:GetConfigDataCreditMeterDisplayBehaviorReply, F2LGameControlVer4.xsd:GetConfigDataCreditMeterDisplayBehaviorSend, F2LGameControlVer4.xsd:GetConfigDataHistoryPlayStepsReply, F2LGameControlVer4.xsd:GetConfigDataHistoryPlayStepsSend, F2LGameControlVer4.xsd:GetConfigDataLineSelectionReply, F2LGameControlVer4.xsd:GetConfigDataLineSelectionSend, F2LGameControlVer4.xsd:GetConfigDataMaxBetAmountReply, F2LGameControlVer4.xsd:GetConfigDataMaxBetAmountSend, F2LGameControlVer4.xsd:GetConfigDataMaxBetButtonBehaviorReply, F2LGameControlVer4.xsd:GetConfigDataMaxBetButtonBehaviorSend, F2LGameControlVer4.xsd:GetConfigDataMinBetAmountReply, F2LGameControlVer4.xsd:GetConfigDataMinBetAmountSend, F2LGameControlVer4.xsd:GetConfigDataMinimumBaseGamePresentationTimeReply, F2LGameControlVer4.xsd:GetConfigDataMinimumBaseGamePresentationTimeSend, F2LGameControlVer4.xsd:GetConfigDataMinimumFreeSpinPresentationTimeReply, F2LGameControlVer4.xsd:GetConfigDataMinimumFreeSpinPresentationTimeSend, F2LGameControlVer4.xsd:GetConfigDataRoundWagerUpPlayoffEnabledReply, F2LGameControlVer4.xsd:GetConfigDataRoundWagerUpPlayoffEnabledSend, F2LGameControlVer4.xsd:GetConfigDataWinCapAmountReply, F2LGameControlVer4.xsd:GetConfigDataWinCapAmountSend, F2LGameControlVer4.xsd:GetConfigDataWinCapBehaviorReply, F2LGameControlVer4.xsd:GetConfigDataWinCapBehaviorSend, F2LGameControlVer4.xsd:GetCreditFormatterInfoReply, F2LGameControlVer4.xsd:GetCreditFormatterInfoSend, F2LGameControlVer4.xsd:GetCultureReply, F2LGameControlVer4.xsd:GetCultureSend, F2LGameControlVer4.xsd:GetCustomConfigItemReferencedEnumerationReply, F2LGameControlVer4.xsd:GetCustomConfigItemReferencedEnumerationSend, F2LGameControlVer4.xsd:GetCustomConfigItemReply, F2LGameControlVer4.xsd:GetCustomConfigItemSend, F2LGameControlVer4.xsd:GetCustomConfigItemTypeReply, F2LGameControlVer4.xsd:GetCustomConfigItemTypeSend, F2LGameControlVer4.xsd:GetCustomConfigItemTypesReply, F2LGameControlVer4.xsd:GetCustomConfigItemTypesSend, F2LGameControlVer4.xsd:GetListLimitedRandomNumbersReply, F2LGameControlVer4.xsd:GetListLimitedRandomNumbersSend, F2LGameControlVer4.xsd:GetPlayerMetersReply, F2LGameControlVer4.xsd:GetPlayerMetersSend, F2LGameControlVer4.xsd:GetProgressiveGameLevelValuesReply, F2LGameControlVer4.xsd:GetProgressiveGameLevelValuesSend, F2LGameControlVer4.xsd:GetRandomNumbersReply, F2LGameControlVer4.xsd:GetRandomNumbersSend, F2LGameControlVer4.xsd:InactivateThemeContextReply, F2LGameControlVer4.xsd:InactivateThemeContextSend, F2LGameControlVer4.xsd:IsBankLockedReply, F2LGameControlVer4.xsd:IsBankLockedSend, F2LGameControlVer4.xsd:IsPlayerBankToWagerableOfferableReply, F2LGameControlVer4.xsd:IsPlayerBankToWagerableOfferableSend, F2LGameControlVer4.xsd:IsPlayerCashoutOfferableReply, F2LGameControlVer4.xsd:IsPlayerCashoutOfferableSend, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferableReply, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferableSend, F2LGameControlVer4.xsd:MoneyBetReply, F2LGameControlVer4.xsd:MoneyBetSend, F2LGameControlVer4.xsd:MoneyCommittedChangedReply, F2LGameControlVer4.xsd:MoneyCommittedChangedSend, F2LGameControlVer4.xsd:MoneyInReply, F2LGameControlVer4.xsd:MoneyInSend, F2LGameControlVer4.xsd:MoneyOutReply, F2LGameControlVer4.xsd:MoneyOutSend, F2LGameControlVer4.xsd:MoneySetReply, F2LGameControlVer4.xsd:MoneySetSend, F2LGameControlVer4.xsd:MoneyWagerableReply, F2LGameControlVer4.xsd:MoneyWagerableSend, F2LGameControlVer4.xsd:MoneyWonReply, F2LGameControlVer4.xsd:MoneyWonSend, F2LGameControlVer4.xsd:NewThemeContextReply, F2LGameControlVer4.xsd:NewThemeContextSend, F2LGameControlVer4.xsd:OfferAncillaryGameRequestReply, F2LGameControlVer4.xsd:OfferAncillaryGameRequestSend, F2LGameControlVer4.xsd:PlaceBetReply, F2LGameControlVer4.xsd:PlaceBetSend, F2LGameControlVer4.xsd:PlaceStartingBetReply, F2LGameControlVer4.xsd:PlaceStartingBetSend, F2LGameControlVer4.xsd:PlayerCashoutRequestReply, F2LGameControlVer4.xsd:PlayerCashoutRequestSend, F2LGameControlVer4.xsd:QueryBankStatusReply, F2LGameControlVer4.xsd:QueryBankStatusSend, F2LGameControlVer4.xsd:QueryGameCycleStateReply, F2LGameControlVer4.xsd:QueryGameCycleStateSend, F2LGameControlVer4.xsd:QueryPlayerSelectableDenomsReply, F2LGameControlVer4.xsd:QueryPlayerSelectableDenomsSend, F2LGameControlVer4.xsd:ReadCritDataReply, F2LGameControlVer4.xsd:ReadCritDataSend, F2LGameControlVer4.xsd:RemoveCritDataReply, F2LGameControlVer4.xsd:RemoveCritDataSend, F2LGameControlVer4.xsd:RequestThemeSelectionMenuReply, F2LGameControlVer4.xsd:RequestThemeSelectionMenuSend, F2LGameControlVer4.xsd:SetCultureReply, F2LGameControlVer4.xsd:SetCultureSend, F2LGameControlVer4.xsd:SetDefaultCultureReply, F2LGameControlVer4.xsd:SetDefaultCultureSend, F2LGameControlVer4.xsd:SetDisplayControlStateReply, F2LGameControlVer4.xsd:SetDisplayControlStateSend, F2LGameControlVer4.xsd:StartAncillaryPlayingReply, F2LGameControlVer4.xsd:StartAncillaryPlayingSend, F2LGameControlVer4.xsd:StartBonusPlayingReply, F2LGameControlVer4.xsd:StartBonusPlayingSend, F2LGameControlVer4.xsd:StartPlayingReply, F2LGameControlVer4.xsd:StartPlayingSend, F2LGameControlVer4.xsd:SwitchThemeContextReply, F2LGameControlVer4.xsd:SwitchThemeContextSend, F2LGameControlVer4.xsd:ThemeSelectionMenuOfferableStatusChangedReply, F2LGameControlVer4.xsd:ThemeSelectionMenuOfferableStatusChangedSend, F2LGameControlVer4.xsd:TransactionCompleteReply, F2LGameControlVer4.xsd:TransactionCompleteSend, F2LGameControlVer4.xsd:TransferBankToWagerableRequestReply, F2LGameControlVer4.xsd:TransferBankToWagerableRequestSend, F2LGameControlVer4.xsd:TransferWagerableToBankRequestReply, F2LGameControlVer4.xsd:TransferWagerableToBankRequestSend, F2LGameControlVer4.xsd:UncommitBetReply, F2LGameControlVer4.xsd:UncommitBetSend, F2LGameControlVer4.xsd:UncommitGameCycleReply, F2LGameControlVer4.xsd:UncommitGameCycleSend, F2LGameControlVer4.xsd:UnenrollGameCycleReply, F2LGameControlVer4.xsd:UnenrollGameCycleSend, F2LGameControlVer4.xsd:WriteCritDataReply, F2LGameControlVer4.xsd:WriteCritDataSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:ActionRequestReply, F2LGameControlVer4.xsd:ActionRequestSend, F2LGameControlVer4.xsd:ActionResponseReply, F2LGameControlVer4.xsd:ActionResponseSend, F2LGameControlVer4.xsd:ActivateThemeContextReply, F2LGameControlVer4.xsd:ActivateThemeContextSend, F2LGameControlVer4.xsd:BankStatusChangedReply, F2LGameControlVer4.xsd:BankStatusChangedSend, F2LGameControlVer4.xsd:CanBetNextGameCycleReply, F2LGameControlVer4.xsd:CanBetNextGameCycleSend, F2LGameControlVer4.xsd:CanCommitBetReply, F2LGameControlVer4.xsd:CanCommitBetSend, F2LGameControlVer4.xsd:CanCommitBetsReply, F2LGameControlVer4.xsd:CanCommitBetsSend, F2LGameControlVer4.xsd:CanCommitGameCycleReply, F2LGameControlVer4.xsd:CanCommitGameCycleSend, F2LGameControlVer4.xsd:CanPlaceBetReply, F2LGameControlVer4.xsd:CanPlaceBetSend, F2LGameControlVer4.xsd:CanStartPlayingReply, F2LGameControlVer4.xsd:CanStartPlayingSend, F2LGameControlVer4.xsd:CommitBetReply, F2LGameControlVer4.xsd:CommitBetSend, F2LGameControlVer4.xsd:CommitGameCycleReply, F2LGameControlVer4.xsd:CommitGameCycleSend, F2LGameControlVer4.xsd:CultureChangedReply, F2LGameControlVer4.xsd:CultureChangedSend, F2LGameControlVer4.xsd:DenominationChangeCancelledReply, F2LGameControlVer4.xsd:DenominationChangeCancelledSend, F2LGameControlVer4.xsd:DenominationChangeRequestReply, F2LGameControlVer4.xsd:DenominationChangeRequestSend, F2LGameControlVer4.xsd:DisableAncillaryGameOfferReply, F2LGameControlVer4.xsd:DisableAncillaryGameOfferSend, F2LGameControlVer4.xsd:EndGameCycleReply, F2LGameControlVer4.xsd:EndGameCycleSend, F2LGameControlVer4.xsd:EnrollGameCycleReply, F2LGameControlVer4.xsd:EnrollGameCycleSend, F2LGameControlVer4.xsd:EnrollResponseReply, F2LGameControlVer4.xsd:EnrollResponseSend, F2LGameControlVer4.xsd:EvalLastAncillaryOutcomeRequestReply, F2LGameControlVer4.xsd:EvalLastAncillaryOutcomeRequestSend, F2LGameControlVer4.xsd:EvalLastBonusOutcomeRequestReply, F2LGameControlVer4.xsd:EvalLastBonusOutcomeRequestSend, F2LGameControlVer4.xsd:EvalLastOutcomeRequestReply, F2LGameControlVer4.xsd:EvalLastOutcomeRequestSend, F2LGameControlVer4.xsd:EvalOutcomeRequestReply, F2LGameControlVer4.xsd:EvalOutcomeRequestSend, F2LGameControlVer4.xsd:EvalOutcomeResponseReply, F2LGameControlVer4.xsd:EvalOutcomeResponseSend, F2LGameControlVer4.xsd:FinalizeAwardRequestReply, F2LGameControlVer4.xsd:FinalizeAwardRequestSend, F2LGameControlVer4.xsd:FinalizeAwardResponseReply, F2LGameControlVer4.xsd:FinalizeAwardResponseSend, F2LGameControlVer4.xsd:GetAvailableCulturesReply, F2LGameControlVer4.xsd:GetAvailableCulturesSend, F2LGameControlVer4.xsd:GetCommittedBetReply, F2LGameControlVer4.xsd:GetCommittedBetSend, F2LGameControlVer4.xsd:GetConfigDataAncillaryCycleLimitReply, F2LGameControlVer4.xsd:GetConfigDataAncillaryCycleLimitSend, F2LGameControlVer4.xsd:GetConfigDataAncillaryGameEnabledReply, F2LGameControlVer4.xsd:GetConfigDataAncillaryGameEnabledSend, F2LGameControlVer4.xsd:GetConfigDataAncillaryMonetaryLimitReply, F2LGameControlVer4.xsd:GetConfigDataAncillaryMonetaryLimitSend, F2LGameControlVer4.xsd:GetConfigDataBonusPlayEnabledReply, F2LGameControlVer4.xsd:GetConfigDataBonusPlayEnabledSend, F2LGameControlVer4.xsd:GetConfigDataButtonPanelMinBetAmountReply, F2LGameControlVer4.xsd:GetConfigDataButtonPanelMinBetAmountSend, F2LGameControlVer4.xsd:GetConfigDataCreditMeterDisplayBehaviorReply, F2LGameControlVer4.xsd:GetConfigDataCreditMeterDisplayBehaviorSend, F2LGameControlVer4.xsd:GetConfigDataHistoryPlayStepsReply, F2LGameControlVer4.xsd:GetConfigDataHistoryPlayStepsSend, F2LGameControlVer4.xsd:GetConfigDataLineSelectionReply, F2LGameControlVer4.xsd:GetConfigDataLineSelectionSend, F2LGameControlVer4.xsd:GetConfigDataMaxBetAmountReply, F2LGameControlVer4.xsd:GetConfigDataMaxBetAmountSend, F2LGameControlVer4.xsd:GetConfigDataMaxBetButtonBehaviorReply, F2LGameControlVer4.xsd:GetConfigDataMaxBetButtonBehaviorSend, F2LGameControlVer4.xsd:GetConfigDataMinBetAmountReply, F2LGameControlVer4.xsd:GetConfigDataMinBetAmountSend, F2LGameControlVer4.xsd:GetConfigDataMinimumBaseGamePresentationTimeReply, F2LGameControlVer4.xsd:GetConfigDataMinimumBaseGamePresentationTimeSend, F2LGameControlVer4.xsd:GetConfigDataMinimumFreeSpinPresentationTimeReply, F2LGameControlVer4.xsd:GetConfigDataMinimumFreeSpinPresentationTimeSend, F2LGameControlVer4.xsd:GetConfigDataRoundWagerUpPlayoffEnabledReply, F2LGameControlVer4.xsd:GetConfigDataRoundWagerUpPlayoffEnabledSend, F2LGameControlVer4.xsd:GetConfigDataWinCapAmountReply, F2LGameControlVer4.xsd:GetConfigDataWinCapAmountSend, F2LGameControlVer4.xsd:GetConfigDataWinCapBehaviorReply, F2LGameControlVer4.xsd:GetConfigDataWinCapBehaviorSend, F2LGameControlVer4.xsd:GetCreditFormatterInfoReply, F2LGameControlVer4.xsd:GetCreditFormatterInfoSend, F2LGameControlVer4.xsd:GetCultureReply, F2LGameControlVer4.xsd:GetCultureSend, F2LGameControlVer4.xsd:GetCustomConfigItemReferencedEnumerationReply, F2LGameControlVer4.xsd:GetCustomConfigItemReferencedEnumerationSend, F2LGameControlVer4.xsd:GetCustomConfigItemReply, F2LGameControlVer4.xsd:GetCustomConfigItemSend, F2LGameControlVer4.xsd:GetCustomConfigItemTypeReply, F2LGameControlVer4.xsd:GetCustomConfigItemTypeSend, F2LGameControlVer4.xsd:GetCustomConfigItemTypesReply, F2LGameControlVer4.xsd:GetCustomConfigItemTypesSend, F2LGameControlVer4.xsd:GetListLimitedRandomNumbersReply, F2LGameControlVer4.xsd:GetListLimitedRandomNumbersSend, F2LGameControlVer4.xsd:GetPlayerMetersReply, F2LGameControlVer4.xsd:GetPlayerMetersSend, F2LGameControlVer4.xsd:GetProgressiveGameLevelValuesReply, F2LGameControlVer4.xsd:GetProgressiveGameLevelValuesSend, F2LGameControlVer4.xsd:GetRandomNumbersReply, F2LGameControlVer4.xsd:GetRandomNumbersSend, F2LGameControlVer4.xsd:InactivateThemeContextReply, F2LGameControlVer4.xsd:InactivateThemeContextSend, F2LGameControlVer4.xsd:IsBankLockedReply, F2LGameControlVer4.xsd:IsBankLockedSend, F2LGameControlVer4.xsd:IsPlayerBankToWagerableOfferableReply, F2LGameControlVer4.xsd:IsPlayerBankToWagerableOfferableSend, F2LGameControlVer4.xsd:IsPlayerCashoutOfferableReply, F2LGameControlVer4.xsd:IsPlayerCashoutOfferableSend, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferableReply, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferableSend, F2LGameControlVer4.xsd:MoneyBetReply, F2LGameControlVer4.xsd:MoneyBetSend, F2LGameControlVer4.xsd:MoneyCommittedChangedReply, F2LGameControlVer4.xsd:MoneyCommittedChangedSend, F2LGameControlVer4.xsd:MoneyInReply, F2LGameControlVer4.xsd:MoneyInSend, F2LGameControlVer4.xsd:MoneyOutReply, F2LGameControlVer4.xsd:MoneyOutSend, F2LGameControlVer4.xsd:MoneySetReply, F2LGameControlVer4.xsd:MoneySetSend, F2LGameControlVer4.xsd:MoneyWagerableReply, F2LGameControlVer4.xsd:MoneyWagerableSend, F2LGameControlVer4.xsd:MoneyWonReply, F2LGameControlVer4.xsd:MoneyWonSend, F2LGameControlVer4.xsd:NewThemeContextReply, F2LGameControlVer4.xsd:NewThemeContextSend, F2LGameControlVer4.xsd:OfferAncillaryGameRequestReply, F2LGameControlVer4.xsd:OfferAncillaryGameRequestSend, F2LGameControlVer4.xsd:PlaceBetReply, F2LGameControlVer4.xsd:PlaceBetSend, F2LGameControlVer4.xsd:PlaceStartingBetReply, F2LGameControlVer4.xsd:PlaceStartingBetSend, F2LGameControlVer4.xsd:PlayerCashoutRequestReply, F2LGameControlVer4.xsd:PlayerCashoutRequestSend, F2LGameControlVer4.xsd:QueryBankStatusReply, F2LGameControlVer4.xsd:QueryBankStatusSend, F2LGameControlVer4.xsd:QueryGameCycleStateReply, F2LGameControlVer4.xsd:QueryGameCycleStateSend, F2LGameControlVer4.xsd:QueryPlayerSelectableDenomsReply, F2LGameControlVer4.xsd:QueryPlayerSelectableDenomsSend, F2LGameControlVer4.xsd:ReadCritDataReply, F2LGameControlVer4.xsd:ReadCritDataSend, F2LGameControlVer4.xsd:RemoveCritDataReply, F2LGameControlVer4.xsd:RemoveCritDataSend, F2LGameControlVer4.xsd:RequestThemeSelectionMenuReply, F2LGameControlVer4.xsd:RequestThemeSelectionMenuSend, F2LGameControlVer4.xsd:SetCultureReply, F2LGameControlVer4.xsd:SetCultureSend, F2LGameControlVer4.xsd:SetDefaultCultureReply, F2LGameControlVer4.xsd:SetDefaultCultureSend, F2LGameControlVer4.xsd:SetDisplayControlStateReply, F2LGameControlVer4.xsd:SetDisplayControlStateSend, F2LGameControlVer4.xsd:StartAncillaryPlayingReply, F2LGameControlVer4.xsd:StartAncillaryPlayingSend, F2LGameControlVer4.xsd:StartBonusPlayingReply, F2LGameControlVer4.xsd:StartBonusPlayingSend, F2LGameControlVer4.xsd:StartPlayingReply, F2LGameControlVer4.xsd:StartPlayingSend, F2LGameControlVer4.xsd:SwitchThemeContextReply, F2LGameControlVer4.xsd:SwitchThemeContextSend, F2LGameControlVer4.xsd:ThemeSelectionMenuOfferableStatusChangedReply, F2LGameControlVer4.xsd:ThemeSelectionMenuOfferableStatusChangedSend, F2LGameControlVer4.xsd:TransactionCompleteReply, F2LGameControlVer4.xsd:TransactionCompleteSend, F2LGameControlVer4.xsd:TransferBankToWagerableRequestReply, F2LGameControlVer4.xsd:TransferBankToWagerableRequestSend, F2LGameControlVer4.xsd:TransferWagerableToBankRequestReply, F2LGameControlVer4.xsd:TransferWagerableToBankRequestSend, F2LGameControlVer4.xsd:UncommitBetReply, F2LGameControlVer4.xsd:UncommitBetSend, F2LGameControlVer4.xsd:UncommitGameCycleReply, F2LGameControlVer4.xsd:UncommitGameCycleSend, F2LGameControlVer4.xsd:UnenrollGameCycleReply, F2LGameControlVer4.xsd:UnenrollGameCycleSend, F2LGameControlVer4.xsd:WriteCritDataReply, F2LGameControlVer4.xsd:WriteCritDataSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations126, ref readerCount126);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataSend Read273_GameControlWriteCritDataSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataSend();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations127 = 0;
            int readerCount127 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id404_CriticalDataScope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CriticalDataScope = Read236_CriticalDataScope(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id405_ItemName && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@ItemName = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id406_Data && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Data = ToByteArrayBase64(false);
                        }
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:CriticalDataScope, F2LGameControlVer4.xsd:ItemName, F2LGameControlVer4.xsd:Data");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:CriticalDataScope, F2LGameControlVer4.xsd:ItemName, F2LGameControlVer4.xsd:Data");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations127, ref readerCount127);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope Read236_CriticalDataScope(string s) {
            switch (s) {
                case @"Feature": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@Feature;
                case @"Game-Cycle": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@GameCycle;
                case @"History": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@History;
                case @"Payvar": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@Payvar;
                case @"PayvarPersistent": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@PayvarPersistent;
                case @"PayvarAnalytics": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@PayvarAnalytics;
                case @"Theme": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@Theme;
                case @"ThemePersistent": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@ThemePersistent;
                case @"ThemeAnalytics": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope.@ThemeAnalytics;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CriticalDataScope));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataReply Read272_GameControlWriteCritDataReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlWriteCritDataReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations128 = 0;
            int readerCount128 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations128, ref readerCount128);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleSend Read271_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations129 = 0;
            int readerCount129 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations129, ref readerCount129);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleReply Read270_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUnenrollGameCycleReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations130 = 0;
            int readerCount130 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations130, ref readerCount130);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleSend Read269_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations131 = 0;
            int readerCount131 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations131, ref readerCount131);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleReply Read268_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitGameCycleReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations132 = 0;
            int readerCount132 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations132, ref readerCount132);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetSend Read267_GameControlUncommitBetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations133 = 0;
            int readerCount133 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations133, ref readerCount133);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetReply Read266_GameControlUncommitBetReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlUncommitBetReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations134 = 0;
            int readerCount134 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations134, ref readerCount134);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestSend Read265_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations135 = 0;
            int readerCount135 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations135, ref readerCount135);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestReply Read264_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferWagerableToBankRequestReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations136 = 0;
            int readerCount136 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id407_TransferAccepted && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransferAccepted = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransferAccepted, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransferAccepted, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations136, ref readerCount136);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestSend Read263_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations137 = 0;
            int readerCount137 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations137, ref readerCount137);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestReply Read262_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransferBankToWagerableRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations138 = 0;
            int readerCount138 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations138, ref readerCount138);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteSend Read261_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations139 = 0;
            int readerCount139 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations139, ref readerCount139);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteReply Read260_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlTransactionCompleteReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations140 = 0;
            int readerCount140 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations140, ref readerCount140);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedSend Read259_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations141 = 0;
            int readerCount141 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id408_IsThemeSelectionMenuOfferable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@IsThemeSelectionMenuOfferable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferable");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferable");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations141, ref readerCount141);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedReply Read258_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlThemeSelectionMenuOfferableStatusChangedReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations142 = 0;
            int readerCount142 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations142, ref readerCount142);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSend Read257_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSend();
            if ((object)(o.@ResourcePaths) == null) o.@ResourcePaths = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths> a_3 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths>)o.@ResourcePaths;
            bool[] paramsRead = new bool[7];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations143 = 0;
            int readerCount143 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id409_ThemeTag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@ThemeTag = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id410_ThemeTagDataFile && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@ThemeTagDataFile = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id411_ResourcePaths && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_3) == null) Reader.Skip(); else a_3.Add(Read256_Item(false, true));
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id412_Denom && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Denom = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id413_PayvarTag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@PayvarTag = Reader.ReadElementString();
                        }
                        paramsRead[5] = true;
                    }
                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id414_PayvarTagDataFile && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@PayvarTagDataFile = Reader.ReadElementString();
                        }
                        paramsRead[6] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:ThemeTag, F2LGameControlVer4.xsd:ThemeTagDataFile, F2LGameControlVer4.xsd:ResourcePaths, F2LGameControlVer4.xsd:Denom, F2LGameControlVer4.xsd:PayvarTag, F2LGameControlVer4.xsd:PayvarTagDataFile");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:ThemeTag, F2LGameControlVer4.xsd:ThemeTagDataFile, F2LGameControlVer4.xsd:ResourcePaths, F2LGameControlVer4.xsd:Denom, F2LGameControlVer4.xsd:PayvarTag, F2LGameControlVer4.xsd:PayvarTagDataFile");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations143, ref readerCount143);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths Read256_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextSendResourcePaths();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations144 = 0;
            int readerCount144 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id415_Tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Tag = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id416_Path && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Path = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Tag, F2LGameControlVer4.xsd:Path");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Tag, F2LGameControlVer4.xsd:Path");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations144, ref readerCount144);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextReply Read255_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSwitchThemeContextReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations145 = 0;
            int readerCount145 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations145, ref readerCount145);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingSend Read254_GameControlStartPlayingSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations146 = 0;
            int readerCount146 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations146, ref readerCount146);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingReply Read253_GameControlStartPlayingReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartPlayingReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations147 = 0;
            int readerCount147 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations147, ref readerCount147);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingSend Read252_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations148 = 0;
            int readerCount148 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations148, ref readerCount148);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingReply Read251_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartBonusPlayingReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations149 = 0;
            int readerCount149 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations149, ref readerCount149);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingSend Read250_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations150 = 0;
            int readerCount150 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations150, ref readerCount150);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingReply Read249_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlStartAncillaryPlayingReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations151 = 0;
            int readerCount151 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id417_StartSuccessful && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@StartSuccessful = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:StartSuccessful, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:StartSuccessful, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations151, ref readerCount151);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateSend Read248_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations152 = 0;
            int readerCount152 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id418_DisplayControlState && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@DisplayControlState = Read247_DisplayControlState(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:DisplayControlState");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:DisplayControlState");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations152, ref readerCount152);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState Read247_DisplayControlState(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@Invalid;
                case @"DisplayAsHidden": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@DisplayAsHidden;
                case @"DisplayAsNormal": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@DisplayAsNormal;
                case @"DisplayAsSuspended": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState.@DisplayAsSuspended;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.DisplayControlState));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateReply Read246_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDisplayControlStateReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations153 = 0;
            int readerCount153 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations153, ref readerCount153);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureSend Read245_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations154 = 0;
            int readerCount154 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations154, ref readerCount154);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureReply Read244_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetDefaultCultureReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations155 = 0;
            int readerCount155 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id74_Culture && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Culture = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Culture, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Culture, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations155, ref readerCount155);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureSend Read243_GameControlSetCultureSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations156 = 0;
            int readerCount156 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id74_Culture && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Culture = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Culture");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Culture");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations156, ref readerCount156);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureReply Read242_GameControlSetCultureReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlSetCultureReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations157 = 0;
            int readerCount157 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations157, ref readerCount157);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuSend Read241_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations158 = 0;
            int readerCount158 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations158, ref readerCount158);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuReply Read240_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRequestThemeSelectionMenuReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations159 = 0;
            int readerCount159 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations159, ref readerCount159);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataSend Read239_GameControlRemoveCritDataSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations160 = 0;
            int readerCount160 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id404_CriticalDataScope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CriticalDataScope = Read236_CriticalDataScope(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id405_ItemName && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@ItemName = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:CriticalDataScope, F2LGameControlVer4.xsd:ItemName");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:CriticalDataScope, F2LGameControlVer4.xsd:ItemName");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations160, ref readerCount160);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataReply Read238_GameControlRemoveCritDataReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlRemoveCritDataReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations161 = 0;
            int readerCount161 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id419_RemoveCritDataSuccess && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@RemoveCritDataSuccess = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:RemoveCritDataSuccess");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:RemoveCritDataSuccess");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations161, ref readerCount161);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataSend Read237_GameControlReadCritDataSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations162 = 0;
            int readerCount162 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id404_CriticalDataScope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CriticalDataScope = Read236_CriticalDataScope(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id405_ItemName && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@ItemName = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:CriticalDataScope, F2LGameControlVer4.xsd:ItemName");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:CriticalDataScope, F2LGameControlVer4.xsd:ItemName");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations162, ref readerCount162);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataReply Read235_GameControlReadCritDataReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlReadCritDataReply();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations163 = 0;
            int readerCount163 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id420_ReadCritDataSuccess && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@ReadCritDataSuccess = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id406_Data && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Data = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:ReadCritDataSuccess, F2LGameControlVer4.xsd:Data");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:ReadCritDataSuccess, F2LGameControlVer4.xsd:Data");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations163, ref readerCount163);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsSend Read234_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations164 = 0;
            int readerCount164 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations164, ref readerCount164);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReply Read233_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReply();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations165 = 0;
            int readerCount165 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id421_DenominationList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@DenominationList = Read231_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id422_ProgressiveDenominationList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@ProgressiveDenominationList = Read232_Item(false, true);
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id423_DefaultDenom && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@DefaultDenomSpecified = true;
                        {
                            o.@DefaultDenom = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:DenominationList, F2LGameControlVer4.xsd:ProgressiveDenominationList, F2LGameControlVer4.xsd:DefaultDenom");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:DenominationList, F2LGameControlVer4.xsd:ProgressiveDenominationList, F2LGameControlVer4.xsd:DefaultDenom");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations165, ref readerCount165);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList Read232_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList();
            if ((object)(o.@Denom) == null) o.@Denom = new global::System.Collections.Generic.List<global::System.UInt32>();
            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@Denom;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations166 = 0;
            int readerCount166 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id412_Denom && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denom");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denom");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations166, ref readerCount166);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyDenominationList Read231_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyDenominationList o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryPlayerSelectableDenomsReplyDenominationList();
            if ((object)(o.@Denom) == null) o.@Denom = new global::System.Collections.Generic.List<global::System.UInt32>();
            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@Denom;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations167 = 0;
            int readerCount167 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id412_Denom && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denom");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denom");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations167, ref readerCount167);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateSend Read230_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations168 = 0;
            int readerCount168 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations168, ref readerCount168);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateReply Read229_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryGameCycleStateReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations169 = 0;
            int readerCount169 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id424_CurrentGameCycleState && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CurrentGameCycleState = Read228_GameCycleState(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CurrentGameCycleState, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CurrentGameCycleState, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations169, ref readerCount169);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState Read228_GameCycleState(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Invalid;
                case @"Idle": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Idle;
                case @"Committed": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Committed;
                case @"EnrollPending": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@EnrollPending;
                case @"EnrollComplete": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@EnrollComplete;
                case @"Playing": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Playing;
                case @"EvaluatePending": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@EvaluatePending;
                case @"MainPlayComplete": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@MainPlayComplete;
                case @"AncillaryPlaying": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@AncillaryPlaying;
                case @"AncillaryEvaluatePending": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@AncillaryEvaluatePending;
                case @"AncillaryPlayComplete": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@AncillaryPlayComplete;
                case @"BonusPlaying": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@BonusPlaying;
                case @"BonusEvaluatePending": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@BonusEvaluatePending;
                case @"BonusPlayComplete": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@BonusPlayComplete;
                case @"FinalizeAwardPending": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@FinalizeAwardPending;
                case @"Finalized": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState.@Finalized;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameCycleState));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusSend Read227_GameControlQueryBankStatusSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations170 = 0;
            int readerCount170 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations170, ref readerCount170);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusReply Read226_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlQueryBankStatusReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations171 = 0;
            int readerCount171 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id425_BankStatus && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BankStatus = Read37_BankStatus(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BankStatus, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BankStatus, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations171, ref readerCount171);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BankStatus Read37_BankStatus(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id425_BankStatus && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BankStatus o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BankStatus();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations172 = 0;
            int readerCount172 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id426_BankLocked && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@BankLocked = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id427_PlayerCashoutOfferable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@PlayerCashoutOfferable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id428_BankToWagerableOfferable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@BankToWagerableOfferable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BankLocked, F2LGameControlVer4.xsd:PlayerCashoutOfferable, F2LGameControlVer4.xsd:BankToWagerableOfferable");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BankLocked, F2LGameControlVer4.xsd:PlayerCashoutOfferable, F2LGameControlVer4.xsd:BankToWagerableOfferable");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations172, ref readerCount172);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestSend Read225_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations173 = 0;
            int readerCount173 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations173, ref readerCount173);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestReply Read224_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlayerCashoutRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations174 = 0;
            int readerCount174 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations174, ref readerCount174);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetSend Read223_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations175 = 0;
            int readerCount175 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id429_IsMaxBet && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@IsMaxBet = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:IsMaxBet");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:IsMaxBet");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations175, ref readerCount175);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetReply Read222_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceStartingBetReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations176 = 0;
            int readerCount176 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations176, ref readerCount176);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetSend Read221_GameControlPlaceBetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetSend();
            bool[] paramsRead = new bool[5];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations177 = 0;
            int readerCount177 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id430_BetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id431_BetFromCreditsAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetFromCreditsAmount = Read40_AmountType(false, true);
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id432_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetFromUncommittedGameWinsAmount = Read40_AmountType(false, true);
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id433_PendingWinsAvailableForThisBet && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PendingWinsAvailableForThisBet = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:BetFromCreditsAmount, F2LGameControlVer4.xsd:BetFromUncommittedGameWinsAmount, F2LGameControlVer4.xsd:PendingWinsAvailableForThisBet");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:BetFromCreditsAmount, F2LGameControlVer4.xsd:BetFromUncommittedGameWinsAmount, F2LGameControlVer4.xsd:PendingWinsAvailableForThisBet");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations177, ref readerCount177);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetReply Read220_GameControlPlaceBetReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlPlaceBetReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations178 = 0;
            int readerCount178 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id434_BetPlaced && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@BetPlaced = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetPlaced, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetPlaced, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations178, ref readerCount178);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestSend Read219_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations179 = 0;
            int readerCount179 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations179, ref readerCount179);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestReply Read218_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlOfferAncillaryGameRequestReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations180 = 0;
            int readerCount180 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id435_OfferAncillaryGame && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@OfferAncillaryGame = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:OfferAncillaryGame, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:OfferAncillaryGame, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations180, ref readerCount180);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextSend Read217_GameControlNewThemeContextSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextSend();
            bool[] paramsRead = new bool[8];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations181 = 0;
            int readerCount181 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id436_GameMode && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@GameMode = Read214_GameMode(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id437_GameSubMode && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if (Reader.IsEmptyElement) {
                            Reader.Skip();
                        }
                        else {
                            o.@GameSubMode = Read215_GameSubMode(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id412_Denom && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Denom = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id413_PayvarTag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@PayvarTag = Reader.ReadElementString();
                        }
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id414_PayvarTagDataFile && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@PayvarTagDataFile = Reader.ReadElementString();
                        }
                        paramsRead[5] = true;
                    }
                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id438_NewlySelectedForPlay && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@NewlySelectedForPlay = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[6] = true;
                    }
                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id439_SecurityLevel && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@SecurityLevel = Read216_SecurityLevelType(Reader.ReadElementString());
                        }
                        paramsRead[7] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:GameMode, F2LGameControlVer4.xsd:GameSubMode, F2LGameControlVer4.xsd:Denom, F2LGameControlVer4.xsd:PayvarTag, F2LGameControlVer4.xsd:PayvarTagDataFile, F2LGameControlVer4.xsd:NewlySelectedForPlay, F2LGameControlVer4.xsd:SecurityLevel");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:GameMode, F2LGameControlVer4.xsd:GameSubMode, F2LGameControlVer4.xsd:Denom, F2LGameControlVer4.xsd:PayvarTag, F2LGameControlVer4.xsd:PayvarTagDataFile, F2LGameControlVer4.xsd:NewlySelectedForPlay, F2LGameControlVer4.xsd:SecurityLevel");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations181, ref readerCount181);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType Read216_SecurityLevelType(string s) {
            switch (s) {
                case @"security-none": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securitynone;
                case @"security-attendant": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securityattendant;
                case @"security-operator": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securityoperator;
                case @"security-ekey": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType.@securityekey;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.SecurityLevelType));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode Read215_GameSubMode(string s) {
            switch (s) {
                case @"Standard": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode.@Standard;
                case @"Tournament": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode.@Tournament;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameSubMode));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode Read214_GameMode(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@Invalid;
                case @"Play": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@Play;
                case @"History": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@History;
                case @"Utility": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode.@Utility;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameMode));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextReply Read213_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlNewThemeContextReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations182 = 0;
            int readerCount182 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations182, ref readerCount182);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonSend Read212_GameControlMoneyWonSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations183 = 0;
            int readerCount183 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id440_AmountWon && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AmountWon = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountWon, F2LGameControlVer4.xsd:PlayerMeters");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountWon, F2LGameControlVer4.xsd:PlayerMeters");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations183, ref readerCount183);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters Read174_PlayerMeters(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id441_PlayerMeters && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.PlayerMeters();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations184 = 0;
            int readerCount184 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id442_PlayerWagerableMeter && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerWagerableMeter = Read40_AmountType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id443_PlayerBankMeter && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerBankMeter = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id444_PlayerPaidMeter && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerPaidMeter = Read40_AmountType(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:PlayerWagerableMeter, F2LGameControlVer4.xsd:PlayerBankMeter, F2LGameControlVer4.xsd:PlayerPaidMeter");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:PlayerWagerableMeter, F2LGameControlVer4.xsd:PlayerBankMeter, F2LGameControlVer4.xsd:PlayerPaidMeter");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations184, ref readerCount184);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonReply Read211_GameControlMoneyWonReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWonReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations185 = 0;
            int readerCount185 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations185, ref readerCount185);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableSend Read210_GameControlMoneyWagerableSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableSend();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations186 = 0;
            int readerCount186 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id445_AmountMoved && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AmountMoved = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id446_WagerableDirection && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@WagerableDirection = Read209_MoneyWagerableDirection(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountMoved, F2LGameControlVer4.xsd:WagerableDirection, F2LGameControlVer4.xsd:PlayerMeters");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountMoved, F2LGameControlVer4.xsd:WagerableDirection, F2LGameControlVer4.xsd:PlayerMeters");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations186, ref readerCount186);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection Read209_MoneyWagerableDirection(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@Invalid;
                case @"ToUnknownSource": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@ToUnknownSource;
                case @"FromUnknownSource": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@FromUnknownSource;
                case @"ToBankMeter": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@ToBankMeter;
                case @"FromBankMeter": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@FromBankMeter;
                case @"FromCashEscrow": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection.@FromCashEscrow;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyWagerableDirection));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableReply Read208_GameControlMoneyWagerableReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyWagerableReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations187 = 0;
            int readerCount187 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations187, ref readerCount187);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetSend Read207_GameControlMoneySetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations188 = 0;
            int readerCount188 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:PlayerMeters");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:PlayerMeters");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations188, ref readerCount188);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetReply Read206_GameControlMoneySetReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneySetReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations189 = 0;
            int readerCount189 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations189, ref readerCount189);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutSend Read205_GameControlMoneyOutSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutSend();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations190 = 0;
            int readerCount190 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id447_AmountOut && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AmountOut = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id448_MoneyOutSource && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@MoneyOutSource = Read204_MoneyOutSource(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountOut, F2LGameControlVer4.xsd:MoneyOutSource, F2LGameControlVer4.xsd:PlayerMeters");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountOut, F2LGameControlVer4.xsd:MoneyOutSource, F2LGameControlVer4.xsd:PlayerMeters");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations190, ref readerCount190);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource Read204_MoneyOutSource(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Invalid;
                case @"OtherSource": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@OtherSource;
                case @"Bill": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Bill;
                case @"Coin": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Coin;
                case @"Ticket": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Ticket;
                case @"FundsTransfer": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@FundsTransfer;
                case @"Handpay": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource.@Handpay;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyOutSource));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutReply Read203_GameControlMoneyOutReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyOutReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations191 = 0;
            int readerCount191 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations191, ref readerCount191);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInSend Read202_GameControlMoneyInSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInSend();
            bool[] paramsRead = new bool[5];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations192 = 0;
            int readerCount192 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id449_AmountIn && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AmountIn = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id450_MoneyInSource && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@MoneyInSource = Read200_MoneyInSource(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id451_FundsTransferAccountSource && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@FundsTransferAccountSourceSpecified = true;
                        {
                            o.@FundsTransferAccountSource = Read201_FundsTransferAccountSource(Reader.ReadElementString());
                        }
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountIn, F2LGameControlVer4.xsd:MoneyInSource, F2LGameControlVer4.xsd:FundsTransferAccountSource, F2LGameControlVer4.xsd:PlayerMeters");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountIn, F2LGameControlVer4.xsd:MoneyInSource, F2LGameControlVer4.xsd:FundsTransferAccountSource, F2LGameControlVer4.xsd:PlayerMeters");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations192, ref readerCount192);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource Read201_FundsTransferAccountSource(string s) {
            switch (s) {
                case @"OtherAccount": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@OtherAccount;
                case @"CasinoAccount": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@CasinoAccount;
                case @"BankAccount": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@BankAccount;
                case @"BonusSystem": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@BonusSystem;
                case @"NonWinBonusSystem": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource.@NonWinBonusSystem;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FundsTransferAccountSource));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource Read200_MoneyInSource(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Invalid;
                case @"OtherSource": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@OtherSource;
                case @"Bill": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Bill;
                case @"Coin": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Coin;
                case @"Ticket": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@Ticket;
                case @"FundsTransfer": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource.@FundsTransfer;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MoneyInSource));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInReply Read199_GameControlMoneyInReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyInReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations193 = 0;
            int readerCount193 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations193, ref readerCount193);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedSend Read198_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations194 = 0;
            int readerCount194 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id452_AmountCommitted && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AmountCommitted = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountCommitted, F2LGameControlVer4.xsd:PlayerMeters");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountCommitted, F2LGameControlVer4.xsd:PlayerMeters");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations194, ref readerCount194);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedReply Read197_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyCommittedChangedReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations195 = 0;
            int readerCount195 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations195, ref readerCount195);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetSend Read196_GameControlMoneyBetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations196 = 0;
            int readerCount196 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id453_AmountBet && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AmountBet = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountBet, F2LGameControlVer4.xsd:PlayerMeters");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:AmountBet, F2LGameControlVer4.xsd:PlayerMeters");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations196, ref readerCount196);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetReply Read195_GameControlMoneyBetReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlMoneyBetReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations197 = 0;
            int readerCount197 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations197, ref readerCount197);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableSend Read194_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations198 = 0;
            int readerCount198 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations198, ref readerCount198);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableReply Read193_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsThemeSelectionMenuOfferableReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations199 = 0;
            int readerCount199 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id408_IsThemeSelectionMenuOfferable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@IsThemeSelectionMenuOfferable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferable");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:IsThemeSelectionMenuOfferable");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations199, ref readerCount199);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableSend Read192_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations200 = 0;
            int readerCount200 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations200, ref readerCount200);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableReply Read191_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerCashoutOfferableReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations201 = 0;
            int readerCount201 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id454_IsPlayerCashoutOfferable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@IsPlayerCashoutOfferable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:IsPlayerCashoutOfferable, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:IsPlayerCashoutOfferable, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations201, ref readerCount201);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableSend Read190_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations202 = 0;
            int readerCount202 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations202, ref readerCount202);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableReply Read189_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsPlayerBankToWagerableOfferableReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations203 = 0;
            int readerCount203 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id455_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@IsPlayerBankToWagerableOfferable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:IsPlayerBankToWagerableOfferable, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:IsPlayerBankToWagerableOfferable, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations203, ref readerCount203);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedSend Read188_GameControlIsBankLockedSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations204 = 0;
            int readerCount204 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations204, ref readerCount204);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedReply Read187_GameControlIsBankLockedReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlIsBankLockedReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations205 = 0;
            int readerCount205 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id456_IsBankLocked && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@IsBankLocked = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:IsBankLocked, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:IsBankLocked, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations205, ref readerCount205);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextSend Read186_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations206 = 0;
            int readerCount206 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations206, ref readerCount206);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextReply Read185_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlInactivateThemeContextReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations207 = 0;
            int readerCount207 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations207, ref readerCount207);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSend Read184_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSend();
            bool[] paramsRead = new bool[7];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations208 = 0;
            int readerCount208 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id457_Count && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Count = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id458_Duplicates && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Duplicates = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id459_MinimumValue && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@MinimumValue = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());
                        }
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id460_MaximumValue && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@MaximumValue = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());
                        }
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id461_Name && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Name = Reader.ReadElementString();
                        }
                        paramsRead[5] = true;
                    }
                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id462_AlreadyPickedNumbers && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AlreadyPickedNumbers = Read183_Item(false, true);
                        paramsRead[6] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Count, F2LGameControlVer4.xsd:Duplicates, F2LGameControlVer4.xsd:MinimumValue, F2LGameControlVer4.xsd:MaximumValue, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:AlreadyPickedNumbers");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Count, F2LGameControlVer4.xsd:Duplicates, F2LGameControlVer4.xsd:MinimumValue, F2LGameControlVer4.xsd:MaximumValue, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:AlreadyPickedNumbers");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations208, ref readerCount208);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSendAlreadyPickedNumbers Read183_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSendAlreadyPickedNumbers o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersSendAlreadyPickedNumbers();
            if ((object)(o.@AlreadyPickedNumber) == null) o.@AlreadyPickedNumber = new global::System.Collections.Generic.List<global::System.Int32>();
            global::System.Collections.Generic.List<global::System.Int32> a_0 = (global::System.Collections.Generic.List<global::System.Int32>)o.@AlreadyPickedNumber;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations209 = 0;
            int readerCount209 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id463_AlreadyPickedNumber && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:AlreadyPickedNumber");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:AlreadyPickedNumber");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations209, ref readerCount209);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReply Read182_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations210 = 0;
            int readerCount210 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id464_RandomNumbers && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@RandomNumbers = Read181_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:RandomNumbers");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:RandomNumbers");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations210, ref readerCount210);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReplyRandomNumbers Read181_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReplyRandomNumbers o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetRandomNumbersReplyRandomNumbers();
            if ((object)(o.@RandomNumber) == null) o.@RandomNumber = new global::System.Collections.Generic.List<global::System.Int32>();
            global::System.Collections.Generic.List<global::System.Int32> a_0 = (global::System.Collections.Generic.List<global::System.Int32>)o.@RandomNumber;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations211 = 0;
            int readerCount211 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id465_RandomNumber && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:RandomNumber");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:RandomNumber");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations211, ref readerCount211);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesSend Read180_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesSend();
            if ((object)(o.@Denominations) == null) o.@Denominations = new global::System.Collections.Generic.List<global::System.UInt32>();
            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@Denominations;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations212 = 0;
            int readerCount212 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id466_Denominations && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denominations");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denominations");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations212, ref readerCount212);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReply Read179_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReply();
            if ((object)(o.@ProgressiveGameLevelValues) == null) o.@ProgressiveGameLevelValues = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues>)o.@ProgressiveGameLevelValues;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations213 = 0;
            int readerCount213 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id467_ProgressiveGameLevelValues && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read178_Item(false, true));
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:ProgressiveGameLevelValues, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:ProgressiveGameLevelValues, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations213, ref readerCount213);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues Read178_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues();
            if ((object)(o.@GameLevelProgressives) == null) o.@GameLevelProgressives = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue>)o.@GameLevelProgressives;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations214 = 0;
            int readerCount214 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id468_Denomination && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Denomination = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id469_GameLevelProgressives && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read177_GameLevelProgressiveValue(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denomination, F2LGameControlVer4.xsd:GameLevelProgressives");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Denomination, F2LGameControlVer4.xsd:GameLevelProgressives");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations214, ref readerCount214);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue Read177_GameLevelProgressiveValue(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id470_GameLevelProgressiveValue && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameLevelProgressiveValue();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations215 = 0;
            int readerCount215 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id471_GameLevel && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@GameLevel = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id51_Amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Amount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id52_PrizeString && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@PrizeString = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:GameLevel, F2LGameControlVer4.xsd:Amount, F2LGameControlVer4.xsd:PrizeString");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:GameLevel, F2LGameControlVer4.xsd:Amount, F2LGameControlVer4.xsd:PrizeString");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations215, ref readerCount215);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersSend Read176_GameControlGetPlayerMetersSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations216 = 0;
            int readerCount216 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations216, ref readerCount216);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersReply Read175_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetPlayerMetersReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations217 = 0;
            int readerCount217 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id441_PlayerMeters && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PlayerMeters = Read174_PlayerMeters(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:PlayerMeters, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:PlayerMeters, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations217, ref readerCount217);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSend Read173_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSend();
            if ((object)(o.@RangeList) == null) o.@RangeList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange> a_3 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange>)o.@RangeList;
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations218 = 0;
            int readerCount218 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id457_Count && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Count = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id461_Name && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Name = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id472_RangeList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if (!ReadNull()) {
                            if ((object)(o.@RangeList) == null) o.@RangeList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange>();
                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange> a_3_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange>)o.@RangeList;
                            if ((Reader.IsEmptyElement)) {
                                Reader.Skip();
                            }
                            else {
                                Reader.ReadStartElement();
                                Reader.MoveToContent();
                                int whileIterations219 = 0;
                                int readerCount219 = ReaderCount;
                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                                        if (((object) Reader.LocalName == (object)id473_Range && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                                            if ((object)(a_3_0) == null) Reader.Skip(); else a_3_0.Add(Read172_Item(false, true));
                                        }
                                        else {
                                            UnknownNode(null, @"F2LGameControlVer4.xsd:Range");
                                        }
                                    }
                                    else {
                                        UnknownNode(null, @"F2LGameControlVer4.xsd:Range");
                                    }
                                    Reader.MoveToContent();
                                    CheckReaderCount(ref whileIterations219, ref readerCount219);
                                }
                            ReadEndElement();
                            }
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Count, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:RangeList");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Count, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:RangeList");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations218, ref readerCount218);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange Read172_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersSendRange();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id459_MinimumValue && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@MinimumValue = System.Xml.XmlConvert.ToInt32(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id460_MaximumValue && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@MaximumValue = System.Xml.XmlConvert.ToInt32(Reader.Value);
                    paramsRead[1] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:MinimumValue, F2LGameControlVer4.xsd:MaximumValue");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations220 = 0;
            int readerCount220 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations220, ref readerCount220);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReply Read171_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations221 = 0;
            int readerCount221 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id464_RandomNumbers && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@RandomNumbers = Read170_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:RandomNumbers");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:RandomNumbers");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations221, ref readerCount221);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReplyRandomNumbers Read170_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReplyRandomNumbers o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetListLimitedRandomNumbersReplyRandomNumbers();
            if ((object)(o.@RandomNumber) == null) o.@RandomNumber = new global::System.Collections.Generic.List<global::System.Int32>();
            global::System.Collections.Generic.List<global::System.Int32> a_0 = (global::System.Collections.Generic.List<global::System.Int32>)o.@RandomNumber;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations222 = 0;
            int readerCount222 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id465_RandomNumber && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:RandomNumber");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:RandomNumber");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations222, ref readerCount222);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesSend Read169_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations223 = 0;
            int readerCount223 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id474_Scope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Scope = Read151_CustomConfigItemScope(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Scope");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Scope");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations223, ref readerCount223);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope Read151_CustomConfigItemScope(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope.@Invalid;
                case @"Payvar": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope.@Payvar;
                case @"Theme": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope.@Theme;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemScope));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesReply Read168_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypesReply();
            if ((object)(o.@CustomConfigItemTypePairs) == null) o.@CustomConfigItemTypePairs = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair>)o.@CustomConfigItemTypePairs;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations224 = 0;
            int readerCount224 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id475_CustomConfigItemTypePairs && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if (!ReadNull()) {
                            if ((object)(o.@CustomConfigItemTypePairs) == null) o.@CustomConfigItemTypePairs = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair>();
                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair>)o.@CustomConfigItemTypePairs;
                            if ((Reader.IsEmptyElement)) {
                                Reader.Skip();
                            }
                            else {
                                Reader.ReadStartElement();
                                Reader.MoveToContent();
                                int whileIterations225 = 0;
                                int readerCount225 = ReaderCount;
                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                                        if (((object) Reader.LocalName == (object)id476_CustomConfigItemTypePair && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read167_CustomConfigItemTypePair(false, true));
                                        }
                                        else {
                                            UnknownNode(null, @"F2LGameControlVer4.xsd:CustomConfigItemTypePair");
                                        }
                                    }
                                    else {
                                        UnknownNode(null, @"F2LGameControlVer4.xsd:CustomConfigItemTypePair");
                                    }
                                    Reader.MoveToContent();
                                    CheckReaderCount(ref whileIterations225, ref readerCount225);
                                }
                            ReadEndElement();
                            }
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:CustomConfigItemTypePairs");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:CustomConfigItemTypePairs");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations224, ref readerCount224);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair Read167_CustomConfigItemTypePair(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id476_CustomConfigItemTypePair && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemTypePair();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations226 = 0;
            int readerCount226 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id461_Name && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Name = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id477_Type && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Type = Read163_CustomConfigItemType(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Type");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Type");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations226, ref readerCount226);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType Read163_CustomConfigItemType(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Invalid;
                case @"Amount": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Amount;
                case @"Boolean": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Boolean;
                case @"Enumeration": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Enumeration;
                case @"FlagList": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@FlagList;
                case @"Float": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Float;
                case @"Int64": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Int64;
                case @"Item": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@Item;
                case @"String": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType.@String;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CustomConfigItemType));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeSend Read166_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations227 = 0;
            int readerCount227 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id461_Name && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Name = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id474_Scope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Scope = Read151_CustomConfigItemScope(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Scope");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Scope");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations227, ref readerCount227);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeReply Read165_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemTypeReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations228 = 0;
            int readerCount228 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id477_Type && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Type = Read163_CustomConfigItemType(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:Type");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:Type");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations228, ref readerCount228);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemSend Read164_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemSend();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations229 = 0;
            int readerCount229 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id461_Name && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Name = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id474_Scope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Scope = Read151_CustomConfigItemScope(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id477_Type && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Type = Read163_CustomConfigItemType(Reader.ReadElementString());
                        }
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Scope, F2LGameControlVer4.xsd:Type");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Scope, F2LGameControlVer4.xsd:Type");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations229, ref readerCount229);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReply Read162_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations230 = 0;
            int readerCount230 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id478_CustomConfigItem && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@CustomConfigItem = Read161_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:CustomConfigItem");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:CustomConfigItem");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations230, ref readerCount230);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItem Read161_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItem o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItem();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations231 = 0;
            int readerCount231 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id479_AmountData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read153_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id480_BooleanData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Item = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id481_EnumerationData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read154_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id482_FlagListData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read156_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id483_FloatData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read157_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id484_Int64Data && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read158_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id485_ItemData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read159_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_StringData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Item = Read160_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:AmountData, F2LGameControlVer4.xsd:BooleanData, F2LGameControlVer4.xsd:EnumerationData, F2LGameControlVer4.xsd:FlagListData, F2LGameControlVer4.xsd:FloatData, F2LGameControlVer4.xsd:Int64Data, F2LGameControlVer4.xsd:ItemData, F2LGameControlVer4.xsd:StringData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:AmountData, F2LGameControlVer4.xsd:BooleanData, F2LGameControlVer4.xsd:EnumerationData, F2LGameControlVer4.xsd:FlagListData, F2LGameControlVer4.xsd:FloatData, F2LGameControlVer4.xsd:Int64Data, F2LGameControlVer4.xsd:ItemData, F2LGameControlVer4.xsd:StringData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations231, ref readerCount231);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemStringData Read160_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemStringData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemStringData();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id487_MaxLength && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@MaxLength = System.Xml.XmlConvert.ToInt64(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:MaxLength");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations232 = 0;
            int readerCount232 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                string tmp = null;
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else if (Reader.NodeType == System.Xml.XmlNodeType.Text || 
                Reader.NodeType == System.Xml.XmlNodeType.CDATA || 
                Reader.NodeType == System.Xml.XmlNodeType.Whitespace || 
                Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace) {
                    tmp = ReadString(tmp, false);
                    o.@Value = tmp;
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations232, ref readerCount232);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemItemData Read159_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemItemData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemItemData();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id488_EnumerationReferenceName && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@EnumerationReferenceName = Reader.Value;
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id489_EnumerationReferenceScope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@EnumerationReferenceScope = Read151_CustomConfigItemScope(Reader.Value);
                    paramsRead[1] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:EnumerationReferenceName, F2LGameControlVer4.xsd:EnumerationReferenceScope");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations233 = 0;
            int readerCount233 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                string tmp = null;
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else if (Reader.NodeType == System.Xml.XmlNodeType.Text || 
                Reader.NodeType == System.Xml.XmlNodeType.CDATA || 
                Reader.NodeType == System.Xml.XmlNodeType.Whitespace || 
                Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace) {
                    tmp = ReadString(tmp, false);
                    o.@Value = tmp;
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations233, ref readerCount233);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data Read158_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id490_Min && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@Min = System.Xml.XmlConvert.ToInt64(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id491_Max && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@Max = System.Xml.XmlConvert.ToInt64(Reader.Value);
                    paramsRead[1] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Min, F2LGameControlVer4.xsd:Max");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations234 = 0;
            int readerCount234 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                string tmp = null;
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else if (Reader.NodeType == System.Xml.XmlNodeType.Text || 
                Reader.NodeType == System.Xml.XmlNodeType.CDATA || 
                Reader.NodeType == System.Xml.XmlNodeType.Whitespace || 
                Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace) {
                    o.@Value = System.Xml.XmlConvert.ToInt64(Reader.ReadString());
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations234, ref readerCount234);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFloatData Read157_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFloatData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFloatData();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id491_Max && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@Max = System.Xml.XmlConvert.ToSingle(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id490_Min && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@Min = System.Xml.XmlConvert.ToSingle(Reader.Value);
                    paramsRead[1] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Max, F2LGameControlVer4.xsd:Min");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations235 = 0;
            int readerCount235 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                string tmp = null;
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else if (Reader.NodeType == System.Xml.XmlNodeType.Text || 
                Reader.NodeType == System.Xml.XmlNodeType.CDATA || 
                Reader.NodeType == System.Xml.XmlNodeType.Whitespace || 
                Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace) {
                    o.@Value = System.Xml.XmlConvert.ToSingle(Reader.ReadString());
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations235, ref readerCount235);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData Read156_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData();
            if ((object)(o.@FlagList) == null) o.@FlagList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType>)o.@FlagList;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations236 = 0;
            int readerCount236 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id492_FlagList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read155_FlagListType(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:FlagList");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:FlagList");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations236, ref readerCount236);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType Read155_FlagListType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id493_FlagListType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FlagListType();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations237 = 0;
            int readerCount237 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id494_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Item = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id54_Value && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Value = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Item, F2LGameControlVer4.xsd:Value");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Item, F2LGameControlVer4.xsd:Value");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations237, ref readerCount237);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData Read154_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData();
            if ((object)(o.@Item) == null) o.@Item = new global::System.Collections.Generic.List<global::System.String>();
            global::System.Collections.Generic.List<global::System.String> a_0 = (global::System.Collections.Generic.List<global::System.String>)o.@Item;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations238 = 0;
            int readerCount238 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id494_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(Reader.ReadElementString());
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Item");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Item");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations238, ref readerCount238);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemAmountData Read153_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemAmountData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReplyCustomConfigItemAmountData();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations239 = 0;
            int readerCount239 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id54_Value && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Value = Read40_AmountType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id490_Min && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Min = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id491_Max && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Max = Read40_AmountType(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Value, F2LGameControlVer4.xsd:Min, F2LGameControlVer4.xsd:Max");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Value, F2LGameControlVer4.xsd:Min, F2LGameControlVer4.xsd:Max");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations239, ref readerCount239);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationSend Read152_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations240 = 0;
            int readerCount240 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id461_Name && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Name = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id474_Scope && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Scope = Read151_CustomConfigItemScope(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Scope");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Name, F2LGameControlVer4.xsd:Scope");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations240, ref readerCount240);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReply Read150_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations241 = 0;
            int readerCount241 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id481_EnumerationData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@EnumerationData = Read149_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:EnumerationData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:EnumerationData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations241, ref readerCount241);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData Read149_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData();
            if ((object)(o.@Item) == null) o.@Item = new global::System.Collections.Generic.List<global::System.String>();
            global::System.Collections.Generic.List<global::System.String> a_0 = (global::System.Collections.Generic.List<global::System.String>)o.@Item;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations242 = 0;
            int readerCount242 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id494_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(Reader.ReadElementString());
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Item");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Item");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations242, ref readerCount242);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureSend Read148_GameControlGetCultureSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations243 = 0;
            int readerCount243 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations243, ref readerCount243);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureReply Read147_GameControlGetCultureReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCultureReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations244 = 0;
            int readerCount244 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id495_CurrentCulture && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CurrentCulture = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CurrentCulture, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CurrentCulture, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations244, ref readerCount244);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoSend Read146_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations245 = 0;
            int readerCount245 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations245, ref readerCount245);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoReply Read145_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCreditFormatterInfoReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations246 = 0;
            int readerCount246 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id496_CreditFormatterInfo && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@CreditFormatterInfo = Read144_CreditFormatterInfoType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CreditFormatterInfo, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CreditFormatterInfo, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations246, ref readerCount246);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditFormatterInfoType Read144_CreditFormatterInfoType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id497_CreditFormatterInfoType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id498_F2LLocalizationTypeVer1xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditFormatterInfoType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditFormatterInfoType();
            bool[] paramsRead = new bool[5];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations247 = 0;
            int readerCount247 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id499_NumericDecimalSeparator && (object) Reader.NamespaceURI == (object)id498_F2LLocalizationTypeVer1xsd)) {
                        {
                            o.@NumericDecimalSeparator = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id500_NumericGroupSeparator && (object) Reader.NamespaceURI == (object)id498_F2LLocalizationTypeVer1xsd)) {
                        {
                            o.@NumericGroupSeparator = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id501_WholeUnitCurrencySymbol && (object) Reader.NamespaceURI == (object)id498_F2LLocalizationTypeVer1xsd)) {
                        {
                            o.@WholeUnitCurrencySymbol = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id502_BaseUnitCurrencySymbol && (object) Reader.NamespaceURI == (object)id498_F2LLocalizationTypeVer1xsd)) {
                        {
                            o.@BaseUnitCurrencySymbol = Reader.ReadElementString();
                        }
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id503_Item && (object) Reader.NamespaceURI == (object)id498_F2LLocalizationTypeVer1xsd)) {
                        o.@UseGroupSeparatorForNonMonetaryNumbersSpecified = true;
                        {
                            o.@UseGroupSeparatorForNonMonetaryNumbers = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLocalizationTypeVer1.xsd:NumericDecimalSeparator, F2LLocalizationTypeVer1.xsd:NumericGroupSeparator, F2LLocalizationTypeVer1.xsd:WholeUnitCurrencySymbol, F2LLocalizationTypeVer1.xsd:BaseUnitCurrencySymbol, F2LLocalizationTypeVer1.xsd:UseGroupSeparatorForNonMonetaryNumbers");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLocalizationTypeVer1.xsd:NumericDecimalSeparator, F2LLocalizationTypeVer1.xsd:NumericGroupSeparator, F2LLocalizationTypeVer1.xsd:WholeUnitCurrencySymbol, F2LLocalizationTypeVer1.xsd:BaseUnitCurrencySymbol, F2LLocalizationTypeVer1.xsd:UseGroupSeparatorForNonMonetaryNumbers");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations247, ref readerCount247);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorSend Read143_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations248 = 0;
            int readerCount248 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations248, ref readerCount248);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorReply Read142_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapBehaviorReply();
            bool[] paramsRead = new bool[4];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations249 = 0;
            int readerCount249 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id504_WinCapBehavior && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@WinCapBehavior = Read141_WinCapBehavior(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id505_WinCapMultiplier && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@WinCapMultiplierSpecified = true;
                        {
                            o.@WinCapMultiplier = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id506_WinCapAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@WinCapAmount = Read40_AmountType(false, true);
                        paramsRead[3] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:WinCapBehavior, F2LGameControlVer4.xsd:WinCapMultiplier, F2LGameControlVer4.xsd:WinCapAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:WinCapBehavior, F2LGameControlVer4.xsd:WinCapMultiplier, F2LGameControlVer4.xsd:WinCapAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations249, ref readerCount249);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior Read141_WinCapBehavior(string s) {
            switch (s) {
                case @"FixedWinCapAmount": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior.@FixedWinCapAmount;
                case @"MultipliedByCurrentBet": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior.@MultipliedByCurrentBet;
                case @"MultipliedByMaxBet": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior.@MultipliedByMaxBet;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WinCapBehavior));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountSend Read140_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations250 = 0;
            int readerCount250 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations250, ref readerCount250);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountReply Read139_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataWinCapAmountReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations251 = 0;
            int readerCount251 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id506_WinCapAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@WinCapAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:WinCapAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:WinCapAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations251, ref readerCount251);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend Read138_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations252 = 0;
            int readerCount252 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations252, ref readerCount252);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply Read137_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations253 = 0;
            int readerCount253 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id507_RoundWagerUpPlayoffEnabled && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@RoundWagerUpPlayoffEnabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:RoundWagerUpPlayoffEnabled, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:RoundWagerUpPlayoffEnabled, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations253, ref readerCount253);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend Read136_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations254 = 0;
            int readerCount254 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations254, ref readerCount254);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply Read135_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations255 = 0;
            int readerCount255 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id508_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@MinimumFreeSpinPresentationTime = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MinimumFreeSpinPresentationTime");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MinimumFreeSpinPresentationTime");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations255, ref readerCount255);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeSend Read134_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations256 = 0;
            int readerCount256 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations256, ref readerCount256);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeReply Read133_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinimumBaseGamePresentationTimeReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations257 = 0;
            int readerCount257 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id509_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@MinimumBaseGamePresentationTime = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MinimumBaseGamePresentationTime");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MinimumBaseGamePresentationTime");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations257, ref readerCount257);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountSend Read132_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations258 = 0;
            int readerCount258 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations258, ref readerCount258);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountReply Read131_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMinBetAmountReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations259 = 0;
            int readerCount259 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id510_MinBetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@MinBetAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MinBetAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MinBetAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations259, ref readerCount259);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorSend Read130_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations260 = 0;
            int readerCount260 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations260, ref readerCount260);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorReply Read129_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetButtonBehaviorReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations261 = 0;
            int readerCount261 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id511_MaxBetButtonBehavior && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@MaxBetButtonBehavior = Read128_MaxBetButtonBehavior(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MaxBetButtonBehavior");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MaxBetButtonBehavior");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations261, ref readerCount261);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior Read128_MaxBetButtonBehavior(string s) {
            switch (s) {
                case @"BetMaxCreditsOnly": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior.@BetMaxCreditsOnly;
                case @"BetAvailableCredits": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior.@BetAvailableCredits;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.MaxBetButtonBehavior));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountSend Read127_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations262 = 0;
            int readerCount262 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations262, ref readerCount262);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountReply Read126_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataMaxBetAmountReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations263 = 0;
            int readerCount263 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id512_MaxBetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@MaxBetAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MaxBetAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:MaxBetAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations263, ref readerCount263);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionSend Read125_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations264 = 0;
            int readerCount264 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations264, ref readerCount264);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionReply Read124_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataLineSelectionReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations265 = 0;
            int readerCount265 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id513_LineSelection && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@LineSelection = Read123_LineSelectionType(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:LineSelection");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:LineSelection");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations265, ref readerCount265);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType Read123_LineSelectionType(string s) {
            switch (s) {
                case @"Undefined": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType.@Undefined;
                case @"Forced": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType.@Forced;
                case @"PlayerSelectable": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType.@PlayerSelectable;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LineSelectionType));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsSend Read122_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations266 = 0;
            int readerCount266 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations266, ref readerCount266);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsReply Read121_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataHistoryPlayStepsReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations267 = 0;
            int readerCount267 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id514_NumberOfPlaySteps && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@NumberOfPlaySteps = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:NumberOfPlaySteps");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:NumberOfPlaySteps");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations267, ref readerCount267);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorSend Read120_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations268 = 0;
            int readerCount268 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations268, ref readerCount268);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorReply Read119_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataCreditMeterDisplayBehaviorReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations269 = 0;
            int readerCount269 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id515_CreditMeterDisplayBehavior && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CreditMeterDisplayBehavior = Read118_CreditMeterDisplayBehaviorType(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:CreditMeterDisplayBehavior");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:CreditMeterDisplayBehavior");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations269, ref readerCount269);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType Read118_CreditMeterDisplayBehaviorType(string s) {
            switch (s) {
                case @"Invalid": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@Invalid;
                case @"PlayerSelectableDefaultCredits": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@PlayerSelectableDefaultCredits;
                case @"PlayerSelectableDefaultCurrency": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@PlayerSelectableDefaultCurrency;
                case @"AlwaysCurrency": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType.@AlwaysCurrency;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CreditMeterDisplayBehaviorType));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountSend Read117_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations270 = 0;
            int readerCount270 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations270, ref readerCount270);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountReply Read116_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataButtonPanelMinBetAmountReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations271 = 0;
            int readerCount271 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id516_ButtonPanelMinBetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@ButtonPanelMinBetAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:ButtonPanelMinBetAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply, F2LGameControlVer4.xsd:ButtonPanelMinBetAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations271, ref readerCount271);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledSend Read115_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations272 = 0;
            int readerCount272 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations272, ref readerCount272);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledReply Read114_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataBonusPlayEnabledReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations273 = 0;
            int readerCount273 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id517_BonusPlayEnabled && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@BonusPlayEnabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BonusPlayEnabled, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BonusPlayEnabled, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations273, ref readerCount273);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitSend Read113_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations274 = 0;
            int readerCount274 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations274, ref readerCount274);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitReply Read112_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryMonetaryLimitReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations275 = 0;
            int readerCount275 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id518_AncillaryMonetaryLimit && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@AncillaryMonetaryLimit = Read40_AmountType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryMonetaryLimit, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryMonetaryLimit, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations275, ref readerCount275);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledSend Read111_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations276 = 0;
            int readerCount276 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations276, ref readerCount276);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledReply Read110_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryGameEnabledReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations277 = 0;
            int readerCount277 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id519_AncillaryGameEnabled && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@AncillaryGameEnabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryGameEnabled, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryGameEnabled, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations277, ref readerCount277);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitSend Read109_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations278 = 0;
            int readerCount278 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations278, ref readerCount278);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitReply Read108_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetConfigDataAncillaryCycleLimitReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations279 = 0;
            int readerCount279 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id520_AncillaryCycleLimit && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@AncillaryCycleLimit = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryCycleLimit, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryCycleLimit, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations279, ref readerCount279);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetSend Read107_GameControlGetCommittedBetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations280 = 0;
            int readerCount280 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations280, ref readerCount280);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetReply Read106_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetCommittedBetReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations281 = 0;
            int readerCount281 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id521_CommittedBetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@CommittedBetAmount = Read40_AmountType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommittedBetAmount, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommittedBetAmount, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations281, ref readerCount281);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesSend Read105_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations282 = 0;
            int readerCount282 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations282, ref readerCount282);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesReply Read104_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlGetAvailableCulturesReply();
            if ((object)(o.@AvailableCulture) == null) o.@AvailableCulture = new global::System.Collections.Generic.List<global::System.String>();
            global::System.Collections.Generic.List<global::System.String> a_0 = (global::System.Collections.Generic.List<global::System.String>)o.@AvailableCulture;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations283 = 0;
            int readerCount283 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id522_AvailableCulture && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(Reader.ReadElementString());
                        }
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:AvailableCulture, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:AvailableCulture, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations283, ref readerCount283);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseSend Read103_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations284 = 0;
            int readerCount284 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations284, ref readerCount284);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseReply Read102_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardResponseReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations285 = 0;
            int readerCount285 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations285, ref readerCount285);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestSend Read101_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations286 = 0;
            int readerCount286 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations286, ref readerCount286);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestReply Read100_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlFinalizeAwardRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations287 = 0;
            int readerCount287 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations287, ref readerCount287);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseSend Read99_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations288 = 0;
            int readerCount288 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id523_OutcomeList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@OutcomeList = Read88_OutcomeList(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id524_IsPlayComplete && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@IsPlayComplete = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList, F2LGameControlVer4.xsd:IsPlayComplete");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList, F2LGameControlVer4.xsd:IsPlayComplete");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations288, ref readerCount288);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList Read88_OutcomeList(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id523_OutcomeList && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeList();
            if ((object)(o.@FeatureEntry) == null) o.@FeatureEntry = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry>)o.@FeatureEntry;
            if ((object)(o.@GameCycleEntry) == null) o.@GameCycleEntry = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry>)o.@GameCycleEntry;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations289 = 0;
            int readerCount289 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id525_FeatureEntry && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read86_OutcomeListFeatureEntry(false, true));
                    }
                    else if (((object) Reader.LocalName == (object)id526_GameCycleEntry && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read87_OutcomeListGameCycleEntry(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:FeatureEntry, F2LGameControlVer4.xsd:GameCycleEntry");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:FeatureEntry, F2LGameControlVer4.xsd:GameCycleEntry");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations289, ref readerCount289);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry Read87_OutcomeListGameCycleEntry(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListGameCycleEntry();
            if ((object)(o.@Award) == null) o.@Award = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award>)o.@Award;
            if ((object)(o.@ProgressiveAward) == null) o.@ProgressiveAward = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward>)o.@ProgressiveAward;
            if ((object)(o.@BonusExtensionAward) == null) o.@BonusExtensionAward = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward> a_2 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward>)o.@BonusExtensionAward;
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations290 = 0;
            int readerCount290 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id527_Award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read82_Award(false, true));
                    }
                    else if (((object) Reader.LocalName == (object)id528_ProgressiveAward && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read78_ProgressiveAward(false, true));
                    }
                    else if (((object) Reader.LocalName == (object)id529_BonusExtensionAward && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_2) == null) Reader.Skip(); else a_2.Add(Read74_BonusExtensionAward(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Award, F2LGameControlVer4.xsd:ProgressiveAward, F2LGameControlVer4.xsd:BonusExtensionAward");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Award, F2LGameControlVer4.xsd:ProgressiveAward, F2LGameControlVer4.xsd:BonusExtensionAward");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations290, ref readerCount290);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward Read74_BonusExtensionAward(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id529_BonusExtensionAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.BonusExtensionAward();
            bool[] paramsRead = new bool[10];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id534_is_displayable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_displayable = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    paramsRead[5] = true;
                }
                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id535_displayable_reason && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@displayable_reason = Reader.Value;
                    paramsRead[6] = true;
                }
                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id536_prize_string && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@prize_string = Reader.Value;
                    paramsRead[7] = true;
                }
                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id537_is_top_award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_top_award = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    o.@is_top_awardSpecified = true;
                    paramsRead[8] = true;
                }
                else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id538_bonus_identifier && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@bonus_identifier = System.Xml.XmlConvert.ToInt64(Reader.Value);
                    o.@bonus_identifierSpecified = true;
                    paramsRead[9] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:is_displayable, F2LGameControlVer4.xsd:displayable_reason, F2LGameControlVer4.xsd:prize_string, F2LGameControlVer4.xsd:is_top_award, F2LGameControlVer4.xsd:bonus_identifier");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations291 = 0;
            int readerCount291 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[4] && ((object) Reader.LocalName == (object)id539_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@amount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations291, ref readerCount291);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin Read72_OutcomeOrigin(string s) {
            switch (s) {
                case @"Bin": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin.@Bin;
                case @"Foundation": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin.@Foundation;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeOrigin));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward Read78_ProgressiveAward(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id528_ProgressiveAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else if (((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id540_FeatureProgressiveAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd))
                return Read79_FeatureProgressiveAward(isNullable, false);
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAward();
            bool[] paramsRead = new bool[11];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id534_is_displayable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_displayable = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    paramsRead[5] = true;
                }
                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id535_displayable_reason && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@displayable_reason = Reader.Value;
                    paramsRead[6] = true;
                }
                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id536_prize_string && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@prize_string = Reader.Value;
                    paramsRead[7] = true;
                }
                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id537_is_top_award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_top_award = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    o.@is_top_awardSpecified = true;
                    paramsRead[8] = true;
                }
                else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id541_hit_state && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@hit_state = Read77_ProgressiveAwardHit_state(Reader.Value);
                    paramsRead[9] = true;
                }
                else if (!paramsRead[10] && ((object) Reader.LocalName == (object)id542_game_level && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@game_level = System.Xml.XmlConvert.ToUInt32(Reader.Value);
                    o.@game_levelSpecified = true;
                    paramsRead[10] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:is_displayable, F2LGameControlVer4.xsd:displayable_reason, F2LGameControlVer4.xsd:prize_string, F2LGameControlVer4.xsd:is_top_award, F2LGameControlVer4.xsd:hit_state, F2LGameControlVer4.xsd:game_level");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations292 = 0;
            int readerCount292 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[4] && ((object) Reader.LocalName == (object)id539_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@amount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations292, ref readerCount292);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state Read77_ProgressiveAwardHit_state(string s) {
            switch (s) {
                case @"PotentialHit": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state.@PotentialHit;
                case @"Hit": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state.@Hit;
                case @"NotHit": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state.@NotHit;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveAwardHit_state));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward Read79_FeatureProgressiveAward(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id540_FeatureProgressiveAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward();
            bool[] paramsRead = new bool[12];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id534_is_displayable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_displayable = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    paramsRead[5] = true;
                }
                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id535_displayable_reason && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@displayable_reason = Reader.Value;
                    paramsRead[6] = true;
                }
                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id536_prize_string && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@prize_string = Reader.Value;
                    paramsRead[7] = true;
                }
                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id537_is_top_award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_top_award = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    o.@is_top_awardSpecified = true;
                    paramsRead[8] = true;
                }
                else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id541_hit_state && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@hit_state = Read77_ProgressiveAwardHit_state(Reader.Value);
                    paramsRead[9] = true;
                }
                else if (!paramsRead[10] && ((object) Reader.LocalName == (object)id542_game_level && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@game_level = System.Xml.XmlConvert.ToUInt32(Reader.Value);
                    o.@game_levelSpecified = true;
                    paramsRead[10] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:is_displayable, F2LGameControlVer4.xsd:displayable_reason, F2LGameControlVer4.xsd:prize_string, F2LGameControlVer4.xsd:is_top_award, F2LGameControlVer4.xsd:hit_state, F2LGameControlVer4.xsd:game_level");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations293 = 0;
            int readerCount293 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[4] && ((object) Reader.LocalName == (object)id539_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@amount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[11] && ((object) Reader.LocalName == (object)id543_consolation_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@consolation_amount = Read40_AmountType(false, true);
                        paramsRead[11] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:consolation_amount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:consolation_amount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations293, ref readerCount293);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award Read82_Award(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id527_Award && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else if (((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id544_AncillaryAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd))
                return Read84_AncillaryAward(isNullable, false);
            else if (((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id528_ProgressiveAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd))
                return Read78_ProgressiveAward(isNullable, false);
            else if (((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id540_FeatureProgressiveAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd))
                return Read79_FeatureProgressiveAward(isNullable, false);
            else if (((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id545_FeatureAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd))
                return Read80_FeatureAward(isNullable, false);
            else if (((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id546_RiskAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd))
                return Read76_RiskAward(isNullable, false);
            else if (((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id529_BonusExtensionAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd))
                return Read74_BonusExtensionAward(isNullable, false);
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award();
            bool[] paramsRead = new bool[9];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id534_is_displayable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_displayable = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    paramsRead[5] = true;
                }
                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id535_displayable_reason && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@displayable_reason = Reader.Value;
                    paramsRead[6] = true;
                }
                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id536_prize_string && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@prize_string = Reader.Value;
                    paramsRead[7] = true;
                }
                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id537_is_top_award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_top_award = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    o.@is_top_awardSpecified = true;
                    paramsRead[8] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:is_displayable, F2LGameControlVer4.xsd:displayable_reason, F2LGameControlVer4.xsd:prize_string, F2LGameControlVer4.xsd:is_top_award");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations294 = 0;
            int readerCount294 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[4] && ((object) Reader.LocalName == (object)id539_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@amount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations294, ref readerCount294);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward Read76_RiskAward(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id546_RiskAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAward();
            bool[] paramsRead = new bool[11];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id534_is_displayable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_displayable = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    paramsRead[5] = true;
                }
                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id535_displayable_reason && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@displayable_reason = Reader.Value;
                    paramsRead[6] = true;
                }
                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id536_prize_string && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@prize_string = Reader.Value;
                    paramsRead[7] = true;
                }
                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id537_is_top_award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_top_award = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    o.@is_top_awardSpecified = true;
                    paramsRead[8] = true;
                }
                else if (!paramsRead[10] && ((object) Reader.LocalName == (object)id547_award_type && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@award_type = Read75_RiskAwardAward_type(Reader.Value);
                    paramsRead[10] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:is_displayable, F2LGameControlVer4.xsd:displayable_reason, F2LGameControlVer4.xsd:prize_string, F2LGameControlVer4.xsd:is_top_award, F2LGameControlVer4.xsd:award_type");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations295 = 0;
            int readerCount295 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[4] && ((object) Reader.LocalName == (object)id539_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@amount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id548_risk_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@risk_amount = Read40_AmountType(false, true);
                        paramsRead[9] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:risk_amount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:risk_amount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations295, ref readerCount295);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAwardAward_type Read75_RiskAwardAward_type(string s) {
            switch (s) {
                case @"RoundWagerUpPlayoff": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAwardAward_type.@RoundWagerUpPlayoff;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.RiskAwardAward_type));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward Read80_FeatureAward(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id545_FeatureAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureAward();
            if ((object)(o.@FeatureProgressiveAward) == null) o.@FeatureProgressiveAward = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward> a_9 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.FeatureProgressiveAward>)o.@FeatureProgressiveAward;
            if ((object)(o.@ProgressiveNearHit) == null) o.@ProgressiveNearHit = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit> a_10 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit>)o.@ProgressiveNearHit;
            bool[] paramsRead = new bool[12];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id534_is_displayable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_displayable = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    paramsRead[5] = true;
                }
                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id535_displayable_reason && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@displayable_reason = Reader.Value;
                    paramsRead[6] = true;
                }
                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id536_prize_string && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@prize_string = Reader.Value;
                    paramsRead[7] = true;
                }
                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id537_is_top_award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_top_award = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    o.@is_top_awardSpecified = true;
                    paramsRead[8] = true;
                }
                else if (!paramsRead[11] && ((object) Reader.LocalName == (object)id549_win_level_index && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@win_level_index = System.Xml.XmlConvert.ToUInt32(Reader.Value);
                    paramsRead[11] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:is_displayable, F2LGameControlVer4.xsd:displayable_reason, F2LGameControlVer4.xsd:prize_string, F2LGameControlVer4.xsd:is_top_award, F2LGameControlVer4.xsd:win_level_index");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations296 = 0;
            int readerCount296 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[4] && ((object) Reader.LocalName == (object)id539_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@amount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id540_FeatureProgressiveAward && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_9) == null) Reader.Skip(); else a_9.Add(Read79_FeatureProgressiveAward(false, true));
                    }
                    else if (((object) Reader.LocalName == (object)id550_ProgressiveNearHit && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_10) == null) Reader.Skip(); else a_10.Add(Read73_ProgressiveNearHit(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:FeatureProgressiveAward, F2LGameControlVer4.xsd:ProgressiveNearHit");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:FeatureProgressiveAward, F2LGameControlVer4.xsd:ProgressiveNearHit");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations296, ref readerCount296);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit Read73_ProgressiveNearHit(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id550_ProgressiveNearHit && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProgressiveNearHit();
            bool[] paramsRead = new bool[5];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id542_game_level && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@game_level = System.Xml.XmlConvert.ToUInt32(Reader.Value);
                    o.@game_levelSpecified = true;
                    paramsRead[4] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:game_level");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations297 = 0;
            int readerCount297 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations297, ref readerCount297);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward Read84_AncillaryAward(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id544_AncillaryAward && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAward();
            bool[] paramsRead = new bool[11];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_origin && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@origin = Read72_OutcomeOrigin(Reader.Value);
                    paramsRead[0] = true;
                }
                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id531_tag && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@tag = Reader.Value;
                    paramsRead[1] = true;
                }
                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id532_source && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source = Reader.Value;
                    paramsRead[2] = true;
                }
                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id533_source_detail && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@source_detail = Reader.Value;
                    paramsRead[3] = true;
                }
                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id534_is_displayable && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_displayable = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    paramsRead[5] = true;
                }
                else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id535_displayable_reason && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@displayable_reason = Reader.Value;
                    paramsRead[6] = true;
                }
                else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id536_prize_string && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@prize_string = Reader.Value;
                    paramsRead[7] = true;
                }
                else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id537_is_top_award && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@is_top_award = System.Xml.XmlConvert.ToBoolean(Reader.Value);
                    o.@is_top_awardSpecified = true;
                    paramsRead[8] = true;
                }
                else if (!paramsRead[10] && ((object) Reader.LocalName == (object)id551_win_type && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@win_type = Read83_AncillaryAwardWin_type(Reader.Value);
                    paramsRead[10] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:origin, F2LGameControlVer4.xsd:tag, F2LGameControlVer4.xsd:source, F2LGameControlVer4.xsd:source_detail, F2LGameControlVer4.xsd:is_displayable, F2LGameControlVer4.xsd:displayable_reason, F2LGameControlVer4.xsd:prize_string, F2LGameControlVer4.xsd:is_top_award, F2LGameControlVer4.xsd:win_type");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations298 = 0;
            int readerCount298 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[4] && ((object) Reader.LocalName == (object)id539_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@amount = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id548_risk_amount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@risk_amount = Read40_AmountType(false, true);
                        paramsRead[9] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:risk_amount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:amount, F2LGameControlVer4.xsd:risk_amount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations298, ref readerCount298);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type Read83_AncillaryAwardWin_type(string s) {
            switch (s) {
                case @"Win": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Win;
                case @"Loss": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Loss;
                case @"Tie": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Tie;
                case @"Cancel": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type.@Cancel;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AncillaryAwardWin_type));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry Read86_OutcomeListFeatureEntry(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntry();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id552_feature_index && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                    o.@feature_index = System.Xml.XmlConvert.ToUInt32(Reader.Value);
                    paramsRead[2] = true;
                }
                else if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:feature_index");
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations299 = 0;
            int readerCount299 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id553_FeatureRngNumbers && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@FeatureRngNumbers = Read71_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id554_Awards && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Awards = Read85_OutcomeListFeatureEntryAwards(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:FeatureRngNumbers, F2LGameControlVer4.xsd:Awards");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:FeatureRngNumbers, F2LGameControlVer4.xsd:Awards");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations299, ref readerCount299);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryAwards Read85_OutcomeListFeatureEntryAwards(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryAwards o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryAwards();
            if ((object)(o.@Items) == null) o.@Items = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Award>)o.@Items;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations300 = 0;
            int readerCount300 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id544_AncillaryAward && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read84_AncillaryAward(false, true));
                    }
                    else if (((object) Reader.LocalName == (object)id545_FeatureAward && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read80_FeatureAward(false, true));
                    }
                    else if (((object) Reader.LocalName == (object)id546_RiskAward && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read76_RiskAward(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryAward, F2LGameControlVer4.xsd:FeatureAward, F2LGameControlVer4.xsd:RiskAward");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:AncillaryAward, F2LGameControlVer4.xsd:FeatureAward, F2LGameControlVer4.xsd:RiskAward");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations300, ref readerCount300);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryFeatureRngNumbers Read71_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryFeatureRngNumbers o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.OutcomeListFeatureEntryFeatureRngNumbers();
            if ((object)(o.@Number) == null) o.@Number = new global::System.Collections.Generic.List<global::System.Int32>();
            global::System.Collections.Generic.List<global::System.Int32> a_0 = (global::System.Collections.Generic.List<global::System.Int32>)o.@Number;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations301 = 0;
            int readerCount301 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id555_Number && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToInt32(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Number");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Number");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations301, ref readerCount301);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseReply Read98_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeResponseReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations302 = 0;
            int readerCount302 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations302, ref readerCount302);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestSend Read97_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations303 = 0;
            int readerCount303 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id523_OutcomeList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@OutcomeList = Read88_OutcomeList(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations303, ref readerCount303);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestReply Read96_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalOutcomeRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations304 = 0;
            int readerCount304 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations304, ref readerCount304);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSend Read95_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations305 = 0;
            int readerCount305 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id523_OutcomeList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@OutcomeList = Read88_OutcomeList(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id556_WagerCatOutcomes && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@WagerCatOutcomes = Read94_Item(false, true);
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList, F2LGameControlVer4.xsd:WagerCatOutcomes");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList, F2LGameControlVer4.xsd:WagerCatOutcomes");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations305, ref readerCount305);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSendWagerCatOutcomes Read94_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSendWagerCatOutcomes o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestSendWagerCatOutcomes();
            if ((object)(o.@WagerCatOutcome) == null) o.@WagerCatOutcome = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome>)o.@WagerCatOutcome;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations306 = 0;
            int readerCount306 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id557_WagerCatOutcome && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read93_WagerCatOutcome(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:WagerCatOutcome");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:WagerCatOutcome");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations306, ref readerCount306);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome Read93_WagerCatOutcome(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id557_WagerCatOutcome && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WagerCatOutcome();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations307 = 0;
            int readerCount307 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id127_WagerCatIndex && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@WagerCatIndex = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id126_WagerAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@WagerAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:WagerCatIndex, F2LGameControlVer4.xsd:WagerAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:WagerCatIndex, F2LGameControlVer4.xsd:WagerAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations307, ref readerCount307);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestReply Read92_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastOutcomeRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations308 = 0;
            int readerCount308 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations308, ref readerCount308);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestSend Read91_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations309 = 0;
            int readerCount309 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id523_OutcomeList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@OutcomeList = Read88_OutcomeList(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations309, ref readerCount309);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestReply Read90_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastBonusOutcomeRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations310 = 0;
            int readerCount310 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations310, ref readerCount310);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestSend Read89_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations311 = 0;
            int readerCount311 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id523_OutcomeList && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@OutcomeList = Read88_OutcomeList(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:OutcomeList");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations311, ref readerCount311);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestReply Read70_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEvalLastAncillaryOutcomeRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations312 = 0;
            int readerCount312 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations312, ref readerCount312);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseSend Read69_GameControlEnrollResponseSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseSend();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations313 = 0;
            int readerCount313 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id558_EnrollSuccess && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@EnrollSuccess = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id559_HostEnrollmentData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@HostEnrollmentData = ToByteArrayBase64(false);
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:EnrollSuccess, F2LGameControlVer4.xsd:HostEnrollmentData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:EnrollSuccess, F2LGameControlVer4.xsd:HostEnrollmentData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations313, ref readerCount313);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseReply Read68_GameControlEnrollResponseReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollResponseReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations314 = 0;
            int readerCount314 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations314, ref readerCount314);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleSend Read67_GameControlEnrollGameCycleSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations315 = 0;
            int readerCount315 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id559_HostEnrollmentData && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@HostEnrollmentData = ToByteArrayBase64(false);
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:HostEnrollmentData");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:HostEnrollmentData");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations315, ref readerCount315);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleReply Read66_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEnrollGameCycleReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations316 = 0;
            int readerCount316 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations316, ref readerCount316);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleSend Read65_GameControlEndGameCycleSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations317 = 0;
            int readerCount317 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id560_NumberOfSteps && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@NumberOfSteps = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:NumberOfSteps");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:NumberOfSteps");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations317, ref readerCount317);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleReply Read64_GameControlEndGameCycleReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlEndGameCycleReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations318 = 0;
            int readerCount318 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations318, ref readerCount318);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferSend Read63_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations319 = 0;
            int readerCount319 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations319, ref readerCount319);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferReply Read62_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDisableAncillaryGameOfferReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations320 = 0;
            int readerCount320 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations320, ref readerCount320);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestSend Read61_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations321 = 0;
            int readerCount321 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id468_Denomination && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Denomination = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Denomination");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Denomination");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations321, ref readerCount321);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestReply Read60_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeRequestReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations322 = 0;
            int readerCount322 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id561_RequestAccepted && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@RequestAccepted = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:RequestAccepted, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:RequestAccepted, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations322, ref readerCount322);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledSend Read59_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations323 = 0;
            int readerCount323 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id468_Denomination && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Denomination = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Denomination");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Denomination");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations323, ref readerCount323);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledReply Read58_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlDenominationChangeCancelledReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations324 = 0;
            int readerCount324 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations324, ref readerCount324);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedSend Read57_GameControlCultureChangedSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations325 = 0;
            int readerCount325 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id74_Culture && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Culture = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Culture");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Culture");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations325, ref readerCount325);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedReply Read56_GameControlCultureChangedReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCultureChangedReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations326 = 0;
            int readerCount326 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations326, ref readerCount326);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleSend Read55_GameControlCommitGameCycleSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations327 = 0;
            int readerCount327 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations327, ref readerCount327);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleReply Read54_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitGameCycleReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations328 = 0;
            int readerCount328 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id562_CommitSuccessful && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CommitSuccessful = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitSuccessful, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitSuccessful, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations328, ref readerCount328);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetSend Read53_GameControlCommitBetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations329 = 0;
            int readerCount329 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id430_BetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetAmount = Read40_AmountType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations329, ref readerCount329);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetReply Read52_GameControlCommitBetReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCommitBetReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations330 = 0;
            int readerCount330 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id563_BetCommitted && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@BetCommitted = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetCommitted, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetCommitted, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations330, ref readerCount330);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingSend Read51_GameControlCanStartPlayingSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations331 = 0;
            int readerCount331 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations331, ref readerCount331);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingReply Read50_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanStartPlayingReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations332 = 0;
            int readerCount332 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id564_StartAllowed && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@StartAllowed = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:StartAllowed, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:StartAllowed, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations332, ref readerCount332);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetSend Read49_GameControlCanPlaceBetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetSend();
            bool[] paramsRead = new bool[5];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations333 = 0;
            int readerCount333 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id430_BetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetAmount = Read40_AmountType(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id431_BetFromCreditsAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetFromCreditsAmount = Read40_AmountType(false, true);
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id432_Item && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetFromUncommittedGameWinsAmount = Read40_AmountType(false, true);
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id433_PendingWinsAvailableForThisBet && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@PendingWinsAvailableForThisBet = Read40_AmountType(false, true);
                        paramsRead[4] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:BetFromCreditsAmount, F2LGameControlVer4.xsd:BetFromUncommittedGameWinsAmount, F2LGameControlVer4.xsd:PendingWinsAvailableForThisBet");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:BetFromCreditsAmount, F2LGameControlVer4.xsd:BetFromUncommittedGameWinsAmount, F2LGameControlVer4.xsd:PendingWinsAvailableForThisBet");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations333, ref readerCount333);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetReply Read48_GameControlCanPlaceBetReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanPlaceBetReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations334 = 0;
            int readerCount334 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id565_BetAllowed && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@BetAllowed = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAllowed, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAllowed, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations334, ref readerCount334);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleSend Read47_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations335 = 0;
            int readerCount335 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations335, ref readerCount335);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleReply Read46_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitGameCycleReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations336 = 0;
            int readerCount336 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id566_CommitAllowed && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CommitAllowed = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitAllowed, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitAllowed, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations336, ref readerCount336);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsSend Read45_GameControlCanCommitBetsSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsSend();
            if ((object)(o.@BetAmount) == null) o.@BetAmount = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType>)o.@BetAmount;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations337 = 0;
            int readerCount337 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id430_BetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read40_AmountType(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations337, ref readerCount337);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsReply Read44_GameControlCanCommitBetsReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetsReply();
            if ((object)(o.@CommitAllowed) == null) o.@CommitAllowed = new global::System.Collections.Generic.List<global::System.Boolean>();
            global::System.Collections.Generic.List<global::System.Boolean> a_0 = (global::System.Collections.Generic.List<global::System.Boolean>)o.@CommitAllowed;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations338 = 0;
            int readerCount338 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id566_CommitAllowed && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString()));
                        }
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitAllowed, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitAllowed, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations338, ref readerCount338);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetSend Read43_GameControlCanCommitBetSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations339 = 0;
            int readerCount339 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id430_BetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BetAmount = Read40_AmountType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAmount, F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations339, ref readerCount339);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetReply Read42_GameControlCanCommitBetReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanCommitBetReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations340 = 0;
            int readerCount340 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id566_CommitAllowed && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@CommitAllowed = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitAllowed, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:CommitAllowed, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations340, ref readerCount340);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleSend Read41_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleSend();
            if ((object)(o.@BetAmount) == null) o.@BetAmount = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AmountType>)o.@BetAmount;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations341 = 0;
            int readerCount341 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id430_BetAmount && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read40_AmountType(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BetAmount");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations341, ref readerCount341);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleReply Read39_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlCanBetNextGameCycleReply();
            if ((object)(o.@BetAllowed) == null) o.@BetAllowed = new global::System.Collections.Generic.List<global::System.Boolean>();
            global::System.Collections.Generic.List<global::System.Boolean> a_0 = (global::System.Collections.Generic.List<global::System.Boolean>)o.@BetAllowed;
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations342 = 0;
            int readerCount342 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id565_BetAllowed && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            a_0.Add(System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString()));
                        }
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAllowed, F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:BetAllowed, F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations342, ref readerCount342);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedSend Read38_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations343 = 0;
            int readerCount343 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id425_BankStatus && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@BankStatus = Read37_BankStatus(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BankStatus");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:BankStatus");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations343, ref readerCount343);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedReply Read36_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlBankStatusChangedReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations344 = 0;
            int readerCount344 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations344, ref readerCount344);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextSend Read35_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations345 = 0;
            int readerCount345 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations345, ref readerCount345);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextReply Read34_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActivateThemeContextReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations346 = 0;
            int readerCount346 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations346, ref readerCount346);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseSend Read33_GameControlActionResponseSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseSend();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations347 = 0;
            int readerCount347 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id64_TransactionID && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@TransactionID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:TransactionID, F2LGameControlVer4.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations347, ref readerCount347);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseReply Read32_GameControlActionResponseReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionResponseReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations348 = 0;
            int readerCount348 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations348, ref readerCount348);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestSend Read31_GameControlActionRequestSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations349 = 0;
            int readerCount349 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id85_Payload && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        {
                            o.@Payload = ToByteArrayBase64(false);
                        }
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Payload");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Payload");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations349, ref readerCount349);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestReply Read30_GameControlActionRequestReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_F2LGameControlVer4xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControlActionRequestReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations350 = 0;
            int readerCount350 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id6_F2LGameControlVer4xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LGameControlVer4.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations350, ref readerCount350);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl Read29_LinkControl(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations351 = 0;
            int readerCount351 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Message = Read28_LinkControlMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Version, F2LLinkControlVer2.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Version, F2LLinkControlVer2.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations351, ref readerCount351);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlMessageType Read28_LinkControlMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id567_LinkControlMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations352 = 0;
            int readerCount352 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id568_GetThemeApiVersionsReply && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Item = Read14_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id569_GetThemeApiVersionsSend && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Item = Read22_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id570_ParkReply && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Item = Read23_LinkControlParkReply(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id571_ParkSend && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Item = Read24_LinkControlParkSend(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id572_SetThemeApiVersionsReply && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Item = Read25_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id573_SetThemeApiVersionsSend && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Item = Read27_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:GetThemeApiVersionsReply, F2LLinkControlVer2.xsd:GetThemeApiVersionsSend, F2LLinkControlVer2.xsd:ParkReply, F2LLinkControlVer2.xsd:ParkSend, F2LLinkControlVer2.xsd:SetThemeApiVersionsReply, F2LLinkControlVer2.xsd:SetThemeApiVersionsSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:GetThemeApiVersionsReply, F2LLinkControlVer2.xsd:GetThemeApiVersionsSend, F2LLinkControlVer2.xsd:ParkReply, F2LLinkControlVer2.xsd:ParkSend, F2LLinkControlVer2.xsd:SetThemeApiVersionsReply, F2LLinkControlVer2.xsd:SetThemeApiVersionsSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations352, ref readerCount352);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSend Read27_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations353 = 0;
            int readerCount353 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id574_CategoryVersions && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@CategoryVersions = Read26_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:CategoryVersions");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:CategoryVersions");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations353, ref readerCount353);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSendCategoryVersions Read26_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSendCategoryVersions o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsSendCategoryVersions();
            if ((object)(o.@CategoryVersion) == null) o.@CategoryVersion = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>)o.@CategoryVersion;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations354 = 0;
            int readerCount354 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id575_CategoryVersion && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read4_CategoryVersionType(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:CategoryVersion");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:CategoryVersion");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations354, ref readerCount354);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType Read4_CategoryVersionType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id576_CategoryVersionType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_F2LTypeVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations355 = 0;
            int readerCount355 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id577_Category && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        {
                            o.@Category = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id44_F2LTypeVer2xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LTypeVer2.xsd:Category, F2LTypeVer2.xsd:Version");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LTypeVer2.xsd:Category, F2LTypeVer2.xsd:Version");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations355, ref readerCount355);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsReply Read25_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlSetThemeApiVersionsReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations356 = 0;
            int readerCount356 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations356, ref readerCount356);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkSend Read24_LinkControlParkSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkSend();
            bool[] paramsRead = new bool[0];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations357 = 0;
            int readerCount357 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations357, ref readerCount357);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkReply Read23_LinkControlParkReply(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlParkReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations358 = 0;
            int readerCount358 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations358, ref readerCount358);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSend Read22_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSend();
            if ((object)(o.@Extensions) == null) o.@Extensions = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension> a_8 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension>)o.@Extensions;
            bool[] paramsRead = new bool[9];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations359 = 0;
            int readerCount359 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id578_BinTag && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@BinTag = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id579_BinConnectToken && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@BinConnectToken = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id580_BinTagDataFile && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@BinTagDataFile = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id409_ThemeTag && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@ThemeTag = Reader.ReadElementString();
                        }
                        paramsRead[3] = true;
                    }
                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id410_ThemeTagDataFile && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@ThemeTagDataFile = Reader.ReadElementString();
                        }
                        paramsRead[4] = true;
                    }
                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id411_ResourcePaths && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@ResourcePaths = Read17_Item(false, true);
                        paramsRead[5] = true;
                    }
                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id581_EnvironmentAttributes && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@EnvironmentAttributes = Read19_Item(false, true);
                        paramsRead[6] = true;
                    }
                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id582_Jurisdiction && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@Jurisdiction = Reader.ReadElementString();
                        }
                        paramsRead[7] = true;
                    }
                    else if (((object) Reader.LocalName == (object)id583_Extensions && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        if (!ReadNull()) {
                            if ((object)(o.@Extensions) == null) o.@Extensions = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension>();
                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension> a_8_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension>)o.@Extensions;
                            if ((Reader.IsEmptyElement)) {
                                Reader.Skip();
                            }
                            else {
                                Reader.ReadStartElement();
                                Reader.MoveToContent();
                                int whileIterations360 = 0;
                                int readerCount360 = ReaderCount;
                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                                        if (((object) Reader.LocalName == (object)id84_Extension && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                                            if ((object)(a_8_0) == null) Reader.Skip(); else a_8_0.Add(Read21_ExtensionListExtension(false, true));
                                        }
                                        else {
                                            UnknownNode(null, @"F2LLinkControlVer2.xsd:Extension");
                                        }
                                    }
                                    else {
                                        UnknownNode(null, @"F2LLinkControlVer2.xsd:Extension");
                                    }
                                    Reader.MoveToContent();
                                    CheckReaderCount(ref whileIterations360, ref readerCount360);
                                }
                            ReadEndElement();
                            }
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:BinTag, F2LLinkControlVer2.xsd:BinConnectToken, F2LLinkControlVer2.xsd:BinTagDataFile, F2LLinkControlVer2.xsd:ThemeTag, F2LLinkControlVer2.xsd:ThemeTagDataFile, F2LLinkControlVer2.xsd:ResourcePaths, F2LLinkControlVer2.xsd:EnvironmentAttributes, F2LLinkControlVer2.xsd:Jurisdiction, F2LLinkControlVer2.xsd:Extensions");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:BinTag, F2LLinkControlVer2.xsd:BinConnectToken, F2LLinkControlVer2.xsd:BinTagDataFile, F2LLinkControlVer2.xsd:ThemeTag, F2LLinkControlVer2.xsd:ThemeTagDataFile, F2LLinkControlVer2.xsd:ResourcePaths, F2LLinkControlVer2.xsd:EnvironmentAttributes, F2LLinkControlVer2.xsd:Jurisdiction, F2LLinkControlVer2.xsd:Extensions");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations359, ref readerCount359);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension Read21_ExtensionListExtension(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionListExtension();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations361 = 0;
            int readerCount361 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id584_ExtensionIdentifier && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@ExtensionIdentifier = Reader.ReadElementString();
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id585_ExtensionVersion && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@ExtensionVersion = Read20_ExtensionVersion(false, true);
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id586_ResourceDirectoryBase && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@ResourceDirectoryBase = CollapseWhitespace(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:ExtensionIdentifier, F2LLinkControlVer2.xsd:ExtensionVersion, F2LLinkControlVer2.xsd:ResourceDirectoryBase");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:ExtensionIdentifier, F2LLinkControlVer2.xsd:ExtensionVersion, F2LLinkControlVer2.xsd:ResourceDirectoryBase");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations361, ref readerCount361);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionVersion Read20_ExtensionVersion(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id585_ExtensionVersion && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionVersion o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ExtensionVersion();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations362 = 0;
            int readerCount362 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id57_MajorVersion && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@MajorVersion = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id58_MinorVersion && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@MinorVersion = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id587_PatchVersion && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@PatchVersion = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:MajorVersion, F2LLinkControlVer2.xsd:MinorVersion, F2LLinkControlVer2.xsd:PatchVersion");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:MajorVersion, F2LLinkControlVer2.xsd:MinorVersion, F2LLinkControlVer2.xsd:PatchVersion");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations362, ref readerCount362);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendEnvironmentAttributes Read19_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendEnvironmentAttributes o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendEnvironmentAttributes();
            if ((object)(o.@EnvironmentAttribute) == null) o.@EnvironmentAttribute = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType>)o.@EnvironmentAttribute;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations363 = 0;
            int readerCount363 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id588_EnvironmentAttribute && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            a_0.Add(Read18_EnvironmentAttributeType(Reader.ReadElementString()));
                        }
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:EnvironmentAttribute");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:EnvironmentAttribute");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations363, ref readerCount363);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType Read18_EnvironmentAttributeType(string s) {
            switch (s) {
                case @"banked-credit": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType.@bankedcredit;
                case @"CDS": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType.@CDS;
                case @"show-demo": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType.@showdemo;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.EnvironmentAttributeType));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendResourcePaths Read17_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendResourcePaths o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsSendResourcePaths();
            if ((object)(o.@ResourcePath) == null) o.@ResourcePath = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType>)o.@ResourcePath;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations364 = 0;
            int readerCount364 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id589_ResourcePath && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read16_GameDiscovPathType(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:ResourcePath");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:ResourcePath");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations364, ref readerCount364);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType Read16_GameDiscovPathType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id590_GameDiscovPathType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathType();
            bool[] paramsRead = new bool[3];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations365 = 0;
            int readerCount365 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id591_InclusionType && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@InclusionType = Read15_Item(Reader.ReadElementString());
                        }
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id415_Tag && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@Tag = Reader.ReadElementString();
                        }
                        paramsRead[1] = true;
                    }
                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id416_Path && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        {
                            o.@Path = Reader.ReadElementString();
                        }
                        paramsRead[2] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:InclusionType, F2LLinkControlVer2.xsd:Tag, F2LLinkControlVer2.xsd:Path");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:InclusionType, F2LLinkControlVer2.xsd:Tag, F2LLinkControlVer2.xsd:Path");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations365, ref readerCount365);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType Read15_Item(string s) {
            switch (s) {
                case @"Bin": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType.@Bin;
                case @"Theme": return global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType.@Theme;
                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameDiscovPathTypeInclusionType));
            }
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReply Read14_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations366 = 0;
            int readerCount366 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id574_CategoryVersions && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        o.@CategoryVersions = Read13_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Reply, F2LLinkControlVer2.xsd:CategoryVersions");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:Reply, F2LLinkControlVer2.xsd:CategoryVersions");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations366, ref readerCount366);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReplyCategoryVersions Read13_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_F2LLinkControlVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReplyCategoryVersions o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControlGetThemeApiVersionsReplyCategoryVersions();
            if ((object)(o.@CategoryVersion) == null) o.@CategoryVersion = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>)o.@CategoryVersion;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations367 = 0;
            int readerCount367 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id575_CategoryVersion && (object) Reader.NamespaceURI == (object)id4_F2LLinkControlVer2xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read4_CategoryVersionType(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LLinkControlVer2.xsd:CategoryVersion");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LLinkControlVer2.xsd:CategoryVersion");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations367, ref readerCount367);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect Read12_Connect(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations368 = 0;
            int readerCount368 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id34_Version && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Version = Read2_VersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id35_Message && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Message = Read11_ConnectMessageType(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LConnectVer2.xsd:Version, F2LConnectVer2.xsd:Message");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LConnectVer2.xsd:Version, F2LConnectVer2.xsd:Message");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations368, ref readerCount368);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectMessageType Read11_ConnectMessageType(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id592_ConnectMessageType && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectMessageType o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectMessageType();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations369 = 0;
            int readerCount369 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id593_GetLinkControlApiVersionsReply && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Item = Read6_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id594_GetLinkControlApiVersionsSend && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Item = Read7_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id595_SetLinkControlApiVersionReply && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Item = Read8_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id596_SetLinkControlApiVersionSend && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Item = Read9_Item(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id597_ShutdownSend && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Item = Read10_ConnectShutdownSend(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LConnectVer2.xsd:GetLinkControlApiVersionsReply, F2LConnectVer2.xsd:GetLinkControlApiVersionsSend, F2LConnectVer2.xsd:SetLinkControlApiVersionReply, F2LConnectVer2.xsd:SetLinkControlApiVersionSend, F2LConnectVer2.xsd:ShutdownSend");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LConnectVer2.xsd:GetLinkControlApiVersionsReply, F2LConnectVer2.xsd:GetLinkControlApiVersionsSend, F2LConnectVer2.xsd:SetLinkControlApiVersionReply, F2LConnectVer2.xsd:SetLinkControlApiVersionSend, F2LConnectVer2.xsd:ShutdownSend");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations369, ref readerCount369);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectShutdownSend Read10_ConnectShutdownSend(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectShutdownSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectShutdownSend();
            bool[] paramsRead = new bool[0];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations370 = 0;
            int readerCount370 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations370, ref readerCount370);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionSend Read9_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionSend();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations371 = 0;
            int readerCount371 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id575_CategoryVersion && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@CategoryVersion = Read4_CategoryVersionType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LConnectVer2.xsd:CategoryVersion");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LConnectVer2.xsd:CategoryVersion");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations371, ref readerCount371);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionReply Read8_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectSetLinkControlApiVersionReply();
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations372 = 0;
            int readerCount372 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LConnectVer2.xsd:Reply");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LConnectVer2.xsd:Reply");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations372, ref readerCount372);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsSend Read7_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsSend o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsSend();
            bool[] paramsRead = new bool[0];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations373 = 0;
            int readerCount373 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    UnknownNode((object)o, @"");
                }
                else {
                    UnknownNode((object)o, @"");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations373, ref readerCount373);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReply Read6_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReply o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReply();
            bool[] paramsRead = new bool[2];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations374 = 0;
            int readerCount374 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id42_Reply && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@Reply = Read3_ReplyCodeType(false, true);
                        paramsRead[0] = true;
                    }
                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id574_CategoryVersions && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        o.@CategoryVersions = Read5_Item(false, true);
                        paramsRead[1] = true;
                    }
                    else {
                        UnknownNode((object)o, @"F2LConnectVer2.xsd:Reply, F2LConnectVer2.xsd:CategoryVersions");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LConnectVer2.xsd:Reply, F2LConnectVer2.xsd:CategoryVersions");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations374, ref readerCount374);
            }
            ReadEndElement();
            return o;
        }

        global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReplyCategoryVersions Read5_Item(bool isNullable, bool checkType) {
            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;
            bool isNull = false;
            if (isNullable) isNull = ReadNull();
            if (checkType) {
            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_F2LConnectVer2xsd)) {
            }
            else
                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);
            }
            if (isNull) return null;
            global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReplyCategoryVersions o;
            o = new global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ConnectGetLinkControlApiVersionsReplyCategoryVersions();
            if ((object)(o.@CategoryVersion) == null) o.@CategoryVersion = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>();
            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CategoryVersionType>)o.@CategoryVersion;
            bool[] paramsRead = new bool[1];
            while (Reader.MoveToNextAttribute()) {
                if (!IsXmlnsAttribute(Reader.Name)) {
                    UnknownNode((object)o);
                }
            }
            Reader.MoveToElement();
            if (Reader.IsEmptyElement) {
                Reader.Skip();
                return o;
            }
            Reader.ReadStartElement();
            Reader.MoveToContent();
            int whileIterations375 = 0;
            int readerCount375 = ReaderCount;
            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {
                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {
                    if (((object) Reader.LocalName == (object)id575_CategoryVersion && (object) Reader.NamespaceURI == (object)id2_F2LConnectVer2xsd)) {
                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read4_CategoryVersionType(false, true));
                    }
                    else {
                        UnknownNode((object)o, @"F2LConnectVer2.xsd:CategoryVersion");
                    }
                }
                else {
                    UnknownNode((object)o, @"F2LConnectVer2.xsd:CategoryVersion");
                }
                Reader.MoveToContent();
                CheckReaderCount(ref whileIterations375, ref readerCount375);
            }
            ReadEndElement();
            return o;
        }

        protected override void InitCallbacks() {
        }

        string id95_CdsItalyMockOutcomeData;
        string id167_Item;
        string id44_F2LTypeVer2xsd;
        string id371_RemoveCritDataSend;
        string id73_Item;
        string id90_SetMockEnrollmentDataSend;
        string id412_Denom;
        string id85_Payload;
        string id321_Item;
        string id38_GetProgressiveLevelValuesSend;
        string id310_GetCultureReply;
        string id106_CommitOutcomeReply;
        string id372_RequestThemeSelectionMenuReply;
        string id591_InclusionType;
        string id271_FinalizeAwardResponseSend;
        string id198_Item;
        string id301_Item;
        string id513_LineSelection;
        string id255_EnrollGameCycleSend;
        string id139_PendingPreTaxWin;
        string id561_RequestAccepted;
        string id122_OutcomeResponseReply;
        string id385_StartPlayingSend;
        string id576_CategoryVersionType;
        string id361_PlayerCashoutRequestSend;
        string id522_AvailableCulture;
        string id130_TotalWinAmount;
        string id319_GetCustomConfigItemTypesSend;
        string id382_StartBonusPlayingReply;
        string id2_F2LConnectVer2xsd;
        string id436_GameMode;
        string id109_Item;
        string id115_GetJackpotBonusAwardSend;
        string id363_QueryBankStatusSend;
        string id340_MoneyCommittedChangedReply;
        string id292_GetConfigDataMaxBetAmountReply;
        string id357_PlaceBetSend;
        string id529_BonusExtensionAward;
        string id60_Item;
        string id48_IsOnlineWithHost;
        string id353_NewThemeContextSend;
        string id523_OutcomeList;
        string id208_ReelStop;
        string id397_UncommitBetSend;
        string id34_Version;
        string id22_Item;
        string id288_Item;
        string id562_CommitSuccessful;
        string id539_amount;
        string id272_GetAvailableCulturesReply;
        string id478_CustomConfigItem;
        string id400_UnenrollGameCycleReply;
        string id196_Item;
        string id368_ReadCritDataReply;
        string id14_F2LGameTiltVer1xsd;
        string id358_PlaceStartingBetReply;
        string id304_GetConfigDataWinCapAmountReply;
        string id42_Reply;
        string id458_Duplicates;
        string id4_F2LLinkControlVer2xsd;
        string id559_HostEnrollmentData;
        string id433_PendingWinsAvailableForThisBet;
        string id161_AutoPlayOnRequestReply;
        string id431_BetFromCreditsAmount;
        string id517_BonusPlayEnabled;
        string id299_Item;
        string id260_Item;
        string id63_Item;
        string id384_StartPlayingReply;
        string id495_CurrentCulture;
        string id51_Amount;
        string id341_MoneyCommittedChangedSend;
        string id583_Extensions;
        string id104_AwardMismatchDetectedReply;
        string id390_TransactionCompleteReply;
        string id249_DenominationChangeRequestSend;
        string id476_CustomConfigItemTypePair;
        string id231_CanCommitBetSend;
        string id194_Item;
        string id125_SetEnrollmentRequestDataSend;
        string id266_EvalOutcomeResponseReply;
        string id290_Item;
        string id530_origin;
        string id180_AutoPlayOnRequestSuccessful;
        string id362_QueryBankStatusReply;
        string id572_SetThemeApiVersionsReply;
        string id37_GetProgressiveLevelValuesReply;
        string id391_TransactionCompleteSend;
        string id472_RangeList;
        string id36_WapSignControlMessageType;
        string id545_FeatureAward;
        string id148_PrintNotificationReply;
        string id533_source_detail;
        string id140_CommitRequestData;
        string id314_GetCustomConfigItemReply;
        string id306_Item;
        string id410_ThemeTagDataFile;
        string id335_IsPlayerCashoutOfferableSend;
        string id490_Min;
        string id89_SetMockEnrollmentDataReply;
        string id418_DisplayControlState;
        string id569_GetThemeApiVersionsSend;
        string id152_GetGameContextLockStatusReply;
        string id468_Denomination;
        string id282_Item;
        string id396_UncommitBetReply;
        string id556_WagerCatOutcomes;
        string id374_SetCultureReply;
        string id409_ThemeTag;
        string id527_Award;
        string id173_SetAutoPlayOnRequestReply;
        string id537_is_top_award;
        string id197_Item;
        string id316_GetCustomConfigItemTypeReply;
        string id150_Notification;
        string id207_ReportReelStopsSend;
        string id567_LinkControlMessageType;
        string id487_MaxLength;
        string id128_GameRequestData;
        string id470_GameLevelProgressiveValue;
        string id352_NewThemeContextReply;
        string id375_SetCultureSend;
        string id91_SetMockOutcomeDataReply;
        string id327_GetRandomNumbersSend;
        string id98_EnrollementSuccess;
        string id199_Item;
        string id215_AddMoneySend;
        string id474_Scope;
        string id550_ProgressiveNearHit;
        string id364_QueryGameCycleStateReply;
        string id83_ExtensionTransParcelCallTxSend;
        string id153_GetGameContextLockStatusSend;
        string id465_RandomNumber;
        string id342_MoneyInReply;
        string id159_AutoPlayOffReply;
        string id597_ShutdownSend;
        string id24_F2LCdsItalyVer1xsd;
        string id53_AmountType;
        string id117_GetOutcomeResponseSend;
        string id302_Item;
        string id181_GameTiltMessageType;
        string id74_Culture;
        string id78_ExtensionParcelCallTxReply;
        string id45_ReplyCode;
        string id417_StartSuccessful;
        string id366_Item;
        string id403_WriteCritDataSend;
        string id346_MoneySetReply;
        string id586_ResourceDirectoryBase;
        string id99_EnrollmentResponseData;
        string id65_ForceGameCompletionStatus;
        string id536_prize_string;
        string id582_Jurisdiction;
        string id164_Item;
        string id77_ExtensionParcelCallRxSend;
        string id432_Item;
        string id344_MoneyOutReply;
        string id593_GetLinkControlApiVersionsReply;
        string id511_MaxBetButtonBehavior;
        string id508_Item;
        string id541_hit_state;
        string id427_PlayerCashoutOfferable;
        string id108_Item;
        string id446_WagerableDirection;
        string id32_F2LWapSignControlVer1xsd;
        string id595_SetLinkControlApiVersionReply;
        string id68_AutoFinishStatus;
        string id145_TransportIPPHostDataToBinReply;
        string id365_QueryGameCycleStateSend;
        string id323_GetPlayerMetersSend;
        string id457_Count;
        string id11_Identification;
        string id169_IsAutoPlayOnReply;
        string id504_WinCapBehavior;
        string id475_CustomConfigItemTypePairs;
        string id553_FeatureRngNumbers;
        string id232_CanCommitBetsReply;
        string id334_IsPlayerCashoutOfferableReply;
        string id105_AwardMismatchDetectedSend;
        string id376_SetDefaultCultureReply;
        string id524_IsPlayComplete;
        string id333_Item;
        string id355_OfferAncillaryGameRequestSend;
        string id528_ProgressiveAward;
        string id339_MoneyBetSend;
        string id540_FeatureProgressiveAward;
        string id459_MinimumValue;
        string id542_game_level;
        string id81_ExtensionTransParcelCallRxSend;
        string id247_Item;
        string id421_DenominationList;
        string id563_BetCommitted;
        string id261_Item;
        string id223_ActionResponseSend;
        string id406_Data;
        string id546_RiskAward;
        string id414_PayvarTagDataFile;
        string id460_MaximumValue;
        string id39_TransportWAPHostDataToBinReply;
        string id121_OutcomeRequestSend;
        string id267_EvalOutcomeResponseSend;
        string id234_CanCommitGameCycleReply;
        string id324_Item;
        string id138_CommitType;
        string id395_Item;
        string id549_win_level_index;
        string id369_ReadCritDataSend;
        string id557_WagerCatOutcome;
        string id225_ActivateThemeContextSend;
        string id156_Locked;
        string id1_Connect;
        string id195_Item;
        string id217_GetShowEnvironmentSend;
        string id93_CdsItalyMockOutcomeList;
        string id251_DisableAncillaryGameOfferSend;
        string id21_ProtocolIPPForwarding;
        string id141_LogMessage;
        string id454_IsPlayerCashoutOfferable;
        string id276_Item;
        string id202_G2SEGMIdentifier;
        string id347_MoneySetSend;
        string id503_Item;
        string id233_CanCommitBetsSend;
        string id466_Denominations;
        string id510_MinBetAmount;
        string id287_Item;
        string id489_EnumerationReferenceScope;
        string id285_Item;
        string id515_CreditMeterDisplayBehavior;
        string id305_GetConfigDataWinCapAmountSend;
        string id480_BooleanData;
        string id394_Item;
        string id443_PlayerBankMeter;
        string id407_TransferAccepted;
        string id434_BetPlaced;
        string id322_GetPlayerMetersReply;
        string id136_TaxPercentage;
        string id548_risk_amount;
        string id10_F2LGameStopReportVer2xsd;
        string id165_Item;
        string id9_GameStopReport;
        string id226_BankStatusChangedReply;
        string id30_F2LForceGameCompletionVer1xsd;
        string id144_TransportBinDataToIPPHostSend;
        string id168_Item;
        string id415_Tag;
        string id496_CreditFormatterInfo;
        string id560_NumberOfSteps;
        string id360_PlayerCashoutRequestReply;
        string id424_CurrentGameCycleState;
        string id71_ForceCompletionMessage;
        string id359_PlaceStartingBetSend;
        string id551_win_type;
        string id94_CdsItalyMockOutcome;
        string id473_Range;
        string id370_RemoveCritDataReply;
        string id328_InactivateThemeContextReply;
        string id589_ResourcePath;
        string id192_RequestClearTiltSuccess;
        string id129_OutcomeRequestData;
        string id581_EnvironmentAttributes;
        string id200_SerialNumber;
        string id590_GameDiscovPathType;
        string id178_AutoPlayConfirmationRequired;
        string id506_WinCapAmount;
        string id131_NetWinAmount;
        string id280_Item;
        string id574_CategoryVersions;
        string id242_CommitGameCycleReply;
        string id509_Item;
        string id485_ItemData;
        string id70_WarningTime;
        string id212_Held;
        string id241_CommitBetSend;
        string id462_AlreadyPickedNumbers;
        string id259_Item;
        string id298_Item;
        string id303_Item;
        string id20_F2LVoucherPrintVer1xsd;
        string id112_GetEnrollmentResponseDataReply;
        string id237_CanPlaceBetSend;
        string id318_GetCustomConfigItemTypesReply;
        string id378_SetDisplayControlStateReply;
        string id486_StringData;
        string id471_GameLevel;
        string id146_TransportIPPHostDataToBinSend;
        string id179_AutoPlaySpeedIncreaseAllowed;
        string id88_Item;
        string id262_EvalLastOutcomeRequestReply;
        string id43_ReplyCodeType;
        string id532_source;
        string id154_SetGameContextLockReply;
        string id185_RequestTiltSend;
        string id163_Item;
        string id401_UnenrollGameCycleSend;
        string id17_GameContextLocking;
        string id66_ForceGameCompletionStatusType;
        string id449_AmountIn;
        string id157_Success;
        string id577_Category;
        string id137_BonusEnabled;
        string id191_RequestTiltSuccess;
        string id356_PlaceBetReply;
        string id315_GetCustomConfigItemSend;
        string id573_SetThemeApiVersionsSend;
        string id62_Item;
        string id47_ProgressiveLevelValues;
        string id87_Accepted;
        string id50_Level;
        string id535_displayable_reason;
        string id428_BankToWagerableOfferable;
        string id205_ReportPokerHandSend;
        string id455_Item;
        string id345_MoneyOutSend;
        string id413_PayvarTag;
        string id408_IsThemeSelectionMenuOfferable;
        string id452_AmountCommitted;
        string id183_RequestClearTiltSend;
        string id552_feature_index;
        string id229_CanBetNextGameCycleSend;
        string id175_SetSuccessful;
        string id250_DisableAncillaryGameOfferReply;
        string id59_ForceGameCompletionMessageType;
        string id103_CdsItalyMessageType;
        string id594_GetLinkControlApiVersionsSend;
        string id296_GetConfigDataMinBetAmountReply;
        string id558_EnrollSuccess;
        string id7_ShowDemo;
        string id343_MoneyInSend;
        string id442_PlayerWagerableMeter;
        string id348_MoneyWagerableReply;
        string id448_MoneyOutSource;
        string id445_AmountMoved;
        string id80_Item;
        string id214_AddMoneyReply;
        string id429_IsMaxBet;
        string id206_ReportReelStopsReply;
        string id127_WagerCatIndex;
        string id426_BankLocked;
        string id300_Item;
        string id52_PrizeString;
        string id15_AutoPlay;
        string id3_LinkControl;
        string id538_bonus_identifier;
        string id252_EndGameCycleReply;
        string id423_DefaultDenom;
        string id500_NumericGroupSeparator;
        string id201_G2SThemeIdentifier;
        string id220_ActionRequestReply;
        string id18_F2LGameContextLockingVer1xsd;
        string id204_ReportPokerHandReply;
        string id584_ExtensionIdentifier;
        string id579_BinConnectToken;
        string id184_RequestTiltReply;
        string id211_PokerCard;
        string id113_GetEnrollmentResponseDataSend;
        string id116_GetOutcomeResponseReply;
        string id118_GetTaxableWinInfoReply;
        string id143_TransportBinDataToIPPHostReply;
        string id188_TiltLocalization;
        string id6_F2LGameControlVer4xsd;
        string id218_ShowEnvironment;
        string id236_CanPlaceBetReply;
        string id294_Item;
        string id477_Type;
        string id283_Item;
        string id13_GameTilt;
        string id317_GetCustomConfigItemTypeSend;
        string id297_GetConfigDataMinBetAmountSend;
        string id84_Extension;
        string id278_Item;
        string id411_ResourcePaths;
        string id114_GetJackpotBonusAwardReply;
        string id518_AncillaryMonetaryLimit;
        string id565_BetAllowed;
        string id521_CommittedBetAmount;
        string id263_EvalLastOutcomeRequestSend;
        string id149_PrintNotificationSend;
        string id331_IsBankLockedSend;
        string id256_EnrollResponseReply;
        string id554_Awards;
        string id33_Item;
        string id75_Item;
        string id28_Item;
        string id464_RandomNumbers;
        string id501_WholeUnitCurrencySymbol;
        string id388_Item;
        string id25_CdsItalyMockEnrollment;
        string id492_FlagList;
        string id110_GetConfigDataTaxInfoReply;
        string id133_BonusIdentifier;
        string id5_GameControl;
        string id531_tag;
        string id239_CanStartPlayingSend;
        string id430_BetAmount;
        string id564_StartAllowed;
        string id124_SetEnrollmentRequestDataReply;
        string id571_ParkSend;
        string id172_SetAutoPlayOffSend;
        string id135_TaxLimit;
        string id177_AutoPlayEnabled;
        string id102_BonusAmount;
        string id381_StartAncillaryPlayingSend;
        string id286_Item;
        string id40_TransportWAPHostDataToBinSend;
        string id516_ButtonPanelMinBetAmount;
        string id389_Item;
        string id367_Item;
        string id238_CanStartPlayingReply;
        string id580_BinTagDataFile;
        string id461_Name;
        string id295_Item;
        string id224_ActivateThemeContextReply;
        string id380_StartAncillaryPlayingReply;
        string id312_Item;
        string id72_Item;
        string id493_FlagListType;
        string id79_ExtensionParcelCallTxSend;
        string id547_award_type;
        string id97_OutcomeResponseData;
        string id235_CanCommitGameCycleSend;
        string id151_GameContextLockingMessageType;
        string id228_CanBetNextGameCycleReply;
        string id268_FinalizeAwardRequestReply;
        string id311_GetCultureSend;
        string id568_GetThemeApiVersionsReply;
        string id320_Item;
        string id248_DenominationChangeRequestReply;
        string id265_EvalOutcomeRequestSend;
        string id166_Item;
        string id387_SwitchThemeContextSend;
        string id399_UncommitGameCycleSend;
        string id351_MoneyWonSend;
        string id338_MoneyBetReply;
        string id329_InactivateThemeContextSend;
        string id274_GetCommittedBetReply;
        string id587_PatchVersion;
        string id309_GetCreditFormatterInfoSend;
        string id162_AutoPlayOnRequestSend;
        string id293_GetConfigDataMaxBetAmountSend;
        string id405_ItemName;
        string id273_GetAvailableCulturesSend;
        string id16_F2LAutoPlayVer1xsd;
        string id592_ConnectMessageType;
        string id57_MajorVersion;
        string id379_SetDisplayControlStateSend;
        string id555_Number;
        string id469_GameLevelProgressives;
        string id182_RequestClearTiltReply;
        string id488_EnumerationReferenceName;
        string id253_EndGameCycleSend;
        string id325_Item;
        string id453_AmountBet;
        string id482_FlagListData;
        string id422_ProgressiveDenominationList;
        string id481_EnumerationData;
        string id92_SetMockOutcomeDataSend;
        string id132_TaxAmount;
        string id419_RemoveCritDataSuccess;
        string id171_SetAutoPlayOffReply;
        string id23_CdsItaly;
        string id483_FloatData;
        string id416_Path;
        string id566_CommitAllowed;
        string id543_consolation_amount;
        string id35_Message;
        string id494_Item;
        string id525_FeatureEntry;
        string id326_GetRandomNumbersReply;
        string id174_SetAutoPlayOnRequestSend;
        string id479_AmountData;
        string id526_GameCycleEntry;
        string id463_AlreadyPickedNumber;
        string id82_Item;
        string id507_RoundWagerUpPlayoffEnabled;
        string id277_Item;
        string id203_GameStopReportMessageType;
        string id439_SecurityLevel;
        string id227_BankStatusChangedSend;
        string id514_NumberOfPlaySteps;
        string id67_ForceCompletion;
        string id491_Max;
        string id123_OutcomeResponseSend;
        string id275_GetCommittedBetSend;
        string id244_CultureChangedReply;
        string id134_GameResponseData;
        string id404_CriticalDataScope;
        string id27_ThemeToExtParcelComm;
        string id96_OutcomeGenerated;
        string id289_Item;
        string id258_Item;
        string id377_SetDefaultCultureSend;
        string id142_Item;
        string id269_FinalizeAwardRequestSend;
        string id46_ErrorDescription;
        string id308_GetCreditFormatterInfoReply;
        string id444_PlayerPaidMeter;
        string id190_Title;
        string id279_Item;
        string id126_WagerAmount;
        string id29_ForceGameCompletion;
        string id313_Item;
        string id402_WriteCritDataReply;
        string id187_TiltLocalizations;
        string id585_ExtensionVersion;
        string id158_AutoPlayMessageType;
        string id31_WapSignControl;
        string id307_Item;
        string id61_Item;
        string id596_SetLinkControlApiVersionSend;
        string id291_GetConfigDataLineSelectionSend;
        string id186_TiltName;
        string id240_CommitBetReply;
        string id349_MoneyWagerableSend;
        string id499_NumericDecimalSeparator;
        string id8_F2LShowDemoVer2xsd;
        string id502_BaseUnitCurrencySymbol;
        string id254_EnrollGameCycleReply;
        string id54_Value;
        string id435_OfferAncillaryGame;
        string id519_AncillaryGameEnabled;
        string id26_Item;
        string id578_BinTag;
        string id170_IsAutoPlayOnSend;
        string id447_AmountOut;
        string id441_PlayerMeters;
        string id257_EnrollResponseSend;
        string id222_ActionResponseReply;
        string id386_SwitchThemeContextReply;
        string id69_FinishTime;
        string id570_ParkReply;
        string id264_EvalOutcomeRequestReply;
        string id193_IdentificationMessageType;
        string id230_CanCommitBetReply;
        string id246_Item;
        string id337_Item;
        string id350_MoneyWonReply;
        string id86_Status;
        string id398_UncommitGameCycleReply;
        string id575_CategoryVersion;
        string id520_AncillaryCycleLimit;
        string id505_WinCapMultiplier;
        string id216_GetShowEnvironmentReply;
        string id64_TransactionID;
        string id58_MinorVersion;
        string id100_JackpotHit;
        string id101_JackpotLevel;
        string id111_GetConfigDataTaxInfoSend;
        string id56_VersionType;
        string id451_FundsTransferAccountSource;
        string id440_AmountWon;
        string id213_ShowDemoMessageType;
        string id534_is_displayable;
        string id438_NewlySelectedForPlay;
        string id392_Item;
        string id107_CommitOutcomeSend;
        string id270_FinalizeAwardResponseReply;
        string id336_Item;
        string id219_GameControlMessageType;
        string id512_MaxBetAmount;
        string id147_VoucherPrintMessageType;
        string id497_CreditFormatterInfoType;
        string id243_CommitGameCycleSend;
        string id467_ProgressiveGameLevelValues;
        string id281_Item;
        string id437_GameSubMode;
        string id160_AutoPlayOffSend;
        string id155_SetGameContextLockSend;
        string id55_CRC;
        string id49_LevelProgressiveValue;
        string id354_OfferAncillaryGameRequestReply;
        string id245_CultureChangedSend;
        string id456_IsBankLocked;
        string id210_Card;
        string id176_AutoPlayOn;
        string id425_BankStatus;
        string id209_HandStatus;
        string id484_Int64Data;
        string id284_Item;
        string id332_Item;
        string id373_RequestThemeSelectionMenuSend;
        string id19_VoucherPrint;
        string id588_EnvironmentAttribute;
        string id221_ActionRequestSend;
        string id12_F2LIdentificationVer1xsd;
        string id498_F2LLocalizationTypeVer1xsd;
        string id330_IsBankLockedReply;
        string id189_TiltAttributes;
        string id544_AncillaryAward;
        string id383_StartBonusPlayingSend;
        string id393_Item;
        string id119_GetTaxableWinInfoSend;
        string id76_ExtensionParcelCallRxReply;
        string id420_ReadCritDataSuccess;
        string id120_OutcomeRequestReply;
        string id450_MoneyInSource;
        string id41_BinaryData;

        protected override void InitIDs() {
            id95_CdsItalyMockOutcomeData = Reader.NameTable.Add(@"CdsItalyMockOutcomeData");
            id167_Item = Reader.NameTable.Add(@"GetConfigDataPlayerAutoPlayEnabledReply");
            id44_F2LTypeVer2xsd = Reader.NameTable.Add(@"F2LTypeVer2.xsd");
            id371_RemoveCritDataSend = Reader.NameTable.Add(@"RemoveCritDataSend");
            id73_Item = Reader.NameTable.Add(@"ForceCompletionMessageLocalizationType");
            id90_SetMockEnrollmentDataSend = Reader.NameTable.Add(@"SetMockEnrollmentDataSend");
            id412_Denom = Reader.NameTable.Add(@"Denom");
            id85_Payload = Reader.NameTable.Add(@"Payload");
            id321_Item = Reader.NameTable.Add(@"GetListLimitedRandomNumbersSend");
            id38_GetProgressiveLevelValuesSend = Reader.NameTable.Add(@"GetProgressiveLevelValuesSend");
            id310_GetCultureReply = Reader.NameTable.Add(@"GetCultureReply");
            id106_CommitOutcomeReply = Reader.NameTable.Add(@"CommitOutcomeReply");
            id372_RequestThemeSelectionMenuReply = Reader.NameTable.Add(@"RequestThemeSelectionMenuReply");
            id591_InclusionType = Reader.NameTable.Add(@"InclusionType");
            id271_FinalizeAwardResponseSend = Reader.NameTable.Add(@"FinalizeAwardResponseSend");
            id198_Item = Reader.NameTable.Add(@"GetConfigDataMachineSerialNumberReply");
            id301_Item = Reader.NameTable.Add(@"GetConfigDataMinimumFreeSpinPresentationTimeSend");
            id513_LineSelection = Reader.NameTable.Add(@"LineSelection");
            id255_EnrollGameCycleSend = Reader.NameTable.Add(@"EnrollGameCycleSend");
            id139_PendingPreTaxWin = Reader.NameTable.Add(@"PendingPreTaxWin");
            id561_RequestAccepted = Reader.NameTable.Add(@"RequestAccepted");
            id122_OutcomeResponseReply = Reader.NameTable.Add(@"OutcomeResponseReply");
            id385_StartPlayingSend = Reader.NameTable.Add(@"StartPlayingSend");
            id576_CategoryVersionType = Reader.NameTable.Add(@"CategoryVersionType");
            id361_PlayerCashoutRequestSend = Reader.NameTable.Add(@"PlayerCashoutRequestSend");
            id522_AvailableCulture = Reader.NameTable.Add(@"AvailableCulture");
            id130_TotalWinAmount = Reader.NameTable.Add(@"TotalWinAmount");
            id319_GetCustomConfigItemTypesSend = Reader.NameTable.Add(@"GetCustomConfigItemTypesSend");
            id382_StartBonusPlayingReply = Reader.NameTable.Add(@"StartBonusPlayingReply");
            id2_F2LConnectVer2xsd = Reader.NameTable.Add(@"F2LConnectVer2.xsd");
            id436_GameMode = Reader.NameTable.Add(@"GameMode");
            id109_Item = Reader.NameTable.Add(@"GetConfigDataJackpotBonusEnabledSend");
            id115_GetJackpotBonusAwardSend = Reader.NameTable.Add(@"GetJackpotBonusAwardSend");
            id363_QueryBankStatusSend = Reader.NameTable.Add(@"QueryBankStatusSend");
            id340_MoneyCommittedChangedReply = Reader.NameTable.Add(@"MoneyCommittedChangedReply");
            id292_GetConfigDataMaxBetAmountReply = Reader.NameTable.Add(@"GetConfigDataMaxBetAmountReply");
            id357_PlaceBetSend = Reader.NameTable.Add(@"PlaceBetSend");
            id529_BonusExtensionAward = Reader.NameTable.Add(@"BonusExtensionAward");
            id60_Item = Reader.NameTable.Add(@"ForceGameCompletionStatusChangedReply");
            id48_IsOnlineWithHost = Reader.NameTable.Add(@"IsOnlineWithHost");
            id353_NewThemeContextSend = Reader.NameTable.Add(@"NewThemeContextSend");
            id523_OutcomeList = Reader.NameTable.Add(@"OutcomeList");
            id208_ReelStop = Reader.NameTable.Add(@"ReelStop");
            id397_UncommitBetSend = Reader.NameTable.Add(@"UncommitBetSend");
            id34_Version = Reader.NameTable.Add(@"Version");
            id22_Item = Reader.NameTable.Add(@"F2LProtocolIPPForwardingVer1.xsd");
            id288_Item = Reader.NameTable.Add(@"GetConfigDataHistoryPlayStepsReply");
            id562_CommitSuccessful = Reader.NameTable.Add(@"CommitSuccessful");
            id539_amount = Reader.NameTable.Add(@"amount");
            id272_GetAvailableCulturesReply = Reader.NameTable.Add(@"GetAvailableCulturesReply");
            id478_CustomConfigItem = Reader.NameTable.Add(@"CustomConfigItem");
            id400_UnenrollGameCycleReply = Reader.NameTable.Add(@"UnenrollGameCycleReply");
            id196_Item = Reader.NameTable.Add(@"GetConfigDataG2SThemeIdentifierReply");
            id368_ReadCritDataReply = Reader.NameTable.Add(@"ReadCritDataReply");
            id14_F2LGameTiltVer1xsd = Reader.NameTable.Add(@"F2LGameTiltVer1.xsd");
            id358_PlaceStartingBetReply = Reader.NameTable.Add(@"PlaceStartingBetReply");
            id304_GetConfigDataWinCapAmountReply = Reader.NameTable.Add(@"GetConfigDataWinCapAmountReply");
            id42_Reply = Reader.NameTable.Add(@"Reply");
            id458_Duplicates = Reader.NameTable.Add(@"Duplicates");
            id4_F2LLinkControlVer2xsd = Reader.NameTable.Add(@"F2LLinkControlVer2.xsd");
            id559_HostEnrollmentData = Reader.NameTable.Add(@"HostEnrollmentData");
            id433_PendingWinsAvailableForThisBet = Reader.NameTable.Add(@"PendingWinsAvailableForThisBet");
            id161_AutoPlayOnRequestReply = Reader.NameTable.Add(@"AutoPlayOnRequestReply");
            id431_BetFromCreditsAmount = Reader.NameTable.Add(@"BetFromCreditsAmount");
            id517_BonusPlayEnabled = Reader.NameTable.Add(@"BonusPlayEnabled");
            id299_Item = Reader.NameTable.Add(@"GetConfigDataMinimumBaseGamePresentationTimeSend");
            id260_Item = Reader.NameTable.Add(@"EvalLastBonusOutcomeRequestReply");
            id63_Item = Reader.NameTable.Add(@"QueryForceGameCompletionStatusSend");
            id384_StartPlayingReply = Reader.NameTable.Add(@"StartPlayingReply");
            id495_CurrentCulture = Reader.NameTable.Add(@"CurrentCulture");
            id51_Amount = Reader.NameTable.Add(@"Amount");
            id341_MoneyCommittedChangedSend = Reader.NameTable.Add(@"MoneyCommittedChangedSend");
            id583_Extensions = Reader.NameTable.Add(@"Extensions");
            id104_AwardMismatchDetectedReply = Reader.NameTable.Add(@"AwardMismatchDetectedReply");
            id390_TransactionCompleteReply = Reader.NameTable.Add(@"TransactionCompleteReply");
            id249_DenominationChangeRequestSend = Reader.NameTable.Add(@"DenominationChangeRequestSend");
            id476_CustomConfigItemTypePair = Reader.NameTable.Add(@"CustomConfigItemTypePair");
            id231_CanCommitBetSend = Reader.NameTable.Add(@"CanCommitBetSend");
            id194_Item = Reader.NameTable.Add(@"GetConfigDataG2SEGMIdentifierReply");
            id125_SetEnrollmentRequestDataSend = Reader.NameTable.Add(@"SetEnrollmentRequestDataSend");
            id266_EvalOutcomeResponseReply = Reader.NameTable.Add(@"EvalOutcomeResponseReply");
            id290_Item = Reader.NameTable.Add(@"GetConfigDataLineSelectionReply");
            id530_origin = Reader.NameTable.Add(@"origin");
            id180_AutoPlayOnRequestSuccessful = Reader.NameTable.Add(@"AutoPlayOnRequestSuccessful");
            id362_QueryBankStatusReply = Reader.NameTable.Add(@"QueryBankStatusReply");
            id572_SetThemeApiVersionsReply = Reader.NameTable.Add(@"SetThemeApiVersionsReply");
            id37_GetProgressiveLevelValuesReply = Reader.NameTable.Add(@"GetProgressiveLevelValuesReply");
            id391_TransactionCompleteSend = Reader.NameTable.Add(@"TransactionCompleteSend");
            id472_RangeList = Reader.NameTable.Add(@"RangeList");
            id36_WapSignControlMessageType = Reader.NameTable.Add(@"WapSignControlMessageType");
            id545_FeatureAward = Reader.NameTable.Add(@"FeatureAward");
            id148_PrintNotificationReply = Reader.NameTable.Add(@"PrintNotificationReply");
            id533_source_detail = Reader.NameTable.Add(@"source_detail");
            id140_CommitRequestData = Reader.NameTable.Add(@"CommitRequestData");
            id314_GetCustomConfigItemReply = Reader.NameTable.Add(@"GetCustomConfigItemReply");
            id306_Item = Reader.NameTable.Add(@"GetConfigDataWinCapBehaviorReply");
            id410_ThemeTagDataFile = Reader.NameTable.Add(@"ThemeTagDataFile");
            id335_IsPlayerCashoutOfferableSend = Reader.NameTable.Add(@"IsPlayerCashoutOfferableSend");
            id490_Min = Reader.NameTable.Add(@"Min");
            id89_SetMockEnrollmentDataReply = Reader.NameTable.Add(@"SetMockEnrollmentDataReply");
            id418_DisplayControlState = Reader.NameTable.Add(@"DisplayControlState");
            id569_GetThemeApiVersionsSend = Reader.NameTable.Add(@"GetThemeApiVersionsSend");
            id152_GetGameContextLockStatusReply = Reader.NameTable.Add(@"GetGameContextLockStatusReply");
            id468_Denomination = Reader.NameTable.Add(@"Denomination");
            id282_Item = Reader.NameTable.Add(@"GetConfigDataBonusPlayEnabledReply");
            id396_UncommitBetReply = Reader.NameTable.Add(@"UncommitBetReply");
            id556_WagerCatOutcomes = Reader.NameTable.Add(@"WagerCatOutcomes");
            id374_SetCultureReply = Reader.NameTable.Add(@"SetCultureReply");
            id409_ThemeTag = Reader.NameTable.Add(@"ThemeTag");
            id527_Award = Reader.NameTable.Add(@"Award");
            id173_SetAutoPlayOnRequestReply = Reader.NameTable.Add(@"SetAutoPlayOnRequestReply");
            id537_is_top_award = Reader.NameTable.Add(@"is_top_award");
            id197_Item = Reader.NameTable.Add(@"GetConfigDataG2SThemeIdentifierSend");
            id316_GetCustomConfigItemTypeReply = Reader.NameTable.Add(@"GetCustomConfigItemTypeReply");
            id150_Notification = Reader.NameTable.Add(@"Notification");
            id207_ReportReelStopsSend = Reader.NameTable.Add(@"ReportReelStopsSend");
            id567_LinkControlMessageType = Reader.NameTable.Add(@"LinkControlMessageType");
            id487_MaxLength = Reader.NameTable.Add(@"MaxLength");
            id128_GameRequestData = Reader.NameTable.Add(@"GameRequestData");
            id470_GameLevelProgressiveValue = Reader.NameTable.Add(@"GameLevelProgressiveValue");
            id352_NewThemeContextReply = Reader.NameTable.Add(@"NewThemeContextReply");
            id375_SetCultureSend = Reader.NameTable.Add(@"SetCultureSend");
            id91_SetMockOutcomeDataReply = Reader.NameTable.Add(@"SetMockOutcomeDataReply");
            id327_GetRandomNumbersSend = Reader.NameTable.Add(@"GetRandomNumbersSend");
            id98_EnrollementSuccess = Reader.NameTable.Add(@"EnrollementSuccess");
            id199_Item = Reader.NameTable.Add(@"GetConfigDataMachineSerialNumberSend");
            id215_AddMoneySend = Reader.NameTable.Add(@"AddMoneySend");
            id474_Scope = Reader.NameTable.Add(@"Scope");
            id550_ProgressiveNearHit = Reader.NameTable.Add(@"ProgressiveNearHit");
            id364_QueryGameCycleStateReply = Reader.NameTable.Add(@"QueryGameCycleStateReply");
            id83_ExtensionTransParcelCallTxSend = Reader.NameTable.Add(@"ExtensionTransParcelCallTxSend");
            id153_GetGameContextLockStatusSend = Reader.NameTable.Add(@"GetGameContextLockStatusSend");
            id465_RandomNumber = Reader.NameTable.Add(@"RandomNumber");
            id342_MoneyInReply = Reader.NameTable.Add(@"MoneyInReply");
            id159_AutoPlayOffReply = Reader.NameTable.Add(@"AutoPlayOffReply");
            id597_ShutdownSend = Reader.NameTable.Add(@"ShutdownSend");
            id24_F2LCdsItalyVer1xsd = Reader.NameTable.Add(@"F2LCdsItalyVer1.xsd");
            id53_AmountType = Reader.NameTable.Add(@"AmountType");
            id117_GetOutcomeResponseSend = Reader.NameTable.Add(@"GetOutcomeResponseSend");
            id302_Item = Reader.NameTable.Add(@"GetConfigDataRoundWagerUpPlayoffEnabledReply");
            id181_GameTiltMessageType = Reader.NameTable.Add(@"GameTiltMessageType");
            id74_Culture = Reader.NameTable.Add(@"Culture");
            id78_ExtensionParcelCallTxReply = Reader.NameTable.Add(@"ExtensionParcelCallTxReply");
            id45_ReplyCode = Reader.NameTable.Add(@"ReplyCode");
            id417_StartSuccessful = Reader.NameTable.Add(@"StartSuccessful");
            id366_Item = Reader.NameTable.Add(@"QueryPlayerSelectableDenomsReply");
            id403_WriteCritDataSend = Reader.NameTable.Add(@"WriteCritDataSend");
            id346_MoneySetReply = Reader.NameTable.Add(@"MoneySetReply");
            id586_ResourceDirectoryBase = Reader.NameTable.Add(@"ResourceDirectoryBase");
            id99_EnrollmentResponseData = Reader.NameTable.Add(@"EnrollmentResponseData");
            id65_ForceGameCompletionStatus = Reader.NameTable.Add(@"ForceGameCompletionStatus");
            id536_prize_string = Reader.NameTable.Add(@"prize_string");
            id582_Jurisdiction = Reader.NameTable.Add(@"Jurisdiction");
            id164_Item = Reader.NameTable.Add(@"GetConfigDataAutoPlaySpeedIncreaseAllowedSend");
            id77_ExtensionParcelCallRxSend = Reader.NameTable.Add(@"ExtensionParcelCallRxSend");
            id432_Item = Reader.NameTable.Add(@"BetFromUncommittedGameWinsAmount");
            id344_MoneyOutReply = Reader.NameTable.Add(@"MoneyOutReply");
            id593_GetLinkControlApiVersionsReply = Reader.NameTable.Add(@"GetLinkControlApiVersionsReply");
            id511_MaxBetButtonBehavior = Reader.NameTable.Add(@"MaxBetButtonBehavior");
            id508_Item = Reader.NameTable.Add(@"MinimumFreeSpinPresentationTime");
            id541_hit_state = Reader.NameTable.Add(@"hit_state");
            id427_PlayerCashoutOfferable = Reader.NameTable.Add(@"PlayerCashoutOfferable");
            id108_Item = Reader.NameTable.Add(@"GetConfigDataJackpotBonusEnabledReply");
            id446_WagerableDirection = Reader.NameTable.Add(@"WagerableDirection");
            id32_F2LWapSignControlVer1xsd = Reader.NameTable.Add(@"F2LWapSignControlVer1.xsd");
            id595_SetLinkControlApiVersionReply = Reader.NameTable.Add(@"SetLinkControlApiVersionReply");
            id68_AutoFinishStatus = Reader.NameTable.Add(@"AutoFinishStatus");
            id145_TransportIPPHostDataToBinReply = Reader.NameTable.Add(@"TransportIPPHostDataToBinReply");
            id365_QueryGameCycleStateSend = Reader.NameTable.Add(@"QueryGameCycleStateSend");
            id323_GetPlayerMetersSend = Reader.NameTable.Add(@"GetPlayerMetersSend");
            id457_Count = Reader.NameTable.Add(@"Count");
            id11_Identification = Reader.NameTable.Add(@"Identification");
            id169_IsAutoPlayOnReply = Reader.NameTable.Add(@"IsAutoPlayOnReply");
            id504_WinCapBehavior = Reader.NameTable.Add(@"WinCapBehavior");
            id475_CustomConfigItemTypePairs = Reader.NameTable.Add(@"CustomConfigItemTypePairs");
            id553_FeatureRngNumbers = Reader.NameTable.Add(@"FeatureRngNumbers");
            id232_CanCommitBetsReply = Reader.NameTable.Add(@"CanCommitBetsReply");
            id334_IsPlayerCashoutOfferableReply = Reader.NameTable.Add(@"IsPlayerCashoutOfferableReply");
            id105_AwardMismatchDetectedSend = Reader.NameTable.Add(@"AwardMismatchDetectedSend");
            id376_SetDefaultCultureReply = Reader.NameTable.Add(@"SetDefaultCultureReply");
            id524_IsPlayComplete = Reader.NameTable.Add(@"IsPlayComplete");
            id333_Item = Reader.NameTable.Add(@"IsPlayerBankToWagerableOfferableSend");
            id355_OfferAncillaryGameRequestSend = Reader.NameTable.Add(@"OfferAncillaryGameRequestSend");
            id528_ProgressiveAward = Reader.NameTable.Add(@"ProgressiveAward");
            id339_MoneyBetSend = Reader.NameTable.Add(@"MoneyBetSend");
            id540_FeatureProgressiveAward = Reader.NameTable.Add(@"FeatureProgressiveAward");
            id459_MinimumValue = Reader.NameTable.Add(@"MinimumValue");
            id542_game_level = Reader.NameTable.Add(@"game_level");
            id81_ExtensionTransParcelCallRxSend = Reader.NameTable.Add(@"ExtensionTransParcelCallRxSend");
            id247_Item = Reader.NameTable.Add(@"DenominationChangeCancelledSend");
            id421_DenominationList = Reader.NameTable.Add(@"DenominationList");
            id563_BetCommitted = Reader.NameTable.Add(@"BetCommitted");
            id261_Item = Reader.NameTable.Add(@"EvalLastBonusOutcomeRequestSend");
            id223_ActionResponseSend = Reader.NameTable.Add(@"ActionResponseSend");
            id406_Data = Reader.NameTable.Add(@"Data");
            id546_RiskAward = Reader.NameTable.Add(@"RiskAward");
            id414_PayvarTagDataFile = Reader.NameTable.Add(@"PayvarTagDataFile");
            id460_MaximumValue = Reader.NameTable.Add(@"MaximumValue");
            id39_TransportWAPHostDataToBinReply = Reader.NameTable.Add(@"TransportWAPHostDataToBinReply");
            id121_OutcomeRequestSend = Reader.NameTable.Add(@"OutcomeRequestSend");
            id267_EvalOutcomeResponseSend = Reader.NameTable.Add(@"EvalOutcomeResponseSend");
            id234_CanCommitGameCycleReply = Reader.NameTable.Add(@"CanCommitGameCycleReply");
            id324_Item = Reader.NameTable.Add(@"GetProgressiveGameLevelValuesReply");
            id138_CommitType = Reader.NameTable.Add(@"CommitType");
            id395_Item = Reader.NameTable.Add(@"TransferWagerableToBankRequestSend");
            id549_win_level_index = Reader.NameTable.Add(@"win_level_index");
            id369_ReadCritDataSend = Reader.NameTable.Add(@"ReadCritDataSend");
            id557_WagerCatOutcome = Reader.NameTable.Add(@"WagerCatOutcome");
            id225_ActivateThemeContextSend = Reader.NameTable.Add(@"ActivateThemeContextSend");
            id156_Locked = Reader.NameTable.Add(@"Locked");
            id1_Connect = Reader.NameTable.Add(@"Connect");
            id195_Item = Reader.NameTable.Add(@"GetConfigDataG2SEGMIdentifierSend");
            id217_GetShowEnvironmentSend = Reader.NameTable.Add(@"GetShowEnvironmentSend");
            id93_CdsItalyMockOutcomeList = Reader.NameTable.Add(@"CdsItalyMockOutcomeList");
            id251_DisableAncillaryGameOfferSend = Reader.NameTable.Add(@"DisableAncillaryGameOfferSend");
            id21_ProtocolIPPForwarding = Reader.NameTable.Add(@"ProtocolIPPForwarding");
            id141_LogMessage = Reader.NameTable.Add(@"LogMessage");
            id454_IsPlayerCashoutOfferable = Reader.NameTable.Add(@"IsPlayerCashoutOfferable");
            id276_Item = Reader.NameTable.Add(@"GetConfigDataAncillaryCycleLimitReply");
            id202_G2SEGMIdentifier = Reader.NameTable.Add(@"G2SEGMIdentifier");
            id347_MoneySetSend = Reader.NameTable.Add(@"MoneySetSend");
            id503_Item = Reader.NameTable.Add(@"UseGroupSeparatorForNonMonetaryNumbers");
            id233_CanCommitBetsSend = Reader.NameTable.Add(@"CanCommitBetsSend");
            id466_Denominations = Reader.NameTable.Add(@"Denominations");
            id510_MinBetAmount = Reader.NameTable.Add(@"MinBetAmount");
            id287_Item = Reader.NameTable.Add(@"GetConfigDataCreditMeterDisplayBehaviorSend");
            id489_EnumerationReferenceScope = Reader.NameTable.Add(@"EnumerationReferenceScope");
            id285_Item = Reader.NameTable.Add(@"GetConfigDataButtonPanelMinBetAmountSend");
            id515_CreditMeterDisplayBehavior = Reader.NameTable.Add(@"CreditMeterDisplayBehavior");
            id305_GetConfigDataWinCapAmountSend = Reader.NameTable.Add(@"GetConfigDataWinCapAmountSend");
            id480_BooleanData = Reader.NameTable.Add(@"BooleanData");
            id394_Item = Reader.NameTable.Add(@"TransferWagerableToBankRequestReply");
            id443_PlayerBankMeter = Reader.NameTable.Add(@"PlayerBankMeter");
            id407_TransferAccepted = Reader.NameTable.Add(@"TransferAccepted");
            id434_BetPlaced = Reader.NameTable.Add(@"BetPlaced");
            id322_GetPlayerMetersReply = Reader.NameTable.Add(@"GetPlayerMetersReply");
            id136_TaxPercentage = Reader.NameTable.Add(@"TaxPercentage");
            id548_risk_amount = Reader.NameTable.Add(@"risk_amount");
            id10_F2LGameStopReportVer2xsd = Reader.NameTable.Add(@"F2LGameStopReportVer2.xsd");
            id165_Item = Reader.NameTable.Add(@"GetConfigDataPlayerAutoPlayConfirmationRequiredReply");
            id9_GameStopReport = Reader.NameTable.Add(@"GameStopReport");
            id226_BankStatusChangedReply = Reader.NameTable.Add(@"BankStatusChangedReply");
            id30_F2LForceGameCompletionVer1xsd = Reader.NameTable.Add(@"F2LForceGameCompletionVer1.xsd");
            id144_TransportBinDataToIPPHostSend = Reader.NameTable.Add(@"TransportBinDataToIPPHostSend");
            id168_Item = Reader.NameTable.Add(@"GetConfigDataPlayerAutoPlayEnabledSend");
            id415_Tag = Reader.NameTable.Add(@"Tag");
            id496_CreditFormatterInfo = Reader.NameTable.Add(@"CreditFormatterInfo");
            id560_NumberOfSteps = Reader.NameTable.Add(@"NumberOfSteps");
            id360_PlayerCashoutRequestReply = Reader.NameTable.Add(@"PlayerCashoutRequestReply");
            id424_CurrentGameCycleState = Reader.NameTable.Add(@"CurrentGameCycleState");
            id71_ForceCompletionMessage = Reader.NameTable.Add(@"ForceCompletionMessage");
            id359_PlaceStartingBetSend = Reader.NameTable.Add(@"PlaceStartingBetSend");
            id551_win_type = Reader.NameTable.Add(@"win_type");
            id94_CdsItalyMockOutcome = Reader.NameTable.Add(@"CdsItalyMockOutcome");
            id473_Range = Reader.NameTable.Add(@"Range");
            id370_RemoveCritDataReply = Reader.NameTable.Add(@"RemoveCritDataReply");
            id328_InactivateThemeContextReply = Reader.NameTable.Add(@"InactivateThemeContextReply");
            id589_ResourcePath = Reader.NameTable.Add(@"ResourcePath");
            id192_RequestClearTiltSuccess = Reader.NameTable.Add(@"RequestClearTiltSuccess");
            id129_OutcomeRequestData = Reader.NameTable.Add(@"OutcomeRequestData");
            id581_EnvironmentAttributes = Reader.NameTable.Add(@"EnvironmentAttributes");
            id200_SerialNumber = Reader.NameTable.Add(@"SerialNumber");
            id590_GameDiscovPathType = Reader.NameTable.Add(@"GameDiscovPathType");
            id178_AutoPlayConfirmationRequired = Reader.NameTable.Add(@"AutoPlayConfirmationRequired");
            id506_WinCapAmount = Reader.NameTable.Add(@"WinCapAmount");
            id131_NetWinAmount = Reader.NameTable.Add(@"NetWinAmount");
            id280_Item = Reader.NameTable.Add(@"GetConfigDataAncillaryMonetaryLimitReply");
            id574_CategoryVersions = Reader.NameTable.Add(@"CategoryVersions");
            id242_CommitGameCycleReply = Reader.NameTable.Add(@"CommitGameCycleReply");
            id509_Item = Reader.NameTable.Add(@"MinimumBaseGamePresentationTime");
            id485_ItemData = Reader.NameTable.Add(@"ItemData");
            id70_WarningTime = Reader.NameTable.Add(@"WarningTime");
            id212_Held = Reader.NameTable.Add(@"Held");
            id241_CommitBetSend = Reader.NameTable.Add(@"CommitBetSend");
            id462_AlreadyPickedNumbers = Reader.NameTable.Add(@"AlreadyPickedNumbers");
            id259_Item = Reader.NameTable.Add(@"EvalLastAncillaryOutcomeRequestSend");
            id298_Item = Reader.NameTable.Add(@"GetConfigDataMinimumBaseGamePresentationTimeReply");
            id303_Item = Reader.NameTable.Add(@"GetConfigDataRoundWagerUpPlayoffEnabledSend");
            id20_F2LVoucherPrintVer1xsd = Reader.NameTable.Add(@"F2LVoucherPrintVer1.xsd");
            id112_GetEnrollmentResponseDataReply = Reader.NameTable.Add(@"GetEnrollmentResponseDataReply");
            id237_CanPlaceBetSend = Reader.NameTable.Add(@"CanPlaceBetSend");
            id318_GetCustomConfigItemTypesReply = Reader.NameTable.Add(@"GetCustomConfigItemTypesReply");
            id378_SetDisplayControlStateReply = Reader.NameTable.Add(@"SetDisplayControlStateReply");
            id486_StringData = Reader.NameTable.Add(@"StringData");
            id471_GameLevel = Reader.NameTable.Add(@"GameLevel");
            id146_TransportIPPHostDataToBinSend = Reader.NameTable.Add(@"TransportIPPHostDataToBinSend");
            id179_AutoPlaySpeedIncreaseAllowed = Reader.NameTable.Add(@"AutoPlaySpeedIncreaseAllowed");
            id88_Item = Reader.NameTable.Add(@"CdsItalyMockEnrollmentMessageType");
            id262_EvalLastOutcomeRequestReply = Reader.NameTable.Add(@"EvalLastOutcomeRequestReply");
            id43_ReplyCodeType = Reader.NameTable.Add(@"ReplyCodeType");
            id532_source = Reader.NameTable.Add(@"source");
            id154_SetGameContextLockReply = Reader.NameTable.Add(@"SetGameContextLockReply");
            id185_RequestTiltSend = Reader.NameTable.Add(@"RequestTiltSend");
            id163_Item = Reader.NameTable.Add(@"GetConfigDataAutoPlaySpeedIncreaseAllowedReply");
            id401_UnenrollGameCycleSend = Reader.NameTable.Add(@"UnenrollGameCycleSend");
            id17_GameContextLocking = Reader.NameTable.Add(@"GameContextLocking");
            id66_ForceGameCompletionStatusType = Reader.NameTable.Add(@"ForceGameCompletionStatusType");
            id449_AmountIn = Reader.NameTable.Add(@"AmountIn");
            id157_Success = Reader.NameTable.Add(@"Success");
            id577_Category = Reader.NameTable.Add(@"Category");
            id137_BonusEnabled = Reader.NameTable.Add(@"BonusEnabled");
            id191_RequestTiltSuccess = Reader.NameTable.Add(@"RequestTiltSuccess");
            id356_PlaceBetReply = Reader.NameTable.Add(@"PlaceBetReply");
            id315_GetCustomConfigItemSend = Reader.NameTable.Add(@"GetCustomConfigItemSend");
            id573_SetThemeApiVersionsSend = Reader.NameTable.Add(@"SetThemeApiVersionsSend");
            id62_Item = Reader.NameTable.Add(@"QueryForceGameCompletionStatusReply");
            id47_ProgressiveLevelValues = Reader.NameTable.Add(@"ProgressiveLevelValues");
            id87_Accepted = Reader.NameTable.Add(@"Accepted");
            id50_Level = Reader.NameTable.Add(@"Level");
            id535_displayable_reason = Reader.NameTable.Add(@"displayable_reason");
            id428_BankToWagerableOfferable = Reader.NameTable.Add(@"BankToWagerableOfferable");
            id205_ReportPokerHandSend = Reader.NameTable.Add(@"ReportPokerHandSend");
            id455_Item = Reader.NameTable.Add(@"IsPlayerBankToWagerableOfferable");
            id345_MoneyOutSend = Reader.NameTable.Add(@"MoneyOutSend");
            id413_PayvarTag = Reader.NameTable.Add(@"PayvarTag");
            id408_IsThemeSelectionMenuOfferable = Reader.NameTable.Add(@"IsThemeSelectionMenuOfferable");
            id452_AmountCommitted = Reader.NameTable.Add(@"AmountCommitted");
            id183_RequestClearTiltSend = Reader.NameTable.Add(@"RequestClearTiltSend");
            id552_feature_index = Reader.NameTable.Add(@"feature_index");
            id229_CanBetNextGameCycleSend = Reader.NameTable.Add(@"CanBetNextGameCycleSend");
            id175_SetSuccessful = Reader.NameTable.Add(@"SetSuccessful");
            id250_DisableAncillaryGameOfferReply = Reader.NameTable.Add(@"DisableAncillaryGameOfferReply");
            id59_ForceGameCompletionMessageType = Reader.NameTable.Add(@"ForceGameCompletionMessageType");
            id103_CdsItalyMessageType = Reader.NameTable.Add(@"CdsItalyMessageType");
            id594_GetLinkControlApiVersionsSend = Reader.NameTable.Add(@"GetLinkControlApiVersionsSend");
            id296_GetConfigDataMinBetAmountReply = Reader.NameTable.Add(@"GetConfigDataMinBetAmountReply");
            id558_EnrollSuccess = Reader.NameTable.Add(@"EnrollSuccess");
            id7_ShowDemo = Reader.NameTable.Add(@"ShowDemo");
            id343_MoneyInSend = Reader.NameTable.Add(@"MoneyInSend");
            id442_PlayerWagerableMeter = Reader.NameTable.Add(@"PlayerWagerableMeter");
            id348_MoneyWagerableReply = Reader.NameTable.Add(@"MoneyWagerableReply");
            id448_MoneyOutSource = Reader.NameTable.Add(@"MoneyOutSource");
            id445_AmountMoved = Reader.NameTable.Add(@"AmountMoved");
            id80_Item = Reader.NameTable.Add(@"ExtensionTransParcelCallRxReply");
            id214_AddMoneyReply = Reader.NameTable.Add(@"AddMoneyReply");
            id429_IsMaxBet = Reader.NameTable.Add(@"IsMaxBet");
            id206_ReportReelStopsReply = Reader.NameTable.Add(@"ReportReelStopsReply");
            id127_WagerCatIndex = Reader.NameTable.Add(@"WagerCatIndex");
            id426_BankLocked = Reader.NameTable.Add(@"BankLocked");
            id300_Item = Reader.NameTable.Add(@"GetConfigDataMinimumFreeSpinPresentationTimeReply");
            id52_PrizeString = Reader.NameTable.Add(@"PrizeString");
            id15_AutoPlay = Reader.NameTable.Add(@"AutoPlay");
            id3_LinkControl = Reader.NameTable.Add(@"LinkControl");
            id538_bonus_identifier = Reader.NameTable.Add(@"bonus_identifier");
            id252_EndGameCycleReply = Reader.NameTable.Add(@"EndGameCycleReply");
            id423_DefaultDenom = Reader.NameTable.Add(@"DefaultDenom");
            id500_NumericGroupSeparator = Reader.NameTable.Add(@"NumericGroupSeparator");
            id201_G2SThemeIdentifier = Reader.NameTable.Add(@"G2SThemeIdentifier");
            id220_ActionRequestReply = Reader.NameTable.Add(@"ActionRequestReply");
            id18_F2LGameContextLockingVer1xsd = Reader.NameTable.Add(@"F2LGameContextLockingVer1.xsd");
            id204_ReportPokerHandReply = Reader.NameTable.Add(@"ReportPokerHandReply");
            id584_ExtensionIdentifier = Reader.NameTable.Add(@"ExtensionIdentifier");
            id579_BinConnectToken = Reader.NameTable.Add(@"BinConnectToken");
            id184_RequestTiltReply = Reader.NameTable.Add(@"RequestTiltReply");
            id211_PokerCard = Reader.NameTable.Add(@"PokerCard");
            id113_GetEnrollmentResponseDataSend = Reader.NameTable.Add(@"GetEnrollmentResponseDataSend");
            id116_GetOutcomeResponseReply = Reader.NameTable.Add(@"GetOutcomeResponseReply");
            id118_GetTaxableWinInfoReply = Reader.NameTable.Add(@"GetTaxableWinInfoReply");
            id143_TransportBinDataToIPPHostReply = Reader.NameTable.Add(@"TransportBinDataToIPPHostReply");
            id188_TiltLocalization = Reader.NameTable.Add(@"TiltLocalization");
            id6_F2LGameControlVer4xsd = Reader.NameTable.Add(@"F2LGameControlVer4.xsd");
            id218_ShowEnvironment = Reader.NameTable.Add(@"ShowEnvironment");
            id236_CanPlaceBetReply = Reader.NameTable.Add(@"CanPlaceBetReply");
            id294_Item = Reader.NameTable.Add(@"GetConfigDataMaxBetButtonBehaviorReply");
            id477_Type = Reader.NameTable.Add(@"Type");
            id283_Item = Reader.NameTable.Add(@"GetConfigDataBonusPlayEnabledSend");
            id13_GameTilt = Reader.NameTable.Add(@"GameTilt");
            id317_GetCustomConfigItemTypeSend = Reader.NameTable.Add(@"GetCustomConfigItemTypeSend");
            id297_GetConfigDataMinBetAmountSend = Reader.NameTable.Add(@"GetConfigDataMinBetAmountSend");
            id84_Extension = Reader.NameTable.Add(@"Extension");
            id278_Item = Reader.NameTable.Add(@"GetConfigDataAncillaryGameEnabledReply");
            id411_ResourcePaths = Reader.NameTable.Add(@"ResourcePaths");
            id114_GetJackpotBonusAwardReply = Reader.NameTable.Add(@"GetJackpotBonusAwardReply");
            id518_AncillaryMonetaryLimit = Reader.NameTable.Add(@"AncillaryMonetaryLimit");
            id565_BetAllowed = Reader.NameTable.Add(@"BetAllowed");
            id521_CommittedBetAmount = Reader.NameTable.Add(@"CommittedBetAmount");
            id263_EvalLastOutcomeRequestSend = Reader.NameTable.Add(@"EvalLastOutcomeRequestSend");
            id149_PrintNotificationSend = Reader.NameTable.Add(@"PrintNotificationSend");
            id331_IsBankLockedSend = Reader.NameTable.Add(@"IsBankLockedSend");
            id256_EnrollResponseReply = Reader.NameTable.Add(@"EnrollResponseReply");
            id554_Awards = Reader.NameTable.Add(@"Awards");
            id33_Item = Reader.NameTable.Add(@"");
            id75_Item = Reader.NameTable.Add(@"ThemeToExtParcelCommMessageType");
            id28_Item = Reader.NameTable.Add(@"F2LThemeToExtParcelCommVer1.xsd");
            id464_RandomNumbers = Reader.NameTable.Add(@"RandomNumbers");
            id501_WholeUnitCurrencySymbol = Reader.NameTable.Add(@"WholeUnitCurrencySymbol");
            id388_Item = Reader.NameTable.Add(@"ThemeSelectionMenuOfferableStatusChangedReply");
            id25_CdsItalyMockEnrollment = Reader.NameTable.Add(@"CdsItalyMockEnrollment");
            id492_FlagList = Reader.NameTable.Add(@"FlagList");
            id110_GetConfigDataTaxInfoReply = Reader.NameTable.Add(@"GetConfigDataTaxInfoReply");
            id133_BonusIdentifier = Reader.NameTable.Add(@"BonusIdentifier");
            id5_GameControl = Reader.NameTable.Add(@"GameControl");
            id531_tag = Reader.NameTable.Add(@"tag");
            id239_CanStartPlayingSend = Reader.NameTable.Add(@"CanStartPlayingSend");
            id430_BetAmount = Reader.NameTable.Add(@"BetAmount");
            id564_StartAllowed = Reader.NameTable.Add(@"StartAllowed");
            id124_SetEnrollmentRequestDataReply = Reader.NameTable.Add(@"SetEnrollmentRequestDataReply");
            id571_ParkSend = Reader.NameTable.Add(@"ParkSend");
            id172_SetAutoPlayOffSend = Reader.NameTable.Add(@"SetAutoPlayOffSend");
            id135_TaxLimit = Reader.NameTable.Add(@"TaxLimit");
            id177_AutoPlayEnabled = Reader.NameTable.Add(@"AutoPlayEnabled");
            id102_BonusAmount = Reader.NameTable.Add(@"BonusAmount");
            id381_StartAncillaryPlayingSend = Reader.NameTable.Add(@"StartAncillaryPlayingSend");
            id286_Item = Reader.NameTable.Add(@"GetConfigDataCreditMeterDisplayBehaviorReply");
            id40_TransportWAPHostDataToBinSend = Reader.NameTable.Add(@"TransportWAPHostDataToBinSend");
            id516_ButtonPanelMinBetAmount = Reader.NameTable.Add(@"ButtonPanelMinBetAmount");
            id389_Item = Reader.NameTable.Add(@"ThemeSelectionMenuOfferableStatusChangedSend");
            id367_Item = Reader.NameTable.Add(@"QueryPlayerSelectableDenomsSend");
            id238_CanStartPlayingReply = Reader.NameTable.Add(@"CanStartPlayingReply");
            id580_BinTagDataFile = Reader.NameTable.Add(@"BinTagDataFile");
            id461_Name = Reader.NameTable.Add(@"Name");
            id295_Item = Reader.NameTable.Add(@"GetConfigDataMaxBetButtonBehaviorSend");
            id224_ActivateThemeContextReply = Reader.NameTable.Add(@"ActivateThemeContextReply");
            id380_StartAncillaryPlayingReply = Reader.NameTable.Add(@"StartAncillaryPlayingReply");
            id312_Item = Reader.NameTable.Add(@"GetCustomConfigItemReferencedEnumerationReply");
            id72_Item = Reader.NameTable.Add(@"ForceCompletionMessageLocalizations");
            id493_FlagListType = Reader.NameTable.Add(@"FlagListType");
            id79_ExtensionParcelCallTxSend = Reader.NameTable.Add(@"ExtensionParcelCallTxSend");
            id547_award_type = Reader.NameTable.Add(@"award_type");
            id97_OutcomeResponseData = Reader.NameTable.Add(@"OutcomeResponseData");
            id235_CanCommitGameCycleSend = Reader.NameTable.Add(@"CanCommitGameCycleSend");
            id151_GameContextLockingMessageType = Reader.NameTable.Add(@"GameContextLockingMessageType");
            id228_CanBetNextGameCycleReply = Reader.NameTable.Add(@"CanBetNextGameCycleReply");
            id268_FinalizeAwardRequestReply = Reader.NameTable.Add(@"FinalizeAwardRequestReply");
            id311_GetCultureSend = Reader.NameTable.Add(@"GetCultureSend");
            id568_GetThemeApiVersionsReply = Reader.NameTable.Add(@"GetThemeApiVersionsReply");
            id320_Item = Reader.NameTable.Add(@"GetListLimitedRandomNumbersReply");
            id248_DenominationChangeRequestReply = Reader.NameTable.Add(@"DenominationChangeRequestReply");
            id265_EvalOutcomeRequestSend = Reader.NameTable.Add(@"EvalOutcomeRequestSend");
            id166_Item = Reader.NameTable.Add(@"GetConfigDataPlayerAutoPlayConfirmationRequiredSend");
            id387_SwitchThemeContextSend = Reader.NameTable.Add(@"SwitchThemeContextSend");
            id399_UncommitGameCycleSend = Reader.NameTable.Add(@"UncommitGameCycleSend");
            id351_MoneyWonSend = Reader.NameTable.Add(@"MoneyWonSend");
            id338_MoneyBetReply = Reader.NameTable.Add(@"MoneyBetReply");
            id329_InactivateThemeContextSend = Reader.NameTable.Add(@"InactivateThemeContextSend");
            id274_GetCommittedBetReply = Reader.NameTable.Add(@"GetCommittedBetReply");
            id587_PatchVersion = Reader.NameTable.Add(@"PatchVersion");
            id309_GetCreditFormatterInfoSend = Reader.NameTable.Add(@"GetCreditFormatterInfoSend");
            id162_AutoPlayOnRequestSend = Reader.NameTable.Add(@"AutoPlayOnRequestSend");
            id293_GetConfigDataMaxBetAmountSend = Reader.NameTable.Add(@"GetConfigDataMaxBetAmountSend");
            id405_ItemName = Reader.NameTable.Add(@"ItemName");
            id273_GetAvailableCulturesSend = Reader.NameTable.Add(@"GetAvailableCulturesSend");
            id16_F2LAutoPlayVer1xsd = Reader.NameTable.Add(@"F2LAutoPlayVer1.xsd");
            id592_ConnectMessageType = Reader.NameTable.Add(@"ConnectMessageType");
            id57_MajorVersion = Reader.NameTable.Add(@"MajorVersion");
            id379_SetDisplayControlStateSend = Reader.NameTable.Add(@"SetDisplayControlStateSend");
            id555_Number = Reader.NameTable.Add(@"Number");
            id469_GameLevelProgressives = Reader.NameTable.Add(@"GameLevelProgressives");
            id182_RequestClearTiltReply = Reader.NameTable.Add(@"RequestClearTiltReply");
            id488_EnumerationReferenceName = Reader.NameTable.Add(@"EnumerationReferenceName");
            id253_EndGameCycleSend = Reader.NameTable.Add(@"EndGameCycleSend");
            id325_Item = Reader.NameTable.Add(@"GetProgressiveGameLevelValuesSend");
            id453_AmountBet = Reader.NameTable.Add(@"AmountBet");
            id482_FlagListData = Reader.NameTable.Add(@"FlagListData");
            id422_ProgressiveDenominationList = Reader.NameTable.Add(@"ProgressiveDenominationList");
            id481_EnumerationData = Reader.NameTable.Add(@"EnumerationData");
            id92_SetMockOutcomeDataSend = Reader.NameTable.Add(@"SetMockOutcomeDataSend");
            id132_TaxAmount = Reader.NameTable.Add(@"TaxAmount");
            id419_RemoveCritDataSuccess = Reader.NameTable.Add(@"RemoveCritDataSuccess");
            id171_SetAutoPlayOffReply = Reader.NameTable.Add(@"SetAutoPlayOffReply");
            id23_CdsItaly = Reader.NameTable.Add(@"CdsItaly");
            id483_FloatData = Reader.NameTable.Add(@"FloatData");
            id416_Path = Reader.NameTable.Add(@"Path");
            id566_CommitAllowed = Reader.NameTable.Add(@"CommitAllowed");
            id543_consolation_amount = Reader.NameTable.Add(@"consolation_amount");
            id35_Message = Reader.NameTable.Add(@"Message");
            id494_Item = Reader.NameTable.Add(@"Item");
            id525_FeatureEntry = Reader.NameTable.Add(@"FeatureEntry");
            id326_GetRandomNumbersReply = Reader.NameTable.Add(@"GetRandomNumbersReply");
            id174_SetAutoPlayOnRequestSend = Reader.NameTable.Add(@"SetAutoPlayOnRequestSend");
            id479_AmountData = Reader.NameTable.Add(@"AmountData");
            id526_GameCycleEntry = Reader.NameTable.Add(@"GameCycleEntry");
            id463_AlreadyPickedNumber = Reader.NameTable.Add(@"AlreadyPickedNumber");
            id82_Item = Reader.NameTable.Add(@"ExtensionTransParcelCallTxReply");
            id507_RoundWagerUpPlayoffEnabled = Reader.NameTable.Add(@"RoundWagerUpPlayoffEnabled");
            id277_Item = Reader.NameTable.Add(@"GetConfigDataAncillaryCycleLimitSend");
            id203_GameStopReportMessageType = Reader.NameTable.Add(@"GameStopReportMessageType");
            id439_SecurityLevel = Reader.NameTable.Add(@"SecurityLevel");
            id227_BankStatusChangedSend = Reader.NameTable.Add(@"BankStatusChangedSend");
            id514_NumberOfPlaySteps = Reader.NameTable.Add(@"NumberOfPlaySteps");
            id67_ForceCompletion = Reader.NameTable.Add(@"ForceCompletion");
            id491_Max = Reader.NameTable.Add(@"Max");
            id123_OutcomeResponseSend = Reader.NameTable.Add(@"OutcomeResponseSend");
            id275_GetCommittedBetSend = Reader.NameTable.Add(@"GetCommittedBetSend");
            id244_CultureChangedReply = Reader.NameTable.Add(@"CultureChangedReply");
            id134_GameResponseData = Reader.NameTable.Add(@"GameResponseData");
            id404_CriticalDataScope = Reader.NameTable.Add(@"CriticalDataScope");
            id27_ThemeToExtParcelComm = Reader.NameTable.Add(@"ThemeToExtParcelComm");
            id96_OutcomeGenerated = Reader.NameTable.Add(@"OutcomeGenerated");
            id289_Item = Reader.NameTable.Add(@"GetConfigDataHistoryPlayStepsSend");
            id258_Item = Reader.NameTable.Add(@"EvalLastAncillaryOutcomeRequestReply");
            id377_SetDefaultCultureSend = Reader.NameTable.Add(@"SetDefaultCultureSend");
            id142_Item = Reader.NameTable.Add(@"ProtocolIPPForwardingMessageType");
            id269_FinalizeAwardRequestSend = Reader.NameTable.Add(@"FinalizeAwardRequestSend");
            id46_ErrorDescription = Reader.NameTable.Add(@"ErrorDescription");
            id308_GetCreditFormatterInfoReply = Reader.NameTable.Add(@"GetCreditFormatterInfoReply");
            id444_PlayerPaidMeter = Reader.NameTable.Add(@"PlayerPaidMeter");
            id190_Title = Reader.NameTable.Add(@"Title");
            id279_Item = Reader.NameTable.Add(@"GetConfigDataAncillaryGameEnabledSend");
            id126_WagerAmount = Reader.NameTable.Add(@"WagerAmount");
            id29_ForceGameCompletion = Reader.NameTable.Add(@"ForceGameCompletion");
            id313_Item = Reader.NameTable.Add(@"GetCustomConfigItemReferencedEnumerationSend");
            id402_WriteCritDataReply = Reader.NameTable.Add(@"WriteCritDataReply");
            id187_TiltLocalizations = Reader.NameTable.Add(@"TiltLocalizations");
            id585_ExtensionVersion = Reader.NameTable.Add(@"ExtensionVersion");
            id158_AutoPlayMessageType = Reader.NameTable.Add(@"AutoPlayMessageType");
            id31_WapSignControl = Reader.NameTable.Add(@"WapSignControl");
            id307_Item = Reader.NameTable.Add(@"GetConfigDataWinCapBehaviorSend");
            id61_Item = Reader.NameTable.Add(@"ForceGameCompletionStatusChangedSend");
            id596_SetLinkControlApiVersionSend = Reader.NameTable.Add(@"SetLinkControlApiVersionSend");
            id291_GetConfigDataLineSelectionSend = Reader.NameTable.Add(@"GetConfigDataLineSelectionSend");
            id186_TiltName = Reader.NameTable.Add(@"TiltName");
            id240_CommitBetReply = Reader.NameTable.Add(@"CommitBetReply");
            id349_MoneyWagerableSend = Reader.NameTable.Add(@"MoneyWagerableSend");
            id499_NumericDecimalSeparator = Reader.NameTable.Add(@"NumericDecimalSeparator");
            id8_F2LShowDemoVer2xsd = Reader.NameTable.Add(@"F2LShowDemoVer2.xsd");
            id502_BaseUnitCurrencySymbol = Reader.NameTable.Add(@"BaseUnitCurrencySymbol");
            id254_EnrollGameCycleReply = Reader.NameTable.Add(@"EnrollGameCycleReply");
            id54_Value = Reader.NameTable.Add(@"Value");
            id435_OfferAncillaryGame = Reader.NameTable.Add(@"OfferAncillaryGame");
            id519_AncillaryGameEnabled = Reader.NameTable.Add(@"AncillaryGameEnabled");
            id26_Item = Reader.NameTable.Add(@"F2LCdsItalyMockEnrollmentVer1.xsd");
            id578_BinTag = Reader.NameTable.Add(@"BinTag");
            id170_IsAutoPlayOnSend = Reader.NameTable.Add(@"IsAutoPlayOnSend");
            id447_AmountOut = Reader.NameTable.Add(@"AmountOut");
            id441_PlayerMeters = Reader.NameTable.Add(@"PlayerMeters");
            id257_EnrollResponseSend = Reader.NameTable.Add(@"EnrollResponseSend");
            id222_ActionResponseReply = Reader.NameTable.Add(@"ActionResponseReply");
            id386_SwitchThemeContextReply = Reader.NameTable.Add(@"SwitchThemeContextReply");
            id69_FinishTime = Reader.NameTable.Add(@"FinishTime");
            id570_ParkReply = Reader.NameTable.Add(@"ParkReply");
            id264_EvalOutcomeRequestReply = Reader.NameTable.Add(@"EvalOutcomeRequestReply");
            id193_IdentificationMessageType = Reader.NameTable.Add(@"IdentificationMessageType");
            id230_CanCommitBetReply = Reader.NameTable.Add(@"CanCommitBetReply");
            id246_Item = Reader.NameTable.Add(@"DenominationChangeCancelledReply");
            id337_Item = Reader.NameTable.Add(@"IsThemeSelectionMenuOfferableSend");
            id350_MoneyWonReply = Reader.NameTable.Add(@"MoneyWonReply");
            id86_Status = Reader.NameTable.Add(@"Status");
            id398_UncommitGameCycleReply = Reader.NameTable.Add(@"UncommitGameCycleReply");
            id575_CategoryVersion = Reader.NameTable.Add(@"CategoryVersion");
            id520_AncillaryCycleLimit = Reader.NameTable.Add(@"AncillaryCycleLimit");
            id505_WinCapMultiplier = Reader.NameTable.Add(@"WinCapMultiplier");
            id216_GetShowEnvironmentReply = Reader.NameTable.Add(@"GetShowEnvironmentReply");
            id64_TransactionID = Reader.NameTable.Add(@"TransactionID");
            id58_MinorVersion = Reader.NameTable.Add(@"MinorVersion");
            id100_JackpotHit = Reader.NameTable.Add(@"JackpotHit");
            id101_JackpotLevel = Reader.NameTable.Add(@"JackpotLevel");
            id111_GetConfigDataTaxInfoSend = Reader.NameTable.Add(@"GetConfigDataTaxInfoSend");
            id56_VersionType = Reader.NameTable.Add(@"VersionType");
            id451_FundsTransferAccountSource = Reader.NameTable.Add(@"FundsTransferAccountSource");
            id440_AmountWon = Reader.NameTable.Add(@"AmountWon");
            id213_ShowDemoMessageType = Reader.NameTable.Add(@"ShowDemoMessageType");
            id534_is_displayable = Reader.NameTable.Add(@"is_displayable");
            id438_NewlySelectedForPlay = Reader.NameTable.Add(@"NewlySelectedForPlay");
            id392_Item = Reader.NameTable.Add(@"TransferBankToWagerableRequestReply");
            id107_CommitOutcomeSend = Reader.NameTable.Add(@"CommitOutcomeSend");
            id270_FinalizeAwardResponseReply = Reader.NameTable.Add(@"FinalizeAwardResponseReply");
            id336_Item = Reader.NameTable.Add(@"IsThemeSelectionMenuOfferableReply");
            id219_GameControlMessageType = Reader.NameTable.Add(@"GameControlMessageType");
            id512_MaxBetAmount = Reader.NameTable.Add(@"MaxBetAmount");
            id147_VoucherPrintMessageType = Reader.NameTable.Add(@"VoucherPrintMessageType");
            id497_CreditFormatterInfoType = Reader.NameTable.Add(@"CreditFormatterInfoType");
            id243_CommitGameCycleSend = Reader.NameTable.Add(@"CommitGameCycleSend");
            id467_ProgressiveGameLevelValues = Reader.NameTable.Add(@"ProgressiveGameLevelValues");
            id281_Item = Reader.NameTable.Add(@"GetConfigDataAncillaryMonetaryLimitSend");
            id437_GameSubMode = Reader.NameTable.Add(@"GameSubMode");
            id160_AutoPlayOffSend = Reader.NameTable.Add(@"AutoPlayOffSend");
            id155_SetGameContextLockSend = Reader.NameTable.Add(@"SetGameContextLockSend");
            id55_CRC = Reader.NameTable.Add(@"CRC");
            id49_LevelProgressiveValue = Reader.NameTable.Add(@"LevelProgressiveValue");
            id354_OfferAncillaryGameRequestReply = Reader.NameTable.Add(@"OfferAncillaryGameRequestReply");
            id245_CultureChangedSend = Reader.NameTable.Add(@"CultureChangedSend");
            id456_IsBankLocked = Reader.NameTable.Add(@"IsBankLocked");
            id210_Card = Reader.NameTable.Add(@"Card");
            id176_AutoPlayOn = Reader.NameTable.Add(@"AutoPlayOn");
            id425_BankStatus = Reader.NameTable.Add(@"BankStatus");
            id209_HandStatus = Reader.NameTable.Add(@"HandStatus");
            id484_Int64Data = Reader.NameTable.Add(@"Int64Data");
            id284_Item = Reader.NameTable.Add(@"GetConfigDataButtonPanelMinBetAmountReply");
            id332_Item = Reader.NameTable.Add(@"IsPlayerBankToWagerableOfferableReply");
            id373_RequestThemeSelectionMenuSend = Reader.NameTable.Add(@"RequestThemeSelectionMenuSend");
            id19_VoucherPrint = Reader.NameTable.Add(@"VoucherPrint");
            id588_EnvironmentAttribute = Reader.NameTable.Add(@"EnvironmentAttribute");
            id221_ActionRequestSend = Reader.NameTable.Add(@"ActionRequestSend");
            id12_F2LIdentificationVer1xsd = Reader.NameTable.Add(@"F2LIdentificationVer1.xsd");
            id498_F2LLocalizationTypeVer1xsd = Reader.NameTable.Add(@"F2LLocalizationTypeVer1.xsd");
            id330_IsBankLockedReply = Reader.NameTable.Add(@"IsBankLockedReply");
            id189_TiltAttributes = Reader.NameTable.Add(@"TiltAttributes");
            id544_AncillaryAward = Reader.NameTable.Add(@"AncillaryAward");
            id383_StartBonusPlayingSend = Reader.NameTable.Add(@"StartBonusPlayingSend");
            id393_Item = Reader.NameTable.Add(@"TransferBankToWagerableRequestSend");
            id119_GetTaxableWinInfoSend = Reader.NameTable.Add(@"GetTaxableWinInfoSend");
            id76_ExtensionParcelCallRxReply = Reader.NameTable.Add(@"ExtensionParcelCallRxReply");
            id420_ReadCritDataSuccess = Reader.NameTable.Add(@"ReadCritDataSuccess");
            id120_OutcomeRequestReply = Reader.NameTable.Add(@"OutcomeRequestReply");
            id450_MoneyInSource = Reader.NameTable.Add(@"MoneyInSource");
            id41_BinaryData = Reader.NameTable.Add(@"BinaryData");
        }
    }

    public abstract class XmlSerializer1 : System.Xml.Serialization.XmlSerializer {
        protected override System.Xml.Serialization.XmlSerializationReader CreateReader() {
            return new XmlSerializationReader1();
        }
        protected override System.Xml.Serialization.XmlSerializationWriter CreateWriter() {
            return new XmlSerializationWriter1();
        }
    }

    public sealed class ConnectSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"Connect", @"F2LConnectVer2.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write399_Connect(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read399_Connect();
        }
    }

    public sealed class LinkControlSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"LinkControl", @"F2LLinkControlVer2.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write400_LinkControl(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read400_LinkControl();
        }
    }

    public sealed class GameControlSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"GameControl", @"F2LGameControlVer4.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write401_GameControl(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read401_GameControl();
        }
    }

    public sealed class ShowDemoSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"ShowDemo", @"F2LShowDemoVer2.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write402_ShowDemo(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read402_ShowDemo();
        }
    }

    public sealed class GameStopReportSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"GameStopReport", @"F2LGameStopReportVer2.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write403_GameStopReport(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read403_GameStopReport();
        }
    }

    public sealed class IdentificationSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"Identification", @"F2LIdentificationVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write404_Identification(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read404_Identification();
        }
    }

    public sealed class GameTiltSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"GameTilt", @"F2LGameTiltVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write405_GameTilt(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read405_GameTilt();
        }
    }

    public sealed class AutoPlaySerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"AutoPlay", @"F2LAutoPlayVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write406_AutoPlay(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read406_AutoPlay();
        }
    }

    public sealed class GameContextLockingSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"GameContextLocking", @"F2LGameContextLockingVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write407_GameContextLocking(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read407_GameContextLocking();
        }
    }

    public sealed class VoucherPrintSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"VoucherPrint", @"F2LVoucherPrintVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write408_VoucherPrint(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read408_VoucherPrint();
        }
    }

    public sealed class ProtocolIPPForwardingSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"ProtocolIPPForwarding", @"F2LProtocolIPPForwardingVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write409_ProtocolIPPForwarding(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read409_ProtocolIPPForwarding();
        }
    }

    public sealed class CdsItalySerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"CdsItaly", @"F2LCdsItalyVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write410_CdsItaly(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read410_CdsItaly();
        }
    }

    public sealed class CdsItalyMockEnrollmentSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"CdsItalyMockEnrollment", @"F2LCdsItalyMockEnrollmentVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write411_CdsItalyMockEnrollment(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read411_CdsItalyMockEnrollment();
        }
    }

    public sealed class ThemeToExtParcelCommSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"ThemeToExtParcelComm", @"F2LThemeToExtParcelCommVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write412_ThemeToExtParcelComm(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read412_ThemeToExtParcelComm();
        }
    }

    public sealed class ForceGameCompletionSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"ForceGameCompletion", @"F2LForceGameCompletionVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write413_ForceGameCompletion(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read413_ForceGameCompletion();
        }
    }

    public sealed class WapSignControlSerializer : XmlSerializer1 {

        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {
            return xmlReader.IsStartElement(@"WapSignControl", @"F2LWapSignControlVer1.xsd");
        }

        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {
            ((XmlSerializationWriter1)writer).Write414_WapSignControl(objectToSerialize);
        }

        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {
            return ((XmlSerializationReader1)reader).Read414_WapSignControl();
        }
    }

    public partial class XmlSerializerContract : global::System.Xml.Serialization.XmlSerializerImplementation {
        public override global::System.Xml.Serialization.XmlSerializationReader Reader { get { return new XmlSerializationReader1(); } }
        public override global::System.Xml.Serialization.XmlSerializationWriter Writer { get { return new XmlSerializationWriter1(); } }
        System.Collections.Hashtable readMethods = null;
        public override System.Collections.Hashtable ReadMethods {
            get {
                if (readMethods == null) {
                    System.Collections.Hashtable _tmp = new System.Collections.Hashtable();
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect:F2LConnectVer2.xsd::False:"] = @"Read399_Connect";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl:F2LLinkControlVer2.xsd::False:"] = @"Read400_LinkControl";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl:F2LGameControlVer4.xsd::False:"] = @"Read401_GameControl";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo:F2LShowDemoVer2.xsd::False:"] = @"Read402_ShowDemo";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport:F2LGameStopReportVer2.xsd::False:"] = @"Read403_GameStopReport";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification:F2LIdentificationVer1.xsd::False:"] = @"Read404_Identification";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt:F2LGameTiltVer1.xsd::False:"] = @"Read405_GameTilt";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay:F2LAutoPlayVer1.xsd::False:"] = @"Read406_AutoPlay";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking:F2LGameContextLockingVer1.xsd::False:"] = @"Read407_GameContextLocking";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint:F2LVoucherPrintVer1.xsd::False:"] = @"Read408_VoucherPrint";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding:F2LProtocolIPPForwardingVer1.xsd::False:"] = @"Read409_ProtocolIPPForwarding";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly:F2LCdsItalyVer1.xsd::False:"] = @"Read410_CdsItaly";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment:F2LCdsItalyMockEnrollmentVer1.xsd::False:"] = @"Read411_CdsItalyMockEnrollment";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm:F2LThemeToExtParcelCommVer1.xsd::False:"] = @"Read412_ThemeToExtParcelComm";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion:F2LForceGameCompletionVer1.xsd::False:"] = @"Read413_ForceGameCompletion";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl:F2LWapSignControlVer1.xsd::False:"] = @"Read414_WapSignControl";
                    if (readMethods == null) readMethods = _tmp;
                }
                return readMethods;
            }
        }
        System.Collections.Hashtable writeMethods = null;
        public override System.Collections.Hashtable WriteMethods {
            get {
                if (writeMethods == null) {
                    System.Collections.Hashtable _tmp = new System.Collections.Hashtable();
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect:F2LConnectVer2.xsd::False:"] = @"Write399_Connect";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl:F2LLinkControlVer2.xsd::False:"] = @"Write400_LinkControl";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl:F2LGameControlVer4.xsd::False:"] = @"Write401_GameControl";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo:F2LShowDemoVer2.xsd::False:"] = @"Write402_ShowDemo";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport:F2LGameStopReportVer2.xsd::False:"] = @"Write403_GameStopReport";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification:F2LIdentificationVer1.xsd::False:"] = @"Write404_Identification";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt:F2LGameTiltVer1.xsd::False:"] = @"Write405_GameTilt";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay:F2LAutoPlayVer1.xsd::False:"] = @"Write406_AutoPlay";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking:F2LGameContextLockingVer1.xsd::False:"] = @"Write407_GameContextLocking";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint:F2LVoucherPrintVer1.xsd::False:"] = @"Write408_VoucherPrint";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding:F2LProtocolIPPForwardingVer1.xsd::False:"] = @"Write409_ProtocolIPPForwarding";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly:F2LCdsItalyVer1.xsd::False:"] = @"Write410_CdsItaly";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment:F2LCdsItalyMockEnrollmentVer1.xsd::False:"] = @"Write411_CdsItalyMockEnrollment";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm:F2LThemeToExtParcelCommVer1.xsd::False:"] = @"Write412_ThemeToExtParcelComm";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion:F2LForceGameCompletionVer1.xsd::False:"] = @"Write413_ForceGameCompletion";
                    _tmp[@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl:F2LWapSignControlVer1.xsd::False:"] = @"Write414_WapSignControl";
                    if (writeMethods == null) writeMethods = _tmp;
                }
                return writeMethods;
            }
        }
        System.Collections.Hashtable typedSerializers = null;
        public override System.Collections.Hashtable TypedSerializers {
            get {
                if (typedSerializers == null) {
                    System.Collections.Hashtable _tmp = new System.Collections.Hashtable();
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay:F2LAutoPlayVer1.xsd::False:", new AutoPlaySerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport:F2LGameStopReportVer2.xsd::False:", new GameStopReportSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment:F2LCdsItalyMockEnrollmentVer1.xsd::False:", new CdsItalyMockEnrollmentSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly:F2LCdsItalyVer1.xsd::False:", new CdsItalySerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo:F2LShowDemoVer2.xsd::False:", new ShowDemoSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking:F2LGameContextLockingVer1.xsd::False:", new GameContextLockingSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl:F2LGameControlVer4.xsd::False:", new GameControlSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt:F2LGameTiltVer1.xsd::False:", new GameTiltSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl:F2LWapSignControlVer1.xsd::False:", new WapSignControlSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect:F2LConnectVer2.xsd::False:", new ConnectSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification:F2LIdentificationVer1.xsd::False:", new IdentificationSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint:F2LVoucherPrintVer1.xsd::False:", new VoucherPrintSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl:F2LLinkControlVer2.xsd::False:", new LinkControlSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding:F2LProtocolIPPForwardingVer1.xsd::False:", new ProtocolIPPForwardingSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm:F2LThemeToExtParcelCommVer1.xsd::False:", new ThemeToExtParcelCommSerializer());
                    _tmp.Add(@"IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion:F2LForceGameCompletionVer1.xsd::False:", new ForceGameCompletionSerializer());
                    if (typedSerializers == null) typedSerializers = _tmp;
                }
                return typedSerializers;
            }
        }
        public override System.Boolean CanSerialize(System.Type type) {
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion)) return true;
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl)) return true;
            return false;
        }
        public override System.Xml.Serialization.XmlSerializer GetSerializer(System.Type type) {
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Connect)) return new ConnectSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.LinkControl)) return new LinkControlSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameControl)) return new GameControlSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ShowDemo)) return new ShowDemoSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameStopReport)) return new GameStopReportSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.Identification)) return new IdentificationSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameTilt)) return new GameTiltSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.AutoPlay)) return new AutoPlaySerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.GameContextLocking)) return new GameContextLockingSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.VoucherPrint)) return new VoucherPrintSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ProtocolIPPForwarding)) return new ProtocolIPPForwardingSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItaly)) return new CdsItalySerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.CdsItalyMockEnrollment)) return new CdsItalyMockEnrollmentSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ThemeToExtParcelComm)) return new ThemeToExtParcelCommSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.ForceGameCompletion)) return new ForceGameCompletionSerializer();
            if (type == typeof(global::IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal.WapSignControl)) return new WapSignControlSerializer();
            return null;
        }
    }
}
#pragma warning restore
