//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 


namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LAutoPlayVer1.xsd", IsNullable=false)]
public partial class AutoPlay {
    
    private VersionType versionField;
    
    private AutoPlayMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AutoPlayMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LTypeVer2.xsd")]
public partial class VersionType {
    
    private uint majorVersionField;
    
    private uint minorVersionField;
    
    /// <remarks/>
    public uint MajorVersion {
        get {
            return this.majorVersionField;
        }
        set {
            this.majorVersionField = value;
        }
    }
    
    /// <remarks/>
    public uint MinorVersion {
        get {
            return this.minorVersionField;
        }
        set {
            this.minorVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LTypeVer2.xsd")]
public partial class ReplyCodeType {
    
    private int replyCodeField;
    
    private string errorDescriptionField;
    
    /// <remarks/>
    public int ReplyCode {
        get {
            return this.replyCodeField;
        }
        set {
            this.replyCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AutoPlayOffReply", typeof(AutoPlayAutoPlayOffReply))]
    [System.Xml.Serialization.XmlElementAttribute("AutoPlayOffSend", typeof(AutoPlayAutoPlayOffSend))]
    [System.Xml.Serialization.XmlElementAttribute("AutoPlayOnRequestReply", typeof(AutoPlayAutoPlayOnRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("AutoPlayOnRequestSend", typeof(AutoPlayAutoPlayOnRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAutoPlaySpeedIncreaseAllowedReply", typeof(AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAutoPlaySpeedIncreaseAllowedSend", typeof(AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPlayerAutoPlayConfirmationRequiredReply", typeof(AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPlayerAutoPlayConfirmationRequiredSend", typeof(AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPlayerAutoPlayEnabledReply", typeof(AutoPlayGetConfigDataPlayerAutoPlayEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPlayerAutoPlayEnabledSend", typeof(AutoPlayGetConfigDataPlayerAutoPlayEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("IsAutoPlayOnReply", typeof(AutoPlayIsAutoPlayOnReply))]
    [System.Xml.Serialization.XmlElementAttribute("IsAutoPlayOnSend", typeof(AutoPlayIsAutoPlayOnSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetAutoPlayOffReply", typeof(AutoPlaySetAutoPlayOffReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetAutoPlayOffSend", typeof(AutoPlaySetAutoPlayOffSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetAutoPlayOnRequestReply", typeof(AutoPlaySetAutoPlayOnRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetAutoPlayOnRequestSend", typeof(AutoPlaySetAutoPlayOnRequestSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayAutoPlayOffReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayAutoPlayOffSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayAutoPlayOnRequestReply {
    
    private bool autoPlayOnRequestSuccessfulField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool AutoPlayOnRequestSuccessful {
        get {
            return this.autoPlayOnRequestSuccessfulField;
        }
        set {
            this.autoPlayOnRequestSuccessfulField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayAutoPlayOnRequestSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedReply {
    
    private bool autoPlaySpeedIncreaseAllowedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool AutoPlaySpeedIncreaseAllowed {
        get {
            return this.autoPlaySpeedIncreaseAllowedField;
        }
        set {
            this.autoPlaySpeedIncreaseAllowedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayGetConfigDataAutoPlaySpeedIncreaseAllowedSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredReply {
    
    private bool autoPlayConfirmationRequiredField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool AutoPlayConfirmationRequired {
        get {
            return this.autoPlayConfirmationRequiredField;
        }
        set {
            this.autoPlayConfirmationRequiredField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayGetConfigDataPlayerAutoPlayConfirmationRequiredSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayGetConfigDataPlayerAutoPlayEnabledReply {
    
    private bool autoPlayEnabledField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool AutoPlayEnabled {
        get {
            return this.autoPlayEnabledField;
        }
        set {
            this.autoPlayEnabledField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayGetConfigDataPlayerAutoPlayEnabledSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayIsAutoPlayOnReply {
    
    private bool autoPlayOnField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool AutoPlayOn {
        get {
            return this.autoPlayOnField;
        }
        set {
            this.autoPlayOnField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlayIsAutoPlayOnSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlaySetAutoPlayOffReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlaySetAutoPlayOffSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlaySetAutoPlayOnRequestReply {
    
    private bool setSuccessfulField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool SetSuccessful {
        get {
            return this.setSuccessfulField;
        }
        set {
            this.setSuccessfulField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LAutoPlayVer1.xsd")]
public partial class AutoPlaySetAutoPlayOnRequestSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyMockEnrollmentVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LCdsItalyMockEnrollmentVer1.xsd", IsNullable=false)]
public partial class CdsItalyMockEnrollment {
    
    private VersionType versionField;
    
    private CdsItalyMockEnrollmentMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsItalyMockEnrollmentMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LCdsItalyMockEnrollmentVer1.xsd")]
public partial class CdsItalyMockEnrollmentMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SetMockEnrollmentDataReply", typeof(CdsItalyMockEnrollmentSetMockEnrollmentDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetMockEnrollmentDataSend", typeof(CdsItalyMockEnrollmentSetMockEnrollmentDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetMockOutcomeDataReply", typeof(CdsItalyMockEnrollmentSetMockOutcomeDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetMockOutcomeDataSend", typeof(CdsItalyMockEnrollmentSetMockOutcomeDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyMockEnrollmentVer1.xsd")]
public partial class CdsItalyMockEnrollmentSetMockEnrollmentDataReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyMockEnrollmentVer1.xsd")]
public partial class CdsItalyMockEnrollmentSetMockEnrollmentDataSend {
    
    private uint transactionIDField;
    
    private bool enrollementSuccessField;
    
    private byte[] enrollmentResponseDataField;
    
    private bool jackpotHitField;
    
    private int jackpotLevelField;
    
    private AmountType bonusAmountField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public bool EnrollementSuccess {
        get {
            return this.enrollementSuccessField;
        }
        set {
            this.enrollementSuccessField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] EnrollmentResponseData {
        get {
            return this.enrollmentResponseDataField;
        }
        set {
            this.enrollmentResponseDataField = value;
        }
    }
    
    /// <remarks/>
    public bool JackpotHit {
        get {
            return this.jackpotHitField;
        }
        set {
            this.jackpotHitField = value;
        }
    }
    
    /// <remarks/>
    public int JackpotLevel {
        get {
            return this.jackpotLevelField;
        }
        set {
            this.jackpotLevelField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BonusAmount {
        get {
            return this.bonusAmountField;
        }
        set {
            this.bonusAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LTypeVer2.xsd")]
public partial class AmountType {
    
    private long valueField;
    
    private uint cRCField;
    
    /// <remarks/>
    public long Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public uint CRC {
        get {
            return this.cRCField;
        }
        set {
            this.cRCField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyMockEnrollmentVer1.xsd")]
public partial class CdsItalyMockEnrollmentSetMockOutcomeDataReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyMockEnrollmentVer1.xsd")]
public partial class CdsItalyMockEnrollmentSetMockOutcomeDataSend {
    
    private uint transactionIDField;
    
    private List<CdsItalyMockOutcomeData> cdsItalyMockOutcomeListField = new List<CdsItalyMockOutcomeData>();
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CdsItalyMockOutcome", IsNullable=false)]
    public List<CdsItalyMockOutcomeData> CdsItalyMockOutcomeList {
        get {
            return this.cdsItalyMockOutcomeListField;
        }
        set {
            this.cdsItalyMockOutcomeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LCdsItalyMockEnrollmentVer1.xsd")]
public partial class CdsItalyMockOutcomeData {
    
    private bool outcomeGeneratedField;
    
    private byte[] outcomeResponseDataField;
    
    /// <remarks/>
    public bool OutcomeGenerated {
        get {
            return this.outcomeGeneratedField;
        }
        set {
            this.outcomeGeneratedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] OutcomeResponseData {
        get {
            return this.outcomeResponseDataField;
        }
        set {
            this.outcomeResponseDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LCdsItalyVer1.xsd", IsNullable=false)]
public partial class CdsItaly {
    
    private VersionType versionField;
    
    private CdsItalyMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsItalyMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedReply", typeof(CdsItalyAwardMismatchDetectedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedSend", typeof(CdsItalyAwardMismatchDetectedSend))]
    [System.Xml.Serialization.XmlElementAttribute("CommitOutcomeReply", typeof(CdsItalyCommitOutcomeReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitOutcomeSend", typeof(CdsItalyCommitOutcomeSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataJackpotBonusEnabledReply", typeof(CdsItalyGetConfigDataJackpotBonusEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataJackpotBonusEnabledSend", typeof(CdsItalyGetConfigDataJackpotBonusEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataTaxInfoReply", typeof(CdsItalyGetConfigDataTaxInfoReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataTaxInfoSend", typeof(CdsItalyGetConfigDataTaxInfoSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataReply", typeof(CdsItalyGetEnrollmentResponseDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataSend", typeof(CdsItalyGetEnrollmentResponseDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetJackpotBonusAwardReply", typeof(CdsItalyGetJackpotBonusAwardReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetJackpotBonusAwardSend", typeof(CdsItalyGetJackpotBonusAwardSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetOutcomeResponseReply", typeof(CdsItalyGetOutcomeResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetOutcomeResponseSend", typeof(CdsItalyGetOutcomeResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetTaxableWinInfoReply", typeof(CdsItalyGetTaxableWinInfoReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetTaxableWinInfoSend", typeof(CdsItalyGetTaxableWinInfoSend))]
    [System.Xml.Serialization.XmlElementAttribute("OutcomeRequestReply", typeof(CdsItalyOutcomeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("OutcomeRequestSend", typeof(CdsItalyOutcomeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("OutcomeResponseReply", typeof(CdsItalyOutcomeResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("OutcomeResponseSend", typeof(CdsItalyOutcomeResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataReply", typeof(CdsItalySetEnrollmentRequestDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataSend", typeof(CdsItalySetEnrollmentRequestDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyAwardMismatchDetectedReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyAwardMismatchDetectedSend {
    
    private uint transactionIDField;
    
    private string logMessageField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyCommitOutcomeReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyCommitOutcomeSend {
    
    private uint transactionIDField;
    
    private OutcomeCommitType commitTypeField;
    
    private AmountType pendingPreTaxWinField;
    
    private byte[] commitRequestDataField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeCommitType CommitType {
        get {
            return this.commitTypeField;
        }
        set {
            this.commitTypeField = value;
        }
    }
    
    /// <remarks/>
    public AmountType PendingPreTaxWin {
        get {
            return this.pendingPreTaxWinField;
        }
        set {
            this.pendingPreTaxWinField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] CommitRequestData {
        get {
            return this.commitRequestDataField;
        }
        set {
            this.commitRequestDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LCdsItalyVer1.xsd")]
public enum OutcomeCommitType {
    
    /// <remarks/>
    CommitAward,
    
    /// <remarks/>
    InterimCommit,
    
    /// <remarks/>
    GetOutcomeFailure,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetConfigDataJackpotBonusEnabledReply {
    
    private ReplyCodeType replyField;
    
    private bool bonusEnabledField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool BonusEnabled {
        get {
            return this.bonusEnabledField;
        }
        set {
            this.bonusEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetConfigDataJackpotBonusEnabledSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetConfigDataTaxInfoReply {
    
    private ReplyCodeType replyField;
    
    private AmountType taxLimitField;
    
    private decimal taxPercentageField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public AmountType TaxLimit {
        get {
            return this.taxLimitField;
        }
        set {
            this.taxLimitField = value;
        }
    }
    
    /// <remarks/>
    public decimal TaxPercentage {
        get {
            return this.taxPercentageField;
        }
        set {
            this.taxPercentageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetConfigDataTaxInfoSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetEnrollmentResponseDataReply {
    
    private ReplyCodeType replyField;
    
    private byte[] gameResponseDataField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] GameResponseData {
        get {
            return this.gameResponseDataField;
        }
        set {
            this.gameResponseDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetEnrollmentResponseDataSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetJackpotBonusAwardReply {
    
    private ReplyCodeType replyField;
    
    private bool jackpotHitField;
    
    private int jackpotLevelField;
    
    private long bonusIdentifierField;
    
    private AmountType bonusAmountField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool JackpotHit {
        get {
            return this.jackpotHitField;
        }
        set {
            this.jackpotHitField = value;
        }
    }
    
    /// <remarks/>
    public int JackpotLevel {
        get {
            return this.jackpotLevelField;
        }
        set {
            this.jackpotLevelField = value;
        }
    }
    
    /// <remarks/>
    public long BonusIdentifier {
        get {
            return this.bonusIdentifierField;
        }
        set {
            this.bonusIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BonusAmount {
        get {
            return this.bonusAmountField;
        }
        set {
            this.bonusAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetJackpotBonusAwardSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetOutcomeResponseReply {
    
    private ReplyCodeType replyField;
    
    private byte[] outcomeResponseDataField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] OutcomeResponseData {
        get {
            return this.outcomeResponseDataField;
        }
        set {
            this.outcomeResponseDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetOutcomeResponseSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetTaxableWinInfoReply {
    
    private ReplyCodeType replyField;
    
    private AmountType netWinAmountField;
    
    private AmountType taxAmountField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public AmountType NetWinAmount {
        get {
            return this.netWinAmountField;
        }
        set {
            this.netWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountType TaxAmount {
        get {
            return this.taxAmountField;
        }
        set {
            this.taxAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyGetTaxableWinInfoSend {
    
    private uint transactionIDField;
    
    private AmountType totalWinAmountField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType TotalWinAmount {
        get {
            return this.totalWinAmountField;
        }
        set {
            this.totalWinAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyOutcomeRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyOutcomeRequestSend {
    
    private uint transactionIDField;
    
    private AmountType wagerAmountField;
    
    private uint wagerCatIndexField;
    
    private byte[] outcomeRequestDataField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType WagerAmount {
        get {
            return this.wagerAmountField;
        }
        set {
            this.wagerAmountField = value;
        }
    }
    
    /// <remarks/>
    public uint WagerCatIndex {
        get {
            return this.wagerCatIndexField;
        }
        set {
            this.wagerCatIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] OutcomeRequestData {
        get {
            return this.outcomeRequestDataField;
        }
        set {
            this.outcomeRequestDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyOutcomeResponseReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalyOutcomeResponseSend {
    
    private uint transactionIDField;
    
    private bool outcomeGeneratedField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public bool OutcomeGenerated {
        get {
            return this.outcomeGeneratedField;
        }
        set {
            this.outcomeGeneratedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalySetEnrollmentRequestDataReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LCdsItalyVer1.xsd")]
public partial class CdsItalySetEnrollmentRequestDataSend {
    
    private uint transactionIDField;
    
    private AmountType wagerAmountField;
    
    private uint wagerCatIndexField;
    
    private byte[] gameRequestDataField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType WagerAmount {
        get {
            return this.wagerAmountField;
        }
        set {
            this.wagerAmountField = value;
        }
    }
    
    /// <remarks/>
    public uint WagerCatIndex {
        get {
            return this.wagerCatIndexField;
        }
        set {
            this.wagerCatIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] GameRequestData {
        get {
            return this.gameRequestDataField;
        }
        set {
            this.gameRequestDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LConnectVer2.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LConnectVer2.xsd", IsNullable=false)]
public partial class Connect {
    
    private VersionType versionField;
    
    private ConnectMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ConnectMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LConnectVer2.xsd")]
public partial class ConnectMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetLinkControlApiVersionsReply", typeof(ConnectGetLinkControlApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetLinkControlApiVersionsSend", typeof(ConnectGetLinkControlApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetLinkControlApiVersionReply", typeof(ConnectSetLinkControlApiVersionReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetLinkControlApiVersionSend", typeof(ConnectSetLinkControlApiVersionSend))]
    [System.Xml.Serialization.XmlElementAttribute("ShutdownSend", typeof(ConnectShutdownSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LConnectVer2.xsd")]
public partial class ConnectGetLinkControlApiVersionsReply {
    
    private ReplyCodeType replyField;
    
    private ConnectGetLinkControlApiVersionsReplyCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public ConnectGetLinkControlApiVersionsReplyCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LConnectVer2.xsd")]
public partial class ConnectGetLinkControlApiVersionsReplyCategoryVersions {
    
    private List<CategoryVersionType> categoryVersionField = new List<CategoryVersionType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersionType> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LTypeVer2.xsd")]
public partial class CategoryVersionType {
    
    private int categoryField;
    
    private VersionType versionField;
    
    /// <remarks/>
    public int Category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LConnectVer2.xsd")]
public partial class ConnectGetLinkControlApiVersionsSend {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LConnectVer2.xsd")]
public partial class ConnectSetLinkControlApiVersionReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LConnectVer2.xsd")]
public partial class ConnectSetLinkControlApiVersionSend {
    
    private CategoryVersionType categoryVersionField;
    
    /// <remarks/>
    public CategoryVersionType CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LConnectVer2.xsd")]
public partial class ConnectShutdownSend {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LForceGameCompletionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LForceGameCompletionVer1.xsd", IsNullable=false)]
public partial class ForceGameCompletion {
    
    private VersionType versionField;
    
    private ForceGameCompletionMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ForceGameCompletionMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceGameCompletionMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ForceGameCompletionStatusChangedReply", typeof(ForceGameCompletionForceGameCompletionStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ForceGameCompletionStatusChangedSend", typeof(ForceGameCompletionForceGameCompletionStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryForceGameCompletionStatusReply", typeof(ForceGameCompletionQueryForceGameCompletionStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryForceGameCompletionStatusSend", typeof(ForceGameCompletionQueryForceGameCompletionStatusSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceGameCompletionForceGameCompletionStatusChangedReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceGameCompletionForceGameCompletionStatusChangedSend {
    
    private uint transactionIDField;
    
    private ForceGameCompletionStatusType forceGameCompletionStatusField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public ForceGameCompletionStatusType ForceGameCompletionStatus {
        get {
            return this.forceGameCompletionStatusField;
        }
        set {
            this.forceGameCompletionStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceGameCompletionStatusType {
    
    private bool forceCompletionField;
    
    private ForceGameCompletionStatusTypeAutoFinishStatus autoFinishStatusField;
    
    /// <remarks/>
    public bool ForceCompletion {
        get {
            return this.forceCompletionField;
        }
        set {
            this.forceCompletionField = value;
        }
    }
    
    /// <remarks/>
    public ForceGameCompletionStatusTypeAutoFinishStatus AutoFinishStatus {
        get {
            return this.autoFinishStatusField;
        }
        set {
            this.autoFinishStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceGameCompletionStatusTypeAutoFinishStatus {
    
    private System.DateTime finishTimeField;
    
    private System.DateTime warningTimeField;
    
    private List<ForceCompletionMessageLocalizationType> forceCompletionMessageField = new List<ForceCompletionMessageLocalizationType>();
    
    /// <remarks/>
    public System.DateTime FinishTime {
        get {
            return this.finishTimeField;
        }
        set {
            this.finishTimeField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime WarningTime {
        get {
            return this.warningTimeField;
        }
        set {
            this.warningTimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ForceCompletionMessageLocalizations", IsNullable=false)]
    public List<ForceCompletionMessageLocalizationType> ForceCompletionMessage {
        get {
            return this.forceCompletionMessageField;
        }
        set {
            this.forceCompletionMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceCompletionMessageLocalizationType {
    
    private string messageField;
    
    private string cultureField;
    
    /// <remarks/>
    public string Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceGameCompletionQueryForceGameCompletionStatusReply {
    
    private ReplyCodeType replyField;
    
    private ForceGameCompletionStatusType forceGameCompletionStatusField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public ForceGameCompletionStatusType ForceGameCompletionStatus {
        get {
            return this.forceGameCompletionStatusField;
        }
        set {
            this.forceGameCompletionStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LForceGameCompletionVer1.xsd")]
public partial class ForceGameCompletionQueryForceGameCompletionStatusSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameContextLockingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LGameContextLockingVer1.xsd", IsNullable=false)]
public partial class GameContextLocking {
    
    private VersionType versionField;
    
    private GameContextLockingMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameContextLockingMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameContextLockingVer1.xsd")]
public partial class GameContextLockingMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetGameContextLockStatusReply", typeof(GameContextLockingGetGameContextLockStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetGameContextLockStatusSend", typeof(GameContextLockingGetGameContextLockStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetGameContextLockReply", typeof(GameContextLockingSetGameContextLockReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetGameContextLockSend", typeof(GameContextLockingSetGameContextLockSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameContextLockingVer1.xsd")]
public partial class GameContextLockingGetGameContextLockStatusReply {
    
    private ReplyCodeType replyField;
    
    private bool lockedField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool Locked {
        get {
            return this.lockedField;
        }
        set {
            this.lockedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameContextLockingVer1.xsd")]
public partial class GameContextLockingGetGameContextLockStatusSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameContextLockingVer1.xsd")]
public partial class GameContextLockingSetGameContextLockReply {
    
    private ReplyCodeType replyField;
    
    private bool successField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameContextLockingVer1.xsd")]
public partial class GameContextLockingSetGameContextLockSend {
    
    private uint transactionIDField;
    
    private bool lockedField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public bool Locked {
        get {
            return this.lockedField;
        }
        set {
            this.lockedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LGameControlVer4.xsd", IsNullable=false)]
public partial class GameControl {
    
    private VersionType versionField;
    
    private GameControlMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameControlMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActionRequestReply", typeof(GameControlActionRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActionRequestSend", typeof(GameControlActionRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("ActionResponseReply", typeof(GameControlActionResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActionResponseSend", typeof(GameControlActionResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateThemeContextReply", typeof(GameControlActivateThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateThemeContextSend", typeof(GameControlActivateThemeContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("BankStatusChangedReply", typeof(GameControlBankStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("BankStatusChangedSend", typeof(GameControlBankStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("CanBetNextGameCycleReply", typeof(GameControlCanBetNextGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("CanBetNextGameCycleSend", typeof(GameControlCanBetNextGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("CanCommitBetReply", typeof(GameControlCanCommitBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("CanCommitBetSend", typeof(GameControlCanCommitBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("CanCommitBetsReply", typeof(GameControlCanCommitBetsReply))]
    [System.Xml.Serialization.XmlElementAttribute("CanCommitBetsSend", typeof(GameControlCanCommitBetsSend))]
    [System.Xml.Serialization.XmlElementAttribute("CanCommitGameCycleReply", typeof(GameControlCanCommitGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("CanCommitGameCycleSend", typeof(GameControlCanCommitGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("CanPlaceBetReply", typeof(GameControlCanPlaceBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("CanPlaceBetSend", typeof(GameControlCanPlaceBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("CanStartPlayingReply", typeof(GameControlCanStartPlayingReply))]
    [System.Xml.Serialization.XmlElementAttribute("CanStartPlayingSend", typeof(GameControlCanStartPlayingSend))]
    [System.Xml.Serialization.XmlElementAttribute("CommitBetReply", typeof(GameControlCommitBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitBetSend", typeof(GameControlCommitBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("CommitGameCycleReply", typeof(GameControlCommitGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitGameCycleSend", typeof(GameControlCommitGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("CultureChangedReply", typeof(GameControlCultureChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("CultureChangedSend", typeof(GameControlCultureChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("DenominationChangeCancelledReply", typeof(GameControlDenominationChangeCancelledReply))]
    [System.Xml.Serialization.XmlElementAttribute("DenominationChangeCancelledSend", typeof(GameControlDenominationChangeCancelledSend))]
    [System.Xml.Serialization.XmlElementAttribute("DenominationChangeRequestReply", typeof(GameControlDenominationChangeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("DenominationChangeRequestSend", typeof(GameControlDenominationChangeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("DisableAncillaryGameOfferReply", typeof(GameControlDisableAncillaryGameOfferReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisableAncillaryGameOfferSend", typeof(GameControlDisableAncillaryGameOfferSend))]
    [System.Xml.Serialization.XmlElementAttribute("EndGameCycleReply", typeof(GameControlEndGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("EndGameCycleSend", typeof(GameControlEndGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollGameCycleReply", typeof(GameControlEnrollGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollGameCycleSend", typeof(GameControlEnrollGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollResponseReply", typeof(GameControlEnrollResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollResponseSend", typeof(GameControlEnrollResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalLastAncillaryOutcomeRequestReply", typeof(GameControlEvalLastAncillaryOutcomeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalLastAncillaryOutcomeRequestSend", typeof(GameControlEvalLastAncillaryOutcomeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalLastBonusOutcomeRequestReply", typeof(GameControlEvalLastBonusOutcomeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalLastBonusOutcomeRequestSend", typeof(GameControlEvalLastBonusOutcomeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalLastOutcomeRequestReply", typeof(GameControlEvalLastOutcomeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalLastOutcomeRequestSend", typeof(GameControlEvalLastOutcomeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeRequestReply", typeof(GameControlEvalOutcomeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeRequestSend", typeof(GameControlEvalOutcomeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeResponseReply", typeof(GameControlEvalOutcomeResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeResponseSend", typeof(GameControlEvalOutcomeResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardRequestReply", typeof(GameControlFinalizeAwardRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardRequestSend", typeof(GameControlFinalizeAwardRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardResponseReply", typeof(GameControlFinalizeAwardResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardResponseSend", typeof(GameControlFinalizeAwardResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableCulturesReply", typeof(GameControlGetAvailableCulturesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableCulturesSend", typeof(GameControlGetAvailableCulturesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCommittedBetReply", typeof(GameControlGetCommittedBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCommittedBetSend", typeof(GameControlGetCommittedBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAncillaryCycleLimitReply", typeof(GameControlGetConfigDataAncillaryCycleLimitReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAncillaryCycleLimitSend", typeof(GameControlGetConfigDataAncillaryCycleLimitSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAncillaryGameEnabledReply", typeof(GameControlGetConfigDataAncillaryGameEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAncillaryGameEnabledSend", typeof(GameControlGetConfigDataAncillaryGameEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAncillaryMonetaryLimitReply", typeof(GameControlGetConfigDataAncillaryMonetaryLimitReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataAncillaryMonetaryLimitSend", typeof(GameControlGetConfigDataAncillaryMonetaryLimitSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataBonusPlayEnabledReply", typeof(GameControlGetConfigDataBonusPlayEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataBonusPlayEnabledSend", typeof(GameControlGetConfigDataBonusPlayEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataButtonPanelMinBetAmountReply", typeof(GameControlGetConfigDataButtonPanelMinBetAmountReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataButtonPanelMinBetAmountSend", typeof(GameControlGetConfigDataButtonPanelMinBetAmountSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCreditMeterDisplayBehaviorReply", typeof(GameControlGetConfigDataCreditMeterDisplayBehaviorReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCreditMeterDisplayBehaviorSend", typeof(GameControlGetConfigDataCreditMeterDisplayBehaviorSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataHistoryPlayStepsReply", typeof(GameControlGetConfigDataHistoryPlayStepsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataHistoryPlayStepsSend", typeof(GameControlGetConfigDataHistoryPlayStepsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataLineSelectionReply", typeof(GameControlGetConfigDataLineSelectionReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataLineSelectionSend", typeof(GameControlGetConfigDataLineSelectionSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMaxBetAmountReply", typeof(GameControlGetConfigDataMaxBetAmountReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMaxBetAmountSend", typeof(GameControlGetConfigDataMaxBetAmountSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMaxBetButtonBehaviorReply", typeof(GameControlGetConfigDataMaxBetButtonBehaviorReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMaxBetButtonBehaviorSend", typeof(GameControlGetConfigDataMaxBetButtonBehaviorSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinBetAmountReply", typeof(GameControlGetConfigDataMinBetAmountReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinBetAmountSend", typeof(GameControlGetConfigDataMinBetAmountSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinimumBaseGamePresentationTimeReply", typeof(GameControlGetConfigDataMinimumBaseGamePresentationTimeReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinimumBaseGamePresentationTimeSend", typeof(GameControlGetConfigDataMinimumBaseGamePresentationTimeSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinimumFreeSpinPresentationTimeReply", typeof(GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinimumFreeSpinPresentationTimeSend", typeof(GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataRoundWagerUpPlayoffEnabledReply", typeof(GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataRoundWagerUpPlayoffEnabledSend", typeof(GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataWinCapAmountReply", typeof(GameControlGetConfigDataWinCapAmountReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataWinCapAmountSend", typeof(GameControlGetConfigDataWinCapAmountSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataWinCapBehaviorReply", typeof(GameControlGetConfigDataWinCapBehaviorReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataWinCapBehaviorSend", typeof(GameControlGetConfigDataWinCapBehaviorSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCreditFormatterInfoReply", typeof(GameControlGetCreditFormatterInfoReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCreditFormatterInfoSend", typeof(GameControlGetCreditFormatterInfoSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCultureReply", typeof(GameControlGetCultureReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCultureSend", typeof(GameControlGetCultureSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemReferencedEnumerationReply", typeof(GameControlGetCustomConfigItemReferencedEnumerationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemReferencedEnumerationSend", typeof(GameControlGetCustomConfigItemReferencedEnumerationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemReply", typeof(GameControlGetCustomConfigItemReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemSend", typeof(GameControlGetCustomConfigItemSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemTypeReply", typeof(GameControlGetCustomConfigItemTypeReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemTypeSend", typeof(GameControlGetCustomConfigItemTypeSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemTypesReply", typeof(GameControlGetCustomConfigItemTypesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemTypesSend", typeof(GameControlGetCustomConfigItemTypesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetListLimitedRandomNumbersReply", typeof(GameControlGetListLimitedRandomNumbersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetListLimitedRandomNumbersSend", typeof(GameControlGetListLimitedRandomNumbersSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerMetersReply", typeof(GameControlGetPlayerMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerMetersSend", typeof(GameControlGetPlayerMetersSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetProgressiveGameLevelValuesReply", typeof(GameControlGetProgressiveGameLevelValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetProgressiveGameLevelValuesSend", typeof(GameControlGetProgressiveGameLevelValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetRandomNumbersReply", typeof(GameControlGetRandomNumbersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetRandomNumbersSend", typeof(GameControlGetRandomNumbersSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateThemeContextReply", typeof(GameControlInactivateThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateThemeContextSend", typeof(GameControlInactivateThemeContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("IsBankLockedReply", typeof(GameControlIsBankLockedReply))]
    [System.Xml.Serialization.XmlElementAttribute("IsBankLockedSend", typeof(GameControlIsBankLockedSend))]
    [System.Xml.Serialization.XmlElementAttribute("IsPlayerBankToWagerableOfferableReply", typeof(GameControlIsPlayerBankToWagerableOfferableReply))]
    [System.Xml.Serialization.XmlElementAttribute("IsPlayerBankToWagerableOfferableSend", typeof(GameControlIsPlayerBankToWagerableOfferableSend))]
    [System.Xml.Serialization.XmlElementAttribute("IsPlayerCashoutOfferableReply", typeof(GameControlIsPlayerCashoutOfferableReply))]
    [System.Xml.Serialization.XmlElementAttribute("IsPlayerCashoutOfferableSend", typeof(GameControlIsPlayerCashoutOfferableSend))]
    [System.Xml.Serialization.XmlElementAttribute("IsThemeSelectionMenuOfferableReply", typeof(GameControlIsThemeSelectionMenuOfferableReply))]
    [System.Xml.Serialization.XmlElementAttribute("IsThemeSelectionMenuOfferableSend", typeof(GameControlIsThemeSelectionMenuOfferableSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyBetReply", typeof(GameControlMoneyBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyBetSend", typeof(GameControlMoneyBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyCommittedChangedReply", typeof(GameControlMoneyCommittedChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyCommittedChangedSend", typeof(GameControlMoneyCommittedChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyInReply", typeof(GameControlMoneyInReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyInSend", typeof(GameControlMoneyInSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyOutReply", typeof(GameControlMoneyOutReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyOutSend", typeof(GameControlMoneyOutSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneySetReply", typeof(GameControlMoneySetReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneySetSend", typeof(GameControlMoneySetSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyWagerableReply", typeof(GameControlMoneyWagerableReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyWagerableSend", typeof(GameControlMoneyWagerableSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyWonReply", typeof(GameControlMoneyWonReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyWonSend", typeof(GameControlMoneyWonSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewThemeContextReply", typeof(GameControlNewThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewThemeContextSend", typeof(GameControlNewThemeContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("OfferAncillaryGameRequestReply", typeof(GameControlOfferAncillaryGameRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("OfferAncillaryGameRequestSend", typeof(GameControlOfferAncillaryGameRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceBetReply", typeof(GameControlPlaceBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceBetSend", typeof(GameControlPlaceBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceStartingBetReply", typeof(GameControlPlaceStartingBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceStartingBetSend", typeof(GameControlPlaceStartingBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerCashoutRequestReply", typeof(GameControlPlayerCashoutRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerCashoutRequestSend", typeof(GameControlPlayerCashoutRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryBankStatusReply", typeof(GameControlQueryBankStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryBankStatusSend", typeof(GameControlQueryBankStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryGameCycleStateReply", typeof(GameControlQueryGameCycleStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryGameCycleStateSend", typeof(GameControlQueryGameCycleStateSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPlayerSelectableDenomsReply", typeof(GameControlQueryPlayerSelectableDenomsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPlayerSelectableDenomsSend", typeof(GameControlQueryPlayerSelectableDenomsSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataReply", typeof(GameControlReadCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataSend", typeof(GameControlReadCritDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveCritDataReply", typeof(GameControlRemoveCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveCritDataSend", typeof(GameControlRemoveCritDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestThemeSelectionMenuReply", typeof(GameControlRequestThemeSelectionMenuReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestThemeSelectionMenuSend", typeof(GameControlRequestThemeSelectionMenuSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetCultureReply", typeof(GameControlSetCultureReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetCultureSend", typeof(GameControlSetCultureSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetDefaultCultureReply", typeof(GameControlSetDefaultCultureReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetDefaultCultureSend", typeof(GameControlSetDefaultCultureSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetDisplayControlStateReply", typeof(GameControlSetDisplayControlStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetDisplayControlStateSend", typeof(GameControlSetDisplayControlStateSend))]
    [System.Xml.Serialization.XmlElementAttribute("StartAncillaryPlayingReply", typeof(GameControlStartAncillaryPlayingReply))]
    [System.Xml.Serialization.XmlElementAttribute("StartAncillaryPlayingSend", typeof(GameControlStartAncillaryPlayingSend))]
    [System.Xml.Serialization.XmlElementAttribute("StartBonusPlayingReply", typeof(GameControlStartBonusPlayingReply))]
    [System.Xml.Serialization.XmlElementAttribute("StartBonusPlayingSend", typeof(GameControlStartBonusPlayingSend))]
    [System.Xml.Serialization.XmlElementAttribute("StartPlayingReply", typeof(GameControlStartPlayingReply))]
    [System.Xml.Serialization.XmlElementAttribute("StartPlayingSend", typeof(GameControlStartPlayingSend))]
    [System.Xml.Serialization.XmlElementAttribute("SwitchThemeContextReply", typeof(GameControlSwitchThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("SwitchThemeContextSend", typeof(GameControlSwitchThemeContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeSelectionMenuOfferableStatusChangedReply", typeof(GameControlThemeSelectionMenuOfferableStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeSelectionMenuOfferableStatusChangedSend", typeof(GameControlThemeSelectionMenuOfferableStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("TransactionCompleteReply", typeof(GameControlTransactionCompleteReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransactionCompleteSend", typeof(GameControlTransactionCompleteSend))]
    [System.Xml.Serialization.XmlElementAttribute("TransferBankToWagerableRequestReply", typeof(GameControlTransferBankToWagerableRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransferBankToWagerableRequestSend", typeof(GameControlTransferBankToWagerableRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("TransferWagerableToBankRequestReply", typeof(GameControlTransferWagerableToBankRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransferWagerableToBankRequestSend", typeof(GameControlTransferWagerableToBankRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitBetReply", typeof(GameControlUncommitBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitBetSend", typeof(GameControlUncommitBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitGameCycleReply", typeof(GameControlUncommitGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitGameCycleSend", typeof(GameControlUncommitGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("UnenrollGameCycleReply", typeof(GameControlUnenrollGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("UnenrollGameCycleSend", typeof(GameControlUnenrollGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("WriteCritDataReply", typeof(GameControlWriteCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("WriteCritDataSend", typeof(GameControlWriteCritDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlActionRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlActionRequestSend {
    
    private byte[] payloadField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlActionResponseReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlActionResponseSend {
    
    private uint transactionIDField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlActivateThemeContextReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlActivateThemeContextSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlBankStatusChangedReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlBankStatusChangedSend {
    
    private uint transactionIDField;
    
    private BankStatus bankStatusField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public BankStatus BankStatus {
        get {
            return this.bankStatusField;
        }
        set {
            this.bankStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class BankStatus {
    
    private bool bankLockedField;
    
    private bool playerCashoutOfferableField;
    
    private bool bankToWagerableOfferableField;
    
    /// <remarks/>
    public bool BankLocked {
        get {
            return this.bankLockedField;
        }
        set {
            this.bankLockedField = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerCashoutOfferable {
        get {
            return this.playerCashoutOfferableField;
        }
        set {
            this.playerCashoutOfferableField = value;
        }
    }
    
    /// <remarks/>
    public bool BankToWagerableOfferable {
        get {
            return this.bankToWagerableOfferableField;
        }
        set {
            this.bankToWagerableOfferableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanBetNextGameCycleReply {
    
    private List<bool> betAllowedField = new List<bool>();
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BetAllowed")]
    public List<bool> BetAllowed {
        get {
            return this.betAllowedField;
        }
        set {
            this.betAllowedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanBetNextGameCycleSend {
    
    private uint transactionIDField;
    
    private List<AmountType> betAmountField = new List<AmountType>();
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BetAmount")]
    public List<AmountType> BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanCommitBetReply {
    
    private bool commitAllowedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool CommitAllowed {
        get {
            return this.commitAllowedField;
        }
        set {
            this.commitAllowedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanCommitBetSend {
    
    private AmountType betAmountField;
    
    private uint transactionIDField;
    
    /// <remarks/>
    public AmountType BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanCommitBetsReply {
    
    private List<bool> commitAllowedField = new List<bool>();
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CommitAllowed")]
    public List<bool> CommitAllowed {
        get {
            return this.commitAllowedField;
        }
        set {
            this.commitAllowedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanCommitBetsSend {
    
    private uint transactionIDField;
    
    private List<AmountType> betAmountField = new List<AmountType>();
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BetAmount")]
    public List<AmountType> BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanCommitGameCycleReply {
    
    private bool commitAllowedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool CommitAllowed {
        get {
            return this.commitAllowedField;
        }
        set {
            this.commitAllowedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanCommitGameCycleSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanPlaceBetReply {
    
    private bool betAllowedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool BetAllowed {
        get {
            return this.betAllowedField;
        }
        set {
            this.betAllowedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanPlaceBetSend {
    
    private uint transactionIDField;
    
    private AmountType betAmountField;
    
    private AmountType betFromCreditsAmountField;
    
    private AmountType betFromUncommittedGameWinsAmountField;
    
    private AmountType pendingWinsAvailableForThisBetField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BetFromCreditsAmount {
        get {
            return this.betFromCreditsAmountField;
        }
        set {
            this.betFromCreditsAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BetFromUncommittedGameWinsAmount {
        get {
            return this.betFromUncommittedGameWinsAmountField;
        }
        set {
            this.betFromUncommittedGameWinsAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountType PendingWinsAvailableForThisBet {
        get {
            return this.pendingWinsAvailableForThisBetField;
        }
        set {
            this.pendingWinsAvailableForThisBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanStartPlayingReply {
    
    private bool startAllowedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool StartAllowed {
        get {
            return this.startAllowedField;
        }
        set {
            this.startAllowedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCanStartPlayingSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCommitBetReply {
    
    private bool betCommittedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool BetCommitted {
        get {
            return this.betCommittedField;
        }
        set {
            this.betCommittedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCommitBetSend {
    
    private AmountType betAmountField;
    
    private uint transactionIDField;
    
    /// <remarks/>
    public AmountType BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCommitGameCycleReply {
    
    private bool commitSuccessfulField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool CommitSuccessful {
        get {
            return this.commitSuccessfulField;
        }
        set {
            this.commitSuccessfulField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCommitGameCycleSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCultureChangedReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlCultureChangedSend {
    
    private uint transactionIDField;
    
    private string cultureField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlDenominationChangeCancelledReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlDenominationChangeCancelledSend {
    
    private uint transactionIDField;
    
    private uint denominationField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlDenominationChangeRequestReply {
    
    private bool requestAcceptedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool RequestAccepted {
        get {
            return this.requestAcceptedField;
        }
        set {
            this.requestAcceptedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlDenominationChangeRequestSend {
    
    private uint transactionIDField;
    
    private uint denominationField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlDisableAncillaryGameOfferReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlDisableAncillaryGameOfferSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEndGameCycleReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEndGameCycleSend {
    
    private uint transactionIDField;
    
    private uint numberOfStepsField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public uint NumberOfSteps {
        get {
            return this.numberOfStepsField;
        }
        set {
            this.numberOfStepsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEnrollGameCycleReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEnrollGameCycleSend {
    
    private uint transactionIDField;
    
    private byte[] hostEnrollmentDataField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] HostEnrollmentData {
        get {
            return this.hostEnrollmentDataField;
        }
        set {
            this.hostEnrollmentDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEnrollResponseReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEnrollResponseSend {
    
    private uint transactionIDField;
    
    private bool enrollSuccessField;
    
    private byte[] hostEnrollmentDataField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public bool EnrollSuccess {
        get {
            return this.enrollSuccessField;
        }
        set {
            this.enrollSuccessField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] HostEnrollmentData {
        get {
            return this.hostEnrollmentDataField;
        }
        set {
            this.hostEnrollmentDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalLastAncillaryOutcomeRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalLastAncillaryOutcomeRequestSend {
    
    private uint transactionIDField;
    
    private OutcomeList outcomeListField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeList OutcomeList {
        get {
            return this.outcomeListField;
        }
        set {
            this.outcomeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class OutcomeList {
    
    private List<OutcomeListFeatureEntry> featureEntryField = new List<OutcomeListFeatureEntry>();
    
    private List<OutcomeListGameCycleEntry> gameCycleEntryField = new List<OutcomeListGameCycleEntry>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FeatureEntry")]
    public List<OutcomeListFeatureEntry> FeatureEntry {
        get {
            return this.featureEntryField;
        }
        set {
            this.featureEntryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameCycleEntry")]
    public List<OutcomeListGameCycleEntry> GameCycleEntry {
        get {
            return this.gameCycleEntryField;
        }
        set {
            this.gameCycleEntryField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class OutcomeListFeatureEntry {
    
    private OutcomeListFeatureEntryFeatureRngNumbers featureRngNumbersField;
    
    private OutcomeListFeatureEntryAwards awardsField;
    
    private uint feature_indexField;
    
    /// <remarks/>
    public OutcomeListFeatureEntryFeatureRngNumbers FeatureRngNumbers {
        get {
            return this.featureRngNumbersField;
        }
        set {
            this.featureRngNumbersField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeListFeatureEntryAwards Awards {
        get {
            return this.awardsField;
        }
        set {
            this.awardsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint feature_index {
        get {
            return this.feature_indexField;
        }
        set {
            this.feature_indexField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class OutcomeListFeatureEntryFeatureRngNumbers {
    
    private List<int> numberField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Number")]
    public List<int> Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class OutcomeListFeatureEntryAwards {
    
    private List<Award> itemsField = new List<Award>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AncillaryAward", typeof(AncillaryAward))]
    [System.Xml.Serialization.XmlElementAttribute("FeatureAward", typeof(FeatureAward))]
    [System.Xml.Serialization.XmlElementAttribute("RiskAward", typeof(RiskAward))]
    public List<Award> Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class AncillaryAward : Award {
    
    private AmountType risk_amountField;
    
    private AncillaryAwardWin_type win_typeField;
    
    /// <remarks/>
    public AmountType risk_amount {
        get {
            return this.risk_amountField;
        }
        set {
            this.risk_amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public AncillaryAwardWin_type win_type {
        get {
            return this.win_typeField;
        }
        set {
            this.win_typeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public enum AncillaryAwardWin_type {
    
    /// <remarks/>
    Win,
    
    /// <remarks/>
    Loss,
    
    /// <remarks/>
    Tie,
    
    /// <remarks/>
    Cancel,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BonusExtensionAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RiskAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AncillaryAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FeatureAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgressiveAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FeatureProgressiveAward))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class Award : Outcome {
    
    private AmountType amountField;
    
    private bool is_displayableField;
    
    private string displayable_reasonField;
    
    private string prize_stringField;
    
    private bool is_top_awardField;
    
    private bool is_top_awardFieldSpecified;
    
    /// <remarks/>
    public AmountType amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool is_displayable {
        get {
            return this.is_displayableField;
        }
        set {
            this.is_displayableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string displayable_reason {
        get {
            return this.displayable_reasonField;
        }
        set {
            this.displayable_reasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string prize_string {
        get {
            return this.prize_stringField;
        }
        set {
            this.prize_stringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool is_top_award {
        get {
            return this.is_top_awardField;
        }
        set {
            this.is_top_awardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool is_top_awardSpecified {
        get {
            return this.is_top_awardFieldSpecified;
        }
        set {
            this.is_top_awardFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgressiveNearHit))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Award))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(BonusExtensionAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(RiskAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(AncillaryAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FeatureAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgressiveAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FeatureProgressiveAward))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class Outcome {
    
    private OutcomeOrigin originField;
    
    private string tagField;
    
    private string sourceField;
    
    private string source_detailField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public OutcomeOrigin origin {
        get {
            return this.originField;
        }
        set {
            this.originField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string source {
        get {
            return this.sourceField;
        }
        set {
            this.sourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string source_detail {
        get {
            return this.source_detailField;
        }
        set {
            this.source_detailField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public enum OutcomeOrigin {
    
    /// <remarks/>
    Bin,
    
    /// <remarks/>
    Foundation,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class ProgressiveNearHit : Outcome {
    
    private uint game_levelField;
    
    private bool game_levelFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint game_level {
        get {
            return this.game_levelField;
        }
        set {
            this.game_levelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool game_levelSpecified {
        get {
            return this.game_levelFieldSpecified;
        }
        set {
            this.game_levelFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class BonusExtensionAward : Award {
    
    private long bonus_identifierField;
    
    private bool bonus_identifierFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long bonus_identifier {
        get {
            return this.bonus_identifierField;
        }
        set {
            this.bonus_identifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool bonus_identifierSpecified {
        get {
            return this.bonus_identifierFieldSpecified;
        }
        set {
            this.bonus_identifierFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class RiskAward : Award {
    
    private AmountType risk_amountField;
    
    private RiskAwardAward_type award_typeField;
    
    /// <remarks/>
    public AmountType risk_amount {
        get {
            return this.risk_amountField;
        }
        set {
            this.risk_amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public RiskAwardAward_type award_type {
        get {
            return this.award_typeField;
        }
        set {
            this.award_typeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public enum RiskAwardAward_type {
    
    /// <remarks/>
    RoundWagerUpPlayoff,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class FeatureAward : Award {
    
    private List<FeatureProgressiveAward> featureProgressiveAwardField = new List<FeatureProgressiveAward>();
    
    private List<ProgressiveNearHit> progressiveNearHitField = new List<ProgressiveNearHit>();
    
    private uint win_level_indexField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FeatureProgressiveAward")]
    public List<FeatureProgressiveAward> FeatureProgressiveAward {
        get {
            return this.featureProgressiveAwardField;
        }
        set {
            this.featureProgressiveAwardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveNearHit")]
    public List<ProgressiveNearHit> ProgressiveNearHit {
        get {
            return this.progressiveNearHitField;
        }
        set {
            this.progressiveNearHitField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint win_level_index {
        get {
            return this.win_level_indexField;
        }
        set {
            this.win_level_indexField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class FeatureProgressiveAward : ProgressiveAward {
    
    private AmountType consolation_amountField;
    
    /// <remarks/>
    public AmountType consolation_amount {
        get {
            return this.consolation_amountField;
        }
        set {
            this.consolation_amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(FeatureProgressiveAward))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class ProgressiveAward : Award {
    
    private ProgressiveAwardHit_state hit_stateField;
    
    private uint game_levelField;
    
    private bool game_levelFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ProgressiveAwardHit_state hit_state {
        get {
            return this.hit_stateField;
        }
        set {
            this.hit_stateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint game_level {
        get {
            return this.game_levelField;
        }
        set {
            this.game_levelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool game_levelSpecified {
        get {
            return this.game_levelFieldSpecified;
        }
        set {
            this.game_levelFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public enum ProgressiveAwardHit_state {
    
    /// <remarks/>
    PotentialHit,
    
    /// <remarks/>
    Hit,
    
    /// <remarks/>
    NotHit,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class OutcomeListGameCycleEntry {
    
    private List<Award> awardField = new List<Award>();
    
    private List<ProgressiveAward> progressiveAwardField = new List<ProgressiveAward>();
    
    private List<BonusExtensionAward> bonusExtensionAwardField = new List<BonusExtensionAward>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Award")]
    public List<Award> Award {
        get {
            return this.awardField;
        }
        set {
            this.awardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveAward")]
    public List<ProgressiveAward> ProgressiveAward {
        get {
            return this.progressiveAwardField;
        }
        set {
            this.progressiveAwardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BonusExtensionAward")]
    public List<BonusExtensionAward> BonusExtensionAward {
        get {
            return this.bonusExtensionAwardField;
        }
        set {
            this.bonusExtensionAwardField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalLastBonusOutcomeRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalLastBonusOutcomeRequestSend {
    
    private uint transactionIDField;
    
    private OutcomeList outcomeListField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeList OutcomeList {
        get {
            return this.outcomeListField;
        }
        set {
            this.outcomeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalLastOutcomeRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalLastOutcomeRequestSend {
    
    private uint transactionIDField;
    
    private OutcomeList outcomeListField;
    
    private GameControlEvalLastOutcomeRequestSendWagerCatOutcomes wagerCatOutcomesField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeList OutcomeList {
        get {
            return this.outcomeListField;
        }
        set {
            this.outcomeListField = value;
        }
    }
    
    /// <remarks/>
    public GameControlEvalLastOutcomeRequestSendWagerCatOutcomes WagerCatOutcomes {
        get {
            return this.wagerCatOutcomesField;
        }
        set {
            this.wagerCatOutcomesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalLastOutcomeRequestSendWagerCatOutcomes {
    
    private List<WagerCatOutcome> wagerCatOutcomeField = new List<WagerCatOutcome>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WagerCatOutcome")]
    public List<WagerCatOutcome> WagerCatOutcome {
        get {
            return this.wagerCatOutcomeField;
        }
        set {
            this.wagerCatOutcomeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class WagerCatOutcome {
    
    private uint wagerCatIndexField;
    
    private AmountType wagerAmountField;
    
    /// <remarks/>
    public uint WagerCatIndex {
        get {
            return this.wagerCatIndexField;
        }
        set {
            this.wagerCatIndexField = value;
        }
    }
    
    /// <remarks/>
    public AmountType WagerAmount {
        get {
            return this.wagerAmountField;
        }
        set {
            this.wagerAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalOutcomeRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalOutcomeRequestSend {
    
    private uint transactionIDField;
    
    private OutcomeList outcomeListField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeList OutcomeList {
        get {
            return this.outcomeListField;
        }
        set {
            this.outcomeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalOutcomeResponseReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlEvalOutcomeResponseSend {
    
    private uint transactionIDField;
    
    private OutcomeList outcomeListField;
    
    private bool isPlayCompleteField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeList OutcomeList {
        get {
            return this.outcomeListField;
        }
        set {
            this.outcomeListField = value;
        }
    }
    
    /// <remarks/>
    public bool IsPlayComplete {
        get {
            return this.isPlayCompleteField;
        }
        set {
            this.isPlayCompleteField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlFinalizeAwardRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlFinalizeAwardRequestSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlFinalizeAwardResponseReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlFinalizeAwardResponseSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetAvailableCulturesReply {
    
    private List<string> availableCultureField = new List<string>();
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AvailableCulture")]
    public List<string> AvailableCulture {
        get {
            return this.availableCultureField;
        }
        set {
            this.availableCultureField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetAvailableCulturesSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCommittedBetReply {
    
    private AmountType committedBetAmountField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public AmountType CommittedBetAmount {
        get {
            return this.committedBetAmountField;
        }
        set {
            this.committedBetAmountField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCommittedBetSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataAncillaryCycleLimitReply {
    
    private uint ancillaryCycleLimitField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public uint AncillaryCycleLimit {
        get {
            return this.ancillaryCycleLimitField;
        }
        set {
            this.ancillaryCycleLimitField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataAncillaryCycleLimitSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataAncillaryGameEnabledReply {
    
    private bool ancillaryGameEnabledField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool AncillaryGameEnabled {
        get {
            return this.ancillaryGameEnabledField;
        }
        set {
            this.ancillaryGameEnabledField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataAncillaryGameEnabledSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataAncillaryMonetaryLimitReply {
    
    private AmountType ancillaryMonetaryLimitField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public AmountType AncillaryMonetaryLimit {
        get {
            return this.ancillaryMonetaryLimitField;
        }
        set {
            this.ancillaryMonetaryLimitField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataAncillaryMonetaryLimitSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataBonusPlayEnabledReply {
    
    private bool bonusPlayEnabledField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool BonusPlayEnabled {
        get {
            return this.bonusPlayEnabledField;
        }
        set {
            this.bonusPlayEnabledField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataBonusPlayEnabledSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataButtonPanelMinBetAmountReply {
    
    private ReplyCodeType replyField;
    
    private AmountType buttonPanelMinBetAmountField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public AmountType ButtonPanelMinBetAmount {
        get {
            return this.buttonPanelMinBetAmountField;
        }
        set {
            this.buttonPanelMinBetAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataButtonPanelMinBetAmountSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataCreditMeterDisplayBehaviorReply {
    
    private ReplyCodeType replyField;
    
    private CreditMeterDisplayBehaviorType creditMeterDisplayBehaviorField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public CreditMeterDisplayBehaviorType CreditMeterDisplayBehavior {
        get {
            return this.creditMeterDisplayBehaviorField;
        }
        set {
            this.creditMeterDisplayBehaviorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum CreditMeterDisplayBehaviorType {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    PlayerSelectableDefaultCredits,
    
    /// <remarks/>
    PlayerSelectableDefaultCurrency,
    
    /// <remarks/>
    AlwaysCurrency,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataCreditMeterDisplayBehaviorSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataHistoryPlayStepsReply {
    
    private ReplyCodeType replyField;
    
    private uint numberOfPlayStepsField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public uint NumberOfPlaySteps {
        get {
            return this.numberOfPlayStepsField;
        }
        set {
            this.numberOfPlayStepsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataHistoryPlayStepsSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataLineSelectionReply {
    
    private ReplyCodeType replyField;
    
    private LineSelectionType lineSelectionField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public LineSelectionType LineSelection {
        get {
            return this.lineSelectionField;
        }
        set {
            this.lineSelectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum LineSelectionType {
    
    /// <remarks/>
    Undefined,
    
    /// <remarks/>
    Forced,
    
    /// <remarks/>
    PlayerSelectable,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataLineSelectionSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMaxBetAmountReply {
    
    private ReplyCodeType replyField;
    
    private AmountType maxBetAmountField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public AmountType MaxBetAmount {
        get {
            return this.maxBetAmountField;
        }
        set {
            this.maxBetAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMaxBetAmountSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMaxBetButtonBehaviorReply {
    
    private ReplyCodeType replyField;
    
    private MaxBetButtonBehavior maxBetButtonBehaviorField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public MaxBetButtonBehavior MaxBetButtonBehavior {
        get {
            return this.maxBetButtonBehaviorField;
        }
        set {
            this.maxBetButtonBehaviorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public enum MaxBetButtonBehavior {
    
    /// <remarks/>
    BetMaxCreditsOnly,
    
    /// <remarks/>
    BetAvailableCredits,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMaxBetButtonBehaviorSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMinBetAmountReply {
    
    private ReplyCodeType replyField;
    
    private AmountType minBetAmountField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public AmountType MinBetAmount {
        get {
            return this.minBetAmountField;
        }
        set {
            this.minBetAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMinBetAmountSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMinimumBaseGamePresentationTimeReply {
    
    private ReplyCodeType replyField;
    
    private uint minimumBaseGamePresentationTimeField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public uint MinimumBaseGamePresentationTime {
        get {
            return this.minimumBaseGamePresentationTimeField;
        }
        set {
            this.minimumBaseGamePresentationTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMinimumBaseGamePresentationTimeSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMinimumFreeSpinPresentationTimeReply {
    
    private ReplyCodeType replyField;
    
    private uint minimumFreeSpinPresentationTimeField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public uint MinimumFreeSpinPresentationTime {
        get {
            return this.minimumFreeSpinPresentationTimeField;
        }
        set {
            this.minimumFreeSpinPresentationTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataMinimumFreeSpinPresentationTimeSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataRoundWagerUpPlayoffEnabledReply {
    
    private bool roundWagerUpPlayoffEnabledField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool RoundWagerUpPlayoffEnabled {
        get {
            return this.roundWagerUpPlayoffEnabledField;
        }
        set {
            this.roundWagerUpPlayoffEnabledField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataRoundWagerUpPlayoffEnabledSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataWinCapAmountReply {
    
    private ReplyCodeType replyField;
    
    private AmountType winCapAmountField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public AmountType WinCapAmount {
        get {
            return this.winCapAmountField;
        }
        set {
            this.winCapAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataWinCapAmountSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataWinCapBehaviorReply {
    
    private ReplyCodeType replyField;
    
    private WinCapBehavior winCapBehaviorField;
    
    private uint winCapMultiplierField;
    
    private bool winCapMultiplierFieldSpecified;
    
    private AmountType winCapAmountField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public WinCapBehavior WinCapBehavior {
        get {
            return this.winCapBehaviorField;
        }
        set {
            this.winCapBehaviorField = value;
        }
    }
    
    /// <remarks/>
    public uint WinCapMultiplier {
        get {
            return this.winCapMultiplierField;
        }
        set {
            this.winCapMultiplierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WinCapMultiplierSpecified {
        get {
            return this.winCapMultiplierFieldSpecified;
        }
        set {
            this.winCapMultiplierFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public AmountType WinCapAmount {
        get {
            return this.winCapAmountField;
        }
        set {
            this.winCapAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum WinCapBehavior {
    
    /// <remarks/>
    FixedWinCapAmount,
    
    /// <remarks/>
    MultipliedByCurrentBet,
    
    /// <remarks/>
    MultipliedByMaxBet,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetConfigDataWinCapBehaviorSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCreditFormatterInfoReply {
    
    private CreditFormatterInfoType creditFormatterInfoField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public CreditFormatterInfoType CreditFormatterInfo {
        get {
            return this.creditFormatterInfoField;
        }
        set {
            this.creditFormatterInfoField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LLocalizationTypeVer1.xsd")]
public partial class CreditFormatterInfoType {
    
    private string numericDecimalSeparatorField;
    
    private string numericGroupSeparatorField;
    
    private string wholeUnitCurrencySymbolField;
    
    private string baseUnitCurrencySymbolField;
    
    private bool useGroupSeparatorForNonMonetaryNumbersField;
    
    private bool useGroupSeparatorForNonMonetaryNumbersFieldSpecified;
    
    /// <remarks/>
    public string NumericDecimalSeparator {
        get {
            return this.numericDecimalSeparatorField;
        }
        set {
            this.numericDecimalSeparatorField = value;
        }
    }
    
    /// <remarks/>
    public string NumericGroupSeparator {
        get {
            return this.numericGroupSeparatorField;
        }
        set {
            this.numericGroupSeparatorField = value;
        }
    }
    
    /// <remarks/>
    public string WholeUnitCurrencySymbol {
        get {
            return this.wholeUnitCurrencySymbolField;
        }
        set {
            this.wholeUnitCurrencySymbolField = value;
        }
    }
    
    /// <remarks/>
    public string BaseUnitCurrencySymbol {
        get {
            return this.baseUnitCurrencySymbolField;
        }
        set {
            this.baseUnitCurrencySymbolField = value;
        }
    }
    
    /// <remarks/>
    public bool UseGroupSeparatorForNonMonetaryNumbers {
        get {
            return this.useGroupSeparatorForNonMonetaryNumbersField;
        }
        set {
            this.useGroupSeparatorForNonMonetaryNumbersField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UseGroupSeparatorForNonMonetaryNumbersSpecified {
        get {
            return this.useGroupSeparatorForNonMonetaryNumbersFieldSpecified;
        }
        set {
            this.useGroupSeparatorForNonMonetaryNumbersFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCreditFormatterInfoSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCultureReply {
    
    private string currentCultureField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public string CurrentCulture {
        get {
            return this.currentCultureField;
        }
        set {
            this.currentCultureField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCultureSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReferencedEnumerationReply {
    
    private ReplyCodeType replyField;
    
    private GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData enumerationDataField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData EnumerationData {
        get {
            return this.enumerationDataField;
        }
        set {
            this.enumerationDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReferencedEnumerationReplyEnumerationData {
    
    private List<string> itemField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Item")]
    public List<string> Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReferencedEnumerationSend {
    
    private uint transactionIDField;
    
    private string nameField;
    
    private CustomConfigItemScope scopeField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemScope Scope {
        get {
            return this.scopeField;
        }
        set {
            this.scopeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum CustomConfigItemScope {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Payvar,
    
    /// <remarks/>
    Theme,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReply {
    
    private ReplyCodeType replyField;
    
    private GameControlGetCustomConfigItemReplyCustomConfigItem customConfigItemField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public GameControlGetCustomConfigItemReplyCustomConfigItem CustomConfigItem {
        get {
            return this.customConfigItemField;
        }
        set {
            this.customConfigItemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItem {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AmountData", typeof(GameControlGetCustomConfigItemReplyCustomConfigItemAmountData))]
    [System.Xml.Serialization.XmlElementAttribute("BooleanData", typeof(bool))]
    [System.Xml.Serialization.XmlElementAttribute("EnumerationData", typeof(GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData))]
    [System.Xml.Serialization.XmlElementAttribute("FlagListData", typeof(GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData))]
    [System.Xml.Serialization.XmlElementAttribute("FloatData", typeof(GameControlGetCustomConfigItemReplyCustomConfigItemFloatData))]
    [System.Xml.Serialization.XmlElementAttribute("Int64Data", typeof(GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data))]
    [System.Xml.Serialization.XmlElementAttribute("ItemData", typeof(GameControlGetCustomConfigItemReplyCustomConfigItemItemData))]
    [System.Xml.Serialization.XmlElementAttribute("StringData", typeof(GameControlGetCustomConfigItemReplyCustomConfigItemStringData))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItemAmountData {
    
    private AmountType valueField;
    
    private AmountType minField;
    
    private AmountType maxField;
    
    /// <remarks/>
    public AmountType Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public AmountType Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    public AmountType Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItemEnumerationData {
    
    private List<string> itemField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Item")]
    public List<string> Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItemFlagListData {
    
    private List<FlagListType> flagListField = new List<FlagListType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FlagList")]
    public List<FlagListType> FlagList {
        get {
            return this.flagListField;
        }
        set {
            this.flagListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class FlagListType {
    
    private string itemField;
    
    private bool valueField;
    
    /// <remarks/>
    public string Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    public bool Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItemFloatData {
    
    private float maxField;
    
    private float minField;
    
    private float valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public float Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public float Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItemInt64Data {
    
    private long minField;
    
    private long maxField;
    
    private long valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public long Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItemItemData {
    
    private string enumerationReferenceNameField;
    
    private CustomConfigItemScope enumerationReferenceScopeField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string EnumerationReferenceName {
        get {
            return this.enumerationReferenceNameField;
        }
        set {
            this.enumerationReferenceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public CustomConfigItemScope EnumerationReferenceScope {
        get {
            return this.enumerationReferenceScopeField;
        }
        set {
            this.enumerationReferenceScopeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemReplyCustomConfigItemStringData {
    
    private long maxLengthField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long MaxLength {
        get {
            return this.maxLengthField;
        }
        set {
            this.maxLengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemSend {
    
    private uint transactionIDField;
    
    private string nameField;
    
    private CustomConfigItemScope scopeField;
    
    private CustomConfigItemType typeField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemScope Scope {
        get {
            return this.scopeField;
        }
        set {
            this.scopeField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum CustomConfigItemType {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Amount,
    
    /// <remarks/>
    Boolean,
    
    /// <remarks/>
    Enumeration,
    
    /// <remarks/>
    FlagList,
    
    /// <remarks/>
    Float,
    
    /// <remarks/>
    Int64,
    
    /// <remarks/>
    Item,
    
    /// <remarks/>
    String,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemTypeReply {
    
    private ReplyCodeType replyField;
    
    private CustomConfigItemType typeField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemTypeSend {
    
    private uint transactionIDField;
    
    private string nameField;
    
    private CustomConfigItemScope scopeField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemScope Scope {
        get {
            return this.scopeField;
        }
        set {
            this.scopeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemTypesReply {
    
    private ReplyCodeType replyField;
    
    private List<CustomConfigItemTypePair> customConfigItemTypePairsField = new List<CustomConfigItemTypePair>();
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<CustomConfigItemTypePair> CustomConfigItemTypePairs {
        get {
            return this.customConfigItemTypePairsField;
        }
        set {
            this.customConfigItemTypePairsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class CustomConfigItemTypePair {
    
    private string nameField;
    
    private CustomConfigItemType typeField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetCustomConfigItemTypesSend {
    
    private uint transactionIDField;
    
    private CustomConfigItemScope scopeField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemScope Scope {
        get {
            return this.scopeField;
        }
        set {
            this.scopeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetListLimitedRandomNumbersReply {
    
    private ReplyCodeType replyField;
    
    private GameControlGetListLimitedRandomNumbersReplyRandomNumbers randomNumbersField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public GameControlGetListLimitedRandomNumbersReplyRandomNumbers RandomNumbers {
        get {
            return this.randomNumbersField;
        }
        set {
            this.randomNumbersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetListLimitedRandomNumbersReplyRandomNumbers {
    
    private List<int> randomNumberField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RandomNumber")]
    public List<int> RandomNumber {
        get {
            return this.randomNumberField;
        }
        set {
            this.randomNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetListLimitedRandomNumbersSend {
    
    private uint transactionIDField;
    
    private uint countField;
    
    private string nameField;
    
    private List<GameControlGetListLimitedRandomNumbersSendRange> rangeListField = new List<GameControlGetListLimitedRandomNumbersSendRange>();
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public uint Count {
        get {
            return this.countField;
        }
        set {
            this.countField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Range", IsNullable=false)]
    public List<GameControlGetListLimitedRandomNumbersSendRange> RangeList {
        get {
            return this.rangeListField;
        }
        set {
            this.rangeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetListLimitedRandomNumbersSendRange {
    
    private int minimumValueField;
    
    private int maximumValueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public int MinimumValue {
        get {
            return this.minimumValueField;
        }
        set {
            this.minimumValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public int MaximumValue {
        get {
            return this.maximumValueField;
        }
        set {
            this.maximumValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetPlayerMetersReply {
    
    private PlayerMeters playerMetersField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class PlayerMeters {
    
    private AmountType playerWagerableMeterField;
    
    private AmountType playerBankMeterField;
    
    private AmountType playerPaidMeterField;
    
    /// <remarks/>
    public AmountType PlayerWagerableMeter {
        get {
            return this.playerWagerableMeterField;
        }
        set {
            this.playerWagerableMeterField = value;
        }
    }
    
    /// <remarks/>
    public AmountType PlayerBankMeter {
        get {
            return this.playerBankMeterField;
        }
        set {
            this.playerBankMeterField = value;
        }
    }
    
    /// <remarks/>
    public AmountType PlayerPaidMeter {
        get {
            return this.playerPaidMeterField;
        }
        set {
            this.playerPaidMeterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetPlayerMetersSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetProgressiveGameLevelValuesReply {
    
    private List<GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues> progressiveGameLevelValuesField = new List<GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues>();
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelValues")]
    public List<GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues> ProgressiveGameLevelValues {
        get {
            return this.progressiveGameLevelValuesField;
        }
        set {
            this.progressiveGameLevelValuesField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetProgressiveGameLevelValuesReplyProgressiveGameLevelValues {
    
    private uint denominationField;
    
    private List<GameLevelProgressiveValue> gameLevelProgressivesField = new List<GameLevelProgressiveValue>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelProgressives")]
    public List<GameLevelProgressiveValue> GameLevelProgressives {
        get {
            return this.gameLevelProgressivesField;
        }
        set {
            this.gameLevelProgressivesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public partial class GameLevelProgressiveValue {
    
    private uint gameLevelField;
    
    private AmountType amountField;
    
    private string prizeStringField;
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    public AmountType Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    public string PrizeString {
        get {
            return this.prizeStringField;
        }
        set {
            this.prizeStringField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetProgressiveGameLevelValuesSend {
    
    private List<uint> denominationsField = new List<uint>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denominations")]
    public List<uint> Denominations {
        get {
            return this.denominationsField;
        }
        set {
            this.denominationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetRandomNumbersReply {
    
    private ReplyCodeType replyField;
    
    private GameControlGetRandomNumbersReplyRandomNumbers randomNumbersField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public GameControlGetRandomNumbersReplyRandomNumbers RandomNumbers {
        get {
            return this.randomNumbersField;
        }
        set {
            this.randomNumbersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetRandomNumbersReplyRandomNumbers {
    
    private List<int> randomNumberField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RandomNumber")]
    public List<int> RandomNumber {
        get {
            return this.randomNumberField;
        }
        set {
            this.randomNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetRandomNumbersSend {
    
    private uint transactionIDField;
    
    private uint countField;
    
    private uint duplicatesField;
    
    private int minimumValueField;
    
    private int maximumValueField;
    
    private string nameField;
    
    private GameControlGetRandomNumbersSendAlreadyPickedNumbers alreadyPickedNumbersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public uint Count {
        get {
            return this.countField;
        }
        set {
            this.countField = value;
        }
    }
    
    /// <remarks/>
    public uint Duplicates {
        get {
            return this.duplicatesField;
        }
        set {
            this.duplicatesField = value;
        }
    }
    
    /// <remarks/>
    public int MinimumValue {
        get {
            return this.minimumValueField;
        }
        set {
            this.minimumValueField = value;
        }
    }
    
    /// <remarks/>
    public int MaximumValue {
        get {
            return this.maximumValueField;
        }
        set {
            this.maximumValueField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public GameControlGetRandomNumbersSendAlreadyPickedNumbers AlreadyPickedNumbers {
        get {
            return this.alreadyPickedNumbersField;
        }
        set {
            this.alreadyPickedNumbersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlGetRandomNumbersSendAlreadyPickedNumbers {
    
    private List<int> alreadyPickedNumberField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AlreadyPickedNumber")]
    public List<int> AlreadyPickedNumber {
        get {
            return this.alreadyPickedNumberField;
        }
        set {
            this.alreadyPickedNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlInactivateThemeContextReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlInactivateThemeContextSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsBankLockedReply {
    
    private bool isBankLockedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool IsBankLocked {
        get {
            return this.isBankLockedField;
        }
        set {
            this.isBankLockedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsBankLockedSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsPlayerBankToWagerableOfferableReply {
    
    private bool isPlayerBankToWagerableOfferableField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool IsPlayerBankToWagerableOfferable {
        get {
            return this.isPlayerBankToWagerableOfferableField;
        }
        set {
            this.isPlayerBankToWagerableOfferableField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsPlayerBankToWagerableOfferableSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsPlayerCashoutOfferableReply {
    
    private bool isPlayerCashoutOfferableField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool IsPlayerCashoutOfferable {
        get {
            return this.isPlayerCashoutOfferableField;
        }
        set {
            this.isPlayerCashoutOfferableField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsPlayerCashoutOfferableSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsThemeSelectionMenuOfferableReply {
    
    private ReplyCodeType replyField;
    
    private bool isThemeSelectionMenuOfferableField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool IsThemeSelectionMenuOfferable {
        get {
            return this.isThemeSelectionMenuOfferableField;
        }
        set {
            this.isThemeSelectionMenuOfferableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlIsThemeSelectionMenuOfferableSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyBetReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyBetSend {
    
    private uint transactionIDField;
    
    private AmountType amountBetField;
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType AmountBet {
        get {
            return this.amountBetField;
        }
        set {
            this.amountBetField = value;
        }
    }
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyCommittedChangedReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyCommittedChangedSend {
    
    private uint transactionIDField;
    
    private AmountType amountCommittedField;
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType AmountCommitted {
        get {
            return this.amountCommittedField;
        }
        set {
            this.amountCommittedField = value;
        }
    }
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyInReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyInSend {
    
    private uint transactionIDField;
    
    private AmountType amountInField;
    
    private MoneyInSource moneyInSourceField;
    
    private FundsTransferAccountSource fundsTransferAccountSourceField;
    
    private bool fundsTransferAccountSourceFieldSpecified;
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType AmountIn {
        get {
            return this.amountInField;
        }
        set {
            this.amountInField = value;
        }
    }
    
    /// <remarks/>
    public MoneyInSource MoneyInSource {
        get {
            return this.moneyInSourceField;
        }
        set {
            this.moneyInSourceField = value;
        }
    }
    
    /// <remarks/>
    public FundsTransferAccountSource FundsTransferAccountSource {
        get {
            return this.fundsTransferAccountSourceField;
        }
        set {
            this.fundsTransferAccountSourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FundsTransferAccountSourceSpecified {
        get {
            return this.fundsTransferAccountSourceFieldSpecified;
        }
        set {
            this.fundsTransferAccountSourceFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum MoneyInSource {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    OtherSource,
    
    /// <remarks/>
    Bill,
    
    /// <remarks/>
    Coin,
    
    /// <remarks/>
    Ticket,
    
    /// <remarks/>
    FundsTransfer,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum FundsTransferAccountSource {
    
    /// <remarks/>
    OtherAccount,
    
    /// <remarks/>
    CasinoAccount,
    
    /// <remarks/>
    BankAccount,
    
    /// <remarks/>
    BonusSystem,
    
    /// <remarks/>
    NonWinBonusSystem,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyOutReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyOutSend {
    
    private uint transactionIDField;
    
    private AmountType amountOutField;
    
    private MoneyOutSource moneyOutSourceField;
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType AmountOut {
        get {
            return this.amountOutField;
        }
        set {
            this.amountOutField = value;
        }
    }
    
    /// <remarks/>
    public MoneyOutSource MoneyOutSource {
        get {
            return this.moneyOutSourceField;
        }
        set {
            this.moneyOutSourceField = value;
        }
    }
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum MoneyOutSource {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    OtherSource,
    
    /// <remarks/>
    Bill,
    
    /// <remarks/>
    Coin,
    
    /// <remarks/>
    Ticket,
    
    /// <remarks/>
    FundsTransfer,
    
    /// <remarks/>
    Handpay,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneySetReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneySetSend {
    
    private uint transactionIDField;
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyWagerableReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyWagerableSend {
    
    private uint transactionIDField;
    
    private AmountType amountMovedField;
    
    private MoneyWagerableDirection wagerableDirectionField;
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType AmountMoved {
        get {
            return this.amountMovedField;
        }
        set {
            this.amountMovedField = value;
        }
    }
    
    /// <remarks/>
    public MoneyWagerableDirection WagerableDirection {
        get {
            return this.wagerableDirectionField;
        }
        set {
            this.wagerableDirectionField = value;
        }
    }
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum MoneyWagerableDirection {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    ToUnknownSource,
    
    /// <remarks/>
    FromUnknownSource,
    
    /// <remarks/>
    ToBankMeter,
    
    /// <remarks/>
    FromBankMeter,
    
    /// <remarks/>
    FromCashEscrow,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyWonReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlMoneyWonSend {
    
    private uint transactionIDField;
    
    private AmountType amountWonField;
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType AmountWon {
        get {
            return this.amountWonField;
        }
        set {
            this.amountWonField = value;
        }
    }
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlNewThemeContextReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlNewThemeContextSend {
    
    private uint transactionIDField;
    
    private GameMode gameModeField;
    
    private GameSubMode gameSubModeField;
    
    private uint denomField;
    
    private string payvarTagField;
    
    private string payvarTagDataFileField;
    
    private bool newlySelectedForPlayField;
    
    private SecurityLevelType securityLevelField;
    
    public GameControlNewThemeContextSend() {
        this.gameSubModeField = GameSubMode.Standard;
    }
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public GameMode GameMode {
        get {
            return this.gameModeField;
        }
        set {
            this.gameModeField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(GameSubMode.Standard)]
    public GameSubMode GameSubMode {
        get {
            return this.gameSubModeField;
        }
        set {
            this.gameSubModeField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    public string PayvarTag {
        get {
            return this.payvarTagField;
        }
        set {
            this.payvarTagField = value;
        }
    }
    
    /// <remarks/>
    public string PayvarTagDataFile {
        get {
            return this.payvarTagDataFileField;
        }
        set {
            this.payvarTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public bool NewlySelectedForPlay {
        get {
            return this.newlySelectedForPlayField;
        }
        set {
            this.newlySelectedForPlayField = value;
        }
    }
    
    /// <remarks/>
    public SecurityLevelType SecurityLevel {
        get {
            return this.securityLevelField;
        }
        set {
            this.securityLevelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum GameMode {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Play,
    
    /// <remarks/>
    History,
    
    /// <remarks/>
    Utility,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum GameSubMode {
    
    /// <remarks/>
    Standard,
    
    /// <remarks/>
    Tournament,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum SecurityLevelType {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-none")]
    securitynone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-attendant")]
    securityattendant,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-operator")]
    securityoperator,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-ekey")]
    securityekey,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlOfferAncillaryGameRequestReply {
    
    private bool offerAncillaryGameField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool OfferAncillaryGame {
        get {
            return this.offerAncillaryGameField;
        }
        set {
            this.offerAncillaryGameField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlOfferAncillaryGameRequestSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlPlaceBetReply {
    
    private bool betPlacedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool BetPlaced {
        get {
            return this.betPlacedField;
        }
        set {
            this.betPlacedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlPlaceBetSend {
    
    private uint transactionIDField;
    
    private AmountType betAmountField;
    
    private AmountType betFromCreditsAmountField;
    
    private AmountType betFromUncommittedGameWinsAmountField;
    
    private AmountType pendingWinsAvailableForThisBetField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BetFromCreditsAmount {
        get {
            return this.betFromCreditsAmountField;
        }
        set {
            this.betFromCreditsAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountType BetFromUncommittedGameWinsAmount {
        get {
            return this.betFromUncommittedGameWinsAmountField;
        }
        set {
            this.betFromUncommittedGameWinsAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountType PendingWinsAvailableForThisBet {
        get {
            return this.pendingWinsAvailableForThisBetField;
        }
        set {
            this.pendingWinsAvailableForThisBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlPlaceStartingBetReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlPlaceStartingBetSend {
    
    private uint transactionIDField;
    
    private bool isMaxBetField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public bool IsMaxBet {
        get {
            return this.isMaxBetField;
        }
        set {
            this.isMaxBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlPlayerCashoutRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlPlayerCashoutRequestSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryBankStatusReply {
    
    private BankStatus bankStatusField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public BankStatus BankStatus {
        get {
            return this.bankStatusField;
        }
        set {
            this.bankStatusField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryBankStatusSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryGameCycleStateReply {
    
    private GameCycleState currentGameCycleStateField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public GameCycleState CurrentGameCycleState {
        get {
            return this.currentGameCycleStateField;
        }
        set {
            this.currentGameCycleStateField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum GameCycleState {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Idle,
    
    /// <remarks/>
    Committed,
    
    /// <remarks/>
    EnrollPending,
    
    /// <remarks/>
    EnrollComplete,
    
    /// <remarks/>
    Playing,
    
    /// <remarks/>
    EvaluatePending,
    
    /// <remarks/>
    MainPlayComplete,
    
    /// <remarks/>
    AncillaryPlaying,
    
    /// <remarks/>
    AncillaryEvaluatePending,
    
    /// <remarks/>
    AncillaryPlayComplete,
    
    /// <remarks/>
    BonusPlaying,
    
    /// <remarks/>
    BonusEvaluatePending,
    
    /// <remarks/>
    BonusPlayComplete,
    
    /// <remarks/>
    FinalizeAwardPending,
    
    /// <remarks/>
    Finalized,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryGameCycleStateSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryPlayerSelectableDenomsReply {
    
    private ReplyCodeType replyField;
    
    private GameControlQueryPlayerSelectableDenomsReplyDenominationList denominationListField;
    
    private GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList progressiveDenominationListField;
    
    private uint defaultDenomField;
    
    private bool defaultDenomFieldSpecified;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public GameControlQueryPlayerSelectableDenomsReplyDenominationList DenominationList {
        get {
            return this.denominationListField;
        }
        set {
            this.denominationListField = value;
        }
    }
    
    /// <remarks/>
    public GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList ProgressiveDenominationList {
        get {
            return this.progressiveDenominationListField;
        }
        set {
            this.progressiveDenominationListField = value;
        }
    }
    
    /// <remarks/>
    public uint DefaultDenom {
        get {
            return this.defaultDenomField;
        }
        set {
            this.defaultDenomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultDenomSpecified {
        get {
            return this.defaultDenomFieldSpecified;
        }
        set {
            this.defaultDenomFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryPlayerSelectableDenomsReplyDenominationList {
    
    private List<uint> denomField = new List<uint>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denom")]
    public List<uint> Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryPlayerSelectableDenomsReplyProgressiveDenominationList {
    
    private List<uint> denomField = new List<uint>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denom")]
    public List<uint> Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlQueryPlayerSelectableDenomsSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlReadCritDataReply {
    
    private ReplyCodeType replyField;
    
    private bool readCritDataSuccessField;
    
    private byte[] dataField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool ReadCritDataSuccess {
        get {
            return this.readCritDataSuccessField;
        }
        set {
            this.readCritDataSuccessField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlReadCritDataSend {
    
    private uint transactionIDField;
    
    private CriticalDataScope criticalDataScopeField;
    
    private string itemNameField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public CriticalDataScope CriticalDataScope {
        get {
            return this.criticalDataScopeField;
        }
        set {
            this.criticalDataScopeField = value;
        }
    }
    
    /// <remarks/>
    public string ItemName {
        get {
            return this.itemNameField;
        }
        set {
            this.itemNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum CriticalDataScope {
    
    /// <remarks/>
    Feature,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Game-Cycle")]
    GameCycle,
    
    /// <remarks/>
    History,
    
    /// <remarks/>
    Payvar,
    
    /// <remarks/>
    PayvarPersistent,
    
    /// <remarks/>
    PayvarAnalytics,
    
    /// <remarks/>
    Theme,
    
    /// <remarks/>
    ThemePersistent,
    
    /// <remarks/>
    ThemeAnalytics,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlRemoveCritDataReply {
    
    private ReplyCodeType replyField;
    
    private bool removeCritDataSuccessField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool RemoveCritDataSuccess {
        get {
            return this.removeCritDataSuccessField;
        }
        set {
            this.removeCritDataSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlRemoveCritDataSend {
    
    private uint transactionIDField;
    
    private CriticalDataScope criticalDataScopeField;
    
    private string itemNameField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public CriticalDataScope CriticalDataScope {
        get {
            return this.criticalDataScopeField;
        }
        set {
            this.criticalDataScopeField = value;
        }
    }
    
    /// <remarks/>
    public string ItemName {
        get {
            return this.itemNameField;
        }
        set {
            this.itemNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlRequestThemeSelectionMenuReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlRequestThemeSelectionMenuSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSetCultureReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSetCultureSend {
    
    private uint transactionIDField;
    
    private string cultureField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSetDefaultCultureReply {
    
    private string cultureField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSetDefaultCultureSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSetDisplayControlStateReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSetDisplayControlStateSend {
    
    private uint transactionIDField;
    
    private DisplayControlState displayControlStateField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public DisplayControlState DisplayControlState {
        get {
            return this.displayControlStateField;
        }
        set {
            this.displayControlStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameControlVer4.xsd")]
public enum DisplayControlState {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    DisplayAsHidden,
    
    /// <remarks/>
    DisplayAsNormal,
    
    /// <remarks/>
    DisplayAsSuspended,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlStartAncillaryPlayingReply {
    
    private bool startSuccessfulField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool StartSuccessful {
        get {
            return this.startSuccessfulField;
        }
        set {
            this.startSuccessfulField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlStartAncillaryPlayingSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlStartBonusPlayingReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlStartBonusPlayingSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlStartPlayingReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlStartPlayingSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSwitchThemeContextReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSwitchThemeContextSend {
    
    private uint transactionIDField;
    
    private string themeTagField;
    
    private string themeTagDataFileField;
    
    private List<GameControlSwitchThemeContextSendResourcePaths> resourcePathsField = new List<GameControlSwitchThemeContextSendResourcePaths>();
    
    private uint denomField;
    
    private string payvarTagField;
    
    private string payvarTagDataFileField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTag {
        get {
            return this.themeTagField;
        }
        set {
            this.themeTagField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTagDataFile {
        get {
            return this.themeTagDataFileField;
        }
        set {
            this.themeTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ResourcePaths")]
    public List<GameControlSwitchThemeContextSendResourcePaths> ResourcePaths {
        get {
            return this.resourcePathsField;
        }
        set {
            this.resourcePathsField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    public string PayvarTag {
        get {
            return this.payvarTagField;
        }
        set {
            this.payvarTagField = value;
        }
    }
    
    /// <remarks/>
    public string PayvarTagDataFile {
        get {
            return this.payvarTagDataFileField;
        }
        set {
            this.payvarTagDataFileField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlSwitchThemeContextSendResourcePaths {
    
    private string tagField;
    
    private string pathField;
    
    /// <remarks/>
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlThemeSelectionMenuOfferableStatusChangedReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlThemeSelectionMenuOfferableStatusChangedSend {
    
    private uint transactionIDField;
    
    private bool isThemeSelectionMenuOfferableField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public bool IsThemeSelectionMenuOfferable {
        get {
            return this.isThemeSelectionMenuOfferableField;
        }
        set {
            this.isThemeSelectionMenuOfferableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlTransactionCompleteReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlTransactionCompleteSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlTransferBankToWagerableRequestReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlTransferBankToWagerableRequestSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlTransferWagerableToBankRequestReply {
    
    private bool transferAcceptedField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public bool TransferAccepted {
        get {
            return this.transferAcceptedField;
        }
        set {
            this.transferAcceptedField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlTransferWagerableToBankRequestSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlUncommitBetReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlUncommitBetSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlUncommitGameCycleReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlUncommitGameCycleSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlUnenrollGameCycleReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlUnenrollGameCycleSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlWriteCritDataReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameControlVer4.xsd")]
public partial class GameControlWriteCritDataSend {
    
    private uint transactionIDField;
    
    private CriticalDataScope criticalDataScopeField;
    
    private string itemNameField;
    
    private byte[] dataField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public CriticalDataScope CriticalDataScope {
        get {
            return this.criticalDataScopeField;
        }
        set {
            this.criticalDataScopeField = value;
        }
    }
    
    /// <remarks/>
    public string ItemName {
        get {
            return this.itemNameField;
        }
        set {
            this.itemNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameStopReportVer2.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LGameStopReportVer2.xsd", IsNullable=false)]
public partial class GameStopReport {
    
    private VersionType versionField;
    
    private GameStopReportMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameStopReportMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameStopReportVer2.xsd")]
public partial class GameStopReportMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReportPokerHandReply", typeof(GameStopReportReportPokerHandReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReportPokerHandSend", typeof(GameStopReportReportPokerHandSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReportReelStopsReply", typeof(GameStopReportReportReelStopsReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReportReelStopsSend", typeof(GameStopReportReportReelStopsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameStopReportVer2.xsd")]
public partial class GameStopReportReportPokerHandReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameStopReportVer2.xsd")]
public partial class GameStopReportReportPokerHandSend {
    
    private uint transactionIDField;
    
    private bool handStatusField;
    
    private List<PokerCard> cardField = new List<PokerCard>();
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public bool HandStatus {
        get {
            return this.handStatusField;
        }
        set {
            this.handStatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Card")]
    public List<PokerCard> Card {
        get {
            return this.cardField;
        }
        set {
            this.cardField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameStopReportVer2.xsd")]
public partial class PokerCard {
    
    private byte valueField;
    
    private bool heldField;
    
    /// <remarks/>
    public byte Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public bool Held {
        get {
            return this.heldField;
        }
        set {
            this.heldField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameStopReportVer2.xsd")]
public partial class GameStopReportReportReelStopsReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameStopReportVer2.xsd")]
public partial class GameStopReportReportReelStopsSend {
    
    private uint transactionIDField;
    
    private List<uint> reelStopField = new List<uint>();
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReelStop")]
    public List<uint> ReelStop {
        get {
            return this.reelStopField;
        }
        set {
            this.reelStopField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameTiltVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LGameTiltVer1.xsd", IsNullable=false)]
public partial class GameTilt {
    
    private VersionType versionField;
    
    private GameTiltMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameTiltMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameTiltVer1.xsd")]
public partial class GameTiltMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RequestClearTiltReply", typeof(GameTiltRequestClearTiltReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestClearTiltSend", typeof(GameTiltRequestClearTiltSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestTiltReply", typeof(GameTiltRequestTiltReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestTiltSend", typeof(GameTiltRequestTiltSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameTiltVer1.xsd")]
public partial class GameTiltRequestClearTiltReply {
    
    private ReplyCodeType replyField;
    
    private bool requestClearTiltSuccessField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool RequestClearTiltSuccess {
        get {
            return this.requestClearTiltSuccessField;
        }
        set {
            this.requestClearTiltSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameTiltVer1.xsd")]
public partial class GameTiltRequestClearTiltSend {
    
    private uint transactionIDField;
    
    private string tiltNameField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string TiltName {
        get {
            return this.tiltNameField;
        }
        set {
            this.tiltNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameTiltVer1.xsd")]
public partial class GameTiltRequestTiltReply {
    
    private ReplyCodeType replyField;
    
    private bool requestTiltSuccessField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool RequestTiltSuccess {
        get {
            return this.requestTiltSuccessField;
        }
        set {
            this.requestTiltSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LGameTiltVer1.xsd")]
public partial class GameTiltRequestTiltSend {
    
    private uint transactionIDField;
    
    private string tiltNameField;
    
    private List<TiltLocalization> tiltLocalizationsField = new List<TiltLocalization>();
    
    private string tiltAttributesField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string TiltName {
        get {
            return this.tiltNameField;
        }
        set {
            this.tiltNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<TiltLocalization> TiltLocalizations {
        get {
            return this.tiltLocalizationsField;
        }
        set {
            this.tiltLocalizationsField = value;
        }
    }
    
    /// <remarks/>
    public string TiltAttributes {
        get {
            return this.tiltAttributesField;
        }
        set {
            this.tiltAttributesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LGameTiltVer1.xsd")]
public partial class TiltLocalization {
    
    private string titleField;
    
    private string messageField;
    
    private string cultureField;
    
    /// <remarks/>
    public string Title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    public string Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LIdentificationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LIdentificationVer1.xsd", IsNullable=false)]
public partial class Identification {
    
    private VersionType versionField;
    
    private IdentificationMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public IdentificationMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LIdentificationVer1.xsd")]
public partial class IdentificationMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataG2SEGMIdentifierReply", typeof(IdentificationGetConfigDataG2SEGMIdentifierReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataG2SEGMIdentifierSend", typeof(IdentificationGetConfigDataG2SEGMIdentifierSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataG2SThemeIdentifierReply", typeof(IdentificationGetConfigDataG2SThemeIdentifierReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataG2SThemeIdentifierSend", typeof(IdentificationGetConfigDataG2SThemeIdentifierSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineSerialNumberReply", typeof(IdentificationGetConfigDataMachineSerialNumberReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineSerialNumberSend", typeof(IdentificationGetConfigDataMachineSerialNumberSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LIdentificationVer1.xsd")]
public partial class IdentificationGetConfigDataG2SEGMIdentifierReply {
    
    private ReplyCodeType replyField;
    
    private string g2SEGMIdentifierField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public string G2SEGMIdentifier {
        get {
            return this.g2SEGMIdentifierField;
        }
        set {
            this.g2SEGMIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LIdentificationVer1.xsd")]
public partial class IdentificationGetConfigDataG2SEGMIdentifierSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LIdentificationVer1.xsd")]
public partial class IdentificationGetConfigDataG2SThemeIdentifierReply {
    
    private ReplyCodeType replyField;
    
    private string g2SThemeIdentifierField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public string G2SThemeIdentifier {
        get {
            return this.g2SThemeIdentifierField;
        }
        set {
            this.g2SThemeIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LIdentificationVer1.xsd")]
public partial class IdentificationGetConfigDataG2SThemeIdentifierSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LIdentificationVer1.xsd")]
public partial class IdentificationGetConfigDataMachineSerialNumberReply {
    
    private ReplyCodeType replyField;
    
    private string serialNumberField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public string SerialNumber {
        get {
            return this.serialNumberField;
        }
        set {
            this.serialNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LIdentificationVer1.xsd")]
public partial class IdentificationGetConfigDataMachineSerialNumberSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LLinkControlVer2.xsd", IsNullable=false)]
public partial class LinkControl {
    
    private VersionType versionField;
    
    private LinkControlMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public LinkControlMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetThemeApiVersionsReply", typeof(LinkControlGetThemeApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeApiVersionsSend", typeof(LinkControlGetThemeApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("ParkReply", typeof(LinkControlParkReply))]
    [System.Xml.Serialization.XmlElementAttribute("ParkSend", typeof(LinkControlParkSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetThemeApiVersionsReply", typeof(LinkControlSetThemeApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetThemeApiVersionsSend", typeof(LinkControlSetThemeApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlGetThemeApiVersionsReply {
    
    private ReplyCodeType replyField;
    
    private LinkControlGetThemeApiVersionsReplyCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public LinkControlGetThemeApiVersionsReplyCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlGetThemeApiVersionsReplyCategoryVersions {
    
    private List<CategoryVersionType> categoryVersionField = new List<CategoryVersionType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersionType> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlGetThemeApiVersionsSend {
    
    private string binTagField;
    
    private string binConnectTokenField;
    
    private string binTagDataFileField;
    
    private string themeTagField;
    
    private string themeTagDataFileField;
    
    private LinkControlGetThemeApiVersionsSendResourcePaths resourcePathsField;
    
    private LinkControlGetThemeApiVersionsSendEnvironmentAttributes environmentAttributesField;
    
    private string jurisdictionField;
    
    private List<ExtensionListExtension> extensionsField = new List<ExtensionListExtension>();
    
    /// <remarks/>
    public string BinTag {
        get {
            return this.binTagField;
        }
        set {
            this.binTagField = value;
        }
    }
    
    /// <remarks/>
    public string BinConnectToken {
        get {
            return this.binConnectTokenField;
        }
        set {
            this.binConnectTokenField = value;
        }
    }
    
    /// <remarks/>
    public string BinTagDataFile {
        get {
            return this.binTagDataFileField;
        }
        set {
            this.binTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTag {
        get {
            return this.themeTagField;
        }
        set {
            this.themeTagField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTagDataFile {
        get {
            return this.themeTagDataFileField;
        }
        set {
            this.themeTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public LinkControlGetThemeApiVersionsSendResourcePaths ResourcePaths {
        get {
            return this.resourcePathsField;
        }
        set {
            this.resourcePathsField = value;
        }
    }
    
    /// <remarks/>
    public LinkControlGetThemeApiVersionsSendEnvironmentAttributes EnvironmentAttributes {
        get {
            return this.environmentAttributesField;
        }
        set {
            this.environmentAttributesField = value;
        }
    }
    
    /// <remarks/>
    public string Jurisdiction {
        get {
            return this.jurisdictionField;
        }
        set {
            this.jurisdictionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Extension", IsNullable=false)]
    public List<ExtensionListExtension> Extensions {
        get {
            return this.extensionsField;
        }
        set {
            this.extensionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlGetThemeApiVersionsSendResourcePaths {
    
    private List<GameDiscovPathType> resourcePathField = new List<GameDiscovPathType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ResourcePath")]
    public List<GameDiscovPathType> ResourcePath {
        get {
            return this.resourcePathField;
        }
        set {
            this.resourcePathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LLinkControlVer2.xsd")]
public partial class GameDiscovPathType {
    
    private GameDiscovPathTypeInclusionType inclusionTypeField;
    
    private string tagField;
    
    private string pathField;
    
    /// <remarks/>
    public GameDiscovPathTypeInclusionType InclusionType {
        get {
            return this.inclusionTypeField;
        }
        set {
            this.inclusionTypeField = value;
        }
    }
    
    /// <remarks/>
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public enum GameDiscovPathTypeInclusionType {
    
    /// <remarks/>
    Bin,
    
    /// <remarks/>
    Theme,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlGetThemeApiVersionsSendEnvironmentAttributes {
    
    private List<EnvironmentAttributeType> environmentAttributeField = new List<EnvironmentAttributeType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EnvironmentAttribute")]
    public List<EnvironmentAttributeType> EnvironmentAttribute {
        get {
            return this.environmentAttributeField;
        }
        set {
            this.environmentAttributeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LLinkControlVer2.xsd")]
public enum EnvironmentAttributeType {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("banked-credit")]
    bankedcredit,
    
    /// <remarks/>
    CDS,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("show-demo")]
    showdemo,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class ExtensionListExtension {
    
    private string extensionIdentifierField;
    
    private ExtensionVersion extensionVersionField;
    
    private string resourceDirectoryBaseField;
    
    /// <remarks/>
    public string ExtensionIdentifier {
        get {
            return this.extensionIdentifierField;
        }
        set {
            this.extensionIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public ExtensionVersion ExtensionVersion {
        get {
            return this.extensionVersionField;
        }
        set {
            this.extensionVersionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string ResourceDirectoryBase {
        get {
            return this.resourceDirectoryBaseField;
        }
        set {
            this.resourceDirectoryBaseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LLinkControlVer2.xsd")]
public partial class ExtensionVersion {
    
    private uint majorVersionField;
    
    private uint minorVersionField;
    
    private uint patchVersionField;
    
    /// <remarks/>
    public uint MajorVersion {
        get {
            return this.majorVersionField;
        }
        set {
            this.majorVersionField = value;
        }
    }
    
    /// <remarks/>
    public uint MinorVersion {
        get {
            return this.minorVersionField;
        }
        set {
            this.minorVersionField = value;
        }
    }
    
    /// <remarks/>
    public uint PatchVersion {
        get {
            return this.patchVersionField;
        }
        set {
            this.patchVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlParkReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlParkSend {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlSetThemeApiVersionsReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlSetThemeApiVersionsSend {
    
    private LinkControlSetThemeApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public LinkControlSetThemeApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LLinkControlVer2.xsd")]
public partial class LinkControlSetThemeApiVersionsSendCategoryVersions {
    
    private List<CategoryVersionType> categoryVersionField = new List<CategoryVersionType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersionType> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LProtocolIPPForwardingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LProtocolIPPForwardingVer1.xsd", IsNullable=false)]
public partial class ProtocolIPPForwarding {
    
    private VersionType versionField;
    
    private ProtocolIPPForwardingMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ProtocolIPPForwardingMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LProtocolIPPForwardingVer1.xsd")]
public partial class ProtocolIPPForwardingMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TransportBinDataToIPPHostReply", typeof(ProtocolIPPForwardingTransportBinDataToIPPHostReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransportBinDataToIPPHostSend", typeof(ProtocolIPPForwardingTransportBinDataToIPPHostSend))]
    [System.Xml.Serialization.XmlElementAttribute("TransportIPPHostDataToBinReply", typeof(ProtocolIPPForwardingTransportIPPHostDataToBinReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransportIPPHostDataToBinSend", typeof(ProtocolIPPForwardingTransportIPPHostDataToBinSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LProtocolIPPForwardingVer1.xsd")]
public partial class ProtocolIPPForwardingTransportBinDataToIPPHostReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LProtocolIPPForwardingVer1.xsd")]
public partial class ProtocolIPPForwardingTransportBinDataToIPPHostSend {
    
    private byte[] binaryDataField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] BinaryData {
        get {
            return this.binaryDataField;
        }
        set {
            this.binaryDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LProtocolIPPForwardingVer1.xsd")]
public partial class ProtocolIPPForwardingTransportIPPHostDataToBinReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LProtocolIPPForwardingVer1.xsd")]
public partial class ProtocolIPPForwardingTransportIPPHostDataToBinSend {
    
    private byte[] binaryDataField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] BinaryData {
        get {
            return this.binaryDataField;
        }
        set {
            this.binaryDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LShowDemoVer2.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LShowDemoVer2.xsd", IsNullable=false)]
public partial class ShowDemo {
    
    private VersionType versionField;
    
    private ShowDemoMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ShowDemoMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LShowDemoVer2.xsd")]
public partial class ShowDemoMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddMoneyReply", typeof(ShowDemoAddMoneyReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddMoneySend", typeof(ShowDemoAddMoneySend))]
    [System.Xml.Serialization.XmlElementAttribute("GetShowEnvironmentReply", typeof(ShowDemoGetShowEnvironmentReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetShowEnvironmentSend", typeof(ShowDemoGetShowEnvironmentSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LShowDemoVer2.xsd")]
public partial class ShowDemoAddMoneyReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LShowDemoVer2.xsd")]
public partial class ShowDemoAddMoneySend {
    
    private AmountType amountField;
    
    /// <remarks/>
    public AmountType Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LShowDemoVer2.xsd")]
public partial class ShowDemoGetShowEnvironmentReply {
    
    private ShowEnvironment showEnvironmentField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ShowEnvironment ShowEnvironment {
        get {
            return this.showEnvironmentField;
        }
        set {
            this.showEnvironmentField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LShowDemoVer2.xsd")]
public enum ShowEnvironment {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Development,
    
    /// <remarks/>
    Show,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LShowDemoVer2.xsd")]
public partial class ShowDemoGetShowEnvironmentSend {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LThemeToExtParcelCommVer1.xsd", IsNullable=false)]
public partial class ThemeToExtParcelComm {
    
    private VersionType versionField;
    
    private ThemeToExtParcelCommMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ThemeToExtParcelCommMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ExtensionParcelCallRxReply", typeof(ThemeToExtParcelCommExtensionParcelCallRxReply))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionParcelCallRxSend", typeof(ThemeToExtParcelCommExtensionParcelCallRxSend))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionParcelCallTxReply", typeof(ThemeToExtParcelCommExtensionParcelCallTxReply))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionParcelCallTxSend", typeof(ThemeToExtParcelCommExtensionParcelCallTxSend))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionTransParcelCallRxReply", typeof(ThemeToExtParcelCommExtensionTransParcelCallRxReply))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionTransParcelCallRxSend", typeof(ThemeToExtParcelCommExtensionTransParcelCallRxSend))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionTransParcelCallTxReply", typeof(ThemeToExtParcelCommExtensionTransParcelCallTxReply))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionTransParcelCallTxSend", typeof(ThemeToExtParcelCommExtensionTransParcelCallTxSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionParcelCallRxReply {
    
    private ReplyCodeType replyField;
    
    private bool acceptedField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionParcelCallRxSend {
    
    private string extensionField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public string Extension {
        get {
            return this.extensionField;
        }
        set {
            this.extensionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionParcelCallTxReply {
    
    private ReplyCodeType replyField;
    
    private ParcelCallStatus statusField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public ParcelCallStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public enum ParcelCallStatus {
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    Busy,
    
    /// <remarks/>
    Unavailable,
    
    /// <remarks/>
    Rejected,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionParcelCallTxSend {
    
    private string extensionField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public string Extension {
        get {
            return this.extensionField;
        }
        set {
            this.extensionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionTransParcelCallRxReply {
    
    private ReplyCodeType replyField;
    
    private bool acceptedField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionTransParcelCallRxSend {
    
    private uint transactionIDField;
    
    private string extensionField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string Extension {
        get {
            return this.extensionField;
        }
        set {
            this.extensionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionTransParcelCallTxReply {
    
    private ReplyCodeType replyField;
    
    private ParcelCallStatus statusField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
    
    /// <remarks/>
    public ParcelCallStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LThemeToExtParcelCommVer1.xsd")]
public partial class ThemeToExtParcelCommExtensionTransParcelCallTxSend {
    
    private uint transactionIDField;
    
    private string extensionField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public string Extension {
        get {
            return this.extensionField;
        }
        set {
            this.extensionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LVoucherPrintVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LVoucherPrintVer1.xsd", IsNullable=false)]
public partial class VoucherPrint {
    
    private VersionType versionField;
    
    private VoucherPrintMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public VoucherPrintMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LVoucherPrintVer1.xsd")]
public partial class VoucherPrintMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PrintNotificationReply", typeof(VoucherPrintPrintNotificationReply))]
    [System.Xml.Serialization.XmlElementAttribute("PrintNotificationSend", typeof(VoucherPrintPrintNotificationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LVoucherPrintVer1.xsd")]
public partial class VoucherPrintPrintNotificationReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LVoucherPrintVer1.xsd")]
public partial class VoucherPrintPrintNotificationSend {
    
    private uint transactionIDField;
    
    private VoucherPrintEvent notificationField;
    
    private AmountType valueField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
    
    /// <remarks/>
    public VoucherPrintEvent Notification {
        get {
            return this.notificationField;
        }
        set {
            this.notificationField = value;
        }
    }
    
    /// <remarks/>
    public AmountType Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LVoucherPrintVer1.xsd")]
public enum VoucherPrintEvent {
    
    /// <remarks/>
    VoucherPrintingInitiated,
    
    /// <remarks/>
    VoucherPrintingComplete,
    
    /// <remarks/>
    VoucherAwaitingRemoval,
    
    /// <remarks/>
    VoucherRemoved,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LWapSignControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2LWapSignControlVer1.xsd", IsNullable=false)]
public partial class WapSignControl {
    
    private VersionType versionField;
    
    private WapSignControlMessageType messageField;
    
    /// <remarks/>
    public VersionType Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public WapSignControlMessageType Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LWapSignControlVer1.xsd")]
public partial class WapSignControlMessageType {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetProgressiveLevelValuesReply", typeof(WapSignControlGetProgressiveLevelValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetProgressiveLevelValuesSend", typeof(WapSignControlGetProgressiveLevelValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("TransportWAPHostDataToBinReply", typeof(WapSignControlTransportWAPHostDataToBinReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransportWAPHostDataToBinSend", typeof(WapSignControlTransportWAPHostDataToBinSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LWapSignControlVer1.xsd")]
public partial class WapSignControlGetProgressiveLevelValuesReply {
    
    private List<LevelProgressiveValue> progressiveLevelValuesField = new List<LevelProgressiveValue>();
    
    private bool isOnlineWithHostField;
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLevelValues")]
    public List<LevelProgressiveValue> ProgressiveLevelValues {
        get {
            return this.progressiveLevelValuesField;
        }
        set {
            this.progressiveLevelValuesField = value;
        }
    }
    
    /// <remarks/>
    public bool IsOnlineWithHost {
        get {
            return this.isOnlineWithHostField;
        }
        set {
            this.isOnlineWithHostField = value;
        }
    }
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2LWapSignControlVer1.xsd")]
public partial class LevelProgressiveValue {
    
    private uint levelField;
    
    private AmountType amountField;
    
    private string prizeStringField;
    
    /// <remarks/>
    public uint Level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
    
    /// <remarks/>
    public AmountType Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    public string PrizeString {
        get {
            return this.prizeStringField;
        }
        set {
            this.prizeStringField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LWapSignControlVer1.xsd")]
public partial class WapSignControlGetProgressiveLevelValuesSend {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LWapSignControlVer1.xsd")]
public partial class WapSignControlTransportWAPHostDataToBinReply {
    
    private ReplyCodeType replyField;
    
    /// <remarks/>
    public ReplyCodeType Reply {
        get {
            return this.replyField;
        }
        set {
            this.replyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2L.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2LWapSignControlVer1.xsd")]
public partial class WapSignControlTransportWAPHostDataToBinSend {
    
    private byte[] binaryDataField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] BinaryData {
        get {
            return this.binaryDataField;
        }
        set {
            this.binaryDataField = value;
        }
    }
}
}