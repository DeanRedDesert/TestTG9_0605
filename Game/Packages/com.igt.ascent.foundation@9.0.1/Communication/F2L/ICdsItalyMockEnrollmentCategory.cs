//-----------------------------------------------------------------------
// <copyright file = "ICdsItalyMockEnrollmentCategory.cs" company = "IGT">
//     Copyright (c) 2015 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2L
{
    using System;
    using System.Collections.Generic;
    using Schemas;
    using Schemas.Internal;

    /// <summary>
    /// CdsItalyMockEnrollment category of messages.  Category: 13  Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ICdsItalyMockEnrollmentCategory
    {
        /// <summary>
        /// Message from the bin to foundation that provides the mocked server response for the next game cycle.
        /// </summary>
        /// <param name="enrollementSuccess">
        /// True indicates enrollment will succeed in the next game cycle.
        /// </param>
        /// <param name="enrollmentResponseData">
        /// Binary data that will be saved and returned when the enrollment response is queried during the next game cycle.
        /// </param>
        /// <param name="jackpotHit">
        /// True if a jackpot should be hit during the next game cycle.
        /// </param>
        /// <param name="jackpotLevel">
        /// Jackpot level index.  For Italy the "Mega" level is 0, "Super" level is 1, and the "Easy" level is 2.  A value of negative one indicates the level is invalid. Ignored if JackpotHit is false.
        /// </param>
        /// <param name="bonusAmount">
        /// Value of the jackpot win. Ignored if JackpotHit is false.
        /// </param>
        void SetMockEnrollmentData(Boolean enrollementSuccess, Byte[] enrollmentResponseData, Boolean jackpotHit, Int32 jackpotLevel, AmountType bonusAmount);

        /// <summary>
        /// Message from the bin to foundation to set up a one or more host responses to an outcome requests.
        /// </summary>
        /// <param name="cdsItalyMockOutcomeList">
        /// A list of CDS outcomes. Each game cycle will start with the first outcome in the list and will rollover if there are more outcome requests than are available. / Contains the data needed for the foundation to mock a host response to a cds outcome request by the bin.
        /// </param>
        void SetMockOutcomeData(IEnumerable<CdsItalyMockOutcomeData> cdsItalyMockOutcomeList);

    }

}

