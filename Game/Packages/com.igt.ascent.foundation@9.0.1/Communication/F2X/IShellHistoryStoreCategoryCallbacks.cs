//-----------------------------------------------------------------------
// <copyright file = "IShellHistoryStoreCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.ShellHistoryStore;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="ShellHistoryStore"/> category.
    /// F2X Shell History Store category of messages, which provides the APIs for the concurrent game shell to access
    /// its critical data related to game cycle history. This category is only valid in Play mode.
    /// Category: 1027; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IShellHistoryStoreCategoryCallbacks
    {
        /// <summary>
        /// Before replying to the EndGameCycle, the Foundation will send this message to the Shell, and this message
        /// will be in the same transaction as the coplayer's EndGameCycle.
        /// </summary>
        /// <param name="coplayer">
        /// The current coplayer to log the end game cycle.
        /// </param>
        /// <param name="numberOfSteps">
        /// Number of play steps that took place during the game cycle.
        /// </param>
        /// <param name="gamingMeters">
        /// Current player bank meters at the end of game cycle on this coplayer.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessLogEndGameCycle(int coplayer, uint numberOfSteps, GamingMeters gamingMeters);

        /// <summary>
        /// Message notifying the shell that it can write to the ShellHistoryStore.
        /// </summary>
        /// <param name="writePermitted">
        /// True if the shell can write to ShellHistoryStore critical data.
        /// </param>
        /// <param name="coplayer">
        /// The coplayer for which the shell history write permission has changed.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessShellHistoryWritePermitted(bool writePermitted, int coplayer);

    }

}

