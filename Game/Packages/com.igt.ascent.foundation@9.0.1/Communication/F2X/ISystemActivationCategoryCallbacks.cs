//-----------------------------------------------------------------------
// <copyright file = "ISystemActivationCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.SystemActivation;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="SystemActivation"/> category.
    /// (F2E Only) System Activation category of messages.  Category: 3012  Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ISystemActivationCategoryCallbacks
    {
        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to activate a new System-Extension context.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessActivateSystemContext();

        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to inactivate the current System-Extension context.
        /// After this message, the bin must be ready to receive a NewSystemContext message or receive a
        /// GetSystemApiVersions message for re-negotiation.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessInactivateSystemContext();

        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to change to a new System-Extension context.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessNewSystemContext();

    }

}

