//-----------------------------------------------------------------------
// <copyright file = "IExtensionAppSelectionCategory.cs" company = "IGT">
//     Copyright (c) 2021 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.AppTypes;
    using Schemas.Internal.ExtensionAppSelection;

    /// <summary>
    /// The category of messages to allow an AppExtension to query available central apps, select different central apps
    /// for play, and to respond to requests to show (in-app) chooser.
    /// Category: 3033; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IExtensionAppSelectionCategory
    {
        /// <summary>
        /// Message from the client requesting a central app be selected. If the request is accepted, either a
        /// CentralAppSelectionComplete or CentralAppSelectionCanceled will be sent.
        /// </summary>
        /// <param name="app">
        /// Indicates which App should be selected for the central app. Omit to request that the central app be
        /// deselected.
        /// </param>
        /// <param name="skipLoadingScreen">
        /// Indicates if the app wishes for the CTC to avoid displaying the loading screen.
        /// </param>
        /// <returns>
        /// The content of the CentralAppSelectionRequestReply message.
        /// </returns>
        bool CentralAppSelectionRequest(AppSelector app, bool skipLoadingScreen);

        /// <summary>
        /// Get the state of the selected app.
        /// </summary>
        /// <returns>
        /// The content of the GetAppSelectionStateReply message.
        /// </returns>
        AppSelectionState GetAppSelectionState();

        /// <summary>
        /// Get a list of available central apps and their info from the foundation.
        /// </summary>
        /// <returns>
        /// The content of the GetAvailableCentralAppsReply message.
        /// </returns>
        AppInformationList GetAvailableCentralApps();

        /// <summary>
        /// Message requesting the configuration data for this category. Can only be called during context activation.
        /// </summary>
        /// <returns>
        /// The content of the GetConfigDataReply message.
        /// </returns>
        bool GetConfigData();

        /// <summary>
        /// Message from the client requesting the currently selected central app.
        /// </summary>
        /// <returns>
        /// The content of the GetSelectedCentralAppReply message.
        /// </returns>
        AppSelector GetSelectedCentralApp();

        /// <summary>
        /// Set the requested events the app wishes to receive. An empty list indicates that the client does not wish to
        /// receive any events.
        /// </summary>
        /// <param name="appSelectionEventLists">
        /// List of events the client wishes to receive.
        /// </param>
        void SetAppSelectionEventRegistration(AppSelectionEventList appSelectionEventLists);

    }

}

