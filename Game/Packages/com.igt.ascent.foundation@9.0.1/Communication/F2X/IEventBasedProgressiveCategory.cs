//-----------------------------------------------------------------------
// <copyright file = "IEventBasedProgressiveCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.EventBasedProgressive;

    /// <summary>
    /// This category provides messages for game clients to contribute to progressive pools based on qualifying events
    /// defined by the game client.    The contribution value/amount is specified by the game-client when the event
    /// occurs and the value is accumulated by controller-level linked to the appropriate game-level. Progressive hits
    /// are paid/metered as paytable win (AKA "coin-out") when the game declares a progressive hit (i.e. they are not
    /// metered as progressive wins for regulatory reasons).    Note: When a level is configured to be "event-based",
    /// only contributions specifically declared by the game-client are accumulated by the controller; contributions
    /// are not accumulated based on a percentage of the bets/wagers.
    /// Category: 141; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IEventBasedProgressiveCategory
    {
        /// <summary>
        /// A request to add the qualified contribution amount to the given progressive level.
        /// </summary>
        /// <param name="eventBasedContributionData">
        /// The event based qualified contribution data.
        /// </param>
        void AddQualifiedContribution(EventBasedContributionData eventBasedContributionData);

    }

}

