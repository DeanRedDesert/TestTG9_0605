//-----------------------------------------------------------------------
// <copyright file = "ICdsBingoConfigCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using System.Collections.Generic;
    using Schemas.Internal.CdsBingoConfig;
    using Schemas.Internal.Types;

    /// <summary>
    /// CdsBingoConfig category of messages.  Provides access to configuration related values and services related to
    /// Bingo protocol operation.
    /// Category: 3010; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ICdsBingoConfigCategory
    {
        /// <summary>
        /// A request for the Bin to query if it is enabled to set the EGM date/time.
        /// </summary>
        /// <returns>
        /// True if Bingo is the protocol that is enabled to control the EGM clock and set the EGM date/time; False
        /// otherwise.
        /// </returns>
        bool CanSetDateTime();

        /// <summary>
        /// Requests the current status of configuration mode on the EGM.
        /// </summary>
        /// <returns>
        /// Boolean indicating the Foundation is in configuration mode when true.
        /// </returns>
        bool GetConfigurationModeStatus();

        /// <summary>
        /// A request for the UDP port number that has been opened by the foundation for Bingo.
        /// </summary>
        /// <returns>
        /// The port number opened in the firewall by the foundation that may be used for UDP binding.
        /// </returns>
        ushort GetDiscoveryPort();

        /// <summary>
        /// A request for the EGM serial number.
        /// </summary>
        /// <returns>
        /// The content of the GetEgmSerialNumberReply message.
        /// </returns>
        string GetEgmSerialNumber();

        /// <summary>
        /// Request the currently configured Floor Location from the Foundation.
        /// </summary>
        /// <returns>
        /// The content of the GetFloorLocationReply message.
        /// </returns>
        string GetFloorLocation();

        /// <summary>
        /// A request for the Rom info of all packages and devices installed on the EGM.
        /// </summary>
        /// <returns>
        /// List of all Rom Information on the machine. Includes devices, packages and BIOS.
        /// </returns>
        IEnumerable<RomInformation> GetInstalledRomInformation();

        /// <summary>
        /// Request the Cabinet Model as reported from the Machine Identification menu page from the Foundation.  This
        /// value should only be used for reporting purposes, as it may specify a range of cabinet hardware types, or
        /// on legacy cabinets be misconfigured to bad values.
        /// </summary>
        /// <returns>
        /// The content of the GetMachineIdentificationCabinetModelReply message.
        /// </returns>
        string GetMachineIdentificationCabinetModel();

        /// <summary>
        /// Request the Taxable Event Threshold amount from the Foundation.
        /// </summary>
        /// <returns>
        /// The content of the GetTaxableEventThresholdReply message.
        /// </returns>
        Amount GetTaxableEventThreshold();

        /// <summary>
        /// A request for the bingo information for the given theme(s).
        /// </summary>
        /// <param name="theme">
        /// A theme whose bingo information is being requested.  Only enabled themes are supported.  An empty list
        /// indicates a request for all enabled themes.
        /// </param>
        /// <returns>
        /// There will be an element for each requested and enabled theme.  If a requested theme is not enabled, it will
        /// be omitted from the list.
        /// </returns>
        IEnumerable<ThemeBingoInformation> GetThemeBingoInformation(IEnumerable<ThemeIdentifier> theme);

        /// <summary>
        /// A request for the Bin to set the EGM date/time through the Foundation.
        /// </summary>
        /// <param name="dateTimeToSet">
        /// The date/time to set to the EGM clock, in XML date/time format.  Fractional seconds are optional and may be
        /// present down to the millisecond. Example time: 2006-06-17T11:26:18.123Z.
        /// </param>
        /// <returns>
        /// The command result of SetDateTime request.
        /// </returns>
        SetDateTimeCommandResultType SetDateTime(DateTime dateTimeToSet);

    }

}

