//-----------------------------------------------------------------------
// <copyright file = "IShellApiControlCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.ShellApiControl;
    using Schemas.Internal.Types;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="ShellApiControl"/> category.
    /// F2X Shell API Control category of messages.
    /// Category: 1009; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IShellApiControlCategoryCallbacks
    {
        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to request that the recipient return a list of all
        /// API categories and their versions in the order of preference, specific to the Shell context.
        /// </summary>
        /// <param name="shell">
        /// Identifies the Shell that API negotiation will support.
        /// </param>
        /// <param name="tagDataFile">
        /// Tag data file defined by the shell registry and opaque to Foundation. / Custom shell related data defined by
        /// the shell registry and opaque to the Foundation.
        /// </param>
        /// <param name="linkedExtensions">
        /// List of extensions linked to this shell. / Imported/linked extension.
        /// </param>
        /// <param name="callbackResult">
        /// [Out] The content of the GetShellApiVersionsReply message.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessGetShellApiVersions(ShellIdentifier shell, GetShellApiVersionsSendTagDataFile tagDataFile, GetShellApiVersionsSendLinkedExtensions linkedExtensions, out GetShellApiVersionsReplyContentCategoryVersions callbackResult);

        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to set the API categories and versions the bin is
        /// to support for the Shell context.
        /// </summary>
        /// <param name="categoryVersions">
        /// The list of categories and their versions.
        /// </param>
        /// <param name="callbackResult">
        /// [Out] The content of the SetShellApiVersionsReply message.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessSetShellApiVersions(SetShellApiVersionsSendCategoryVersions categoryVersions, out bool callbackResult);

    }

}

