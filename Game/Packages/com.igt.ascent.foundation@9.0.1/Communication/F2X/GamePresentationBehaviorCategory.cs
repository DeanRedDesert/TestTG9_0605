//-----------------------------------------------------------------------
// <copyright file = "GamePresentationBehaviorCategory.cs" company = "IGT">
//     Copyright (c) 2021 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using System.Collections.Generic;
    using F2XTransport;
    using Schemas.Internal.GamePresentationBehavior;
    using Version = Schemas.Internal.Types.Version;

    /// <summary>
    /// Implementation of the F2X <see cref="GamePresentationBehavior"/> category.
    /// GamePresentationBehavior category of messages, containing config data related to game presentation.
    /// Category: 1033; Major Version: 1
    /// </summary>
    public class GamePresentationBehaviorCategory : F2XTransactionalCategoryBase<GamePresentationBehavior>, IGamePresentationBehaviorCategory, IMultiVersionSupport
    {
        #region Fields

        /// <summary>
        /// All versions supported by this category class.
        /// </summary>
        private readonly List<Version> supportedVersions = new List<Version>
        {
            new Version(1, 0),
            new Version(1, 1)
        };

        /// <summary>
        /// The version to use for communications by this category.
        /// Initialized to 0.0. Will be set by <see cref="SetVersion"/>.
        /// </summary>
        private Version effectiveVersion = new Version(0, 0);

        #endregion

        #region Constructor

        /// <summary>
        /// Instantiates a new <see cref="GamePresentationBehaviorCategory"/>.
        /// </summary>
        /// <param name="transport">
        /// Transport that this category will be installed in.
        /// </param>
        public GamePresentationBehaviorCategory(IF2XTransport transport)
            : base(transport)
        {
        }

        #endregion

        #region IApiCategory Members

        /// <inheritdoc/>
        public override MessageCategory Category => MessageCategory.GamePresentationBehavior;

        /// <inheritdoc/>
        public override uint MajorVersion => effectiveVersion.MajorVersion;

        /// <inheritdoc/>
        public override uint MinorVersion => effectiveVersion.MinorVersion;

        #endregion

        #region IMultiVersionSupport Members

        /// <inheritdoc/>
        public void SetVersion(uint major, uint minor)
        {
            var version = new Version(major, minor);

            if(!supportedVersions.Contains(version))
            {
                throw new ArgumentException(
                    $"{version} is not supported by GamePresentationBehaviorCategory class.");
            }

            effectiveVersion = version;
        }

        #endregion

        #region IGamePresentationBehaviorCategory Members

        /// <inheritdoc/>
        public ConfigData GetConfigData()
        {
            Transport.MustHaveHeavyweightTransaction();
            var request = CreateTransactionalRequest<GetConfigDataSend>();

            var reply = SendMessageAndGetReply<GetConfigDataReply>(Channel.Foundation, request);
            CheckReply(reply.Exception);
            return reply.Content.ConfigData;
        }

        #endregion

    }

}

