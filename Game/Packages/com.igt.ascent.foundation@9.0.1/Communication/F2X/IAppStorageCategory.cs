//-----------------------------------------------------------------------
// <copyright file = "IAppStorageCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.AppStorage;

    /// <summary>
    /// App Storage category.  Category: 137 Version: 1
    /// Category: 137; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IAppStorageCategory
    {
        /// <summary>
        /// Message from the Bin to the Foundation to request any internal storage used to be deleted and released.
        /// </summary>
        /// <param name="identifier">
        /// Identifier of the Client which requested an allocation.
        /// </param>
        void ReleaseInternalStorage(Identifier identifier);

        /// <summary>
        /// Message from the Bin to the Foundation to request a file path on the internal drive where arbitrary file
        /// operations may take place.  Subsequent requests, without an intervening request to ReleaseInternalStorage,
        /// will return the same path.
        /// </summary>
        /// <param name="identifier">
        /// Identifier of the Client requesting an allocation.
        /// </param>
        /// <param name="requestedSpace">
        /// Size in bytes the extension intends to use on the internal drive.
        /// </param>
        /// <returns>
        /// The content of the RequestInternalStorageReply message.
        /// </returns>
        RequestInternalStorageReplyContent RequestInternalStorage(Identifier identifier, uint requestedSpace);

    }

}

