//-----------------------------------------------------------------------
// <copyright file = "ICdsBingoMeterReaderCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System.Collections.Generic;
    using Schemas.Internal.CdsBingoMeterReader;

    /// <summary>
    /// CdsBingoMeterReader category of messages.  Provides read-only access to a subset of foundation meters for the
    /// purposes of Bingo-specific reporting and gameplay.
    /// Category: 3013; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ICdsBingoMeterReaderCategory
    {
        /// <summary>
        /// Retrieve the maximum possible values for a set of bingo meters.
        /// </summary>
        /// <param name="meter">
        /// A list of bingo meter ids for which to get the maximum value.  If no meter ids are specified, all bingo
        /// meters will have their maximum values returned.
        /// </param>
        /// <returns>
        /// The content of the GetBingoMetersMaxValueReply message.
        /// </returns>
        IEnumerable<BingoMeterMaxValueData> GetBingoMetersMaxValue(IEnumerable<BingoMeterId> meter);

        /// <summary>
        /// Retrieve bingo meter data.
        /// </summary>
        /// <param name="meter">
        /// A list of bingo meter ids for which to read the values. If no meter ids are specified, all bingo meters will
        /// be returned.
        /// </param>
        /// <returns>
        /// The content of the ReadBingoMetersReply message.
        /// </returns>
        IEnumerable<BingoMeterData> ReadBingoMeters(IEnumerable<BingoMeterId> meter);

    }

}

