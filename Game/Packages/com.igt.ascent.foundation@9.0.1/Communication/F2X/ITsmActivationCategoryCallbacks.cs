//-----------------------------------------------------------------------
// <copyright file = "ITsmActivationCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.TsmActivation;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="TsmActivation"/> category.
    /// (F2E Only) TSM Activation category of messages.  Category: 3004  Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ITsmActivationCategoryCallbacks
    {
        /// <summary>
        /// Message telling the Bin to activate a new TSM-Extension context. This will only be sent after a new tsm
        /// context message has been sent.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessActivateTsmContext();

        /// <summary>
        /// Message telling the Bin to inactivate the current TSM-Extension context.  After this message, the bin must
        /// be ready to receive a NewTsmContext message or receive a GetTsmApiVersions message for re-negotiation.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessInactivateTsmContext();

        /// <summary>
        /// Message telling the Bin to change to a new TSM-Extension context.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessNewTsmContext();

    }

}

