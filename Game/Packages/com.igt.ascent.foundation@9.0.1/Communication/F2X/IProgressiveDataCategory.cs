//-----------------------------------------------------------------------
// <copyright file = "IProgressiveDataCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using System.Collections.Generic;
    using Schemas.Internal.ProgressiveData;
    using Schemas.Internal.Types;

    /// <summary>
    /// Category of messages.  Category: 106   Version: 1. This category is used to request progressive information.
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IProgressiveDataCategory
    {
        /// <summary>
        /// Message from the Bin to the Foundation on the GI channel.  A request for the progressive values of the
        /// linked game levels correlating to the enabled denominations of the given payvar.
        /// </summary>
        /// <param name="payvar">
        /// Identifies the payvar to use for collecting progressive game level values.
        /// </param>
        /// <returns>
        /// There will be an element for each enabled denomination of the requested payvar.  If no elements are present,
        /// no denominations are enabled for the payvar.
        /// </returns>
        IEnumerable<EnabledProgressiveValues> GetEnabledPayvarBasedProgressiveValues(PayvarIdentifier payvar);

        /// <summary>
        /// Message from the Bin to the Foundation on the GI channel. A request for the progressive values of the linked
        /// game levels correlating to the enabled denominations of the given theme.
        /// </summary>
        /// <param name="theme">
        /// Identifies the theme to use for collecting progressive game level values.
        /// </param>
        /// <returns>
        /// There will be an element for each enabled denomination of the requested theme.  If no elements are present,
        /// no denominations are enabled for the theme.
        /// </returns>
        IEnumerable<EnabledProgressiveValues> GetEnabledThemeBasedProgressiveValues(ThemeIdentifier theme);

        /// <summary>
        /// Message from the Bin to the Foundation on the GI channel.  A request for the progressive values of the
        /// linked game levels correlating to the given payvar and denominations.
        /// </summary>
        /// <param name="payvar">
        /// Identifies the payvar to use for collecting progressive game level values.
        /// </param>
        /// <param name="denomination">
        /// Denominations for which the progressive game level values are requested.
        /// </param>
        /// <returns>
        /// There will be an element for each denomination from the request.
        /// </returns>
        IEnumerable<PayvarBasedProgressiveValues> GetPayvarBasedProgressiveValues(PayvarIdentifier payvar, IEnumerable<uint> denomination);

        /// <summary>
        /// Message from the Bin to the Foundation on the GI channel.  A request for the progressive values of the
        /// linked game levels correlating to the given theme and denominations.
        /// </summary>
        /// <param name="theme">
        /// Identifies the theme to use for collecting progressive game level values.
        /// </param>
        /// <param name="denomination">
        /// Denominations for which the progressive game level values are requested.
        /// </param>
        /// <returns>
        /// There will be an element for each denomination from the request.
        /// </returns>
        IEnumerable<ThemeBasedProgressiveValues> GetThemeBasedProgressiveValues(ThemeIdentifier theme, IEnumerable<uint> denomination);

        /// <summary>
        /// Message from the Bin to the Foundation on the FI channel.  A request for the progressive settings of the
        /// linked game levels correlating to the enabled denominations of the given payvar.
        /// </summary>
        /// <param name="payvar">
        /// Identifies the payvar to use for collecting the progressive game level settings.
        /// </param>
        /// <returns>
        /// There will be an element for each enabled denomination of the requested payvar.  If no elements are present,
        /// no denominations are enabled for the payvar.
        /// </returns>
        IEnumerable<EnabledProgressiveSettings> QueryEnabledPayvarBasedProgressiveSettings(PayvarIdentifier payvar);

        /// <summary>
        /// Message from the Bin to the Foundation on the FI channel.  A request for the progressive settings of the
        /// linked game levels correlating to the enabled denominations of the given theme.
        /// </summary>
        /// <param name="theme">
        /// Identifies the theme to use for collecting progressive game level settings.
        /// </param>
        /// <returns>
        /// There will be an element for each enabled denomination of the requested theme.  If no elements are present,
        /// no denominations are enabled for the theme.
        /// </returns>
        IEnumerable<EnabledProgressiveSettings> QueryEnabledThemeBasedProgressiveSettings(ThemeIdentifier theme);

        /// <summary>
        /// Message from the Bin to the Foundation on the FI channel.  A request for the progressive settings of the
        /// linked game levels correlating to the given payvar and denominations.
        /// </summary>
        /// <param name="payvar">
        /// Identifies the payvar to use for collecting the progressive game level settings.
        /// </param>
        /// <param name="denomination">
        /// Denominations for which the progressive game level settings are requested.
        /// </param>
        /// <returns>
        /// There will be an element for each denomination from the request.
        /// </returns>
        IEnumerable<PayvarBasedProgressiveSettings> QueryPayvarBasedProgressiveSettings(PayvarIdentifier payvar, IEnumerable<uint> denomination);

        /// <summary>
        /// Message from the Bin to the Foundation on the FI channel.  A request for the progressive settings of the
        /// linked game levels correlating to the given theme and denominations.
        /// </summary>
        /// <param name="theme">
        /// Identifies the theme to use for collecting the progressive game level settings.
        /// </param>
        /// <param name="denomination">
        /// Denominations for which the progressive game level settings are requested.
        /// </param>
        /// <returns>
        /// There will be an element for each denomination from the request.
        /// </returns>
        IEnumerable<ThemeBasedProgressiveSettings> QueryThemeBasedProgressiveSettings(ThemeIdentifier theme, IEnumerable<uint> denomination);

    }

}

