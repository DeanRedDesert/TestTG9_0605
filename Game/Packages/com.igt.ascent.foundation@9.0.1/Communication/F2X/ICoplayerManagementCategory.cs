//-----------------------------------------------------------------------
// <copyright file = "ICoplayerManagementCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using System.Collections.Generic;
    using Schemas.Internal.CoplayerManagement;

    /// <summary>
    /// F2X Coplayer Management category of messages.
    /// Category: 1012; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ICoplayerManagementCategory
    {
        /// <summary>
        /// Message that the shell requests for binding a session with a coplayer.
        /// </summary>
        /// <param name="coplayer">
        /// The coplayer to bind with the session.
        /// </param>
        /// <param name="session">
        /// The session to bind with the coplayer.
        /// </param>
        void BindCoplayerSession(int coplayer, int session);

        /// <summary>
        /// Message that the shell requests for creating coplayers as necessary.
        /// </summary>
        /// <param name="numberOfCoplayers">
        /// The number of coplayers that game shell requests to create.
        /// </param>
        /// <returns>
        /// The content of the CreateCoplayersReply message.
        /// </returns>
        IEnumerable<int> CreateCoplayers(int numberOfCoplayers);

        /// <summary>
        /// Message to retrieve the maximum number of coplayer instances that may exist in support of this shell.
        /// </summary>
        /// <returns>
        /// The content of the GetConfigDataMaxNumOfCoplayersReply message.
        /// </returns>
        int GetConfigDataMaxNumOfCoplayers();

        /// <summary>
        /// Message that the shell requests the information on the existing coplayer instances for this shell.
        /// </summary>
        /// <returns>
        /// The content of the GetCoplayersReply message.
        /// </returns>
        IEnumerable<CoplayerInstance> GetCoplayers();

    }

}

