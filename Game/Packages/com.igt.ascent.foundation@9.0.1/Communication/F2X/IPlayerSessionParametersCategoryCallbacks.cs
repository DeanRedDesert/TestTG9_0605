//-----------------------------------------------------------------------
// <copyright file = "IPlayerSessionParametersCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System.Collections.Generic;
    using Schemas.Internal.PlayerSessionParameters;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="PlayerSessionParameters"/> category.
    /// PlayerSessionParameters category of messages.  Category: 124  Version: 1. Provides information and events to
    /// handle and syncronize the reseting of specific Player Session Parameters.
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IPlayerSessionParametersCategoryCallbacks
    {
        /// <summary>
        /// Message sent from the Foundation to the Bin on the FI channel. Notification that the current reset
        /// parameters for the session have changed. (Notifications will only be sent if Resetting Player Session
        /// Parameters is enabled).
        /// </summary>
        /// <param name="pendingParameters">
        /// List of parameters that are pending reset, and should be reset at the next opportunity.
        /// </param>
        /// <param name="resetParameters">
        /// List of parameters that have been reset.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessCurrentResetParametersChanged(IEnumerable<SessionParameterType> pendingParameters, IEnumerable<SessionParameterType> resetParameters);

    }

}

