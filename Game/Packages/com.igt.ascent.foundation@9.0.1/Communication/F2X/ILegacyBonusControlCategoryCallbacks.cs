//-----------------------------------------------------------------------
// <copyright file = "ILegacyBonusControlCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.LegacyBonusControl;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="LegacyBonusControl"/> category.
    /// LegacyBonusControl category of messages.  Category: 1004  Version: 1. Provides control to hold off bookkeeping
    /// of legacy bonuses controlled by the game.
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ILegacyBonusControlCategoryCallbacks
    {
        /// <summary>
        /// Message sent from the Foundation to the Bin on the FI channel. Notification that a legacy bonus message has
        /// arrived and is ready to pay out.
        /// </summary>
        /// <param name="bonus">
        /// The legacy bonus.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessLegacyBonusArrived(LegacyBonusData bonus);

        /// <summary>
        /// Message sent from the Foundation to the Bin on the FI channel. Notification that the link status changed.
        /// </summary>
        /// <param name="hostStatusData">
        /// Current link status data controlling the legacy bonusing.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessLegacyBonusHostLinkStatusChanged(LegacyBonusHostStatusData hostStatusData);

    }

}

