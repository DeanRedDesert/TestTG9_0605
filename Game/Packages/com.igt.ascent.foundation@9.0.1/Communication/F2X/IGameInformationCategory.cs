//-----------------------------------------------------------------------
// <copyright file = "IGameInformationCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System.Collections.Generic;
    using Schemas.Internal.GameInformation;
    using Schemas.Internal.Types;

    /// <summary>
    /// Game information category of messages.
    /// Category: 108; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IGameInformationCategory
    {
        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the resolution of the bet configuration
        /// (ex "PerTheme", "PerPayvar", or "PerPayvarDenomination").
        /// </summary>
        /// <param name="theme">
        /// Theme whose resolution is being requested.  If any invalid (unknown to the foundation or malformed) theme is
        /// sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each theme that was in the request.
        /// </returns>
        IEnumerable<ThemeBetResolution> GetBetResolution(IEnumerable<ThemeIdentifier> theme);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the button panel min bet.  Results are
        /// only returned for themes with a "PerPayvarDenomination" bet resolution.
        /// </summary>
        /// <param name="payvarDenominationSelection">
        /// Contains the payvar and denomination whose button panel min bet is being requested.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar denomination that was in the request.
        /// </returns>
        IEnumerable<DenominationButtonPanelMinBet> GetDenominationButtonPanelMinBet(IEnumerable<PayvarDenomination> payvarDenominationSelection);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the max bet credit amount.  Results are
        /// only returned for themes with a "PerPayvarDenomination" bet resolution.
        /// </summary>
        /// <param name="payvarDenominationSelection">
        /// Contains the payvar and denomination for the max bet credit amount being requested.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar denomination that was in the request.
        /// </returns>
        IEnumerable<DenominationMaxBetCreditData> GetDenominationMaxBetCredits(IEnumerable<PayvarDenomination> payvarDenominationSelection);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the button panel min bet.  Results are
        /// only returned for themes with a "PerPayvar" bet resolution.
        /// </summary>
        /// <param name="payvar">
        /// The payvar whose button panel min bet is being requested.  If any invalid (unknown to the foundation or
        /// malformed) payvar is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar that was in the request.
        /// </returns>
        IEnumerable<PayvarButtonPanelMinBet> GetPayvarButtonPanelMinBet(IEnumerable<PayvarIdentifier> payvar);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the enabled denominations of the given
        /// payvar(s).
        /// </summary>
        /// <param name="payvar">
        /// The payvar whose enabled denominations are being requested.  If any invalid (unknown to the foundation or
        /// malformed) payvar is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar that was in the request.
        /// </returns>
        IEnumerable<PayvarEnabledDenominations> GetPayvarEnabledDenominations(IEnumerable<PayvarIdentifier> payvar);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the payvar information (Tag, TagFile,
        /// Enabled status, etc).
        /// </summary>
        /// <param name="payvar">
        /// The payvar whose enabled denominations are being requested.  If any invalid (unknown to the foundation or
        /// malformed) payvar is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar that was in the request.
        /// </returns>
        IEnumerable<PayvarInformation> GetPayvarInformation(IEnumerable<PayvarIdentifier> payvar);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the max bet credit amount.  Results are
        /// only returned for themes with a "PerPayvar" bet resolution.
        /// </summary>
        /// <param name="payvar">
        /// The payvar whose max bet credit amount is being requested.  If any invalid (unknown to the foundation or
        /// malformed) payvar is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar that was in the request.
        /// </returns>
        IEnumerable<PayvarMaxBetCreditData> GetPayvarMaxBetCredits(IEnumerable<PayvarIdentifier> payvar);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the payback percentage data
        /// corresponding to the given payvar(s).
        /// </summary>
        /// <param name="payvar">
        /// A payvar whose payback percentage data is being requested.  If any invalid (unknown to the foundation or
        /// malformed) payvar is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar that was in the request.
        /// </returns>
        IEnumerable<PayvarPaybackPercentageData> GetPayvarPaybackPercentageData(IEnumerable<PayvarIdentifier> payvar);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the payvars corresponding to the given
        /// theme(s).
        /// </summary>
        /// <param name="theme">
        /// A theme whose payvars are being requested.  If any invalid (unknown to the foundation or malformed) theme is
        /// sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each theme that was in the request.
        /// </returns>
        IEnumerable<ThemePayvarList> GetPayvarsForTheme(IEnumerable<ThemeIdentifier> theme);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the supported denominations of the given
        /// payvar(s).
        /// </summary>
        /// <param name="payvar">
        /// The payvar whose supported denominations are being requested.  If any invalid (unknown to the foundation or
        /// malformed) payvar is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each payvar that was in the request.
        /// </returns>
        IEnumerable<PayvarSupportedDenominations> GetPayvarSupportedDenominations(IEnumerable<PayvarIdentifier> payvar);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the button panel min bet.  Results are
        /// only returned for themes with a "PerTheme" bet resolution.
        /// </summary>
        /// <param name="theme">
        /// Theme whose button panel min bet is being requested.  If any invalid (unknown to the foundation or
        /// malformed) theme is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each theme that was in the request.
        /// </returns>
        IEnumerable<ThemeButtonPanelMinBet> GetThemeButtonPanelMinBet(IEnumerable<ThemeIdentifier> theme);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the enabled denominations of the given
        /// theme(s).
        /// </summary>
        /// <param name="theme">
        /// The theme whose enabled denominations are being requested.  If any invalid (unknown to the foundation or
        /// malformed) theme is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each theme that was in the request.
        /// </returns>
        IEnumerable<ThemeEnabledDenominations> GetThemeEnabledDenominations(IEnumerable<ThemeIdentifier> theme);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the theme information (Tag, TagFile,
        /// Enabled status, etc).
        /// </summary>
        /// <param name="theme">
        /// A theme whose information is being requested.  If any invalid (unknown to the foundation or malformed) theme
        /// is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each theme that was in the request.
        /// </returns>
        IEnumerable<ThemeInformation> GetThemeInformation(IEnumerable<ThemeIdentifier> theme);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the max bet credit amount.  Results are
        /// only returned for themes with a "PerTheme" bet resolution.
        /// </summary>
        /// <param name="theme">
        /// Theme whose max bet credit amount is being requested.  If any invalid (unknown to the foundation or
        /// malformed) theme is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each theme that was in the request.
        /// </returns>
        IEnumerable<ThemeMaxBetCreditData> GetThemeMaxBetCredits(IEnumerable<ThemeIdentifier> theme);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  A request for the supported denominations of the given
        /// theme(s).
        /// </summary>
        /// <param name="theme">
        /// The theme whose denominations are being requested.  If any invalid (unknown to the foundation or malformed)
        /// theme is sent in the request, the reply will contain an exception and no other results.
        /// </param>
        /// <returns>
        /// There will be an element for each theme that was in the request.
        /// </returns>
        IEnumerable<ThemeSupportedDenominations> GetThemeSupportedDenominations(IEnumerable<ThemeIdentifier> theme);

    }

}

