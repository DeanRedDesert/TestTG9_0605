//-----------------------------------------------------------------------
// <copyright file = "ITournamentMetersCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.TournamentMeters;
    using Schemas.Internal.Types;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="TournamentMeters"/> category.
    /// Tournament Meters category of messages.  Category: 113  Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ITournamentMetersCategoryCallbacks
    {
        /// <summary>
        /// Message from the Foundation to the Bin to notify the Bin the player's credit balance (wagerable or banked
        /// meter) has been changed due to a change in the committed bet.
        /// </summary>
        /// <param name="amountCommitted">
        /// The amount currently committed to bet.
        /// </param>
        /// <param name="playerMeters">
        /// 
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessTournamentCommittedCreditsChanged(Amount amountCommitted, TournamentPlayerMeters playerMeters);

        /// <summary>
        /// Message from the Foundation to notify the Bin a bet has been placed that results in a reduction of the
        /// player's credit balance (wagerable or bank meter), such as mid-game betting.
        /// </summary>
        /// <param name="amountBet">
        /// Amount bet
        /// </param>
        /// <param name="playerMeters">
        /// 
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessTournamentCreditsBet(Amount amountBet, TournamentPlayerMeters playerMeters);

        /// <summary>
        /// Message from the Foundation to notify the Bin that Foundation forcibly set the player meters to new values.
        /// </summary>
        /// <param name="playerMeters">
        /// 
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessTournamentCreditsSet(TournamentPlayerMeters playerMeters);

        /// <summary>
        /// Message from the Foundation to notify the Bin that player won credits.
        /// </summary>
        /// <param name="amountWon">
        /// Amount of credits won
        /// </param>
        /// <param name="playerMeters">
        /// 
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessTournamentCreditsWon(Amount amountWon, TournamentPlayerMeters playerMeters);

    }

}

