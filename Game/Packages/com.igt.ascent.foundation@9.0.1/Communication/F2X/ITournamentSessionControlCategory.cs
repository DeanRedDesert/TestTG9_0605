//-----------------------------------------------------------------------
// <copyright file = "ITournamentSessionControlCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.TournamentSessionControl;

    /// <summary>
    /// Tournament Session category of messages.  Category: 1001  Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ITournamentSessionControlCategory
    {
        /// <summary>
        /// Message sent from the Bin to the Foundation on the FI channel indicating that the session end conditions
        /// have been met.
        /// </summary>
        void FinishSession();

        /// <summary>
        /// Request from the Bin to the Foundation on the FI channel to query the configured Tournament session
        /// initiator.
        /// </summary>
        /// <returns>
        /// The content of the GetConfigDataSessionInitiatorReply message.
        /// </returns>
        SessionInitiator GetConfigDataSessionInitiator();

        /// <summary>
        /// Request from the Bin to the Foundation on the FI channel to query information about the current
        /// configuration and session.
        /// </summary>
        /// <returns>
        /// The content of the QuerySessionInformationReply message.
        /// </returns>
        QuerySessionInformationReplyContent QuerySessionInformation();

        /// <summary>
        /// Request from the Bin to the Foundation on the FI channel to reset the tournament session (no new session is
        /// started).
        /// </summary>
        void ResetSessionRequest();

        /// <summary>
        /// Request from the Bin to the Foundation on the FI channel to start a new tournament session. It is considered
        /// a usage error to call this method when the SessionInitiator is not the Game.
        /// </summary>
        void StartSessionRequest();

    }

}

