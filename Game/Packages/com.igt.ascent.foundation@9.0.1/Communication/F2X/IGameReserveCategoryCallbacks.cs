//-----------------------------------------------------------------------
// <copyright file = "IGameReserveCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.GameReserve;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="GameReserve"/> category.
    /// Game Reserve category of messages for getting Reserve configuration info, and for clients to post when they are
    /// in a Reserve State. While a client is in a Reserve state all user input should be ignored, unless it has the
    /// ability to cancel Reserve. It is expected of the client to not send any state change requests while in a
    /// Reserve state. As a fallback, the Foundation will also deny any state change requests made by a client that is
    /// in a reserve state. If the Game or Foundation does any form of state change that causes reserve to be canceled,
    /// then its the responsibility of the state changer to cancel Reserve.
    /// Category: 1036; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IGameReserveCategoryCallbacks
    {
        /// <summary>
        /// Foundation informing the client that the current Game Reserve activation is being canceled. This message
        /// will be sent out to the client whenever the Foundation performs a state change that requires Reserve to be
        /// canceled.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessReserveActivationCanceled();

        /// <summary>
        /// Update the client with the latest Reserve parameters. These parameters should take into effect the next time
        /// the client successfuly enters a Reserve state.
        /// </summary>
        /// <param name="reserveParameters">
        /// The most recent Reserve parameters.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessUpdateReserveParameters(ReserveParameters reserveParameters);

    }

}

