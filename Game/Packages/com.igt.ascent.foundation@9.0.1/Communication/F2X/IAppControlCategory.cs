//-----------------------------------------------------------------------
// <copyright file = "IAppControlCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.AppControl;
    using Schemas.Internal.AppTypes;

    /// <summary>
    /// App Control category of messages.
    /// Category: 2000; Major Version: 2
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IAppControlCategory
    {
        /// <summary>
        /// A message to the foundation to display an app configuration.
        /// </summary>
        /// <param name="app">
        /// The app configuration to display. An empty selector indicates the current app should be deselected.
        /// </param>
        /// <param name="displayState">
        /// The requested display state of the App.
        /// </param>
        /// <param name="switchBehavior">
        /// How to switch the app.
        /// </param>
        /// <returns>
        /// The content of the DisplayAppReply message.
        /// </returns>
        bool DisplayApp(AppSelector app, DisplayControlState displayState, AppSwitchBehavior switchBehavior);

        /// <summary>
        /// Get the performance meters for an app.
        /// </summary>
        /// <param name="app">
        /// ID of the App to query.
        /// </param>
        /// <param name="periodInWeeks">
        /// The timespan in weeks to get performance data for. E.G. "4" would be data for the last 4 weeks.
        /// </param>
        /// <returns>
        /// The content of the GetAppPerformanceMetersReply message.
        /// </returns>
        PerformanceMetersList GetAppPerformanceMeters(AppIdentifier app, int periodInWeeks);

        /// <summary>
        /// Get the state of the selected app.
        /// </summary>
        /// <returns>
        /// The content of the GetAppStateReply message.
        /// </returns>
        AppState GetAppState();

        /// <summary>
        /// Message to the foundation to get the default app identifier.
        /// </summary>
        /// <returns>
        /// The content of the GetDefaultAppReply message.
        /// </returns>
        AppIdentifier GetDefaultApp();

        /// <summary>
        /// Message to the foundation to get the default denomination.
        /// </summary>
        /// <returns>
        /// The content of the GetDefaultDenominationReply message.
        /// </returns>
        uint GetDefaultDenomination();

        /// <summary>
        /// Get a list of any priority apps, in priority order, from the foundation.
        /// </summary>
        /// <returns>
        /// The content of the GetPriorityAppsReply message.
        /// </returns>
        AppIdentifierList GetPriorityApps();

        /// <summary>
        /// A message to the foundation to set the offerability of the Chooser.
        /// </summary>
        /// <param name="offerable">
        /// Flag indicating if the chooser may be offered.
        /// </param>
        void SetChooserOfferable(bool offerable);

    }

}

