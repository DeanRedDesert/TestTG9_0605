//-----------------------------------------------------------------------
// <copyright file = "IBankPlayCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.BankPlay;

    /// <summary>
    /// Bank Play category of messages for the Shell Bin to retrieve the player bet configuration, bank play status,
    /// player meters, and get notification from the Foundation in the event of bank player status or player money
    /// changed.
    /// Category: 1029; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IBankPlayCategory
    {
        /// <summary>
        /// Retrieves the bank play related properties. All BankPlayProperties will be returned in this message. This
        /// message may **ONLY** be sent during ActivateShellContext.
        /// </summary>
        /// <returns>
        /// The content of the GetBankPlayPropertiesReply message.
        /// </returns>
        BankPlayProperties GetBankPlayProperties();

        /// <summary>
        /// Message requesting the configuration data for this category. Can only be called during context activation.
        /// </summary>
        /// <returns>
        /// The content of the GetConfigDataReply message.
        /// </returns>
        ConfigData GetConfigData();

        /// <summary>
        /// Requests the current player meters. This message may **ONLY** be sent during ActivateShellContext.
        /// </summary>
        /// <returns>
        /// The content of the GetPlayerMetersReply message.
        /// </returns>
        PlayerMeters GetPlayerMeters();

        /// <summary>
        /// Message requesting player cashout.
        /// </summary>
        void PlayerCashoutRequest();

    }

}

