//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 


namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequestLite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XActionRequestLiteVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XActionRequestLiteVer1.xsd", IsNullable=false)]
public partial class ActionRequestLite {
    
    private Version versionField;
    
    private ActionRequestLiteMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ActionRequestLiteMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class Version {
    
    private uint majorVersionField;
    
    private uint minorVersionField;
    
    /// <remarks/>
    public uint MajorVersion {
        get {
            return this.majorVersionField;
        }
        set {
            this.majorVersionField = value;
        }
    }
    
    /// <remarks/>
    public uint MinorVersion {
        get {
            return this.minorVersionField;
        }
        set {
            this.minorVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionRequestReplyContent {
    
    private bool requestHandledField;
    
    /// <remarks/>
    public bool RequestHandled {
        get {
            return this.requestHandledField;
        }
        set {
            this.requestHandledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherReviewRequestReplyContent {
    
    private bool requestHandledField;
    
    /// <remarks/>
    public bool RequestHandled {
        get {
            return this.requestHandledField;
        }
        set {
            this.requestHandledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class SetVoucherRedemptionRegistrationsReplyContent {
    
    private List<VoucherType> registeredVoucherTypesField = new List<VoucherType>();
    
    /// <remarks/>
    public List<VoucherType> RegisteredVoucherTypes {
        get {
            return this.registeredVoucherTypesField;
        }
        set {
            this.registeredVoucherTypesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public enum VoucherType {
    
    /// <remarks/>
    TITO,
    
    /// <remarks/>
    Sports,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class ReplyContent {
    
    private bool acceptedField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmApiControlVer1.xsd")]
public partial class SetTsmApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmApiControlVer1.xsd")]
public partial class GetTsmApiVersionsReplyContent {
    
    private GetTsmApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetTsmApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTsmApiControlVer1.xsd")]
public partial class GetTsmApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class CategoryVersion {
    
    private int categoryField;
    
    private Version versionField;
    
    /// <remarks/>
    public int Category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTransactionalCritDataReadVer1.xsd")]
public partial class CriticalDataItemReadResult {
    
    private CriticalDataItemSelector criticalDataItemSelectorField;
    
    private byte[] dataField;
    
    /// <remarks/>
    public CriticalDataItemSelector CriticalDataItemSelector {
        get {
            return this.criticalDataItemSelectorField;
        }
        set {
            this.criticalDataItemSelectorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="CriticalDataItemSelector", Namespace="F2XTransactionalCritDataReadVer1.xsd")]
public partial class CriticalDataItemSelector : CriticalDataItemScopeSelector {
    
    private string nameField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataRead.CriticalDataItemSelector))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="CriticalDataItemScopeSelector", Namespace="F2XTransactionalCritDataReadVer1.xsd")]
public partial class CriticalDataItemScopeSelector {
    
    private object itemField;
    
    private ItemChoiceType itemElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Extension", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionAnalytics", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionPersistent", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Payvar", typeof(PayvarIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("PayvarAnalytics", typeof(PayvarIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("PayvarPersistent", typeof(PayvarIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Theme", typeof(ThemeIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeAnalytics", typeof(ThemeIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ThemePersistent", typeof(ThemeIdentifier))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class ExtensionIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class PayvarIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class ThemeIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTransactionalCritDataReadVer1.xsd", IncludeInSchema=false)]
public enum ItemChoiceType {
    
    /// <remarks/>
    Extension,
    
    /// <remarks/>
    ExtensionAnalytics,
    
    /// <remarks/>
    ExtensionPersistent,
    
    /// <remarks/>
    Payvar,
    
    /// <remarks/>
    PayvarAnalytics,
    
    /// <remarks/>
    PayvarPersistent,
    
    /// <remarks/>
    Theme,
    
    /// <remarks/>
    ThemeAnalytics,
    
    /// <remarks/>
    ThemePersistent,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ReadCritDataReplyContent", Namespace="F2XTransactionalCritDataReadVer1.xsd")]
public partial class ReadCritDataReplyContent {
    
    private List<CriticalDataItemReadResult> criticalDataItemsField = new List<CriticalDataItemReadResult>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CritDataItem", IsNullable=false)]
    public List<CriticalDataItemReadResult> CriticalDataItems {
        get {
            return this.criticalDataItemsField;
        }
        set {
            this.criticalDataItemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class GetConfigDataSessionInitiatorReplyContent {
    
    private SessionInitiator sessionInitiatorField;
    
    /// <remarks/>
    public SessionInitiator SessionInitiator {
        get {
            return this.sessionInitiatorField;
        }
        set {
            this.sessionInitiatorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public enum SessionInitiator {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Foundation,
    
    /// <remarks/>
    Game,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class QuerySessionInformationReplyContent {
    
    private SessionState stateField;
    
    private SessionConfiguration configurationField;
    
    /// <remarks/>
    public SessionState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    public SessionConfiguration Configuration {
        get {
            return this.configurationField;
        }
        set {
            this.configurationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public enum SessionState {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Reset,
    
    /// <remarks/>
    InProgress,
    
    /// <remarks/>
    Complete,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionConfiguration {
    
    private SessionType sessionTypeField;
    
    private int countdownField;
    
    private bool countdownFieldSpecified;
    
    private int playDurationField;
    
    private bool playDurationFieldSpecified;
    
    private Amount initialCreditsField;
    
    /// <remarks/>
    public SessionType SessionType {
        get {
            return this.sessionTypeField;
        }
        set {
            this.sessionTypeField = value;
        }
    }
    
    /// <remarks/>
    public int Countdown {
        get {
            return this.countdownField;
        }
        set {
            this.countdownField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CountdownSpecified {
        get {
            return this.countdownFieldSpecified;
        }
        set {
            this.countdownFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public int PlayDuration {
        get {
            return this.playDurationField;
        }
        set {
            this.playDurationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayDurationSpecified {
        get {
            return this.playDurationFieldSpecified;
        }
        set {
            this.playDurationFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Amount InitialCredits {
        get {
            return this.initialCreditsField;
        }
        set {
            this.initialCreditsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public enum SessionType {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Timer,
    
    /// <remarks/>
    Credits,
    
    /// <remarks/>
    TimedCredits,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class Amount {
    
    private long valueField;
    
    private uint cRCField;
    
    /// <remarks/>
    public long Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public uint CRC {
        get {
            return this.cRCField;
        }
        set {
            this.cRCField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class GetTournamentPlayerMetersReplyContent {
    
    private TournamentPlayerMeters tournamentPlayerMetersField;
    
    /// <remarks/>
    public TournamentPlayerMeters TournamentPlayerMeters {
        get {
            return this.tournamentPlayerMetersField;
        }
        set {
            this.tournamentPlayerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentPlayerMeters {
    
    private Amount playerWagerableMeterField;
    
    private Amount playerBankMeterField;
    
    private Amount playerScoreMeterField;
    
    /// <remarks/>
    public Amount PlayerWagerableMeter {
        get {
            return this.playerWagerableMeterField;
        }
        set {
            this.playerWagerableMeterField = value;
        }
    }
    
    /// <remarks/>
    public Amount PlayerBankMeter {
        get {
            return this.playerBankMeterField;
        }
        set {
            this.playerBankMeterField = value;
        }
    }
    
    /// <remarks/>
    public Amount PlayerScoreMeter {
        get {
            return this.playerScoreMeterField;
        }
        set {
            this.playerScoreMeterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class RequestTiltReplyContent {
    
    private bool requestSuccessField;
    
    /// <remarks/>
    public bool RequestSuccess {
        get {
            return this.requestSuccessField;
        }
        set {
            this.requestSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class AbortTicketPrintReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class QueryTicketStatusReplyContent {
    
    private TicketStatus ticketStatusField;
    
    /// <remarks/>
    public TicketStatus TicketStatus {
        get {
            return this.ticketStatusField;
        }
        set {
            this.ticketStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public enum TicketStatus {
    
    /// <remarks/>
    PrinterIdle,
    
    /// <remarks/>
    InvalidTicketID,
    
    /// <remarks/>
    Printing,
    
    /// <remarks/>
    PrintComplete,
    
    /// <remarks/>
    InChute,
    
    /// <remarks/>
    PrinterHardTilt,
    
    /// <remarks/>
    JobCancelled,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class PrintTicketReplyContent {
    
    private bool successField;
    
    private uint ticketIdField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
    
    /// <remarks/>
    public uint TicketId {
        get {
            return this.ticketIdField;
        }
        set {
            this.ticketIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class TicketTypeConfiguration {
    
    private TicketType supportedTicketTypeField;
    
    private uint maxLineCountField;
    
    /// <remarks/>
    public TicketType SupportedTicketType {
        get {
            return this.supportedTicketTypeField;
        }
        set {
            this.supportedTicketTypeField = value;
        }
    }
    
    /// <remarks/>
    public uint MaxLineCount {
        get {
            return this.maxLineCountField;
        }
        set {
            this.maxLineCountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public enum TicketType {
    
    /// <remarks/>
    GenericPortraitTicket,
    
    /// <remarks/>
    BarcodeCenteredTicket,
    
    /// <remarks/>
    DynamicPrizeTicket,
    
    /// <remarks/>
    SportsWagerTicket,
    
    /// <remarks/>
    PortraitCashoutTicket,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class QueryPrintingSupportReplyContent {
    
    private bool printingEnabledField;
    
    private bool printerConnectedField;
    
    private List<TicketTypeConfiguration> supportedTicketTypeField = new List<TicketTypeConfiguration>();
    
    private List<PrintingKeywords> supportedKeywordsField = new List<PrintingKeywords>();
    
    private TicketStatus ticketStatusField;
    
    /// <remarks/>
    public bool PrintingEnabled {
        get {
            return this.printingEnabledField;
        }
        set {
            this.printingEnabledField = value;
        }
    }
    
    /// <remarks/>
    public bool PrinterConnected {
        get {
            return this.printerConnectedField;
        }
        set {
            this.printerConnectedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SupportedTicketType")]
    public List<TicketTypeConfiguration> SupportedTicketType {
        get {
            return this.supportedTicketTypeField;
        }
        set {
            this.supportedTicketTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SupportedKeywords")]
    public List<PrintingKeywords> SupportedKeywords {
        get {
            return this.supportedKeywordsField;
        }
        set {
            this.supportedKeywordsField = value;
        }
    }
    
    /// <remarks/>
    public TicketStatus TicketStatus {
        get {
            return this.ticketStatusField;
        }
        set {
            this.ticketStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public enum PrintingKeywords {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("%KeyLocation%")]
    KeyLocation,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("%KeyAddress1%")]
    KeyAddress1,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("%KeyAddress2%")]
    KeyAddress2,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("%SerialNumber%")]
    SerialNumber,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd")]
public partial class QueryDisplayedThemeReplyContent {
    
    private DisplayedTheme themeField;
    
    /// <remarks/>
    public DisplayedTheme Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd")]
public partial class DisplayedTheme {
    
    private ThemeIdentifier themeIdentifierField;
    
    private string g2SThemeIdField;
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string G2SThemeId {
        get {
            return this.g2SThemeIdField;
        }
        set {
            this.g2SThemeIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="PayvarInformation", Namespace="F2XThemeControlVer1.xsd")]
public partial class PayvarInformation {
    
    private uint enabledDenomField;
    
    private PayvarInformationTagDataFile tagDataFileField;
    
    private Amount maxBetAmountField;
    
    private Amount minBetAmountField;
    
    private Amount buttonPanelMinBetAmountField;
    
    /// <remarks/>
    public uint EnabledDenom {
        get {
            return this.enabledDenomField;
        }
        set {
            this.enabledDenomField = value;
        }
    }
    
    /// <remarks/>
    public PayvarInformationTagDataFile TagDataFile {
        get {
            return this.tagDataFileField;
        }
        set {
            this.tagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public Amount MaxBetAmount {
        get {
            return this.maxBetAmountField;
        }
        set {
            this.maxBetAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount MinBetAmount {
        get {
            return this.minBetAmountField;
        }
        set {
            this.minBetAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount ButtonPanelMinBetAmount {
        get {
            return this.buttonPanelMinBetAmountField;
        }
        set {
            this.buttonPanelMinBetAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeControlVer1.xsd")]
public partial class PayvarInformationTagDataFile {
    
    private string tagField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeInformationLocalizedResourceKeys {
    
    private string themeNameField;
    
    private string themeIconField;
    
    private List<string> customMenuTabsField = new List<string>();
    
    /// <remarks/>
    public string ThemeName {
        get {
            return this.themeNameField;
        }
        set {
            this.themeNameField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeIcon {
        get {
            return this.themeIconField;
        }
        set {
            this.themeIconField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CustomMenuTabs")]
    public List<string> CustomMenuTabs {
        get {
            return this.customMenuTabsField;
        }
        set {
            this.customMenuTabsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class DenomInformation {
    
    private uint denomField;
    
    private bool isProgressiveField;
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    public bool IsProgressive {
        get {
            return this.isProgressiveField;
        }
        set {
            this.isProgressiveField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ThemeInformation", Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeInformation {
    
    private ThemeIdentifier themeIdentifierField;
    
    private string g2SThemeIdentifierField;
    
    private List<ThemeSwitchBehavior> allowedThemeSwitchBehaviorsField = new List<ThemeSwitchBehavior>();
    
    private List<DenomInformation> denomsField = new List<DenomInformation>();
    
    private uint defaultDenomField;
    
    private List<MenuTab> menuTabsField = new List<MenuTab>();
    
    private ThemeInformationLocalizedResourceKeys localizedResourceKeysField;
    
    private List<LocalizationTable> localizationTablesField = new List<LocalizationTable>();
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string G2SThemeIdentifier {
        get {
            return this.g2SThemeIdentifierField;
        }
        set {
            this.g2SThemeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AllowedThemeSwitchBehaviors")]
    public List<ThemeSwitchBehavior> AllowedThemeSwitchBehaviors {
        get {
            return this.allowedThemeSwitchBehaviorsField;
        }
        set {
            this.allowedThemeSwitchBehaviorsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denoms")]
    public List<DenomInformation> Denoms {
        get {
            return this.denomsField;
        }
        set {
            this.denomsField = value;
        }
    }
    
    /// <remarks/>
    public uint DefaultDenom {
        get {
            return this.defaultDenomField;
        }
        set {
            this.defaultDenomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MenuTabs")]
    public List<MenuTab> MenuTabs {
        get {
            return this.menuTabsField;
        }
        set {
            this.menuTabsField = value;
        }
    }
    
    /// <remarks/>
    public ThemeInformationLocalizedResourceKeys LocalizedResourceKeys {
        get {
            return this.localizedResourceKeysField;
        }
        set {
            this.localizedResourceKeysField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LocalizationTables")]
    public List<LocalizationTable> LocalizationTables {
        get {
            return this.localizationTablesField;
        }
        set {
            this.localizationTablesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public enum ThemeSwitchBehavior {
    
    /// <remarks/>
    InactivateContext,
    
    /// <remarks/>
    StayInContext,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public enum MenuTab {
    
    /// <remarks/>
    Blackjack,
    
    /// <remarks/>
    iGame,
    
    /// <remarks/>
    Keno,
    
    /// <remarks/>
    Poker,
    
    /// <remarks/>
    Reel,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class LocalizationTable {
    
    private List<LocalizedResource> resourceField = new List<LocalizedResource>();
    
    private string cultureField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Resource")]
    public List<LocalizedResource> Resource {
        get {
            return this.resourceField;
        }
        set {
            this.resourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class LocalizedResource {
    
    private object itemField;
    
    private string idField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("File", typeof(FileAsset))]
    [System.Xml.Serialization.XmlElementAttribute("Image", typeof(ImageAsset))]
    [System.Xml.Serialization.XmlElementAttribute("Movie", typeof(MovieAsset))]
    [System.Xml.Serialization.XmlElementAttribute("Sound", typeof(SoundAsset))]
    [System.Xml.Serialization.XmlElementAttribute("String", typeof(string))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class FileAsset {
    
    private string pathField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="anyURI")]
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class ImageAsset {
    
    private string pathField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="anyURI")]
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class MovieAsset {
    
    private string pathField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="anyURI")]
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class SoundAsset {
    
    private string pathField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="anyURI")]
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeApiControlVer1.xsd")]
public partial class SetThemeApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeApiControlVer1.xsd")]
public partial class GetThemeApiVersionsReplyContent {
    
    private GetThemeApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetThemeApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeApiControlVer1.xsd")]
public partial class GetThemeApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemApiControlVer1.xsd")]
public partial class SetSystemApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemApiControlVer1.xsd")]
public partial class GetSystemApiVersionsReplyContent {
    
    private GetSystemApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetSystemApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSystemApiControlVer1.xsd")]
public partial class GetSystemApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class ReserveSportsBetReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class Reserve {
    
    private Amount amountField;
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingReserveReplyContent {
    
    private Reserve reserveField;
    
    /// <remarks/>
    public Reserve Reserve {
        get {
            return this.reserveField;
        }
        set {
            this.reserveField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class CommitSportsBettingGamingCycleReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingGamingCycleStateReplyContent {
    
    private SportsBettingGamingCycleState stateField;
    
    /// <remarks/>
    public SportsBettingGamingCycleState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public enum SportsBettingGamingCycleState {
    
    /// <remarks/>
    Idle,
    
    /// <remarks/>
    Committed,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingPropertiesReplyContent {
    
    private SportsBettingProperties sportsBettingPropertiesField;
    
    /// <remarks/>
    public SportsBettingProperties SportsBettingProperties {
        get {
            return this.sportsBettingPropertiesField;
        }
        set {
            this.sportsBettingPropertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class SportsBettingProperties {
    
    private bool canCommitGamingCycleField;
    
    private bool canCommitGamingCycleFieldSpecified;
    
    private bool gamePlayIsPreventingSportsBetField;
    
    private bool gamePlayIsPreventingSportsBetFieldSpecified;
    
    private bool reserveAllowedField;
    
    private bool reserveAllowedFieldSpecified;
    
    /// <remarks/>
    public bool CanCommitGamingCycle {
        get {
            return this.canCommitGamingCycleField;
        }
        set {
            this.canCommitGamingCycleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CanCommitGamingCycleSpecified {
        get {
            return this.canCommitGamingCycleFieldSpecified;
        }
        set {
            this.canCommitGamingCycleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool GamePlayIsPreventingSportsBet {
        get {
            return this.gamePlayIsPreventingSportsBetField;
        }
        set {
            this.gamePlayIsPreventingSportsBetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GamePlayIsPreventingSportsBetSpecified {
        get {
            return this.gamePlayIsPreventingSportsBetFieldSpecified;
        }
        set {
            this.gamePlayIsPreventingSportsBetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool ReserveAllowed {
        get {
            return this.reserveAllowedField;
        }
        set {
            this.reserveAllowedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReserveAllowedSpecified {
        get {
            return this.reserveAllowedFieldSpecified;
        }
        set {
            this.reserveAllowedFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public partial class ShowDemoProperties {
    
    private Environment environmentField;
    
    /// <remarks/>
    public Environment Environment {
        get {
            return this.environmentField;
        }
        set {
            this.environmentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public enum Environment {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    Development,
    
    /// <remarks/>
    ShowDemo,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public partial class GetShowDemoPropertiesReplyContent {
    
    private ShowDemoProperties propertiesField;
    
    /// <remarks/>
    public ShowDemoProperties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellThemeControlVer1.xsd")]
public partial class GetThemeInformationReplyContent {
    
    private ThemeInformation themeField;
    
    /// <remarks/>
    public ThemeInformation Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ThemeInformation", Namespace="F2XShellThemeControlVer1.xsd")]
public partial class ThemeInformation {
    
    private ThemeIdentifier themeIdentifierField;
    
    private string themeTagField;
    
    private string themeTagDataFileField;
    
    private string g2SThemeIdentifierField;
    
    private List<DenominationListDenom> denomsField = new List<DenominationListDenom>();
    
    private uint defaultDenomField;
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTag {
        get {
            return this.themeTagField;
        }
        set {
            this.themeTagField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTagDataFile {
        get {
            return this.themeTagDataFileField;
        }
        set {
            this.themeTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public string G2SThemeIdentifier {
        get {
            return this.g2SThemeIdentifierField;
        }
        set {
            this.g2SThemeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Denom", IsNullable=false)]
    public List<DenominationListDenom> Denoms {
        get {
            return this.denomsField;
        }
        set {
            this.denomsField = value;
        }
    }
    
    /// <remarks/>
    public uint DefaultDenom {
        get {
            return this.defaultDenomField;
        }
        set {
            this.defaultDenomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellThemeControlVer1.xsd")]
public partial class DenominationListDenom {
    
    private bool isProgressiveDenomField;
    
    private uint valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool IsProgressiveDenom {
        get {
            return this.isProgressiveDenomField;
        }
        set {
            this.isProgressiveDenomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public uint Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellThemeControlVer1.xsd")]
public partial class SwitchThemeReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class GetShellHistoryWritePermittedReplyContent {
    
    private List<int> coplayersField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Coplayer", IsNullable=false)]
    public List<int> Coplayers {
        get {
            return this.coplayersField;
        }
        set {
            this.coplayersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class GetHistoryContextReplyContent {
    
    private ThemeSelector themeSelectorField;
    
    private string themeTagField;
    
    private string themeTagDataFileField;
    
    private string g2SThemeIdentifierField;
    
    /// <remarks/>
    public ThemeSelector ThemeSelector {
        get {
            return this.themeSelectorField;
        }
        set {
            this.themeSelectorField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTag {
        get {
            return this.themeTagField;
        }
        set {
            this.themeTagField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTagDataFile {
        get {
            return this.themeTagDataFileField;
        }
        set {
            this.themeTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public string G2SThemeIdentifier {
        get {
            return this.g2SThemeIdentifierField;
        }
        set {
            this.g2SThemeIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class ThemeSelector {
    
    private ThemeIdentifier themeIdentifierField;
    
    private uint denomField;
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class SetShellApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class GetShellApiVersionsReplyContent {
    
    private GetShellApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetShellApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellApiControlVer1.xsd")]
public partial class GetShellApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public partial class ValidationFaultLocalization {
    
    private string titleField;
    
    private string messageField;
    
    private string cultureField;
    
    /// <remarks/>
    public string Title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    public string Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public partial class ValidationFault {
    
    private List<ValidationFaultLocalization> messagesField = new List<ValidationFaultLocalization>();
    
    private FaultType typeField;
    
    private FaultArea areaField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Message", IsNullable=false)]
    public List<ValidationFaultLocalization> Messages {
        get {
            return this.messagesField;
        }
        set {
            this.messagesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public FaultType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public FaultArea Area {
        get {
            return this.areaField;
        }
        set {
            this.areaField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public enum FaultType {
    
    /// <remarks/>
    Warning,
    
    /// <remarks/>
    Error,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public enum FaultArea {
    
    /// <remarks/>
    Uncategorized,
    
    /// <remarks/>
    Progressive,
    
    /// <remarks/>
    GameConfiguration,
    
    /// <remarks/>
    EgmConfiguration,
    
    /// <remarks/>
    Tournament,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public partial class ValidateSetupReplyContent {
    
    private List<ValidationFault> faultsField = new List<ValidationFault>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Fault", IsNullable=false)]
    public List<ValidationFault> Faults {
        get {
            return this.faultsField;
        }
        set {
            this.faultsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class CreateSessionReplyContent {
    
    private int sessionField;
    
    private bool sessionFieldSpecified;
    
    /// <remarks/>
    public int Session {
        get {
            return this.sessionField;
        }
        set {
            this.sessionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SessionSpecified {
        get {
            return this.sessionFieldSpecified;
        }
        set {
            this.sessionFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class PayvarProperties {
    
    private uint denomField;
    
    private List<SectionProperties> sectionField = new List<SectionProperties>();
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Section")]
    public List<SectionProperties> Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class SectionProperties {
    
    private string nameField;
    
    private List<Property> propField = new List<Property>();
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Prop")]
    public List<Property> Prop {
        get {
            return this.propField;
        }
        set {
            this.propField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PropertyTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPropertyTypesVer1.xsd")]
public partial class Property {
    
    private string nameField;
    
    private string valueField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GameProperties {
    
    private ThemeIdentifier themeField;
    
    private List<SectionProperties> sectionField = new List<SectionProperties>();
    
    private List<PayvarProperties> payvarField = new List<PayvarProperties>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Section")]
    public List<SectionProperties> Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarProperties> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetSelectedAppReplyContent", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetSelectedAppReplyContent {
    
    private ThemeIdentifier themeField;
    
    private ShellIdentifier shellField;
    
    private uint denomField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public ShellIdentifier Shell {
        get {
            return this.shellField;
        }
        set {
            this.shellField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class ShellIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAvailableAppsReplyContent", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetAvailableAppsReplyContent {
    
    private List<ThemeInfo> themesField = new List<ThemeInfo>();
    
    private List<ShellInfo> shellsField = new List<ShellInfo>();
    
    private List<CoThemeInfo> coThemesField = new List<CoThemeInfo>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Theme", IsNullable=false)]
    public List<ThemeInfo> Themes {
        get {
            return this.themesField;
        }
        set {
            this.themesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Shell", IsNullable=false)]
    public List<ShellInfo> Shells {
        get {
            return this.shellsField;
        }
        set {
            this.shellsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CoTheme", IsNullable=false)]
    public List<CoThemeInfo> CoThemes {
        get {
            return this.coThemesField;
        }
        set {
            this.coThemesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ThemeInfo", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class ThemeInfo : AppInfo {
    
    private ThemeIdentifier identifierField;
    
    private string staticIdentifierField;
    
    private List<ThemeAttribute> attributeField = new List<ThemeAttribute>();
    
    private List<DenominationInformation> denomField = new List<DenominationInformation>();
    
    private List<ThemeCategory> categoryField = new List<ThemeCategory>();
    
    private List<LocalizationKeyHierarchyNode> customCategoryField = new List<LocalizationKeyHierarchyNode>();
    
    /// <remarks/>
    public ThemeIdentifier Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    public string StaticIdentifier {
        get {
            return this.staticIdentifierField;
        }
        set {
            this.staticIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Attribute")]
    public List<ThemeAttribute> Attribute {
        get {
            return this.attributeField;
        }
        set {
            this.attributeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denom")]
    public List<DenominationInformation> Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Category")]
    public List<ThemeCategory> Category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Nodes", Namespace="F2XLocalizationTypesVer1.xsd", IsNullable=false)]
    public List<LocalizationKeyHierarchyNode> CustomCategory {
        get {
            return this.customCategoryField;
        }
        set {
            this.customCategoryField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public enum ThemeAttribute {
    
    /// <remarks/>
    AutoPlay,
    
    /// <remarks/>
    RoundWagerUpPlayoff,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DenominationInformation", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DenominationInformation {
    
    private List<DenominationAttribute> attributeField = new List<DenominationAttribute>();
    
    private ulong maxBetField;
    
    private uint denomField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Attribute")]
    public List<DenominationAttribute> Attribute {
        get {
            return this.attributeField;
        }
        set {
            this.attributeField = value;
        }
    }
    
    /// <remarks/>
    public ulong MaxBet {
        get {
            return this.maxBetField;
        }
        set {
            this.maxBetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DenominationAttribute", Namespace="F2XSelectionManagementVer1.xsd")]
public enum DenominationAttribute {
    
    /// <remarks/>
    Progressive,
    
    /// <remarks/>
    AncillaryPlay,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public enum ThemeCategory {
    
    /// <remarks/>
    Blackjack,
    
    /// <remarks/>
    iGame,
    
    /// <remarks/>
    Keno,
    
    /// <remarks/>
    Poker,
    
    /// <remarks/>
    Reel,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class LocalizationKeyHierarchyNode {
    
    private string keyField;
    
    private List<LocalizationKeyHierarchyNode> childrenField = new List<LocalizationKeyHierarchyNode>();
    
    /// <remarks/>
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Children")]
    public List<LocalizationKeyHierarchyNode> Children {
        get {
            return this.childrenField;
        }
        set {
            this.childrenField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.CoThemeInfo))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.ShellInfo))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.ThemeInfo))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AppInfo", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class AppInfo {
    
    private BinIdentifier binIdentifierField;
    
    private System.DateTime displayAsNewUntilField;
    
    private CultureList culturesField;
    
    private LocalizedMenuResources menuResourcesField;
    
    private ProductInformation productInformationField;
    
    private LocalizationTableList localizationTablesField;
    
    private int rankField;
    
    private bool rankFieldSpecified;
    
    /// <remarks/>
    public BinIdentifier BinIdentifier {
        get {
            return this.binIdentifierField;
        }
        set {
            this.binIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
    public System.DateTime DisplayAsNewUntil {
        get {
            return this.displayAsNewUntilField;
        }
        set {
            this.displayAsNewUntilField = value;
        }
    }
    
    /// <remarks/>
    public CultureList Cultures {
        get {
            return this.culturesField;
        }
        set {
            this.culturesField = value;
        }
    }
    
    /// <remarks/>
    public LocalizedMenuResources MenuResources {
        get {
            return this.menuResourcesField;
        }
        set {
            this.menuResourcesField = value;
        }
    }
    
    /// <remarks/>
    public ProductInformation ProductInformation {
        get {
            return this.productInformationField;
        }
        set {
            this.productInformationField = value;
        }
    }
    
    /// <remarks/>
    public LocalizationTableList LocalizationTables {
        get {
            return this.localizationTablesField;
        }
        set {
            this.localizationTablesField = value;
        }
    }
    
    /// <remarks/>
    public int Rank {
        get {
            return this.rankField;
        }
        set {
            this.rankField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RankSpecified {
        get {
            return this.rankFieldSpecified;
        }
        set {
            this.rankFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class BinIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class CultureList {
    
    private List<string> cultureField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Culture")]
    public List<string> Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class LocalizedMenuResources {
    
    private string nameField;
    
    private string iconField;
    
    private string logoField;
    
    private string loadingDisplayField;
    
    private string promoField;
    
    private string attractField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Icon {
        get {
            return this.iconField;
        }
        set {
            this.iconField = value;
        }
    }
    
    /// <remarks/>
    public string Logo {
        get {
            return this.logoField;
        }
        set {
            this.logoField = value;
        }
    }
    
    /// <remarks/>
    public string LoadingDisplay {
        get {
            return this.loadingDisplayField;
        }
        set {
            this.loadingDisplayField = value;
        }
    }
    
    /// <remarks/>
    public string Promo {
        get {
            return this.promoField;
        }
        set {
            this.promoField = value;
        }
    }
    
    /// <remarks/>
    public string Attract {
        get {
            return this.attractField;
        }
        set {
            this.attractField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ProductInformation", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class ProductInformation {
    
    private string productNameField;
    
    private string productVersionField;
    
    /// <remarks/>
    public string ProductName {
        get {
            return this.productNameField;
        }
        set {
            this.productNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProductVersion {
        get {
            return this.productVersionField;
        }
        set {
            this.productVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LocalizationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationTypesVer1.xsd")]
public partial class LocalizationTableList {
    
    private List<LocalizationTable> tableField = new List<LocalizationTable>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Table")]
    public List<LocalizationTable> Table {
        get {
            return this.tableField;
        }
        set {
            this.tableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class CoThemeInfo : AppInfo {
    
    private ThemeIdentifier identifierField;
    
    private List<ThemeAttribute> attributeField = new List<ThemeAttribute>();
    
    private List<ThemeCategory> categoryField = new List<ThemeCategory>();
    
    private List<LocalizationKeyHierarchyNode> customCategoryField = new List<LocalizationKeyHierarchyNode>();
    
    /// <remarks/>
    public ThemeIdentifier Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Attribute")]
    public List<ThemeAttribute> Attribute {
        get {
            return this.attributeField;
        }
        set {
            this.attributeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Category")]
    public List<ThemeCategory> Category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Nodes", Namespace="F2XLocalizationTypesVer1.xsd", IsNullable=false)]
    public List<LocalizationKeyHierarchyNode> CustomCategory {
        get {
            return this.customCategoryField;
        }
        set {
            this.customCategoryField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class ShellInfo : AppInfo {
    
    private ShellIdentifier identifierField;
    
    private List<ThemeIdentifier> coThemeIdField = new List<ThemeIdentifier>();
    
    private List<uint> denomField = new List<uint>();
    
    /// <remarks/>
    public ShellIdentifier Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CoThemeId")]
    public List<ThemeIdentifier> CoThemeId {
        get {
            return this.coThemeIdField;
        }
        set {
            this.coThemeIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denom")]
    public List<uint> Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetDefaultAppReplyContent", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetDefaultAppReplyContent {
    
    private ThemeIdentifier themeField;
    
    private ShellIdentifier shellField;
    
    private uint denominationField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public ShellIdentifier Shell {
        get {
            return this.shellField;
        }
        set {
            this.shellField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DisplayAppReplyContent", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DisplayAppReplyContent {
    
    private bool displayedField;
    
    /// <remarks/>
    public bool Displayed {
        get {
            return this.displayedField;
        }
        set {
            this.displayedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppStateReplyContent", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetAppStateReplyContent {
    
    private AppState stateField;
    
    /// <remarks/>
    public AppState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AppState", Namespace="F2XSelectionManagementVer1.xsd")]
public enum AppState {
    
    /// <remarks/>
    Unlocked,
    
    /// <remarks/>
    Locked,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class ThemePerformanceMeters {
    
    private ThemeIdentifier themeField;
    
    private Amount amountPlayedField;
    
    private Amount highestWinField;
    
    private int gamesPlayedField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public Amount AmountPlayed {
        get {
            return this.amountPlayedField;
        }
        set {
            this.amountPlayedField = value;
        }
    }
    
    /// <remarks/>
    public Amount HighestWin {
        get {
            return this.highestWinField;
        }
        set {
            this.highestWinField = value;
        }
    }
    
    /// <remarks/>
    public int GamesPlayed {
        get {
            return this.gamesPlayedField;
        }
        set {
            this.gamesPlayedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class RuntimeGameEventsConfiguration {
    
    private bool waitingForGenericInputStatusUpdateEnabledField;
    
    private bool playerChoiceUpdateEnabledField;
    
    private bool gameSelectionStatusUpdateEnabledField;
    
    private bool gameBetMeterUpdateEnabledField;
    
    private bool gameBetMeterKeysUpdateEnabledField;
    
    /// <remarks/>
    public bool WaitingForGenericInputStatusUpdateEnabled {
        get {
            return this.waitingForGenericInputStatusUpdateEnabledField;
        }
        set {
            this.waitingForGenericInputStatusUpdateEnabledField = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerChoiceUpdateEnabled {
        get {
            return this.playerChoiceUpdateEnabledField;
        }
        set {
            this.playerChoiceUpdateEnabledField = value;
        }
    }
    
    /// <remarks/>
    public bool GameSelectionStatusUpdateEnabled {
        get {
            return this.gameSelectionStatusUpdateEnabledField;
        }
        set {
            this.gameSelectionStatusUpdateEnabledField = value;
        }
    }
    
    /// <remarks/>
    public bool GameBetMeterUpdateEnabled {
        get {
            return this.gameBetMeterUpdateEnabledField;
        }
        set {
            this.gameBetMeterUpdateEnabledField = value;
        }
    }
    
    /// <remarks/>
    public bool GameBetMeterKeysUpdateEnabled {
        get {
            return this.gameBetMeterKeysUpdateEnabledField;
        }
        set {
            this.gameBetMeterKeysUpdateEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GetRuntimeGameEventsConfigurationContent {
    
    private RuntimeGameEventsConfiguration runtimeGameEventsConfigurationField;
    
    /// <remarks/>
    public RuntimeGameEventsConfiguration RuntimeGameEventsConfiguration {
        get {
            return this.runtimeGameEventsConfigurationField;
        }
        set {
            this.runtimeGameEventsConfigurationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="LinkDownTextLocalizations", Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class LinkDownTextLocalizations {
    
    private List<LinkDownTextLocalizationsLinkDownTextLocalization> linkDownTextLocalizationField = new List<LinkDownTextLocalizationsLinkDownTextLocalization>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LinkDownTextLocalization")]
    public List<LinkDownTextLocalizationsLinkDownTextLocalization> LinkDownTextLocalization {
        get {
            return this.linkDownTextLocalizationField;
        }
        set {
            this.linkDownTextLocalizationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class LinkDownTextLocalizationsLinkDownTextLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameLevelValue", Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GameLevelValue {
    
    private Amount amountField;
    
    private List<GameLevelValuePrizeLocalization> prizeField = new List<GameLevelValuePrizeLocalization>();
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PrizeLocalization", IsNullable=false)]
    public List<GameLevelValuePrizeLocalization> Prize {
        get {
            return this.prizeField;
        }
        set {
            this.prizeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GameLevelValuePrizeLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameLevelLinkedValue", Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GameLevelLinkedValue {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelValue", typeof(GameLevelValue))]
    [System.Xml.Serialization.XmlElementAttribute("LinkDownText", typeof(LinkDownTextLocalizations))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameLevelLinkedData", Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GameLevelLinkedData {
    
    private uint gameLevelField;
    
    private GameLevelLinkedValue gameLevelLinkedValueField;
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    public GameLevelLinkedValue GameLevelLinkedValue {
        get {
            return this.gameLevelLinkedValueField;
        }
        set {
            this.gameLevelLinkedValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameLevelDenomData", Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GameLevelDenomData {
    
    private uint denominationField;
    
    private List<GameLevelLinkedData> gameLevelLinkedDataField = new List<GameLevelLinkedData>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelLinkedData")]
    public List<GameLevelLinkedData> GameLevelLinkedData {
        get {
            return this.gameLevelLinkedDataField;
        }
        set {
            this.gameLevelLinkedDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GameLevelThemeData {
    
    private ThemeIdentifier themeField;
    
    private QueryStatus statusField;
    
    private List<GameLevelDenomData> gameLevelDenomDataField = new List<GameLevelDenomData>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public QueryStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelDenomData")]
    public List<GameLevelDenomData> GameLevelDenomData {
        get {
            return this.gameLevelDenomDataField;
        }
        set {
            this.gameLevelDenomDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public enum QueryStatus {
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    Unsupported,
    
    /// <remarks/>
    Unavailable,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGamePerformance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGamePerformanceVer1.xsd")]
public partial class GamePerformanceReport {
    
    private System.Xml.XmlElement[] anyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyElementAttribute()]
    public System.Xml.XmlElement[] Any {
        get {
            return this.anyField;
        }
        set {
            this.anyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGamePerformance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGamePerformanceVer1.xsd")]
public partial class GetPerformanceReportReplyContent {
    
    private GamePerformanceReport gamePerformanceReportField;
    
    private bool reportGeneratedField;
    
    /// <remarks/>
    public GamePerformanceReport GamePerformanceReport {
        get {
            return this.gamePerformanceReportField;
        }
        set {
            this.gamePerformanceReportField = value;
        }
    }
    
    /// <remarks/>
    public bool ReportGenerated {
        get {
            return this.reportGeneratedField;
        }
        set {
            this.reportGeneratedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class MinimumPlayableCreditBalanceResponse {
    
    private ThemePayvarDenomSelector themePayvarDenomSelectorField;
    
    private Amount minimumPlayableCreditBalanceField;
    
    /// <remarks/>
    public ThemePayvarDenomSelector ThemePayvarDenomSelector {
        get {
            return this.themePayvarDenomSelectorField;
        }
        set {
            this.themePayvarDenomSelectorField = value;
        }
    }
    
    /// <remarks/>
    public Amount MinimumPlayableCreditBalance {
        get {
            return this.minimumPlayableCreditBalanceField;
        }
        set {
            this.minimumPlayableCreditBalanceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class ThemePayvarDenomSelector {
    
    private ThemeIdentifier themeIdentifierField;
    
    private PayvarIdentifier payvarIdentifierField;
    
    private uint denomField;
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public PayvarIdentifier PayvarIdentifier {
        get {
            return this.payvarIdentifierField;
        }
        set {
            this.payvarIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class MinimumPlayableCreditBalanceResponseList {
    
    private List<MinimumPlayableCreditBalanceResponse> minimumPlayableCreditBalanceResponseField = new List<MinimumPlayableCreditBalanceResponse>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MinimumPlayableCreditBalanceResponse")]
    public List<MinimumPlayableCreditBalanceResponse> MinimumPlayableCreditBalanceResponse {
        get {
            return this.minimumPlayableCreditBalanceResponseField;
        }
        set {
            this.minimumPlayableCreditBalanceResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class ProgressiveReportItem {
    
    private object itemField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Key", typeof(ProgressiveReportItemKey))]
    [System.Xml.Serialization.XmlElementAttribute("Label", typeof(string))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGameDataInspectionVer1.xsd")]
public enum ProgressiveReportItemKey {
    
    /// <remarks/>
    GameLevelDescription,
    
    /// <remarks/>
    ContributionPercentage,
    
    /// <remarks/>
    LevelTotalRTP,
    
    /// <remarks/>
    LinkStatus,
    
    /// <remarks/>
    MaxAmount,
    
    /// <remarks/>
    StartAmount,
    
    /// <remarks/>
    StartPercent,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class ProgressiveGameLevelData {
    
    private uint gameLevelField;
    
    private List<ProgressiveReportItem> progressiveReportItemsField = new List<ProgressiveReportItem>();
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveReportItems")]
    public List<ProgressiveReportItem> ProgressiveReportItems {
        get {
            return this.progressiveReportItemsField;
        }
        set {
            this.progressiveReportItemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class ReportItem {
    
    private object itemField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Key", typeof(ReportItemKey))]
    [System.Xml.Serialization.XmlElementAttribute("Label", typeof(string))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGameDataInspectionVer1.xsd")]
public enum ReportItemKey {
    
    /// <remarks/>
    BaseHoldPercent,
    
    /// <remarks/>
    BaseRTPPercent,
    
    /// <remarks/>
    GameDescription,
    
    /// <remarks/>
    JackpotRTP,
    
    /// <remarks/>
    LinkSeriesModel,
    
    /// <remarks/>
    MaxLines,
    
    /// <remarks/>
    MaxWays,
    
    /// <remarks/>
    MaxWinAmount,
    
    /// <remarks/>
    MaxWinCredits,
    
    /// <remarks/>
    MinBetAmount,
    
    /// <remarks/>
    MinBetCredits,
    
    /// <remarks/>
    MinLines,
    
    /// <remarks/>
    MinWays,
    
    /// <remarks/>
    TotalHoldPercent,
    
    /// <remarks/>
    TotalRTPPercent,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class InspectionReport {
    
    private List<ReportItem> reportDataField = new List<ReportItem>();
    
    private List<ProgressiveGameLevelData> progressiveReportDataField = new List<ProgressiveGameLevelData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReportData")]
    public List<ReportItem> ReportData {
        get {
            return this.reportDataField;
        }
        set {
            this.reportDataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveReportData")]
    public List<ProgressiveGameLevelData> ProgressiveReportData {
        get {
            return this.progressiveReportDataField;
        }
        set {
            this.progressiveReportDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class GetListLimitedRandomNumbersReplyContent {
    
    private List<int> randomNumberListField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("RandomNumber", IsNullable=false)]
    public List<int> RandomNumberList {
        get {
            return this.randomNumberListField;
        }
        set {
            this.randomNumberListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class GetRandomNumbersReplyContent {
    
    private List<int> randomNumberListField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("RandomNumber", IsNullable=false)]
    public List<int> RandomNumberList {
        get {
            return this.randomNumberListField;
        }
        set {
            this.randomNumberListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class PayvarBasedProgressiveSettings {
    
    private uint denominationField;
    
    private bool enabledField;
    
    private List<GameLevelProgressiveSettings> progressiveLinkedGameLevelSettingsField = new List<GameLevelProgressiveSettings>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLinkedGameLevelSettings")]
    public List<GameLevelProgressiveSettings> ProgressiveLinkedGameLevelSettings {
        get {
            return this.progressiveLinkedGameLevelSettingsField;
        }
        set {
            this.progressiveLinkedGameLevelSettingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameLevelProgressiveSettings", Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GameLevelProgressiveSettings {
    
    private uint gameLevelField;
    
    private ProgressiveSettings progressiveSettingsField;
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    public ProgressiveSettings ProgressiveSettings {
        get {
            return this.progressiveSettingsField;
        }
        set {
            this.progressiveSettingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ProgressiveSettings", Namespace="F2XProgressiveDataVer1.xsd")]
public partial class ProgressiveSettings {
    
    private Amount startAmountField;
    
    private Amount maximumAmountField;
    
    private string contributionPercentageField;
    
    /// <remarks/>
    public Amount StartAmount {
        get {
            return this.startAmountField;
        }
        set {
            this.startAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount MaximumAmount {
        get {
            return this.maximumAmountField;
        }
        set {
            this.maximumAmountField = value;
        }
    }
    
    /// <remarks/>
    public string ContributionPercentage {
        get {
            return this.contributionPercentageField;
        }
        set {
            this.contributionPercentageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class EnabledProgressiveSettings {
    
    private uint denominationField;
    
    private List<GameLevelProgressiveSettings> progressiveLinkedGameLevelSettingsField = new List<GameLevelProgressiveSettings>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLinkedGameLevelSettings")]
    public List<GameLevelProgressiveSettings> ProgressiveLinkedGameLevelSettings {
        get {
            return this.progressiveLinkedGameLevelSettingsField;
        }
        set {
            this.progressiveLinkedGameLevelSettingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class ThemeBasedProgressiveSettings {
    
    private uint denominationField;
    
    private bool enabledField;
    
    private List<GameLevelProgressiveSettings> progressiveLinkedGameLevelSettingsField = new List<GameLevelProgressiveSettings>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLinkedGameLevelSettings")]
    public List<GameLevelProgressiveSettings> ProgressiveLinkedGameLevelSettings {
        get {
            return this.progressiveLinkedGameLevelSettingsField;
        }
        set {
            this.progressiveLinkedGameLevelSettingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class PayvarBasedProgressiveValues {
    
    private uint denominationField;
    
    private bool enabledField;
    
    private List<GameLevelProgressiveLinkedValueData> progressiveLinkedGameLevelValueField = new List<GameLevelProgressiveLinkedValueData>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLinkedGameLevelValue")]
    public List<GameLevelProgressiveLinkedValueData> ProgressiveLinkedGameLevelValue {
        get {
            return this.progressiveLinkedGameLevelValueField;
        }
        set {
            this.progressiveLinkedGameLevelValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GameLevelProgressiveLinkedValueData {
    
    private uint gameLevelField;
    
    private ProgressiveLinkedValueData progressiveLinkedValueDataField;
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    public ProgressiveLinkedValueData ProgressiveLinkedValueData {
        get {
            return this.progressiveLinkedValueDataField;
        }
        set {
            this.progressiveLinkedValueDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class ProgressiveLinkedValueData {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LinkDownText", typeof(LinkDownTextLocalization))]
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveValue", typeof(ProgressiveValue))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class LinkDownTextLocalization {
    
    private List<LinkDownTextLocalizationLinkDownTextLocalization> linkDownTextLocalization1Field = new List<LinkDownTextLocalizationLinkDownTextLocalization>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LinkDownTextLocalization")]
    public List<LinkDownTextLocalizationLinkDownTextLocalization> LinkDownTextLocalization1 {
        get {
            return this.linkDownTextLocalization1Field;
        }
        set {
            this.linkDownTextLocalization1Field = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class LinkDownTextLocalizationLinkDownTextLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class ProgressiveValue {
    
    private Amount amountField;
    
    private List<ProgressiveValuePrizeLocalization> prizeField = new List<ProgressiveValuePrizeLocalization>();
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PrizeLocalization", IsNullable=false)]
    public List<ProgressiveValuePrizeLocalization> Prize {
        get {
            return this.prizeField;
        }
        set {
            this.prizeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class ProgressiveValuePrizeLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class EnabledProgressiveValues {
    
    private uint denominationField;
    
    private List<GameLevelProgressiveLinkedValueData> progressiveLinkedGameLevelValueField = new List<GameLevelProgressiveLinkedValueData>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLinkedGameLevelValue")]
    public List<GameLevelProgressiveLinkedValueData> ProgressiveLinkedGameLevelValue {
        get {
            return this.progressiveLinkedGameLevelValueField;
        }
        set {
            this.progressiveLinkedGameLevelValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class ThemeBasedProgressiveValues {
    
    private uint denominationField;
    
    private bool enabledField;
    
    private List<GameLevelProgressiveLinkedValueData> progressiveLinkedGameLevelValueField = new List<GameLevelProgressiveLinkedValueData>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLinkedGameLevelValue")]
    public List<GameLevelProgressiveLinkedValueData> ProgressiveLinkedGameLevelValue {
        get {
            return this.progressiveLinkedGameLevelValueField;
        }
        set {
            this.progressiveLinkedGameLevelValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerTippingVer1.xsd")]
public partial class TippingRequestReplyContent {
    
    private bool reservationSucceededField;
    
    /// <remarks/>
    public bool ReservationSucceeded {
        get {
            return this.reservationSucceededField;
        }
        set {
            this.reservationSucceededField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetPropertiesReplyContent", Namespace="F2XPlayerTippingVer1.xsd")]
public partial class GetPropertiesReplyContent {
    
    private Properties propertiesField;
    
    /// <remarks/>
    public Properties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="Properties", Namespace="F2XPlayerTippingVer1.xsd")]
public partial class Properties {
    
    private bool enabledField;
    
    private bool enabledFieldSpecified;
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnabledSpecified {
        get {
            return this.enabledFieldSpecified;
        }
        set {
            this.enabledFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class QueryCurrentResetParametersReplyContent {
    
    private List<SessionParameterType> pendingParametersField = new List<SessionParameterType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Parameter", IsNullable=false)]
    public List<SessionParameterType> PendingParameters {
        get {
            return this.pendingParametersField;
        }
        set {
            this.pendingParametersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public enum SessionParameterType {
    
    /// <remarks/>
    Culture,
    
    /// <remarks/>
    Denomination,
    
    /// <remarks/>
    PlayerVolume,
    
    /// <remarks/>
    GameSpeed,
    
    /// <remarks/>
    CreditDisplay,
    
    /// <remarks/>
    BetSelection,
    
    /// <remarks/>
    ThemeSpecific,
    
    /// <remarks/>
    ChooserSpecific,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class GetConfigDataPlayerSessionParameterResetEnabledReplyContent {
    
    private bool parameterResetEnabledField;
    
    /// <remarks/>
    public bool ParameterResetEnabled {
        get {
            return this.parameterResetEnabledField;
        }
        set {
            this.parameterResetEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class GetPidConfigurationReplyContent {
    
    private PidConfigurationInfo pidConfigurationInfoField;
    
    /// <remarks/>
    public PidConfigurationInfo PidConfigurationInfo {
        get {
            return this.pidConfigurationInfoField;
        }
        set {
            this.pidConfigurationInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class PidConfigurationInfo {
    
    private bool isMainEntryEnabledField;
    
    private GameInformationDisplayStyle gameInformationDisplayStyleField;
    
    private SessionTrackingOption sessionTrackingOptionField;
    
    private bool isGameRulesEnabledField;
    
    private long informationMenuTimeoutMillisecondsField;
    
    private long sessionStartMessageTimeoutMillisecondsField;
    
    private long viewSessionScreenTimeoutMillisecondsField;
    
    private long viewGameInformationTimeoutMillisecondsField;
    
    private long viewGameRulesTimeoutMillisecondsField;
    
    private long viewPaytableTimeoutMillisecondsField;
    
    private long sessionTimeoutIntervalMillisecondsField;
    
    private bool sessionTimeoutStartsOnZeroCreditsField;
    
    private ushort totalNumberLinkEnrollmentsField;
    
    private bool showLinkJackpotCountField;
    
    private string totalLinkedProgressiveRtpField;
    
    private bool displayProgressiveCeilingField;
    
    private bool displayStandaloneProgressivesField;
    
    private bool usePluralReturnToPlayerField;
    
    /// <remarks/>
    public bool IsMainEntryEnabled {
        get {
            return this.isMainEntryEnabledField;
        }
        set {
            this.isMainEntryEnabledField = value;
        }
    }
    
    /// <remarks/>
    public GameInformationDisplayStyle GameInformationDisplayStyle {
        get {
            return this.gameInformationDisplayStyleField;
        }
        set {
            this.gameInformationDisplayStyleField = value;
        }
    }
    
    /// <remarks/>
    public SessionTrackingOption SessionTrackingOption {
        get {
            return this.sessionTrackingOptionField;
        }
        set {
            this.sessionTrackingOptionField = value;
        }
    }
    
    /// <remarks/>
    public bool IsGameRulesEnabled {
        get {
            return this.isGameRulesEnabledField;
        }
        set {
            this.isGameRulesEnabledField = value;
        }
    }
    
    /// <remarks/>
    public long InformationMenuTimeoutMilliseconds {
        get {
            return this.informationMenuTimeoutMillisecondsField;
        }
        set {
            this.informationMenuTimeoutMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public long SessionStartMessageTimeoutMilliseconds {
        get {
            return this.sessionStartMessageTimeoutMillisecondsField;
        }
        set {
            this.sessionStartMessageTimeoutMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public long ViewSessionScreenTimeoutMilliseconds {
        get {
            return this.viewSessionScreenTimeoutMillisecondsField;
        }
        set {
            this.viewSessionScreenTimeoutMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public long ViewGameInformationTimeoutMilliseconds {
        get {
            return this.viewGameInformationTimeoutMillisecondsField;
        }
        set {
            this.viewGameInformationTimeoutMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public long ViewGameRulesTimeoutMilliseconds {
        get {
            return this.viewGameRulesTimeoutMillisecondsField;
        }
        set {
            this.viewGameRulesTimeoutMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public long ViewPaytableTimeoutMilliseconds {
        get {
            return this.viewPaytableTimeoutMillisecondsField;
        }
        set {
            this.viewPaytableTimeoutMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public long SessionTimeoutIntervalMilliseconds {
        get {
            return this.sessionTimeoutIntervalMillisecondsField;
        }
        set {
            this.sessionTimeoutIntervalMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public bool SessionTimeoutStartsOnZeroCredits {
        get {
            return this.sessionTimeoutStartsOnZeroCreditsField;
        }
        set {
            this.sessionTimeoutStartsOnZeroCreditsField = value;
        }
    }
    
    /// <remarks/>
    public ushort TotalNumberLinkEnrollments {
        get {
            return this.totalNumberLinkEnrollmentsField;
        }
        set {
            this.totalNumberLinkEnrollmentsField = value;
        }
    }
    
    /// <remarks/>
    public bool ShowLinkJackpotCount {
        get {
            return this.showLinkJackpotCountField;
        }
        set {
            this.showLinkJackpotCountField = value;
        }
    }
    
    /// <remarks/>
    public string TotalLinkedProgressiveRtp {
        get {
            return this.totalLinkedProgressiveRtpField;
        }
        set {
            this.totalLinkedProgressiveRtpField = value;
        }
    }
    
    /// <remarks/>
    public bool DisplayProgressiveCeiling {
        get {
            return this.displayProgressiveCeilingField;
        }
        set {
            this.displayProgressiveCeilingField = value;
        }
    }
    
    /// <remarks/>
    public bool DisplayStandaloneProgressives {
        get {
            return this.displayStandaloneProgressivesField;
        }
        set {
            this.displayStandaloneProgressivesField = value;
        }
    }
    
    /// <remarks/>
    public bool UsePluralReturnToPlayer {
        get {
            return this.usePluralReturnToPlayerField;
        }
        set {
            this.usePluralReturnToPlayerField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public enum GameInformationDisplayStyle {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Victoria,
    
    /// <remarks/>
    Singapore,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public enum SessionTrackingOption {
    
    /// <remarks/>
    Disabled,
    
    /// <remarks/>
    ViewableOnly,
    
    /// <remarks/>
    PlayerControlled,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class SessionData {
    
    private bool isSessionTrackingActiveField;
    
    private Amount moneyInField;
    
    private Amount moneyOutField;
    
    private Amount amountPlayedField;
    
    private Amount amountWonField;
    
    private Amount creditMeterAtSessionStartField;
    
    private Amount sessionWinOrLossAmountField;
    
    private bool isWinningSessionField;
    
    private bool isCrownField;
    
    private System.DateTime sessionStartedTimeField;
    
    /// <remarks/>
    public bool IsSessionTrackingActive {
        get {
            return this.isSessionTrackingActiveField;
        }
        set {
            this.isSessionTrackingActiveField = value;
        }
    }
    
    /// <remarks/>
    public Amount MoneyIn {
        get {
            return this.moneyInField;
        }
        set {
            this.moneyInField = value;
        }
    }
    
    /// <remarks/>
    public Amount MoneyOut {
        get {
            return this.moneyOutField;
        }
        set {
            this.moneyOutField = value;
        }
    }
    
    /// <remarks/>
    public Amount AmountPlayed {
        get {
            return this.amountPlayedField;
        }
        set {
            this.amountPlayedField = value;
        }
    }
    
    /// <remarks/>
    public Amount AmountWon {
        get {
            return this.amountWonField;
        }
        set {
            this.amountWonField = value;
        }
    }
    
    /// <remarks/>
    public Amount CreditMeterAtSessionStart {
        get {
            return this.creditMeterAtSessionStartField;
        }
        set {
            this.creditMeterAtSessionStartField = value;
        }
    }
    
    /// <remarks/>
    public Amount SessionWinOrLossAmount {
        get {
            return this.sessionWinOrLossAmountField;
        }
        set {
            this.sessionWinOrLossAmountField = value;
        }
    }
    
    /// <remarks/>
    public bool IsWinningSession {
        get {
            return this.isWinningSessionField;
        }
        set {
            this.isWinningSessionField = value;
        }
    }
    
    /// <remarks/>
    public bool IsCrown {
        get {
            return this.isCrownField;
        }
        set {
            this.isCrownField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime SessionStartedTime {
        get {
            return this.sessionStartedTimeField;
        }
        set {
            this.sessionStartedTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class GetSessionDataReplyContent {
    
    private SessionData sessionDataField;
    
    /// <remarks/>
    public SessionData SessionData {
        get {
            return this.sessionDataField;
        }
        set {
            this.sessionDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PerformCashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPerformCashoutVer1.xsd")]
public partial class PerformCashoutRequestReplyContent {
    
    private bool acceptedField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class TransParcelCallRxReplyContent {
    
    private bool acceptedField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class TransParcelCallTxReplyContent {
    
    private ParcelCallStatus statusField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public ParcelCallStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public enum ParcelCallStatus {
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    Busy,
    
    /// <remarks/>
    Unavailable,
    
    /// <remarks/>
    Rejected,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCallRxReplyContent {
    
    private bool acceptedField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCallTxReplyContent {
    
    private ParcelCallStatus statusField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public ParcelCallStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd")]
public partial class ReadCritDataItemReplyResult {
    
    private CriticalDataItemSelector criticalDataItemSelectorField;
    
    private byte[] dataField;
    
    /// <remarks/>
    public CriticalDataItemSelector CriticalDataItemSelector {
        get {
            return this.criticalDataItemSelectorField;
        }
        set {
            this.criticalDataItemSelectorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd")]
public partial class CriticalDataItemSelector : CriticalDataItemScopeSelector {
    
    private string nameField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NonTransactionalCritDataRead.CriticalDataItemSelector))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd")]
public partial class CriticalDataItemScopeSelector {
    
    private object itemField;
    
    private ItemChoiceType itemElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Extension", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionAnalytics", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionPersistent", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Payvar", typeof(PayvarIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("PayvarAnalytics", typeof(PayvarIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("PayvarPersistent", typeof(PayvarIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Theme", typeof(ThemeIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeAnalytics", typeof(ThemeIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ThemePersistent", typeof(ThemeIdentifier))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd", IncludeInSchema=false)]
public enum ItemChoiceType {
    
    /// <remarks/>
    Extension,
    
    /// <remarks/>
    ExtensionAnalytics,
    
    /// <remarks/>
    ExtensionPersistent,
    
    /// <remarks/>
    Payvar,
    
    /// <remarks/>
    PayvarAnalytics,
    
    /// <remarks/>
    PayvarPersistent,
    
    /// <remarks/>
    Theme,
    
    /// <remarks/>
    ThemeAnalytics,
    
    /// <remarks/>
    ThemePersistent,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class GetPrioritizedIPListReplyContent {
    
    private List<string> iPAddressField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("IPAddress")]
    public List<string> IPAddress {
        get {
            return this.iPAddressField;
        }
        set {
            this.iPAddressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class GetIPAddressForHostConnectionReplyContent {
    
    private string iPAddressField;
    
    /// <remarks/>
    public string IPAddress {
        get {
            return this.iPAddressField;
        }
        set {
            this.iPAddressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class AddIpv4RoutingTableEntryReplyContent {
    
    private RoutingTableResult statusField;
    
    /// <remarks/>
    public RoutingTableResult Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public enum RoutingTableResult {
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    Failure,
    
    /// <remarks/>
    BadDestination,
    
    /// <remarks/>
    BadNetworkMask,
    
    /// <remarks/>
    BadGateway,
    
    /// <remarks/>
    InvalidIndex,
    
    /// <remarks/>
    AlreadyExists,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class NicInformation {
    
    private string nicNameField;
    
    private string ipAddressField;
    
    private string gatewayField;
    
    private string nicDescriptionField;
    
    /// <remarks/>
    public string NicName {
        get {
            return this.nicNameField;
        }
        set {
            this.nicNameField = value;
        }
    }
    
    /// <remarks/>
    public string IpAddress {
        get {
            return this.ipAddressField;
        }
        set {
            this.ipAddressField = value;
        }
    }
    
    /// <remarks/>
    public string Gateway {
        get {
            return this.gatewayField;
        }
        set {
            this.gatewayField = value;
        }
    }
    
    /// <remarks/>
    public string NicDescription {
        get {
            return this.nicDescriptionField;
        }
        set {
            this.nicDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class GetNicInformationReplyContent {
    
    private List<NicInformation> nicInformationListField = new List<NicInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<NicInformation> NicInformationList {
        get {
            return this.nicInformationListField;
        }
        set {
            this.nicInformationListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class RequestOfferingMidGameMoneyAcceptanceReplyContent {
    
    private bool acceptedField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class GetMessagesReplyContent {
    
    private List<Message> messagesField = new List<Message>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<Message> Messages {
        get {
            return this.messagesField;
        }
        set {
            this.messagesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class Message {
    
    private bool highPriorityField;
    
    private List<MessageLocalization> messageLocalizationsField = new List<MessageLocalization>();
    
    /// <remarks/>
    public bool HighPriority {
        get {
            return this.highPriorityField;
        }
        set {
            this.highPriorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<MessageLocalization> MessageLocalizations {
        get {
            return this.messageLocalizationsField;
        }
        set {
            this.messageLocalizationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class MessageLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineFloorLocationReplyContent {
    
    private string machineFloorLocationField;
    
    /// <remarks/>
    public string MachineFloorLocation {
        get {
            return this.machineFloorLocationField;
        }
        set {
            this.machineFloorLocationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineAssetNumberReplyContent {
    
    private uint machineAssetNumberField;
    
    /// <remarks/>
    public uint MachineAssetNumber {
        get {
            return this.machineAssetNumberField;
        }
        set {
            this.machineAssetNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataG2SMachineIdentifierReplyContent {
    
    private string g2SMachineIdentifierField;
    
    /// <remarks/>
    public string G2SMachineIdentifier {
        get {
            return this.g2SMachineIdentifierField;
        }
        set {
            this.g2SMachineIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineSerialNumberReplyContent {
    
    private string serialNumberField;
    
    /// <remarks/>
    public string SerialNumber {
        get {
            return this.serialNumberField;
        }
        set {
            this.serialNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class LanguageIconEntry {
    
    private string cultureStringField;
    
    private string languageIconIdField;
    
    /// <remarks/>
    public string CultureString {
        get {
            return this.cultureStringField;
        }
        set {
            this.cultureStringField = value;
        }
    }
    
    /// <remarks/>
    public string LanguageIconId {
        get {
            return this.languageIconIdField;
        }
        set {
            this.languageIconIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class CreditFormatterInfo {
    
    private string numericDecimalSeparatorField;
    
    private string numericGroupSeparatorField;
    
    private CreditFormatterInfoWholeUnitCurrencySymbol wholeUnitCurrencySymbolField;
    
    private CreditFormatterInfoBaseUnitCurrencySymbol baseUnitCurrencySymbolField;
    
    private bool useGroupSeparatorForNonMonetaryNumbersField;
    
    private CreditFormatterInfoNegativeAmountDisplayFormat negativeAmountDisplayFormatField;
    
    /// <remarks/>
    public string NumericDecimalSeparator {
        get {
            return this.numericDecimalSeparatorField;
        }
        set {
            this.numericDecimalSeparatorField = value;
        }
    }
    
    /// <remarks/>
    public string NumericGroupSeparator {
        get {
            return this.numericGroupSeparatorField;
        }
        set {
            this.numericGroupSeparatorField = value;
        }
    }
    
    /// <remarks/>
    public CreditFormatterInfoWholeUnitCurrencySymbol WholeUnitCurrencySymbol {
        get {
            return this.wholeUnitCurrencySymbolField;
        }
        set {
            this.wholeUnitCurrencySymbolField = value;
        }
    }
    
    /// <remarks/>
    public CreditFormatterInfoBaseUnitCurrencySymbol BaseUnitCurrencySymbol {
        get {
            return this.baseUnitCurrencySymbolField;
        }
        set {
            this.baseUnitCurrencySymbolField = value;
        }
    }
    
    /// <remarks/>
    public bool UseGroupSeparatorForNonMonetaryNumbers {
        get {
            return this.useGroupSeparatorForNonMonetaryNumbersField;
        }
        set {
            this.useGroupSeparatorForNonMonetaryNumbersField = value;
        }
    }
    
    /// <remarks/>
    public CreditFormatterInfoNegativeAmountDisplayFormat NegativeAmountDisplayFormat {
        get {
            return this.negativeAmountDisplayFormatField;
        }
        set {
            this.negativeAmountDisplayFormatField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLocalizationVer1.xsd")]
public partial class CreditFormatterInfoWholeUnitCurrencySymbol {
    
    private CurrencySymbolPosition currencySymbolPositionField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public CurrencySymbolPosition CurrencySymbolPosition {
        get {
            return this.currencySymbolPositionField;
        }
        set {
            this.currencySymbolPositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public enum CurrencySymbolPosition {
    
    /// <remarks/>
    Left,
    
    /// <remarks/>
    Right,
    
    /// <remarks/>
    LeftWithSpace,
    
    /// <remarks/>
    RightWithSpace,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLocalizationVer1.xsd")]
public partial class CreditFormatterInfoBaseUnitCurrencySymbol {
    
    private CurrencySymbolPosition currencySymbolPositionField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public CurrencySymbolPosition CurrencySymbolPosition {
        get {
            return this.currencySymbolPositionField;
        }
        set {
            this.currencySymbolPositionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLocalizationVer1.xsd")]
public enum CreditFormatterInfoNegativeAmountDisplayFormat {
    
    /// <remarks/>
    NegativeSignIsFirstSymbol,
    
    /// <remarks/>
    NegativeSignBeforeNumerics,
    
    /// <remarks/>
    NegativeSignAfterNumerics,
    
    /// <remarks/>
    NegativesShownInParentheses,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class SetApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class GetApiVersionsReplyContent {
    
    private GetApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLinkControlVer1.xsd")]
public partial class GetApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class QueryLegacyBonusHostStatusReplyContent {
    
    private LegacyBonusHostStatusData hostStatusField;
    
    /// <remarks/>
    public LegacyBonusHostStatusData HostStatus {
        get {
            return this.hostStatusField;
        }
        set {
            this.hostStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusHostStatusData {
    
    private bool onlineField;
    
    /// <remarks/>
    public bool Online {
        get {
            return this.onlineField;
        }
        set {
            this.onlineField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class QueryLegacyBonusStatusReplyContent {
    
    private bool enabledField;
    
    private List<LegacyBonusData> bonusesField = new List<LegacyBonusData>();
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Bonuses")]
    public List<LegacyBonusData> Bonuses {
        get {
            return this.bonusesField;
        }
        set {
            this.bonusesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusData {
    
    private uint uniqueBonusIdField;
    
    private TaxStatus taxStatusField;
    
    private Amount amountField;
    
    private bool bookingHoldOffField;
    
    /// <remarks/>
    public uint UniqueBonusId {
        get {
            return this.uniqueBonusIdField;
        }
        set {
            this.uniqueBonusIdField = value;
        }
    }
    
    /// <remarks/>
    public TaxStatus TaxStatus {
        get {
            return this.taxStatusField;
        }
        set {
            this.taxStatusField = value;
        }
    }
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    public bool BookingHoldOff {
        get {
            return this.bookingHoldOffField;
        }
        set {
            this.bookingHoldOffField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public enum TaxStatus {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    Deductible,
    
    /// <remarks/>
    NonDeductible,
    
    /// <remarks/>
    WagerMatch,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class RequestLegacyBonusBookingHoldOffReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusNotificationEnableReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XJackpotItalyVer1.xsd")]
public partial class LinkedJackpotBonusData {
    
    private int jackpotLevelField;
    
    private Amount jackpotBonusValueField;
    
    /// <remarks/>
    public int JackpotLevel {
        get {
            return this.jackpotLevelField;
        }
        set {
            this.jackpotLevelField = value;
        }
    }
    
    /// <remarks/>
    public Amount JackpotBonusValue {
        get {
            return this.jackpotBonusValueField;
        }
        set {
            this.jackpotBonusValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class RequestReserveActivationReplyContent {
    
    private bool requestAcceptedField;
    
    /// <remarks/>
    public bool RequestAccepted {
        get {
            return this.requestAcceptedField;
        }
        set {
            this.requestAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class GetReserveParametersReplyContent {
    
    private ReserveParameters reserveParametersField;
    
    /// <remarks/>
    public ReserveParameters ReserveParameters {
        get {
            return this.reserveParametersField;
        }
        set {
            this.reserveParametersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class ReserveParameters {
    
    private bool reserveAllowedWithCreditsField;
    
    private bool reserveAllowedWithoutCreditsField;
    
    private long reserveTimeWithCreditsMillisecondsField;
    
    private long reserveTimeWithoutCreditsMillisecondsField;
    
    /// <remarks/>
    public bool ReserveAllowedWithCredits {
        get {
            return this.reserveAllowedWithCreditsField;
        }
        set {
            this.reserveAllowedWithCreditsField = value;
        }
    }
    
    /// <remarks/>
    public bool ReserveAllowedWithoutCredits {
        get {
            return this.reserveAllowedWithoutCreditsField;
        }
        set {
            this.reserveAllowedWithoutCreditsField = value;
        }
    }
    
    /// <remarks/>
    public long ReserveTimeWithCreditsMilliseconds {
        get {
            return this.reserveTimeWithCreditsMillisecondsField;
        }
        set {
            this.reserveTimeWithCreditsMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public long ReserveTimeWithoutCreditsMilliseconds {
        get {
            return this.reserveTimeWithoutCreditsMillisecondsField;
        }
        set {
            this.reserveTimeWithoutCreditsMillisecondsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameProgressiveSettings {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameProgressiveSettingsVer1.xsd")]
public partial class ProgressiveSettings {
    
    private Amount startAmountField;
    
    private Amount maximumAmountField;
    
    private string contributionPercentageField;
    
    /// <remarks/>
    public Amount StartAmount {
        get {
            return this.startAmountField;
        }
        set {
            this.startAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount MaximumAmount {
        get {
            return this.maximumAmountField;
        }
        set {
            this.maximumAmountField = value;
        }
    }
    
    /// <remarks/>
    public string ContributionPercentage {
        get {
            return this.contributionPercentageField;
        }
        set {
            this.contributionPercentageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameProgressiveSettings {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameProgressiveSettingsVer1.xsd")]
public partial class GameLevelProgressiveSettings {
    
    private uint gameLevelField;
    
    private ProgressiveSettings progressiveSettingsField;
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    public ProgressiveSettings ProgressiveSettings {
        get {
            return this.progressiveSettingsField;
        }
        set {
            this.progressiveSettingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ConfigData", Namespace="F2XGamePresentationBehaviorVer1.xsd")]
public partial class ConfigData {
    
    private uint minimumBaseGamePresentationTimeField;
    
    private uint freeSpinPresentationTimeField;
    
    private CreditMeterDisplayBehaviorType creditMeterDisplayBehaviorField;
    
    private MaxBetButtonPanelBehaviorType maxBetButtonPanelBehaviorField;
    
    private bool displayVideoReelsForStepperField;
    
    private bool displayVideoReelsForStepperFieldSpecified;
    
    /// <remarks/>
    public uint MinimumBaseGamePresentationTime {
        get {
            return this.minimumBaseGamePresentationTimeField;
        }
        set {
            this.minimumBaseGamePresentationTimeField = value;
        }
    }
    
    /// <remarks/>
    public uint FreeSpinPresentationTime {
        get {
            return this.freeSpinPresentationTimeField;
        }
        set {
            this.freeSpinPresentationTimeField = value;
        }
    }
    
    /// <remarks/>
    public CreditMeterDisplayBehaviorType CreditMeterDisplayBehavior {
        get {
            return this.creditMeterDisplayBehaviorField;
        }
        set {
            this.creditMeterDisplayBehaviorField = value;
        }
    }
    
    /// <remarks/>
    public MaxBetButtonPanelBehaviorType MaxBetButtonPanelBehavior {
        get {
            return this.maxBetButtonPanelBehaviorField;
        }
        set {
            this.maxBetButtonPanelBehaviorField = value;
        }
    }
    
    /// <remarks/>
    public bool DisplayVideoReelsForStepper {
        get {
            return this.displayVideoReelsForStepperField;
        }
        set {
            this.displayVideoReelsForStepperField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DisplayVideoReelsForStepperSpecified {
        get {
            return this.displayVideoReelsForStepperFieldSpecified;
        }
        set {
            this.displayVideoReelsForStepperFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePresentationBehaviorVer1.xsd")]
public enum CreditMeterDisplayBehaviorType {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    PlayerSelectableDefaultCredits,
    
    /// <remarks/>
    PlayerSelectableDefaultCurrency,
    
    /// <remarks/>
    AlwaysCurrency,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePresentationBehaviorVer1.xsd")]
public enum MaxBetButtonPanelBehaviorType {
    
    /// <remarks/>
    BetMaxCreditsOnly,
    
    /// <remarks/>
    BetAvailableCredits,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReplyContent", Namespace="F2XGamePresentationBehaviorVer1.xsd")]
public partial class GetConfigDataReplyContent {
    
    private ConfigData configDataField;
    
    /// <remarks/>
    public ConfigData ConfigData {
        get {
            return this.configDataField;
        }
        set {
            this.configDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GetGameFocusReplyContent {
    
    private GameFocus gameFocusField;
    
    /// <remarks/>
    public GameFocus GameFocus {
        get {
            return this.gameFocusField;
        }
        set {
            this.gameFocusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GameFocus {
    
    private int coplayerField;
    
    private ThemeSelector themeSelectorField;
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    public ThemeSelector ThemeSelector {
        get {
            return this.themeSelectorField;
        }
        set {
            this.themeSelectorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GetGameInProgressReplyContent {
    
    private bool gameInProgressField;
    
    /// <remarks/>
    public bool GameInProgress {
        get {
            return this.gameInProgressField;
        }
        set {
            this.gameInProgressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLink {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLinkVer1.xsd")]
public partial class GetConfigDataStompBrokerReplyContent {
    
    private string hostnameField;
    
    private int portField;
    
    private Version versionField;
    
    /// <remarks/>
    public string Hostname {
        get {
            return this.hostnameField;
        }
        set {
            this.hostnameField = value;
        }
    }
    
    /// <remarks/>
    public int Port {
        get {
            return this.portField;
        }
        set {
            this.portField = value;
        }
    }
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GameLevelValue {
    
    private Amount amountField;
    
    private List<GameLevelValuePrizeLocalization> prizeField = new List<GameLevelValuePrizeLocalization>();
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PrizeLocalization", IsNullable=false)]
    public List<GameLevelValuePrizeLocalization> Prize {
        get {
            return this.prizeField;
        }
        set {
            this.prizeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GameLevelValuePrizeLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GameLevelLinkedValue {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelValue", typeof(GameLevelValue))]
    [System.Xml.Serialization.XmlElementAttribute("LinkDownText", typeof(LinkDownTextLocalizations))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class LinkDownTextLocalizations {
    
    private List<LinkDownTextLocalizationsLinkDownTextLocalization> linkDownTextLocalizationField = new List<LinkDownTextLocalizationsLinkDownTextLocalization>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LinkDownTextLocalization")]
    public List<LinkDownTextLocalizationsLinkDownTextLocalization> LinkDownTextLocalization {
        get {
            return this.linkDownTextLocalizationField;
        }
        set {
            this.linkDownTextLocalizationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class LinkDownTextLocalizationsLinkDownTextLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GameLevelLinkedData {
    
    private uint gameLevelField;
    
    private GameLevelLinkedValue gameLevelLinkedValueField;
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    public GameLevelLinkedValue GameLevelLinkedValue {
        get {
            return this.gameLevelLinkedValueField;
        }
        set {
            this.gameLevelLinkedValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GameLevelDenomData {
    
    private uint denominationField;
    
    private List<GameLevelLinkedData> gameLevelLinkedDataField = new List<GameLevelLinkedData>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelLinkedData")]
    public List<GameLevelLinkedData> GameLevelLinkedData {
        get {
            return this.gameLevelLinkedDataField;
        }
        set {
            this.gameLevelLinkedDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GameLevelPayvarDenomData {
    
    private PayvarIdentifier payvarField;
    
    private List<GameLevelDenomData> gameLevelDenomDataField = new List<GameLevelDenomData>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelDenomData")]
    public List<GameLevelDenomData> GameLevelDenomData {
        get {
            return this.gameLevelDenomDataField;
        }
        set {
            this.gameLevelDenomDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class DenominationButtonPanelMinBet {
    
    private PayvarDenomination payvarDenominationField;
    
    private ulong buttonPanelMinBetCreditsField;
    
    private bool buttonPanelMinBetCreditsFieldSpecified;
    
    /// <remarks/>
    public PayvarDenomination PayvarDenomination {
        get {
            return this.payvarDenominationField;
        }
        set {
            this.payvarDenominationField = value;
        }
    }
    
    /// <remarks/>
    public ulong ButtonPanelMinBetCredits {
        get {
            return this.buttonPanelMinBetCreditsField;
        }
        set {
            this.buttonPanelMinBetCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ButtonPanelMinBetCreditsSpecified {
        get {
            return this.buttonPanelMinBetCreditsFieldSpecified;
        }
        set {
            this.buttonPanelMinBetCreditsFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class PayvarDenomination {
    
    private PayvarIdentifier payvarField;
    
    private uint denominationField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class PayvarButtonPanelMinBet {
    
    private PayvarIdentifier payvarField;
    
    private ulong buttonPanelMinBetCreditsField;
    
    private bool buttonPanelMinBetCreditsFieldSpecified;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public ulong ButtonPanelMinBetCredits {
        get {
            return this.buttonPanelMinBetCreditsField;
        }
        set {
            this.buttonPanelMinBetCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ButtonPanelMinBetCreditsSpecified {
        get {
            return this.buttonPanelMinBetCreditsFieldSpecified;
        }
        set {
            this.buttonPanelMinBetCreditsFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class ThemeButtonPanelMinBet {
    
    private ThemeIdentifier themeField;
    
    private ulong buttonPanelMinBetCreditsField;
    
    private bool buttonPanelMinBetCreditsFieldSpecified;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public ulong ButtonPanelMinBetCredits {
        get {
            return this.buttonPanelMinBetCreditsField;
        }
        set {
            this.buttonPanelMinBetCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ButtonPanelMinBetCreditsSpecified {
        get {
            return this.buttonPanelMinBetCreditsFieldSpecified;
        }
        set {
            this.buttonPanelMinBetCreditsFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="PayvarInformation", Namespace="F2XGameInformationVer1.xsd")]
public partial class PayvarInformation {
    
    private PayvarIdentifier payvarField;
    
    private string tagField;
    
    private string tagDataFileField;
    
    private string groupTagField;
    
    private string groupTagDataFileField;
    
    private bool enabledField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    public string TagDataFile {
        get {
            return this.tagDataFileField;
        }
        set {
            this.tagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public string GroupTag {
        get {
            return this.groupTagField;
        }
        set {
            this.groupTagField = value;
        }
    }
    
    /// <remarks/>
    public string GroupTagDataFile {
        get {
            return this.groupTagDataFileField;
        }
        set {
            this.groupTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class ThemeInformation {
    
    private ThemeIdentifier themeField;
    
    private string g2SThemeIdentifierField;
    
    private string tagField;
    
    private string tagDataFileField;
    
    private bool enabledField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public string G2SThemeIdentifier {
        get {
            return this.g2SThemeIdentifierField;
        }
        set {
            this.g2SThemeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    public string TagDataFile {
        get {
            return this.tagDataFileField;
        }
        set {
            this.tagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class PayvarEnabledDenominations {
    
    private PayvarIdentifier payvarField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class ThemeEnabledDenominations {
    
    private ThemeIdentifier themeField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class PayvarSupportedDenominations {
    
    private PayvarIdentifier payvarField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class ThemeSupportedDenominations {
    
    private ThemeIdentifier themeField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class DenominationMaxBetCreditData {
    
    private PayvarDenomination payvarDenominationField;
    
    private ulong maxBetCreditsField;
    
    private bool maxBetCreditsFieldSpecified;
    
    /// <remarks/>
    public PayvarDenomination PayvarDenomination {
        get {
            return this.payvarDenominationField;
        }
        set {
            this.payvarDenominationField = value;
        }
    }
    
    /// <remarks/>
    public ulong MaxBetCredits {
        get {
            return this.maxBetCreditsField;
        }
        set {
            this.maxBetCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxBetCreditsSpecified {
        get {
            return this.maxBetCreditsFieldSpecified;
        }
        set {
            this.maxBetCreditsFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class PayvarMaxBetCreditData {
    
    private PayvarIdentifier payvarField;
    
    private ulong maxBetCreditsField;
    
    private bool maxBetCreditsFieldSpecified;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public ulong MaxBetCredits {
        get {
            return this.maxBetCreditsField;
        }
        set {
            this.maxBetCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxBetCreditsSpecified {
        get {
            return this.maxBetCreditsFieldSpecified;
        }
        set {
            this.maxBetCreditsFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class ThemeMaxBetCreditData {
    
    private ThemeIdentifier themeField;
    
    private ulong maxBetCreditsField;
    
    private bool maxBetCreditsFieldSpecified;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public ulong MaxBetCredits {
        get {
            return this.maxBetCreditsField;
        }
        set {
            this.maxBetCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MaxBetCreditsSpecified {
        get {
            return this.maxBetCreditsFieldSpecified;
        }
        set {
            this.maxBetCreditsFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class ThemeBetResolution {
    
    private ThemeIdentifier themeField;
    
    private ThemeBetResolutionBetResolution betResolutionField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public ThemeBetResolutionBetResolution BetResolution {
        get {
            return this.betResolutionField;
        }
        set {
            this.betResolutionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameInformationVer1.xsd")]
public enum ThemeBetResolutionBetResolution {
    
    /// <remarks/>
    PerTheme,
    
    /// <remarks/>
    PerPayvar,
    
    /// <remarks/>
    PerPayvarDenomination,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class PayvarPaybackPercentageData {
    
    private PayvarIdentifier payvarField;
    
    private string paybackPercentageField;
    
    private string minimumPaybackPercentageField;
    
    private string minimumPaybackPercentageWithoutProgressivesField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public string PaybackPercentage {
        get {
            return this.paybackPercentageField;
        }
        set {
            this.paybackPercentageField = value;
        }
    }
    
    /// <remarks/>
    public string MinimumPaybackPercentage {
        get {
            return this.minimumPaybackPercentageField;
        }
        set {
            this.minimumPaybackPercentageField = value;
        }
    }
    
    /// <remarks/>
    public string MinimumPaybackPercentageWithoutProgressives {
        get {
            return this.minimumPaybackPercentageWithoutProgressivesField;
        }
        set {
            this.minimumPaybackPercentageWithoutProgressivesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class ThemePayvarList {
    
    private ThemeIdentifier themeField;
    
    private List<PayvarIdentifier> payvarField = new List<PayvarIdentifier>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarIdentifier> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="PayvarInformation", Namespace="F2XGameGroupInformationVer1.xsd")]
public partial class PayvarInformation {
    
    private PayvarIdentifier payvarField;
    
    private string groupTagField;
    
    private string groupTagDataFileField;
    
    private ulong redefinedMaxbetCreditsField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public string GroupTag {
        get {
            return this.groupTagField;
        }
        set {
            this.groupTagField = value;
        }
    }
    
    /// <remarks/>
    public string GroupTagDataFile {
        get {
            return this.groupTagDataFileField;
        }
        set {
            this.groupTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public ulong RedefinedMaxbetCredits {
        get {
            return this.redefinedMaxbetCreditsField;
        }
        set {
            this.redefinedMaxbetCreditsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupInformationVer1.xsd")]
public partial class PayvarGroup {
    
    private string groupEntityField;
    
    private string groupNameField;
    
    private List<PayvarInformation> payvarInformationsField = new List<PayvarInformation>();
    
    /// <remarks/>
    public string GroupEntity {
        get {
            return this.groupEntityField;
        }
        set {
            this.groupEntityField = value;
        }
    }
    
    /// <remarks/>
    public string GroupName {
        get {
            return this.groupNameField;
        }
        set {
            this.groupNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PayvarInformations")]
    public List<PayvarInformation> PayvarInformations {
        get {
            return this.payvarInformationsField;
        }
        set {
            this.payvarInformationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupInformationVer1.xsd")]
public partial class ThemePayvarGroups {
    
    private ThemeIdentifier themeField;
    
    private List<PayvarGroup> payvarGroupsField = new List<PayvarGroup>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PayvarGroups")]
    public List<PayvarGroup> PayvarGroups {
        get {
            return this.payvarGroupsField;
        }
        set {
            this.payvarGroupsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class PayvarInformation {
    
    private PayvarIdentifier payvarField;
    
    private string groupTagField;
    
    private string groupTagDataFileField;
    
    private ulong redefinedMaxbetCreditsField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public string GroupTag {
        get {
            return this.groupTagField;
        }
        set {
            this.groupTagField = value;
        }
    }
    
    /// <remarks/>
    public string GroupTagDataFile {
        get {
            return this.groupTagDataFileField;
        }
        set {
            this.groupTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public ulong RedefinedMaxbetCredits {
        get {
            return this.redefinedMaxbetCreditsField;
        }
        set {
            this.redefinedMaxbetCreditsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class GetSelectedPayvarReplyContent {
    
    private PayvarIdentifier payvarField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class ClearGameCycleBehaviorModifierReplyContent {
    
    private List<GameCycleBehaviorModifier> enabledBehaviorModifiersField = new List<GameCycleBehaviorModifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BehaviorModifier", IsNullable=false)]
    public List<GameCycleBehaviorModifier> EnabledBehaviorModifiers {
        get {
            return this.enabledBehaviorModifiersField;
        }
        set {
            this.enabledBehaviorModifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public enum GameCycleBehaviorModifier {
    
    /// <remarks/>
    PreventGameStart,
    
    /// <remarks/>
    DelayMainPlayComplete,
    
    /// <remarks/>
    PreventAncillaryOffer,
    
    /// <remarks/>
    DelayGameEnd,
    
    /// <remarks/>
    ExternalPresentation,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class EnableGameCycleBehaviorModifiersReplyContent {
    
    private List<GameCycleBehaviorModifier> enabledBehaviorModifiersField = new List<GameCycleBehaviorModifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BehaviorModifier", IsNullable=false)]
    public List<GameCycleBehaviorModifier> EnabledBehaviorModifiers {
        get {
            return this.enabledBehaviorModifiersField;
        }
        set {
            this.enabledBehaviorModifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AbortGameCycleReplyContent {
    
    private bool acceptedField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeResponseDataReplyContent {
    
    private bool isReadyField;
    
    private bool isLastOutcomeField;
    
    private OutcomeList outcomeListField;
    
    /// <remarks/>
    public bool IsReady {
        get {
            return this.isReadyField;
        }
        set {
            this.isReadyField = value;
        }
    }
    
    /// <remarks/>
    public bool IsLastOutcome {
        get {
            return this.isLastOutcomeField;
        }
        set {
            this.isLastOutcomeField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeList OutcomeList {
        get {
            return this.outcomeListField;
        }
        set {
            this.outcomeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class OutcomeList {
    
    private List<OutcomeListFeatureEntry> featureEntryField = new List<OutcomeListFeatureEntry>();
    
    private List<OutcomeListGameCycleEntry> gameCycleEntryField = new List<OutcomeListGameCycleEntry>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FeatureEntry")]
    public List<OutcomeListFeatureEntry> FeatureEntry {
        get {
            return this.featureEntryField;
        }
        set {
            this.featureEntryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameCycleEntry")]
    public List<OutcomeListGameCycleEntry> GameCycleEntry {
        get {
            return this.gameCycleEntryField;
        }
        set {
            this.gameCycleEntryField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class OutcomeListFeatureEntry {
    
    private OutcomeListFeatureEntryFeatureRngNumbers featureRngNumbersField;
    
    private OutcomeListFeatureEntryAwards awardsField;
    
    private uint featureIndexField;
    
    /// <remarks/>
    public OutcomeListFeatureEntryFeatureRngNumbers FeatureRngNumbers {
        get {
            return this.featureRngNumbersField;
        }
        set {
            this.featureRngNumbersField = value;
        }
    }
    
    /// <remarks/>
    public OutcomeListFeatureEntryAwards Awards {
        get {
            return this.awardsField;
        }
        set {
            this.awardsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint FeatureIndex {
        get {
            return this.featureIndexField;
        }
        set {
            this.featureIndexField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class OutcomeListFeatureEntryFeatureRngNumbers {
    
    private List<int> numberField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Number")]
    public List<int> Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class OutcomeListFeatureEntryAwards {
    
    private List<Award> itemsField = new List<Award>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AncillaryAward", typeof(AncillaryAward))]
    [System.Xml.Serialization.XmlElementAttribute("FeatureAward", typeof(FeatureAward))]
    [System.Xml.Serialization.XmlElementAttribute("RiskAward", typeof(RiskAward))]
    public List<Award> Items {
        get {
            return this.itemsField;
        }
        set {
            this.itemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AncillaryAward : Award {
    
    private Amount riskAmountField;
    
    private AncillaryAwardWinType winTypeField;
    
    /// <remarks/>
    public Amount RiskAmount {
        get {
            return this.riskAmountField;
        }
        set {
            this.riskAmountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public AncillaryAwardWinType WinType {
        get {
            return this.winTypeField;
        }
        set {
            this.winTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public enum AncillaryAwardWinType {
    
    /// <remarks/>
    Win,
    
    /// <remarks/>
    Loss,
    
    /// <remarks/>
    Tie,
    
    /// <remarks/>
    Cancel,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.BonusExtensionAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FeatureAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.ProgressiveAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FeatureProgressiveAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.RiskAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AncillaryAward))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class Award : Outcome {
    
    private Amount amountField;
    
    private bool isDisplayableField;
    
    private string displayableReasonField;
    
    private string prizeStringField;
    
    private bool isTopAwardField;
    
    private bool isTopAwardFieldSpecified;
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool IsDisplayable {
        get {
            return this.isDisplayableField;
        }
        set {
            this.isDisplayableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string DisplayableReason {
        get {
            return this.displayableReasonField;
        }
        set {
            this.displayableReasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string PrizeString {
        get {
            return this.prizeStringField;
        }
        set {
            this.prizeStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool IsTopAward {
        get {
            return this.isTopAwardField;
        }
        set {
            this.isTopAwardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IsTopAwardSpecified {
        get {
            return this.isTopAwardFieldSpecified;
        }
        set {
            this.isTopAwardFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.ProgressiveNearHit))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.Award))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.BonusExtensionAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FeatureAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.ProgressiveAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FeatureProgressiveAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.RiskAward))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AncillaryAward))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class Outcome {
    
    private OutcomeOrigin originField;
    
    private string tagField;
    
    private string sourceField;
    
    private string sourceDetailField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public OutcomeOrigin Origin {
        get {
            return this.originField;
        }
        set {
            this.originField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Source {
        get {
            return this.sourceField;
        }
        set {
            this.sourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string SourceDetail {
        get {
            return this.sourceDetailField;
        }
        set {
            this.sourceDetailField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public enum OutcomeOrigin {
    
    /// <remarks/>
    Client,
    
    /// <remarks/>
    Foundation,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class ProgressiveNearHit : Outcome {
    
    private uint gameLevelField;
    
    private bool gameLevelFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GameLevelSpecified {
        get {
            return this.gameLevelFieldSpecified;
        }
        set {
            this.gameLevelFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class BonusExtensionAward : Award {
    
    private long bonusIdentifierField;
    
    private bool bonusIdentifierFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long BonusIdentifier {
        get {
            return this.bonusIdentifierField;
        }
        set {
            this.bonusIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BonusIdentifierSpecified {
        get {
            return this.bonusIdentifierFieldSpecified;
        }
        set {
            this.bonusIdentifierFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class FeatureAward : Award {
    
    private List<FeatureProgressiveAward> featureProgressiveAwardField = new List<FeatureProgressiveAward>();
    
    private List<ProgressiveNearHit> progressiveNearHitField = new List<ProgressiveNearHit>();
    
    private uint winLevelIndexField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FeatureProgressiveAward")]
    public List<FeatureProgressiveAward> FeatureProgressiveAward {
        get {
            return this.featureProgressiveAwardField;
        }
        set {
            this.featureProgressiveAwardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveNearHit")]
    public List<ProgressiveNearHit> ProgressiveNearHit {
        get {
            return this.progressiveNearHitField;
        }
        set {
            this.progressiveNearHitField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint WinLevelIndex {
        get {
            return this.winLevelIndexField;
        }
        set {
            this.winLevelIndexField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class FeatureProgressiveAward : ProgressiveAward {
    
    private Amount consolationAmountField;
    
    /// <remarks/>
    public Amount ConsolationAmount {
        get {
            return this.consolationAmountField;
        }
        set {
            this.consolationAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FeatureProgressiveAward))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class ProgressiveAward : Award {
    
    private ProgressiveAwardHitState hitStateField;
    
    private uint gameLevelField;
    
    private bool gameLevelFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ProgressiveAwardHitState HitState {
        get {
            return this.hitStateField;
        }
        set {
            this.hitStateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GameLevelSpecified {
        get {
            return this.gameLevelFieldSpecified;
        }
        set {
            this.gameLevelFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public enum ProgressiveAwardHitState {
    
    /// <remarks/>
    PotentialHit,
    
    /// <remarks/>
    Hit,
    
    /// <remarks/>
    NotHit,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class RiskAward : Award {
    
    private Amount riskAmountField;
    
    private RiskAwardAwardType awardTypeField;
    
    /// <remarks/>
    public Amount RiskAmount {
        get {
            return this.riskAmountField;
        }
        set {
            this.riskAmountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public RiskAwardAwardType AwardType {
        get {
            return this.awardTypeField;
        }
        set {
            this.awardTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public enum RiskAwardAwardType {
    
    /// <remarks/>
    RoundWagerUpPlayoff,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class OutcomeListGameCycleEntry {
    
    private List<Award> awardField = new List<Award>();
    
    private List<ProgressiveAward> progressiveAwardField = new List<ProgressiveAward>();
    
    private List<BonusExtensionAward> bonusExtensionAwardField = new List<BonusExtensionAward>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Award")]
    public List<Award> Award {
        get {
            return this.awardField;
        }
        set {
            this.awardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveAward")]
    public List<ProgressiveAward> ProgressiveAward {
        get {
            return this.progressiveAwardField;
        }
        set {
            this.progressiveAwardField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BonusExtensionAward")]
    public List<BonusExtensionAward> BonusExtensionAward {
        get {
            return this.bonusExtensionAwardField;
        }
        set {
            this.bonusExtensionAwardField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EnrollResponseDataReplyContent {
    
    private bool isReadyField;
    
    private bool enrollSuccessField;
    
    private bool enrollSuccessFieldSpecified;
    
    private byte[] hostEnrollmentDataField;
    
    /// <remarks/>
    public bool IsReady {
        get {
            return this.isReadyField;
        }
        set {
            this.isReadyField = value;
        }
    }
    
    /// <remarks/>
    public bool EnrollSuccess {
        get {
            return this.enrollSuccessField;
        }
        set {
            this.enrollSuccessField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool EnrollSuccessSpecified {
        get {
            return this.enrollSuccessFieldSpecified;
        }
        set {
            this.enrollSuccessFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] HostEnrollmentData {
        get {
            return this.hostEnrollmentDataField;
        }
        set {
            this.hostEnrollmentDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class CommitGameCycleReplyContent {
    
    private bool commitSuccessfulField;
    
    /// <remarks/>
    public bool CommitSuccessful {
        get {
            return this.commitSuccessfulField;
        }
        set {
            this.commitSuccessfulField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class QueryGameCycleStateReplyContent {
    
    private GameCycleState currentGameCycleStateField;
    
    /// <remarks/>
    public GameCycleState CurrentGameCycleState {
        get {
            return this.currentGameCycleStateField;
        }
        set {
            this.currentGameCycleStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public enum GameCycleState {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Idle,
    
    /// <remarks/>
    Committed,
    
    /// <remarks/>
    EnrollPending,
    
    /// <remarks/>
    EnrollComplete,
    
    /// <remarks/>
    Playing,
    
    /// <remarks/>
    EvaluatePending,
    
    /// <remarks/>
    MainPlayComplete,
    
    /// <remarks/>
    AncillaryPlaying,
    
    /// <remarks/>
    AncillaryEvaluatePending,
    
    /// <remarks/>
    AncillaryPlayComplete,
    
    /// <remarks/>
    BonusPlaying,
    
    /// <remarks/>
    BonusEvaluatePending,
    
    /// <remarks/>
    BonusPlayComplete,
    
    /// <remarks/>
    AbortPending,
    
    /// <remarks/>
    FinalizeAwardPending,
    
    /// <remarks/>
    Finalized,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ConfigData", Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class ConfigData {
    
    private Amount maxBetAmountField;
    
    private Amount minBetAmountField;
    
    private Amount buttonPanelMinBetAmountField;
    
    /// <remarks/>
    public Amount MaxBetAmount {
        get {
            return this.maxBetAmountField;
        }
        set {
            this.maxBetAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount MinBetAmount {
        get {
            return this.minBetAmountField;
        }
        set {
            this.minBetAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount ButtonPanelMinBetAmount {
        get {
            return this.buttonPanelMinBetAmountField;
        }
        set {
            this.buttonPanelMinBetAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReplyContent", Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class GetConfigDataReplyContent {
    
    private ConfigData configDataField;
    
    /// <remarks/>
    public ConfigData ConfigData {
        get {
            return this.configDataField;
        }
        set {
            this.configDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class PlaceBetReplyContent {
    
    private bool betPlacedField;
    
    /// <remarks/>
    public bool BetPlaced {
        get {
            return this.betPlacedField;
        }
        set {
            this.betPlacedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class CommitBetReplyContent {
    
    private bool betCommittedField;
    
    /// <remarks/>
    public bool BetCommitted {
        get {
            return this.betCommittedField;
        }
        set {
            this.betCommittedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XG2SConnectionVer1.xsd")]
public partial class OcspSettings {
    
    private string responderUriField;
    
    private bool useNonceField;
    
    private uint gsaOOField;
    
    private uint gsaORField;
    
    private uint gsaOAField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string ResponderUri {
        get {
            return this.responderUriField;
        }
        set {
            this.responderUriField = value;
        }
    }
    
    /// <remarks/>
    public bool UseNonce {
        get {
            return this.useNonceField;
        }
        set {
            this.useNonceField = value;
        }
    }
    
    /// <remarks/>
    public uint GsaOO {
        get {
            return this.gsaOOField;
        }
        set {
            this.gsaOOField = value;
        }
    }
    
    /// <remarks/>
    public uint GsaOR {
        get {
            return this.gsaORField;
        }
        set {
            this.gsaORField = value;
        }
    }
    
    /// <remarks/>
    public uint GsaOA {
        get {
            return this.gsaOAField;
        }
        set {
            this.gsaOAField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetOcspSettingsReplyContent {
    
    private OcspSettings settingsField;
    
    /// <remarks/>
    public OcspSettings Settings {
        get {
            return this.settingsField;
        }
        set {
            this.settingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetCertificateAuthoritiesReplyContent", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetCertificateAuthoritiesReplyContent {
    
    private string certificateDataField;
    
    /// <remarks/>
    public string CertificateData {
        get {
            return this.certificateDataField;
        }
        set {
            this.certificateDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetClientCertificateReplyContent", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetClientCertificateReplyContent {
    
    private string certificateDataField;
    
    /// <remarks/>
    public string CertificateData {
        get {
            return this.certificateDataField;
        }
        set {
            this.certificateDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetG2SHostAddressReplyContent", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetG2SHostAddressReplyContent {
    
    private string addressField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string Address {
        get {
            return this.addressField;
        }
        set {
            this.addressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class GetFlashPlayerClockPropertiesReplyContent {
    
    private FlashPlayerClockProperties flashPlayerClockPropertiesField;
    
    /// <remarks/>
    public FlashPlayerClockProperties FlashPlayerClockProperties {
        get {
            return this.flashPlayerClockPropertiesField;
        }
        set {
            this.flashPlayerClockPropertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class FlashPlayerClockProperties {
    
    private bool playerClockSessionActiveField;
    
    private bool playerClockSessionActiveFieldSpecified;
    
    /// <remarks/>
    public bool PlayerClockSessionActive {
        get {
            return this.playerClockSessionActiveField;
        }
        set {
            this.playerClockSessionActiveField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayerClockSessionActiveSpecified {
        get {
            return this.playerClockSessionActiveFieldSpecified;
        }
        set {
            this.playerClockSessionActiveFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ConfigData", Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class ConfigData {
    
    private bool flashPlayerClockEnabledField;
    
    private uint numberOfFlashesPerSequenceField;
    
    private uint flashSequenceLengthMillisecondsField;
    
    private uint minutesBetweenSequencesField;
    
    /// <remarks/>
    public bool FlashPlayerClockEnabled {
        get {
            return this.flashPlayerClockEnabledField;
        }
        set {
            this.flashPlayerClockEnabledField = value;
        }
    }
    
    /// <remarks/>
    public uint NumberOfFlashesPerSequence {
        get {
            return this.numberOfFlashesPerSequenceField;
        }
        set {
            this.numberOfFlashesPerSequenceField = value;
        }
    }
    
    /// <remarks/>
    public uint FlashSequenceLengthMilliseconds {
        get {
            return this.flashSequenceLengthMillisecondsField;
        }
        set {
            this.flashSequenceLengthMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public uint MinutesBetweenSequences {
        get {
            return this.minutesBetweenSequencesField;
        }
        set {
            this.minutesBetweenSequencesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReplyContent", Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class GetConfigDataReplyContent {
    
    private ConfigData configDataField;
    
    /// <remarks/>
    public ConfigData ConfigData {
        get {
            return this.configDataField;
        }
        set {
            this.configDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetSSLCertConfigurationReplyContent {
    
    private SSLCertStatus statusField;
    
    /// <remarks/>
    public SSLCertStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public enum SSLCertStatus {
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    CertNotFound,
    
    /// <remarks/>
    AccessDenied,
    
    /// <remarks/>
    AlreadyExists,
    
    /// <remarks/>
    BindingNotFound,
    
    /// <remarks/>
    Other,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetUrlAclConfigurationReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetPortEnabledReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class GetPortStatusReplyContent {
    
    private bool portEnabledField;
    
    /// <remarks/>
    public bool PortEnabled {
        get {
            return this.portEnabledField;
        }
        set {
            this.portEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class GetFirewallEnabledReplyContent {
    
    private bool firewallEnabledField;
    
    /// <remarks/>
    public bool FirewallEnabled {
        get {
            return this.firewallEnabledField;
        }
        set {
            this.firewallEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ValidationRequestReplyContent {
    
    private List<string> potentialHitIdsField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PotentialHitId", IsNullable=false)]
    public List<string> PotentialHitIds {
        get {
            return this.potentialHitIdsField;
        }
        set {
            this.potentialHitIdsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class GetConfigDataMinControllerLevelUpdateIntervalReplyContent {
    
    private ulong updateIntervalField;
    
    /// <remarks/>
    public ulong UpdateInterval {
        get {
            return this.updateIntervalField;
        }
        set {
            this.updateIntervalField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class QueryProgressiveLinksReplyContent {
    
    private List<ControllerProgressiveLink> progressiveLinksField = new List<ControllerProgressiveLink>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ProgressiveLink", IsNullable=false)]
    public List<ControllerProgressiveLink> ProgressiveLinks {
        get {
            return this.progressiveLinksField;
        }
        set {
            this.progressiveLinksField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class ControllerProgressiveLink : ProgressiveLink {
    
    private bool immutableField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool Immutable {
        get {
            return this.immutableField;
        }
        set {
            this.immutableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.ControllerProgressiveLink))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class ProgressiveLink {
    
    private ControllerLevelSelector controllerField;
    
    private GameLevelSelector gameField;
    
    /// <remarks/>
    public ControllerLevelSelector Controller {
        get {
            return this.controllerField;
        }
        set {
            this.controllerField = value;
        }
    }
    
    /// <remarks/>
    public GameLevelSelector Game {
        get {
            return this.gameField;
        }
        set {
            this.gameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class ControllerLevelSelector {
    
    private string controllerIdField;
    
    private uint controllerLevelField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
    
    /// <remarks/>
    public uint ControllerLevel {
        get {
            return this.controllerLevelField;
        }
        set {
            this.controllerLevelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class GameLevelSelector {
    
    private PayvarIdentifier payvarIdField;
    
    private uint gameLevelField;
    
    private List<uint> gameDenominationsField = new List<uint>();
    
    /// <remarks/>
    public PayvarIdentifier PayvarId {
        get {
            return this.payvarIdField;
        }
        set {
            this.payvarIdField = value;
        }
    }
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Denomination", IsNullable=false)]
    public List<uint> GameDenominations {
        get {
            return this.gameDenominationsField;
        }
        set {
            this.gameDenominationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class GameLevelSettings {
    
    private GameLevelSelector gameField;
    
    private GameLevelStatus statusField;
    
    /// <remarks/>
    public GameLevelSelector Game {
        get {
            return this.gameField;
        }
        set {
            this.gameField = value;
        }
    }
    
    /// <remarks/>
    public GameLevelStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public enum GameLevelStatus {
    
    /// <remarks/>
    NotConfigured,
    
    /// <remarks/>
    Linked,
    
    /// <remarks/>
    BrokenLink,
    
    /// <remarks/>
    LinkDown,
    
    /// <remarks/>
    Unavailable,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class QueryGameLevelDefinitionsReplyContent {
    
    private List<GameLevelSettings> gameLevelSettingsField = new List<GameLevelSettings>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GameLevelSetting", IsNullable=false)]
    public List<GameLevelSettings> GameLevelSettings {
        get {
            return this.gameLevelSettingsField;
        }
        set {
            this.gameLevelSettingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class ControllerDefinition {
    
    private string controllerIdField;
    
    private ControllerName controllerNameField;
    
    private string controllerTypeField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
    
    /// <remarks/>
    public ControllerName ControllerName {
        get {
            return this.controllerNameField;
        }
        set {
            this.controllerNameField = value;
        }
    }
    
    /// <remarks/>
    public string ControllerType {
        get {
            return this.controllerTypeField;
        }
        set {
            this.controllerTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerTypesVer1.xsd")]
public partial class ControllerName : LocalizedString {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerTypes.PrizeString))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerTypes.LinkDownString))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerTypes.ControllerName))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerTypes.ControllerLevelDescription))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerTypesVer1.xsd")]
public partial class LocalizedString {
    
    private List<LocalizedStringValue> stringValueField = new List<LocalizedStringValue>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StringValue")]
    public List<LocalizedStringValue> StringValue {
        get {
            return this.stringValueField;
        }
        set {
            this.stringValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerTypesVer1.xsd")]
public partial class LocalizedStringValue {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerTypesVer1.xsd")]
public partial class PrizeString : LocalizedString {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerTypesVer1.xsd")]
public partial class LinkDownString : LocalizedString {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerTypesVer1.xsd")]
public partial class ControllerLevelDescription : LocalizedString {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class QueryControllersReplyContent {
    
    private List<ControllerDefinition> controllersField = new List<ControllerDefinition>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Controller", IsNullable=false)]
    public List<ControllerDefinition> Controllers {
        get {
            return this.controllersField;
        }
        set {
            this.controllersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class QueryControllerLevelsReplyContent {
    
    private List<ControllerLevelDefinition> definitionsField = new List<ControllerLevelDefinition>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Definition", IsNullable=false)]
    public List<ControllerLevelDefinition> Definitions {
        get {
            return this.definitionsField;
        }
        set {
            this.definitionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class ControllerLevelDefinition {
    
    private uint controllerLevelField;
    
    private List<ControllerLevelOption> optionsField = new List<ControllerLevelOption>();
    
    private ControllerLevelDescription controllerLevelDescriptionField;
    
    private AmountParameter startAmountField;
    
    private AmountParameter maximumAmountField;
    
    private DecimalParameter betContributionPercentageField;
    
    /// <remarks/>
    public uint ControllerLevel {
        get {
            return this.controllerLevelField;
        }
        set {
            this.controllerLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Option", IsNullable=false)]
    public List<ControllerLevelOption> Options {
        get {
            return this.optionsField;
        }
        set {
            this.optionsField = value;
        }
    }
    
    /// <remarks/>
    public ControllerLevelDescription ControllerLevelDescription {
        get {
            return this.controllerLevelDescriptionField;
        }
        set {
            this.controllerLevelDescriptionField = value;
        }
    }
    
    /// <remarks/>
    public AmountParameter StartAmount {
        get {
            return this.startAmountField;
        }
        set {
            this.startAmountField = value;
        }
    }
    
    /// <remarks/>
    public AmountParameter MaximumAmount {
        get {
            return this.maximumAmountField;
        }
        set {
            this.maximumAmountField = value;
        }
    }
    
    /// <remarks/>
    public DecimalParameter BetContributionPercentage {
        get {
            return this.betContributionPercentageField;
        }
        set {
            this.betContributionPercentageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public enum ControllerLevelOption {
    
    /// <remarks/>
    Wap,
    
    /// <remarks/>
    PrizeString,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class AmountParameter {
    
    private Amount valueField;
    
    private ParameterModifiability modifiabilityField;
    
    /// <remarks/>
    public Amount Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ParameterModifiability Modifiability {
        get {
            return this.modifiabilityField;
        }
        set {
            this.modifiabilityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public enum ParameterModifiability {
    
    /// <remarks/>
    Immutable,
    
    /// <remarks/>
    Mutable,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class DecimalParameter {
    
    private string valueField;
    
    private ParameterModifiability modifiabilityField;
    
    /// <remarks/>
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ParameterModifiability Modifiability {
        get {
            return this.modifiabilityField;
        }
        set {
            this.modifiabilityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class CreateControllerReplyContent {
    
    private string controllerIdField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetSelectedCentralAppReplyContent {
    
    private AppSelector selectedAppField;
    
    /// <remarks/>
    public AppSelector SelectedApp {
        get {
            return this.selectedAppField;
        }
        set {
            this.selectedAppField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class AppSelector {
    
    private AppIdentifier appField;
    
    private uint denominationField;
    
    private bool denominationFieldSpecified;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DenominationSpecified {
        get {
            return this.denominationFieldSpecified;
        }
        set {
            this.denominationFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class AppIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class CentralAppSelectionRequestReplyContent {
    
    private bool acceptedField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetAvailableCentralAppsReplyContent {
    
    private AppInformationList appsField;
    
    /// <remarks/>
    public AppInformationList Apps {
        get {
            return this.appsField;
        }
        set {
            this.appsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class AppInformationList {
    
    private List<AppInformation> appField = new List<AppInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("App")]
    public List<AppInformation> App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class AppInformation {
    
    private AppIdentifier appIdentifierField;
    
    private string csiClientIdentifierField;
    
    private string staticIdentifierField;
    
    private System.DateTime displayAsNewUntilField;
    
    private List<AppAttribute> attributesField = new List<AppAttribute>();
    
    private List<DenominationInformation> denominationInformationField = new List<DenominationInformation>();
    
    private CultureList culturesField;
    
    private LocalizedAppResources localizedResourcesField;
    
    private AppCategoryList categoriesField;
    
    /// <remarks/>
    public AppIdentifier AppIdentifier {
        get {
            return this.appIdentifierField;
        }
        set {
            this.appIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string CsiClientIdentifier {
        get {
            return this.csiClientIdentifierField;
        }
        set {
            this.csiClientIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string StaticIdentifier {
        get {
            return this.staticIdentifierField;
        }
        set {
            this.staticIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
    public System.DateTime DisplayAsNewUntil {
        get {
            return this.displayAsNewUntilField;
        }
        set {
            this.displayAsNewUntilField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Attribute", Namespace="F2XAppTypesVer1.xsd", IsNullable=false)]
    public List<AppAttribute> Attributes {
        get {
            return this.attributesField;
        }
        set {
            this.attributesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Information", Namespace="F2XAppTypesVer1.xsd", IsNullable=false)]
    public List<DenominationInformation> DenominationInformation {
        get {
            return this.denominationInformationField;
        }
        set {
            this.denominationInformationField = value;
        }
    }
    
    /// <remarks/>
    public CultureList Cultures {
        get {
            return this.culturesField;
        }
        set {
            this.culturesField = value;
        }
    }
    
    /// <remarks/>
    public LocalizedAppResources LocalizedResources {
        get {
            return this.localizedResourcesField;
        }
        set {
            this.localizedResourcesField = value;
        }
    }
    
    /// <remarks/>
    public AppCategoryList Categories {
        get {
            return this.categoriesField;
        }
        set {
            this.categoriesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public enum AppAttribute {
    
    /// <remarks/>
    AutoPlay,
    
    /// <remarks/>
    RoundWagerUpPlayoff,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class DenominationInformation {
    
    private List<DenominationAttribute> attributesField = new List<DenominationAttribute>();
    
    private ulong maxBetField;
    
    private uint denominationField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Attribute", IsNullable=false)]
    public List<DenominationAttribute> Attributes {
        get {
            return this.attributesField;
        }
        set {
            this.attributesField = value;
        }
    }
    
    /// <remarks/>
    public ulong MaxBet {
        get {
            return this.maxBetField;
        }
        set {
            this.maxBetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public enum DenominationAttribute {
    
    /// <remarks/>
    Progressive,
    
    /// <remarks/>
    AncillaryPlay,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class LocalizedAppResources {
    
    private string nameField;
    
    private string iconField;
    
    private string logoField;
    
    private string loadingDisplayField;
    
    private string promoField;
    
    private string attractField;
    
    private List<LocalizationKeyHierarchyNode> customCategoriesField = new List<LocalizationKeyHierarchyNode>();
    
    private LocalizationTableList localizationTablesField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Icon {
        get {
            return this.iconField;
        }
        set {
            this.iconField = value;
        }
    }
    
    /// <remarks/>
    public string Logo {
        get {
            return this.logoField;
        }
        set {
            this.logoField = value;
        }
    }
    
    /// <remarks/>
    public string LoadingDisplay {
        get {
            return this.loadingDisplayField;
        }
        set {
            this.loadingDisplayField = value;
        }
    }
    
    /// <remarks/>
    public string Promo {
        get {
            return this.promoField;
        }
        set {
            this.promoField = value;
        }
    }
    
    /// <remarks/>
    public string Attract {
        get {
            return this.attractField;
        }
        set {
            this.attractField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Nodes", Namespace="F2XLocalizationTypesVer1.xsd", IsNullable=false)]
    public List<LocalizationKeyHierarchyNode> CustomCategories {
        get {
            return this.customCategoriesField;
        }
        set {
            this.customCategoriesField = value;
        }
    }
    
    /// <remarks/>
    public LocalizationTableList LocalizationTables {
        get {
            return this.localizationTablesField;
        }
        set {
            this.localizationTablesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class AppCategoryList {
    
    private List<AppCategory> categoryField = new List<AppCategory>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Category")]
    public List<AppCategory> Category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public enum AppCategory {
    
    /// <remarks/>
    Blackjack,
    
    /// <remarks/>
    iGame,
    
    /// <remarks/>
    Keno,
    
    /// <remarks/>
    Poker,
    
    /// <remarks/>
    Reel,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetAppSelectionStateReplyContent {
    
    private AppSelectionState stateField;
    
    /// <remarks/>
    public AppSelectionState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public enum AppSelectionState {
    
    /// <remarks/>
    Unlocked,
    
    /// <remarks/>
    Locked,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReplyContent", Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetConfigDataReplyContent {
    
    private bool appSelectionEnabledField;
    
    /// <remarks/>
    public bool AppSelectionEnabled {
        get {
            return this.appSelectionEnabledField;
        }
        set {
            this.appSelectionEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataRtpOrderedByBetRequiredReplyContent {
    
    private bool rtpOrderedByBetRequiredField;
    
    /// <remarks/>
    public bool RtpOrderedByBetRequired {
        get {
            return this.rtpOrderedByBetRequiredField;
        }
        set {
            this.rtpOrderedByBetRequiredField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataDisplayVideoReelsForStepperReplyContent {
    
    private bool displayVideoReelsForStepperField;
    
    /// <remarks/>
    public bool DisplayVideoReelsForStepper {
        get {
            return this.displayVideoReelsForStepperField;
        }
        set {
            this.displayVideoReelsForStepperField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class DefaultBetSelectionStyle {
    
    private BetSelectionBehavior numberOfSubsetsField;
    
    private BetSelectionBehavior betPerSubsetField;
    
    private SideBetSelectionBehavior sideBetField;
    
    /// <remarks/>
    public BetSelectionBehavior NumberOfSubsets {
        get {
            return this.numberOfSubsetsField;
        }
        set {
            this.numberOfSubsetsField = value;
        }
    }
    
    /// <remarks/>
    public BetSelectionBehavior BetPerSubset {
        get {
            return this.betPerSubsetField;
        }
        set {
            this.betPerSubsetField = value;
        }
    }
    
    /// <remarks/>
    public SideBetSelectionBehavior SideBet {
        get {
            return this.sideBetField;
        }
        set {
            this.sideBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public enum BetSelectionBehavior {
    
    /// <remarks/>
    Undefined,
    
    /// <remarks/>
    Minimum,
    
    /// <remarks/>
    Maximum,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public enum SideBetSelectionBehavior {
    
    /// <remarks/>
    Undefined,
    
    /// <remarks/>
    Include,
    
    /// <remarks/>
    Exclude,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataDefaultBetSelectionStyleReplyContent {
    
    private DefaultBetSelectionStyle defaultBetSelectionStyleField;
    
    /// <remarks/>
    public DefaultBetSelectionStyle DefaultBetSelectionStyle {
        get {
            return this.defaultBetSelectionStyleField;
        }
        set {
            this.defaultBetSelectionStyleField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetMarketingBehaviorReplyContent {
    
    private TopScreenGameAdvertisement topScreenGameAdvertisementField;
    
    /// <remarks/>
    public TopScreenGameAdvertisement TopScreenGameAdvertisement {
        get {
            return this.topScreenGameAdvertisementField;
        }
        set {
            this.topScreenGameAdvertisementField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public enum TopScreenGameAdvertisement {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Promo,
    
    /// <remarks/>
    Paytable,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetAncillaryMonetaryLimitReplyContent {
    
    private Amount ancillaryMonetaryLimitField;
    
    /// <remarks/>
    public Amount AncillaryMonetaryLimit {
        get {
            return this.ancillaryMonetaryLimitField;
        }
        set {
            this.ancillaryMonetaryLimitField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataExternalBonusWinCapReplyContent {
    
    private Amount externalBonusWinCapField;
    
    /// <remarks/>
    public Amount ExternalBonusWinCap {
        get {
            return this.externalBonusWinCapField;
        }
        set {
            this.externalBonusWinCapField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataProgressiveWinCapReplyContent {
    
    private Amount progressiveWinCapField;
    
    /// <remarks/>
    public Amount ProgressiveWinCap {
        get {
            return this.progressiveWinCapField;
        }
        set {
            this.progressiveWinCapField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReplyContent {
    
    private bool gameFeatureSingleOptionAutoAdvanceAllowedField;
    
    private uint gameFeatureSingleOptionAutoAdvanceMinDelayField;
    
    private bool gameFeatureSingleOptionAutoAdvanceMinDelayFieldSpecified;
    
    /// <remarks/>
    public bool GameFeatureSingleOptionAutoAdvanceAllowed {
        get {
            return this.gameFeatureSingleOptionAutoAdvanceAllowedField;
        }
        set {
            this.gameFeatureSingleOptionAutoAdvanceAllowedField = value;
        }
    }
    
    /// <remarks/>
    public uint GameFeatureSingleOptionAutoAdvanceMinDelay {
        get {
            return this.gameFeatureSingleOptionAutoAdvanceMinDelayField;
        }
        set {
            this.gameFeatureSingleOptionAutoAdvanceMinDelayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GameFeatureSingleOptionAutoAdvanceMinDelaySpecified {
        get {
            return this.gameFeatureSingleOptionAutoAdvanceMinDelayFieldSpecified;
        }
        set {
            this.gameFeatureSingleOptionAutoAdvanceMinDelayFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataTotalWinCapReplyContent {
    
    private Amount totalWinCapField;
    
    /// <remarks/>
    public Amount TotalWinCap {
        get {
            return this.totalWinCapField;
        }
        set {
            this.totalWinCapField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetWinCapBehaviorReplyContent {
    
    private WinCapBehavior winCapBehaviorField;
    
    private uint winCapMultiplierField;
    
    private bool winCapMultiplierFieldSpecified;
    
    private Amount winCapAmountField;
    
    /// <remarks/>
    public WinCapBehavior WinCapBehavior {
        get {
            return this.winCapBehaviorField;
        }
        set {
            this.winCapBehaviorField = value;
        }
    }
    
    /// <remarks/>
    public uint WinCapMultiplier {
        get {
            return this.winCapMultiplierField;
        }
        set {
            this.winCapMultiplierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WinCapMultiplierSpecified {
        get {
            return this.winCapMultiplierFieldSpecified;
        }
        set {
            this.winCapMultiplierFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Amount WinCapAmount {
        get {
            return this.winCapAmountField;
        }
        set {
            this.winCapAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public enum WinCapBehavior {
    
    /// <remarks/>
    FixedWinCapAmount,
    
    /// <remarks/>
    MultipliedByCurrentBet,
    
    /// <remarks/>
    MultipliedByMaxBet,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetWinCapReplyContent {
    
    private Amount winCapField;
    
    /// <remarks/>
    public Amount WinCap {
        get {
            return this.winCapField;
        }
        set {
            this.winCapField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetMinimumBetReplyContent {
    
    private Amount minimumBetField;
    
    /// <remarks/>
    public Amount MinimumBet {
        get {
            return this.minimumBetField;
        }
        set {
            this.minimumBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetCertificateAuthoritiesReplyContent {
    
    private string certificateDataField;
    
    /// <remarks/>
    public string CertificateData {
        get {
            return this.certificateDataField;
        }
        set {
            this.certificateDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetClientCertificateReplyContent {
    
    private string certificateDataField;
    
    /// <remarks/>
    public string CertificateData {
        get {
            return this.certificateDataField;
        }
        set {
            this.certificateDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetG2SHostAddressReplyContent {
    
    private string addressField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string Address {
        get {
            return this.addressField;
        }
        set {
            this.addressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetEbpEnabledReplyContent {
    
    private bool enabledField;
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class GetConfigDataDateTimeMinimumUpdateIntervalReplyContent {
    
    private uint minimumUpdateIntervalField;
    
    /// <remarks/>
    public uint MinimumUpdateInterval {
        get {
            return this.minimumUpdateIntervalField;
        }
        set {
            this.minimumUpdateIntervalField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class GetDateTimeReplyContent {
    
    private System.DateTime dateTimeField;
    
    /// <remarks/>
    public System.DateTime DateTime {
        get {
            return this.dateTimeField;
        }
        set {
            this.dateTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class CustomConfigItemNameAndType {
    
    private string nameField;
    
    private ConfigurationItemType typeField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public ConfigurationItemType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public enum ConfigurationItemType {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Amount,
    
    /// <remarks/>
    Boolean,
    
    /// <remarks/>
    EnumerationList,
    
    /// <remarks/>
    FlagList,
    
    /// <remarks/>
    Float,
    
    /// <remarks/>
    Int64,
    
    /// <remarks/>
    Item,
    
    /// <remarks/>
    String,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemTypesReplyResult {
    
    private CustomConfigurationItemSelector customConfigurationItemSelectorField;
    
    private ConfigurationItemType typeField;
    
    private bool typeFieldSpecified;
    
    /// <remarks/>
    public CustomConfigurationItemSelector CustomConfigurationItemSelector {
        get {
            return this.customConfigurationItemSelectorField;
        }
        set {
            this.customConfigurationItemSelectorField = value;
        }
    }
    
    /// <remarks/>
    public ConfigurationItemType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TypeSpecified {
        get {
            return this.typeFieldSpecified;
        }
        set {
            this.typeFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class CustomConfigurationItemSelector : CustomConfigurationItemScopeSelector {
    
    private string nameField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.CustomConfigurationItemSelector))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class CustomConfigurationItemScopeSelector {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Extension", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Payvar", typeof(PayvarIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Theme", typeof(ThemeIdentifier))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class CustomConfigItemReferencedEnumeration {
    
    private CustomConfigurationItemSelector customConfigItemField;
    
    private CustomConfigItemReferencedEnumerationReferencedEnumerationList referencedEnumerationListField;
    
    /// <remarks/>
    public CustomConfigurationItemSelector CustomConfigItem {
        get {
            return this.customConfigItemField;
        }
        set {
            this.customConfigItemField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigItemReferencedEnumerationReferencedEnumerationList ReferencedEnumerationList {
        get {
            return this.referencedEnumerationListField;
        }
        set {
            this.referencedEnumerationListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class CustomConfigItemReferencedEnumerationReferencedEnumerationList : EnumerationList {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class EnumerationList {
    
    private List<string> itemField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Item")]
    public List<string> Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueData {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AmountData", typeof(ConfigurationItemValueDataAmountData))]
    [System.Xml.Serialization.XmlElementAttribute("BooleanData", typeof(bool))]
    [System.Xml.Serialization.XmlElementAttribute("EnumerationListData", typeof(EnumerationList))]
    [System.Xml.Serialization.XmlElementAttribute("FlagListData", typeof(ConfigurationItemValueDataFlagListData))]
    [System.Xml.Serialization.XmlElementAttribute("FloatData", typeof(ConfigurationItemValueDataFloatData))]
    [System.Xml.Serialization.XmlElementAttribute("Int64Data", typeof(ConfigurationItemValueDataInt64Data))]
    [System.Xml.Serialization.XmlElementAttribute("ItemData", typeof(ConfigurationItemValueDataItemData))]
    [System.Xml.Serialization.XmlElementAttribute("StringData", typeof(ConfigurationItemValueDataStringData))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueDataAmountData {
    
    private Amount valueField;
    
    private Amount minField;
    
    private Amount maxField;
    
    /// <remarks/>
    public Amount Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public Amount Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    public Amount Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueDataFlagListData {
    
    private List<ConfigurationItemValueDataFlagListDataFlagData> flagDataField = new List<ConfigurationItemValueDataFlagListDataFlagData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FlagData")]
    public List<ConfigurationItemValueDataFlagListDataFlagData> FlagData {
        get {
            return this.flagDataField;
        }
        set {
            this.flagDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueDataFlagListDataFlagData {
    
    private string itemField;
    
    private bool valueField;
    
    /// <remarks/>
    public string Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    public bool Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueDataFloatData {
    
    private float maxField;
    
    private float minField;
    
    private float valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public float Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public float Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public float Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueDataInt64Data {
    
    private long minField;
    
    private long maxField;
    
    private long valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public long Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueDataItemData {
    
    private CustomConfigurationItemSelector enumerationListReferenceField;
    
    private string itemField;
    
    /// <remarks/>
    public CustomConfigurationItemSelector EnumerationListReference {
        get {
            return this.enumerationListReferenceField;
        }
        set {
            this.enumerationListReferenceField = value;
        }
    }
    
    /// <remarks/>
    public string Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class ConfigurationItemValueDataStringData {
    
    private long maxLengthField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public long MaxLength {
        get {
            return this.maxLengthField;
        }
        set {
            this.maxLengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemValueDataReplyResult {
    
    private CustomConfigurationItemSelector customConfigurationItemSelectorField;
    
    private ConfigurationItemValueData configItemValueDataField;
    
    /// <remarks/>
    public CustomConfigurationItemSelector CustomConfigurationItemSelector {
        get {
            return this.customConfigurationItemSelectorField;
        }
        set {
            this.customConfigurationItemSelectorField = value;
        }
    }
    
    /// <remarks/>
    public ConfigurationItemValueData ConfigItemValueData {
        get {
            return this.configItemValueDataField;
        }
        set {
            this.configItemValueDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureWriteVer1.xsd")]
public partial class SetDefaultCultureReplyContent {
    
    private string cultureField;
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetDefaultCultureReplyContent {
    
    private string defaultCultureField;
    
    /// <remarks/>
    public string DefaultCulture {
        get {
            return this.defaultCultureField;
        }
        set {
            this.defaultCultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetAvailableCulturesReplyContent {
    
    private CultureList cultureListField;
    
    /// <remarks/>
    public CultureList CultureList {
        get {
            return this.cultureListField;
        }
        set {
            this.cultureListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class GetConfigDataMaxNumOfCoplayersReplyContent {
    
    private int maxNumOfCoplayersField;
    
    /// <remarks/>
    public int MaxNumOfCoplayers {
        get {
            return this.maxNumOfCoplayersField;
        }
        set {
            this.maxNumOfCoplayersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class CoplayerInstance {
    
    private int coplayerField;
    
    private ThemeSelector themeSelectorField;
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    public ThemeSelector ThemeSelector {
        get {
            return this.themeSelectorField;
        }
        set {
            this.themeSelectorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class SetCoplayerApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class GetCoplayerApiVersionsReplyContent {
    
    private GetCoplayerApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetCoplayerApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class GetCoplayerApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConnectVer1.xsd")]
public partial class GetLinkControlApiVersionsReplyContent {
    
    private GetLinkControlApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetLinkControlApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XConnectVer1.xsd")]
public partial class GetLinkControlApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class EnterConfigModeRequestReplyContent {
    
    private EnterConfigAcceptanceCode acceptanceCodeField;
    
    /// <remarks/>
    public EnterConfigAcceptanceCode AcceptanceCode {
        get {
            return this.acceptanceCodeField;
        }
        set {
            this.acceptanceCodeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public enum EnterConfigAcceptanceCode {
    
    /// <remarks/>
    Rejected,
    
    /// <remarks/>
    Accepted,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ClockDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XClockDisplayVer1.xsd")]
public partial class GetClockDisplayEnabledReplyContent {
    
    private bool clockDisplayEnabledField;
    
    /// <remarks/>
    public bool ClockDisplayEnabled {
        get {
            return this.clockDisplayEnabledField;
        }
        set {
            this.clockDisplayEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class GetChooserServicesPropertiesReplyContent {
    
    private ChooserServicesProperties propertiesField;
    
    /// <remarks/>
    public ChooserServicesProperties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class ChooserServicesProperties {
    
    private bool offerableField;
    
    private bool offerableFieldSpecified;
    
    /// <remarks/>
    public bool Offerable {
        get {
            return this.offerableField;
        }
        set {
            this.offerableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OfferableSpecified {
        get {
            return this.offerableFieldSpecified;
        }
        set {
            this.offerableFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppPropertyValuesReplyContent", Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetAppPropertyValuesReplyContent {
    
    private PropertyList propertiesField;
    
    /// <remarks/>
    public PropertyList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PropertyTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPropertyTypesVer1.xsd")]
public partial class PropertyList {
    
    private List<Property> propertyField = new List<Property>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Property")]
    public List<Property> Property {
        get {
            return this.propertyField;
        }
        set {
            this.propertyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppPropertyListReplyContent", Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetAppPropertyListReplyContent {
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PropertyTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPropertyTypesVer1.xsd")]
public partial class PropertyNameList {
    
    private List<string> propertyField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Property")]
    public List<string> Property {
        get {
            return this.propertyField;
        }
        set {
            this.propertyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetChooserPropertyValuesReplyContent {
    
    private PropertyList propertiesField;
    
    /// <remarks/>
    public PropertyList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetChooserPropertyListReplyContent {
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class RemoveCertificateReplyContent {
    
    private Status statusField;
    
    /// <remarks/>
    public Status Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public enum Status {
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    NoChange,
    
    /// <remarks/>
    MalFormed,
    
    /// <remarks/>
    InvalidArgument,
    
    /// <remarks/>
    Other,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class HasCertificateReplyContent {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class AddCertificateReplyContent {
    
    private Status statusField;
    
    private byte[] thumbprintField;
    
    /// <remarks/>
    public Status Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Thumbprint {
        get {
            return this.thumbprintField;
        }
        set {
            this.thumbprintField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="EnrollmentResponseItem", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class EnrollmentResponseItem {
    
    private string gameResponseDataField;
    
    private Amount paytableWinAmountField;
    
    private string betIdField;
    
    /// <remarks/>
    public string GameResponseData {
        get {
            return this.gameResponseDataField;
        }
        set {
            this.gameResponseDataField = value;
        }
    }
    
    /// <remarks/>
    public Amount PaytableWinAmount {
        get {
            return this.paytableWinAmountField;
        }
        set {
            this.paytableWinAmountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string BetId {
        get {
            return this.betIdField;
        }
        set {
            this.betIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DenomConfig", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class DenomConfig {
    
    private uint topAwardCreditsField;
    
    private bool topAwardCreditsFieldSpecified;
    
    private List<BetConfig> betConfigField = new List<BetConfig>();
    
    private uint denomField;
    
    /// <remarks/>
    public uint TopAwardCredits {
        get {
            return this.topAwardCreditsField;
        }
        set {
            this.topAwardCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TopAwardCreditsSpecified {
        get {
            return this.topAwardCreditsFieldSpecified;
        }
        set {
            this.topAwardCreditsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BetConfig")]
    public List<BetConfig> BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="BetConfig", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class BetConfig {
    
    private ushort betCreditsField;
    
    private string betIdField;
    
    /// <remarks/>
    public ushort BetCredits {
        get {
            return this.betCreditsField;
        }
        set {
            this.betCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string BetId {
        get {
            return this.betIdField;
        }
        set {
            this.betIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="EnrollmentResponse", Namespace="F2XCdsIcdVer1.xsd")]
public partial class EnrollmentResponse {
    
    private uint prizeIndexField;
    
    private string extendedInfoField;
    
    private Amount paytableWinAmountField;
    
    private bool isProgressiveWinField;
    
    private Amount totalProgressiveWinAmountField;
    
    /// <remarks/>
    public uint PrizeIndex {
        get {
            return this.prizeIndexField;
        }
        set {
            this.prizeIndexField = value;
        }
    }
    
    /// <remarks/>
    public string ExtendedInfo {
        get {
            return this.extendedInfoField;
        }
        set {
            this.extendedInfoField = value;
        }
    }
    
    /// <remarks/>
    public Amount PaytableWinAmount {
        get {
            return this.paytableWinAmountField;
        }
        set {
            this.paytableWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public bool IsProgressiveWin {
        get {
            return this.isProgressiveWinField;
        }
        set {
            this.isProgressiveWinField = value;
        }
    }
    
    /// <remarks/>
    public Amount TotalProgressiveWinAmount {
        get {
            return this.totalProgressiveWinAmountField;
        }
        set {
            this.totalProgressiveWinAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetEnrollmentResponseDataReplyContentEnrollmentResponse", Namespace="F2XCdsIcdVer1.xsd")]
public partial class GetEnrollmentResponseDataReplyContentEnrollmentResponse {
    
    private EnrollmentResponse enrollmentResponseField;
    
    private bool enrollSuccessField;
    
    /// <remarks/>
    public EnrollmentResponse EnrollmentResponse {
        get {
            return this.enrollmentResponseField;
        }
        set {
            this.enrollmentResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool EnrollSuccess {
        get {
            return this.enrollSuccessField;
        }
        set {
            this.enrollSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataCdsGameConfigReplyContent", Namespace="F2XCdsIcdVer1.xsd")]
public partial class GetConfigDataCdsGameConfigReplyContent {
    
    private string gameConfigurationDataField;
    
    private List<BetConfig> betConfigField = new List<BetConfig>();
    
    /// <remarks/>
    public string GameConfigurationData {
        get {
            return this.gameConfigurationDataField;
        }
        set {
            this.gameConfigurationDataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BetConfig")]
    public List<BetConfig> BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="BetConfig", Namespace="F2XCdsIcdVer1.xsd")]
public partial class BetConfig {
    
    private uint betCreditsField;
    
    private int paytableIndexField;
    
    /// <remarks/>
    public uint BetCredits {
        get {
            return this.betCreditsField;
        }
        set {
            this.betCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public int PaytableIndex {
        get {
            return this.paytableIndexField;
        }
        set {
            this.paytableIndexField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class EnrollmentResponseItem {
    
    private uint idField;
    
    private string gameResponseDataField;
    
    private Amount paytableWinAmountField;
    
    private Amount extraWinField;
    
    private List<ushort> progHitLevelField = new List<ushort>();
    
    private Amount wagerField;
    
    private string betIdField;
    
    /// <remarks/>
    public uint Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string GameResponseData {
        get {
            return this.gameResponseDataField;
        }
        set {
            this.gameResponseDataField = value;
        }
    }
    
    /// <remarks/>
    public Amount PaytableWinAmount {
        get {
            return this.paytableWinAmountField;
        }
        set {
            this.paytableWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount ExtraWin {
        get {
            return this.extraWinField;
        }
        set {
            this.extraWinField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgHitLevel")]
    public List<ushort> ProgHitLevel {
        get {
            return this.progHitLevelField;
        }
        set {
            this.progHitLevelField = value;
        }
    }
    
    /// <remarks/>
    public Amount Wager {
        get {
            return this.wagerField;
        }
        set {
            this.wagerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string BetId {
        get {
            return this.betIdField;
        }
        set {
            this.betIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="EnrollmentResponse", Namespace="F2XCdsHhrVer1.xsd")]
public partial class EnrollmentResponse {
    
    private List<EnrollmentResponseItem> enrollmentResponseItemField = new List<EnrollmentResponseItem>();
    
    private bool enrollSuccessField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EnrollmentResponseItem")]
    public List<EnrollmentResponseItem> EnrollmentResponseItem {
        get {
            return this.enrollmentResponseItemField;
        }
        set {
            this.enrollmentResponseItemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool EnrollSuccess {
        get {
            return this.enrollSuccessField;
        }
        set {
            this.enrollSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetEnrollmentResponseDataReplyContent {
    
    private EnrollmentResponse enrollmentResponseField;
    
    /// <remarks/>
    public EnrollmentResponse EnrollmentResponse {
        get {
            return this.enrollmentResponseField;
        }
        set {
            this.enrollmentResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetConfigDataMultidrawSupportedReplyContent {
    
    private bool multidrawSupportedField;
    
    /// <remarks/>
    public bool MultidrawSupported {
        get {
            return this.multidrawSupportedField;
        }
        set {
            this.multidrawSupportedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ProgressiveConfig", Namespace="F2XCdsHhrVer1.xsd")]
public partial class ProgressiveConfig {
    
    private ushort betCreditsField;
    
    private Amount resetAmountField;
    
    private uint idField;
    
    private ushort levelField;
    
    /// <remarks/>
    public ushort BetCredits {
        get {
            return this.betCreditsField;
        }
        set {
            this.betCreditsField = value;
        }
    }
    
    /// <remarks/>
    public Amount ResetAmount {
        get {
            return this.resetAmountField;
        }
        set {
            this.resetAmountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint Id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort Level {
        get {
            return this.levelField;
        }
        set {
            this.levelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class DenomConfig {
    
    private List<BetConfig> betConfigField = new List<BetConfig>();
    
    private List<ProgressiveConfig> progressiveConfigField = new List<ProgressiveConfig>();
    
    private uint denomField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BetConfig")]
    public List<BetConfig> BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveConfig")]
    public List<ProgressiveConfig> ProgressiveConfig {
        get {
            return this.progressiveConfigField;
        }
        set {
            this.progressiveConfigField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="BetConfig", Namespace="F2XCdsHhrVer1.xsd")]
public partial class BetConfig {
    
    private ushort betCreditsField;
    
    private string betIdField;
    
    /// <remarks/>
    public ushort BetCredits {
        get {
            return this.betCreditsField;
        }
        set {
            this.betCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string BetId {
        get {
            return this.betIdField;
        }
        set {
            this.betIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class ProgressiveHitEntry {
    
    private ProgressiveType typeField;
    
    private int ownerIdField;
    
    private Amount basePrizeAmountField;
    
    private Amount contributionAmountField;
    
    private ushort gameLevelIndexField;
    
    /// <remarks/>
    public ProgressiveType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public int OwnerId {
        get {
            return this.ownerIdField;
        }
        set {
            this.ownerIdField = value;
        }
    }
    
    /// <remarks/>
    public Amount BasePrizeAmount {
        get {
            return this.basePrizeAmountField;
        }
        set {
            this.basePrizeAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount ContributionAmount {
        get {
            return this.contributionAmountField;
        }
        set {
            this.contributionAmountField = value;
        }
    }
    
    /// <remarks/>
    public ushort GameLevelIndex {
        get {
            return this.gameLevelIndexField;
        }
        set {
            this.gameLevelIndexField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public enum ProgressiveType {
    
    /// <remarks/>
    PARIGRESSIVE,
    
    /// <remarks/>
    PROGRESSIVE,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class EnrollmentResponse {
    
    private uint prizeIndexField;
    
    private Amount basePrizeAmountField;
    
    private Amount extraWinAmountField;
    
    private List<ProgressiveHitEntry> progHitEntriesField = new List<ProgressiveHitEntry>();
    
    /// <remarks/>
    public uint PrizeIndex {
        get {
            return this.prizeIndexField;
        }
        set {
            this.prizeIndexField = value;
        }
    }
    
    /// <remarks/>
    public Amount BasePrizeAmount {
        get {
            return this.basePrizeAmountField;
        }
        set {
            this.basePrizeAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount ExtraWinAmount {
        get {
            return this.extraWinAmountField;
        }
        set {
            this.extraWinAmountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgHitEntries")]
    public List<ProgressiveHitEntry> ProgHitEntries {
        get {
            return this.progHitEntriesField;
        }
        set {
            this.progHitEntriesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class GetEnrollmentResponseDataReplyContentEnrollmentResponse {
    
    private EnrollmentResponse enrollmentResponseField;
    
    private bool enrollSuccessField;
    
    /// <remarks/>
    public EnrollmentResponse EnrollmentResponse {
        get {
            return this.enrollmentResponseField;
        }
        set {
            this.enrollmentResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool EnrollSuccess {
        get {
            return this.enrollSuccessField;
        }
        set {
            this.enrollSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class ProgressiveConfig {
    
    private long resetCreditsField;
    
    private ushort gameLevelIndexField;
    
    private uint awardIdField;
    
    private int ownerIdField;
    
    private ProgressiveType typeField;
    
    private string metadataField;
    
    /// <remarks/>
    public long ResetCredits {
        get {
            return this.resetCreditsField;
        }
        set {
            this.resetCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort GameLevelIndex {
        get {
            return this.gameLevelIndexField;
        }
        set {
            this.gameLevelIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint AwardId {
        get {
            return this.awardIdField;
        }
        set {
            this.awardIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public int OwnerId {
        get {
            return this.ownerIdField;
        }
        set {
            this.ownerIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ProgressiveType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Metadata {
        get {
            return this.metadataField;
        }
        set {
            this.metadataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class GetConfigDataCdsGameConfigReplyContent {
    
    private List<BetConfig> betConfigField = new List<BetConfig>();
    
    private List<ProgressiveConfig> progressiveConfigField = new List<ProgressiveConfig>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BetConfig")]
    public List<BetConfig> BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveConfig")]
    public List<ProgressiveConfig> ProgressiveConfig {
        get {
            return this.progressiveConfigField;
        }
        set {
            this.progressiveConfigField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class BetConfig {
    
    private uint betCreditsField;
    
    private uint prizeSetIdField;
    
    private string betIdField;
    
    /// <remarks/>
    public uint BetCredits {
        get {
            return this.betCreditsField;
        }
        set {
            this.betCreditsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint PrizeSetId {
        get {
            return this.prizeSetIdField;
        }
        set {
            this.prizeSetIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string BetId {
        get {
            return this.betIdField;
        }
        set {
            this.betIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class CommitGameInProgressRequestReplyContent {
    
    private bool canCommitField;
    
    /// <remarks/>
    public bool CanCommit {
        get {
            return this.canCommitField;
        }
        set {
            this.canCommitField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class FinalExpectedOutcomeRequestReplyContent {
    
    private Amount paytableWinAmountField;
    
    private Amount bingoWinAmountField;
    
    private Amount bingoProgressiveWinAmountField;
    
    private Amount bingoInterimProgressiveWinAmountField;
    
    private Amount sleptWinAmountField;
    
    private string logMessageField;
    
    /// <remarks/>
    public Amount PaytableWinAmount {
        get {
            return this.paytableWinAmountField;
        }
        set {
            this.paytableWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount BingoWinAmount {
        get {
            return this.bingoWinAmountField;
        }
        set {
            this.bingoWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount BingoProgressiveWinAmount {
        get {
            return this.bingoProgressiveWinAmountField;
        }
        set {
            this.bingoProgressiveWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount BingoInterimProgressiveWinAmount {
        get {
            return this.bingoInterimProgressiveWinAmountField;
        }
        set {
            this.bingoInterimProgressiveWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount SleptWinAmount {
        get {
            return this.sleptWinAmountField;
        }
        set {
            this.sleptWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public partial class BingoMeterMaxValueData {
    
    private BingoMeterId meterIdField;
    
    private ulong maxValueField;
    
    /// <remarks/>
    public BingoMeterId MeterId {
        get {
            return this.meterIdField;
        }
        set {
            this.meterIdField = value;
        }
    }
    
    /// <remarks/>
    public ulong MaxValue {
        get {
            return this.maxValueField;
        }
        set {
            this.maxValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public enum BingoMeterId {
    
    /// <remarks/>
    MoneyWagered,
    
    /// <remarks/>
    InterimWinPaidMachinePennies,
    
    /// <remarks/>
    ProgressiveWinPaidMachinePennies,
    
    /// <remarks/>
    BingoWinPaidMachinePennies,
    
    /// <remarks/>
    InterimWinPaidAttendant,
    
    /// <remarks/>
    ProgressiveWinPaidAttendant,
    
    /// <remarks/>
    BingoWinPaidAttendant,
    
    /// <remarks/>
    NumberGamesPlayed,
    
    /// <remarks/>
    SleptInterimWinPennies,
    
    /// <remarks/>
    NumberGamesWon,
    
    /// <remarks/>
    NumberGamesPlayedMaxBet,
    
    /// <remarks/>
    AmountDepositFromBillsPennies,
    
    /// <remarks/>
    Number1DollarBillInserted,
    
    /// <remarks/>
    Number2DollarBillInserted,
    
    /// <remarks/>
    Number5DollarBillInserted,
    
    /// <remarks/>
    Number10DollarBillInserted,
    
    /// <remarks/>
    Number20DollarBillInserted,
    
    /// <remarks/>
    Number50DollarBillInserted,
    
    /// <remarks/>
    Number100DollarBillInserted,
    
    /// <remarks/>
    NumberOtherDollarBillInserted,
    
    /// <remarks/>
    CurrentCreditsOnMachine,
    
    /// <remarks/>
    AmountVoucherInPennies,
    
    /// <remarks/>
    NumberVoucherIn,
    
    /// <remarks/>
    AmountVoucherOutPennies,
    
    /// <remarks/>
    NumberVoucherOut,
    
    /// <remarks/>
    MoneyWonInterimProgressive,
    
    /// <remarks/>
    MoneyWonInterimProgressiveAttendant,
    
    /// <remarks/>
    PhysicalCoinIn,
    
    /// <remarks/>
    PhysicalCoinOut,
    
    /// <remarks/>
    TotalMoneyIn,
    
    /// <remarks/>
    Number25DollarBillInserted,
    
    /// <remarks/>
    Number200DollarBillInserted,
    
    /// <remarks/>
    Number250DollarBillInserted,
    
    /// <remarks/>
    Number500DollarBillInserted,
    
    /// <remarks/>
    Number1000DollarBillInserted,
    
    /// <remarks/>
    Number2000DollarBillInserted,
    
    /// <remarks/>
    Number2500DollarBillInserted,
    
    /// <remarks/>
    Number5000DollarBillInserted,
    
    /// <remarks/>
    Number10000DollarBillInserted,
    
    /// <remarks/>
    Number20000DollarBillInserted,
    
    /// <remarks/>
    Number25000DollarBillInserted,
    
    /// <remarks/>
    Number50000DollarBillInserted,
    
    /// <remarks/>
    Number100000DollarBillInserted,
    
    /// <remarks/>
    EftMoneyIn,
    
    /// <remarks/>
    NumberEftsIn,
    
    /// <remarks/>
    EftMoneyOut,
    
    /// <remarks/>
    NumberEftsOut,
    
    /// <remarks/>
    TotalMoneyOut,
    
    /// <remarks/>
    TotalMoneyWon,
    
    /// <remarks/>
    MachinePaidExternalWin,
    
    /// <remarks/>
    AttendantPaidExternalWin,
    
    /// <remarks/>
    TotalHandPaidCancelledCredits,
    
    /// <remarks/>
    CurrentCreditsCashablePennies,
    
    /// <remarks/>
    CurrentCreditsNonRestrictedPromotionalPennies,
    
    /// <remarks/>
    CurrentCreditsRestrictedPromotionalPennies,
    
    /// <remarks/>
    AmountPlayedCashablePennies,
    
    /// <remarks/>
    AmountPlayedNonRestrictedPromotionalPennies,
    
    /// <remarks/>
    AmountPlayedRestrictedPromotionalPennies,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public partial class BingoMeterData {
    
    private BingoMeterId meterIdField;
    
    private ulong meterValueField;
    
    /// <remarks/>
    public BingoMeterId MeterId {
        get {
            return this.meterIdField;
        }
        set {
            this.meterIdField = value;
        }
    }
    
    /// <remarks/>
    public ulong MeterValue {
        get {
            return this.meterValueField;
        }
        set {
            this.meterValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetMachineIdentificationCabinetModelReplyContent {
    
    private string cabinetModelField;
    
    /// <remarks/>
    public string CabinetModel {
        get {
            return this.cabinetModelField;
        }
        set {
            this.cabinetModelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetFloorLocationReplyContent {
    
    private string floorLocationField;
    
    /// <remarks/>
    public string FloorLocation {
        get {
            return this.floorLocationField;
        }
        set {
            this.floorLocationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetTaxableEventThresholdReplyContent {
    
    private Amount thresholdField;
    
    /// <remarks/>
    public Amount Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class ThemeBingoInformation {
    
    private ThemeIdentifier themeField;
    
    private ushort bingoGameThemeIdField;
    
    private ThemeBingoInformationExtendedDataFile extendedDataFileField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public ushort BingoGameThemeId {
        get {
            return this.bingoGameThemeIdField;
        }
        set {
            this.bingoGameThemeIdField = value;
        }
    }
    
    /// <remarks/>
    public ThemeBingoInformationExtendedDataFile ExtendedDataFile {
        get {
            return this.extendedDataFileField;
        }
        set {
            this.extendedDataFileField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class ThemeBingoInformationExtendedDataFile {
    
    private string tagField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class RomInformation {
    
    private string nameField;
    
    private string versionField;
    
    private RomFunctionCode romFunctionCodeField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public RomFunctionCode RomFunctionCode {
        get {
            return this.romFunctionCodeField;
        }
        set {
            this.romFunctionCodeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public enum RomFunctionCode {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Bios,
    
    /// <remarks/>
    OsPackage,
    
    /// <remarks/>
    FoundationPackage,
    
    /// <remarks/>
    GamePackage,
    
    /// <remarks/>
    GameBundlePackage,
    
    /// <remarks/>
    OtherPackage,
    
    /// <remarks/>
    OtherBundlePackage,
    
    /// <remarks/>
    CoinAcceptor,
    
    /// <remarks/>
    BillValidator,
    
    /// <remarks/>
    Hopper,
    
    /// <remarks/>
    TicketPrinter,
    
    /// <remarks/>
    CardReader,
    
    /// <remarks/>
    TouchScreen,
    
    /// <remarks/>
    ButtonPanel,
    
    /// <remarks/>
    ReelsDevice,
    
    /// <remarks/>
    OtherDevice,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class RequestPartialCashoutReplyContent {
    
    private bool requestAcceptedField;
    
    private string cashoutIdField;
    
    /// <remarks/>
    public bool RequestAccepted {
        get {
            return this.requestAcceptedField;
        }
        set {
            this.requestAcceptedField = value;
        }
    }
    
    /// <remarks/>
    public string CashoutId {
        get {
            return this.cashoutIdField;
        }
        set {
            this.cashoutIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class RequestCashoutReplyContent {
    
    private bool requestAcceptedField;
    
    private string cashoutIdField;
    
    /// <remarks/>
    public bool RequestAccepted {
        get {
            return this.requestAcceptedField;
        }
        set {
            this.requestAcceptedField = value;
        }
    }
    
    /// <remarks/>
    public string CashoutId {
        get {
            return this.cashoutIdField;
        }
        set {
            this.cashoutIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class GetPropertiesReplyContent {
    
    private Properties propertiesField;
    
    /// <remarks/>
    public Properties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class Properties {
    
    private bool cashoutOfferableField;
    
    private bool cashoutOfferableFieldSpecified;
    
    /// <remarks/>
    public bool CashoutOfferable {
        get {
            return this.cashoutOfferableField;
        }
        set {
            this.cashoutOfferableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CashoutOfferableSpecified {
        get {
            return this.cashoutOfferableFieldSpecified;
        }
        set {
            this.cashoutOfferableFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Bonusing {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBonusingVer1.xsd")]
public partial class EscrowBonusWinReplyContent {
    
    private bool acceptedField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BetStepsConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBetStepsConfigurationVer1.xsd")]
public partial class GetBetStepsConfigurationReplyContent {
    
    private GetBetStepsConfigurationReplyContentBetPresentationStyle betPresentationStyleField;
    
    /// <remarks/>
    public GetBetStepsConfigurationReplyContentBetPresentationStyle BetPresentationStyle {
        get {
            return this.betPresentationStyleField;
        }
        set {
            this.betPresentationStyleField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BetStepsConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XBetStepsConfigurationVer1.xsd")]
public enum GetBetStepsConfigurationReplyContentBetPresentationStyle {
    
    /// <remarks/>
    Classic,
    
    /// <remarks/>
    Advanced,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetPlayerMetersReplyContent", Namespace="F2XBankStatusVer1.xsd")]
public partial class GetPlayerMetersReplyContent {
    
    private PlayerMeters currentField;
    
    /// <remarks/>
    public PlayerMeters Current {
        get {
            return this.currentField;
        }
        set {
            this.currentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="PlayerMeters", Namespace="F2XBankStatusVer1.xsd")]
public partial class PlayerMeters {
    
    private Amount playerBankMeterField;
    
    private Amount playerWagerableMeterField;
    
    private Amount playerPaidMeterField;
    
    /// <remarks/>
    public Amount PlayerBankMeter {
        get {
            return this.playerBankMeterField;
        }
        set {
            this.playerBankMeterField = value;
        }
    }
    
    /// <remarks/>
    public Amount PlayerWagerableMeter {
        get {
            return this.playerWagerableMeterField;
        }
        set {
            this.playerWagerableMeterField = value;
        }
    }
    
    /// <remarks/>
    public Amount PlayerPaidMeter {
        get {
            return this.playerPaidMeterField;
        }
        set {
            this.playerPaidMeterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class BetLimits {
    
    private Amount maxBetField;
    
    private Amount minBetField;
    
    /// <remarks/>
    public Amount MaxBet {
        get {
            return this.maxBetField;
        }
        set {
            this.maxBetField = value;
        }
    }
    
    /// <remarks/>
    public Amount MinBet {
        get {
            return this.minBetField;
        }
        set {
            this.minBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MachineWideBetConstraints {
    
    private Amount tokenizedAmountField;
    
    private MidGameMaxBetBehavior midGameMaxBetBehaviorField;
    
    private BetLimits startingBetLimitsField;
    
    private BetLimits midGameBetLimitsField;
    
    /// <remarks/>
    public Amount TokenizedAmount {
        get {
            return this.tokenizedAmountField;
        }
        set {
            this.tokenizedAmountField = value;
        }
    }
    
    /// <remarks/>
    public MidGameMaxBetBehavior MidGameMaxBetBehavior {
        get {
            return this.midGameMaxBetBehaviorField;
        }
        set {
            this.midGameMaxBetBehaviorField = value;
        }
    }
    
    /// <remarks/>
    public BetLimits StartingBetLimits {
        get {
            return this.startingBetLimitsField;
        }
        set {
            this.startingBetLimitsField = value;
        }
    }
    
    /// <remarks/>
    public BetLimits MidGameBetLimits {
        get {
            return this.midGameBetLimitsField;
        }
        set {
            this.midGameBetLimitsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public enum MidGameMaxBetBehavior {
    
    /// <remarks/>
    LimitByTotalOfStartingPlusMidGame,
    
    /// <remarks/>
    LimitByTotalOfMidGame,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class ConfigData {
    
    private MachineWideBetConstraints machineWideBetConstraintsField;
    
    private bool supportPlayerTransfersForBettableField;
    
    /// <remarks/>
    public MachineWideBetConstraints MachineWideBetConstraints {
        get {
            return this.machineWideBetConstraintsField;
        }
        set {
            this.machineWideBetConstraintsField = value;
        }
    }
    
    /// <remarks/>
    public bool SupportPlayerTransfersForBettable {
        get {
            return this.supportPlayerTransfersForBettableField;
        }
        set {
            this.supportPlayerTransfersForBettableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetConfigDataReplyContent {
    
    private ConfigData configDataField;
    
    /// <remarks/>
    public ConfigData ConfigData {
        get {
            return this.configDataField;
        }
        set {
            this.configDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetPlayerMetersReplyContent {
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class PlayerMeters {
    
    private Amount playerBettableField;
    
    private Amount playerTransferableField;
    
    private Amount paidMeterField;
    
    /// <remarks/>
    public Amount PlayerBettable {
        get {
            return this.playerBettableField;
        }
        set {
            this.playerBettableField = value;
        }
    }
    
    /// <remarks/>
    public Amount PlayerTransferable {
        get {
            return this.playerTransferableField;
        }
        set {
            this.playerTransferableField = value;
        }
    }
    
    /// <remarks/>
    public Amount PaidMeter {
        get {
            return this.paidMeterField;
        }
        set {
            this.paidMeterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetBankPlayPropertiesReplyContent {
    
    private BankPlayProperties bankPlayPropertiesField;
    
    /// <remarks/>
    public BankPlayProperties BankPlayProperties {
        get {
            return this.bankPlayPropertiesField;
        }
        set {
            this.bankPlayPropertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class BankPlayProperties {
    
    private bool canBetField;
    
    private bool canBetFieldSpecified;
    
    private bool canCommitGameCycleField;
    
    private bool canCommitGameCycleFieldSpecified;
    
    private bool cashoutOfferableField;
    
    private bool cashoutOfferableFieldSpecified;
    
    private bool playerBettableTransferOfferableField;
    
    private bool playerBettableTransferOfferableFieldSpecified;
    
    /// <remarks/>
    public bool CanBet {
        get {
            return this.canBetField;
        }
        set {
            this.canBetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CanBetSpecified {
        get {
            return this.canBetFieldSpecified;
        }
        set {
            this.canBetFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool CanCommitGameCycle {
        get {
            return this.canCommitGameCycleField;
        }
        set {
            this.canCommitGameCycleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CanCommitGameCycleSpecified {
        get {
            return this.canCommitGameCycleFieldSpecified;
        }
        set {
            this.canCommitGameCycleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool CashoutOfferable {
        get {
            return this.cashoutOfferableField;
        }
        set {
            this.cashoutOfferableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CashoutOfferableSpecified {
        get {
            return this.cashoutOfferableFieldSpecified;
        }
        set {
            this.cashoutOfferableFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerBettableTransferOfferable {
        get {
            return this.playerBettableTransferOfferableField;
        }
        set {
            this.playerBettableTransferOfferableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayerBettableTransferOfferableSpecified {
        get {
            return this.playerBettableTransferOfferableFieldSpecified;
        }
        set {
            this.playerBettableTransferOfferableFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class SetAscribedGameApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class GetAscribedGameApiVersionsReplyContent {
    
    private GetAscribedGameApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetAscribedGameApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class GetAscribedGameApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public partial class RequestInternalStorageReplyContent {
    
    private RequestStatus statusField;
    
    private string pathField;
    
    /// <remarks/>
    public RequestStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    public string Path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public enum RequestStatus {
    
    /// <remarks/>
    Success,
    
    /// <remarks/>
    SystemQuotaExceeded,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class AppSwitchBehaviorList {
    
    private List<AppSwitchBehavior> behaviorField = new List<AppSwitchBehavior>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Behavior")]
    public List<AppSwitchBehavior> Behavior {
        get {
            return this.behaviorField;
        }
        set {
            this.behaviorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public enum AppSwitchBehavior {
    
    /// <remarks/>
    InactivateContext,
    
    /// <remarks/>
    StayInContext,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAllowedSwitchBehaviorsReplyContent {
    
    private AppSwitchBehaviorList behaviorsField;
    
    /// <remarks/>
    public AppSwitchBehaviorList Behaviors {
        get {
            return this.behaviorsField;
        }
        set {
            this.behaviorsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectorPropertyValuesReplyContent {
    
    private PropertyList propertiesField;
    
    /// <remarks/>
    public PropertyList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectorPropertyListReplyContent {
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAppPropertyValuesReplyContent {
    
    private PropertyList propertiesField;
    
    /// <remarks/>
    public PropertyList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAppPropertyListReplyContent {
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectedAppReplyContent {
    
    private AppSelector appField;
    
    /// <remarks/>
    public AppSelector App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAvailableAppsReplyContent {
    
    private AppInfoList appsField;
    
    /// <remarks/>
    public AppInfoList Apps {
        get {
            return this.appsField;
        }
        set {
            this.appsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class AppInfoList {
    
    private List<AppInfo> appField = new List<AppInfo>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("App")]
    public List<AppInfo> App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class AppInfo {
    
    private AppIdentifier identifierField;
    
    private BinIdentifier binIdentifierField;
    
    private string staticIdentifierField;
    
    private System.DateTime displayAsNewUntilField;
    
    private List<AppAttribute> attributesField = new List<AppAttribute>();
    
    private List<DenominationInformation> denominationInformationField = new List<DenominationInformation>();
    
    private CultureList culturesField;
    
    private LocalizedAppResources localizedResourcesField;
    
    private AppCategoryList categoriesField;
    
    private ProductInformation productInformationField;
    
    private ChooserVisibility chooserVisibilityField;
    
    private DisplayModeList supportedDisplayModesField;
    
    private InAppChooserSupport inAppChooserSupportField;
    
    private bool inAppChooserSupportFieldSpecified;
    
    private ShellIdentifier shellIdentifierField;
    
    private List<ThemeIdentifier> themeIdentifiersField = new List<ThemeIdentifier>();
    
    private ExtensionIdentifier extensionIdentifierField;
    
    /// <remarks/>
    public AppIdentifier Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    public BinIdentifier BinIdentifier {
        get {
            return this.binIdentifierField;
        }
        set {
            this.binIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public string StaticIdentifier {
        get {
            return this.staticIdentifierField;
        }
        set {
            this.staticIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
    public System.DateTime DisplayAsNewUntil {
        get {
            return this.displayAsNewUntilField;
        }
        set {
            this.displayAsNewUntilField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Attribute", IsNullable=false)]
    public List<AppAttribute> Attributes {
        get {
            return this.attributesField;
        }
        set {
            this.attributesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Information", IsNullable=false)]
    public List<DenominationInformation> DenominationInformation {
        get {
            return this.denominationInformationField;
        }
        set {
            this.denominationInformationField = value;
        }
    }
    
    /// <remarks/>
    public CultureList Cultures {
        get {
            return this.culturesField;
        }
        set {
            this.culturesField = value;
        }
    }
    
    /// <remarks/>
    public LocalizedAppResources LocalizedResources {
        get {
            return this.localizedResourcesField;
        }
        set {
            this.localizedResourcesField = value;
        }
    }
    
    /// <remarks/>
    public AppCategoryList Categories {
        get {
            return this.categoriesField;
        }
        set {
            this.categoriesField = value;
        }
    }
    
    /// <remarks/>
    public ProductInformation ProductInformation {
        get {
            return this.productInformationField;
        }
        set {
            this.productInformationField = value;
        }
    }
    
    /// <remarks/>
    public ChooserVisibility ChooserVisibility {
        get {
            return this.chooserVisibilityField;
        }
        set {
            this.chooserVisibilityField = value;
        }
    }
    
    /// <remarks/>
    public DisplayModeList SupportedDisplayModes {
        get {
            return this.supportedDisplayModesField;
        }
        set {
            this.supportedDisplayModesField = value;
        }
    }
    
    /// <remarks/>
    public InAppChooserSupport InAppChooserSupport {
        get {
            return this.inAppChooserSupportField;
        }
        set {
            this.inAppChooserSupportField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool InAppChooserSupportSpecified {
        get {
            return this.inAppChooserSupportFieldSpecified;
        }
        set {
            this.inAppChooserSupportFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public ShellIdentifier ShellIdentifier {
        get {
            return this.shellIdentifierField;
        }
        set {
            this.shellIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemeIdentifier> ThemeIdentifiers {
        get {
            return this.themeIdentifiersField;
        }
        set {
            this.themeIdentifiersField = value;
        }
    }
    
    /// <remarks/>
    public ExtensionIdentifier ExtensionIdentifier {
        get {
            return this.extensionIdentifierField;
        }
        set {
            this.extensionIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class ProductInformation {
    
    private string productNameField;
    
    private string productVersionField;
    
    /// <remarks/>
    public string ProductName {
        get {
            return this.productNameField;
        }
        set {
            this.productNameField = value;
        }
    }
    
    /// <remarks/>
    public string ProductVersion {
        get {
            return this.productVersionField;
        }
        set {
            this.productVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public enum ChooserVisibility {
    
    /// <remarks/>
    Hidden,
    
    /// <remarks/>
    Selectable,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class DisplayModeList {
    
    private List<DisplayMode> modeField = new List<DisplayMode>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Mode")]
    public List<DisplayMode> Mode {
        get {
            return this.modeField;
        }
        set {
            this.modeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public enum DisplayMode {
    
    /// <remarks/>
    Shared,
    
    /// <remarks/>
    Independent,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public enum InAppChooserSupport {
    
    /// <remarks/>
    Unsupported,
    
    /// <remarks/>
    Simple,
    
    /// <remarks/>
    Exclusive,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class DecorationInfoList {
    
    private List<DecorationInfo> decorationInfoField = new List<DecorationInfo>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DecorationInfo")]
    public List<DecorationInfo> DecorationInfo {
        get {
            return this.decorationInfoField;
        }
        set {
            this.decorationInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class DecorationInfo {
    
    private DecorationIdentifier identifierField;
    
    private LocalizedDecorationResources localizedResourcesField;
    
    /// <remarks/>
    public DecorationIdentifier Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    public LocalizedDecorationResources LocalizedResources {
        get {
            return this.localizedResourcesField;
        }
        set {
            this.localizedResourcesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class DecorationIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class LocalizedDecorationResources {
    
    private string displayContentField;
    
    private string descriptionField;
    
    private LocalizationTableList localizationTablesField;
    
    /// <remarks/>
    public string DisplayContent {
        get {
            return this.displayContentField;
        }
        set {
            this.displayContentField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public LocalizationTableList LocalizationTables {
        get {
            return this.localizationTablesField;
        }
        set {
            this.localizationTablesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class GetDecorationContentReplyContent {
    
    private DecorationInfoList decorationInfoField;
    
    /// <remarks/>
    public DecorationInfoList DecorationInfo {
        get {
            return this.decorationInfoField;
        }
        set {
            this.decorationInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class AppDecorations {
    
    private AppIdentifier appField;
    
    private DecorationIdentifierList decorationIdentifiersField;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public DecorationIdentifierList DecorationIdentifiers {
        get {
            return this.decorationIdentifiersField;
        }
        set {
            this.decorationIdentifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class DecorationIdentifierList {
    
    private List<DecorationIdentifier> identifierField = new List<DecorationIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Identifier")]
    public List<DecorationIdentifier> Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class AppDecorationsList {
    
    private List<AppDecorations> appDecorationsField = new List<AppDecorations>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppDecorations")]
    public List<AppDecorations> AppDecorations {
        get {
            return this.appDecorationsField;
        }
        set {
            this.appDecorationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class GetAppDecorationsReplyContent {
    
    private AppDecorationsList appDecorationsField;
    
    /// <remarks/>
    public AppDecorationsList AppDecorations {
        get {
            return this.appDecorationsField;
        }
        set {
            this.appDecorationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetDefaultDenominationReplyContent {
    
    private uint denominationField;
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetDefaultAppReplyContent {
    
    private AppIdentifier appField;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class DisplayAppReplyContent {
    
    private bool displayedField;
    
    /// <remarks/>
    public bool Displayed {
        get {
            return this.displayedField;
        }
        set {
            this.displayedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetAppStateReplyContent {
    
    private AppState stateField;
    
    /// <remarks/>
    public AppState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public enum AppState {
    
    /// <remarks/>
    Unlocked,
    
    /// <remarks/>
    Locked,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class PerformanceMeters {
    
    private Amount amountPlayedField;
    
    private Amount highestWinField;
    
    private int gamesPlayedField;
    
    /// <remarks/>
    public Amount AmountPlayed {
        get {
            return this.amountPlayedField;
        }
        set {
            this.amountPlayedField = value;
        }
    }
    
    /// <remarks/>
    public Amount HighestWin {
        get {
            return this.highestWinField;
        }
        set {
            this.highestWinField = value;
        }
    }
    
    /// <remarks/>
    public int GamesPlayed {
        get {
            return this.gamesPlayedField;
        }
        set {
            this.gamesPlayedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class PerformanceMetersList {
    
    private List<PerformanceMeters> metersField = new List<PerformanceMeters>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Meters")]
    public List<PerformanceMeters> Meters {
        get {
            return this.metersField;
        }
        set {
            this.metersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetAppPerformanceMetersReplyContent {
    
    private PerformanceMetersList meterDeltasField;
    
    /// <remarks/>
    public PerformanceMetersList MeterDeltas {
        get {
            return this.meterDeltasField;
        }
        set {
            this.meterDeltasField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetPriorityAppsReplyContent {
    
    private AppIdentifierList appsField;
    
    /// <remarks/>
    public AppIdentifierList Apps {
        get {
            return this.appsField;
        }
        set {
            this.appsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppTypesVer1.xsd")]
public partial class AppIdentifierList {
    
    private List<AppIdentifier> appField = new List<AppIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("App")]
    public List<AppIdentifier> App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppApiControlVer1.xsd")]
public partial class SetAppApiVersionsReplyContent {
    
    private bool categoriesAcceptedField;
    
    /// <remarks/>
    public bool CategoriesAccepted {
        get {
            return this.categoriesAcceptedField;
        }
        set {
            this.categoriesAcceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppApiControlVer1.xsd")]
public partial class GetAppApiVersionsReplyContent {
    
    private GetAppApiVersionsReplyContentCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public GetAppApiVersionsReplyContentCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppApiControlVer1.xsd")]
public partial class GetAppApiVersionsReplyContentCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class ReplyException {
    
    private int errorCodeField;
    
    private string errorDescriptionField;
    
    /// <remarks/>
    public int ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;
    using WinMismatch;
    using VoucherRedemption;
    using VKBingo;
    using TsmApiControl;
    using TsmActivation;
    using TransactionalCritDataWrite;
    using TransactionalCritDataRead;
    using TournamentSessionControl;
    using TournamentMeters;
    using TiltControl;
    using TicketPrintControl;
    using ThemeDisplayEvents;
    using ThemedHandpay;
    using ThemeControl;
    using ThemeApiControl;
    using ThemeActivation;
    using SystemApiControl;
    using SystemActivation;
    using SportsBettingGamingCycle;
    using ShowDemo;
    using ShellThemeControl;
    using ShellHistoryStore;
    using ShellHistoryControl;
    using ShellApiControl;
    using ShellActivation;
    using SetupValidation;
    using SessionManagement;
    using SelectionManagement;
    using RuntimeGameEvents;
    using RetrieveGameLevelAwards;
    using ResponsibleGamingSessionDisplay;
    using ReportGamePerformance;
    using ReportGameDataInspection;
    using RandomNumberGeneration;
    using ProgressiveData;
    using PlayerTipping;
    using PlayerSession;
    using PlayerSessionParameters;
    using PlayerInformationDisplay;
    using PlayerControlContextMonitoring;
    using PlayerCardServices;
    using PIDSessionTracking;
    using PerformCashout;
    using ParcelComm;
    using NonTransactionalCritDataRead;
    using NICInformation;
    using NetworkManagement;
    using MidGameMoneyAcceptance;
    using MessageStrip;
    using MachineSupervision;
    using MachineIdentification;
    using Localization;
    using LinkControl;
    using LegacyBonusControl;
    using KVSTypes;
    using JackpotItaly;
    using GameReserve;
    using GameProgressiveSettings;
    using GamePresentationBehavior;
    using GamePlayStatus;
    using GamePlayReporting;
    using GameOutcomeEvents;
    using GameLink;
    using GameLevelAward;
    using GameInformation;
    using GameHistorySupplemental;
    using GameGroupInformation;
    using GameGroupControl;
    using GameCycleSupervision;
    using GameCyclePlay;
    using GameCycleEvents;
    using GameCycleBetting;
    using G2SConnection;
    using FlashPlayerClock;
    using FirewallManager;
    using ExtensionProgressiveControllerRuntime;
    using ExtensionProgressiveControllerLinking;
    using ExtensionProgressiveControllerConfig;
    using ExtensionAppSelection;
    using EventLog;
    using EventBasedProgressive;
    using EGMConfigData;
    using EbpConfiguration;
    using DisplayControl;
    using DftMeterReader;
    using DateTime;
    using CustomConfigurationRead;
    using CultureWrite;
    using CultureRead;
    using CoplayerManagement;
    using CoplayerApiControl;
    using CoplayerActivation;
    using Connect;
    using ConfigurationModeMonitoring;
    using ConfigurationModeControl;
    using ClockDisplay;
    using ChooserServices;
    using ChooserDefinitionQuery;
    using CertificateManagement;
    using CdsPullTab;
    using CdsIcd;
    using CdsHhr;
    using CdsEcp;
    using CdsBingo;
    using CdsBingoMeterReader;
    using CdsBingoConfig;
    using Cashout;
    using CashDeviceSupervision;
    using CallAttendant;
    using Bonusing;
    using BetStepsConfiguration;
    using BankStatus;
    using BankPlay;
    using AscribedShellActivation;
    using AscribedGameApiControl;
    using AppStorage;
    using AppQuery;
    using AppDecorationQuery;
    using AppDecorationManagement;
    using AppControl;
    using AppControlClient;
    using AppApiControl;
    using AppActivation;
    using Activation;
    using ActionRequest;
    using ActionRequestLite;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.WinMismatch.VerifyProgressiveAwardsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.AbortVoucherRedemptionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherRedemptionResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherRedemptionRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherReviewResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherReviewRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.SetVoucherRedemptionRegistrationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.PlayerCashoutRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.DisplayStateChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.UnLockResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestUnLockReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.LockOutResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestLockOutReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.GamePlayEndMeteringResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestGamePlayEndMeteringReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.PlacePurchaseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmApiControl.SetTsmApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmApiControl.GetTsmApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.InactivateTsmContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.ActivateTsmContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.NewTsmContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataWrite.RemoveCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataWrite.WriteCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataRead.ReadCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionResetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionCompleteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.FinishSessionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionStartReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.ResetSessionRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.StartSessionRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionConfigurationChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.GetConfigDataSessionInitiatorReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.QuerySessionInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.GetTournamentPlayerMetersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsSetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsWonReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCommittedCreditsChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.TiltClearedByAttendantReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.RequestClearTiltReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.RequestTiltReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.NotificationRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.PrinterEnabledStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.AbortTicketPrintReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.TicketStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.QueryTicketStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.PrintTicketReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.QueryPrintingSupportReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeDisplayEvents.QueryDisplayedThemeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeDisplayEvents.DisplayedThemeChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemedHandpay.QueryHandpayLockupStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemedHandpay.HandpayLockupStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.ThemeSwitchCancelledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.GetPayvarInfoReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.ThemeSwitchRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.GetSelectableThemesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeApiControl.SetThemeApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeApiControl.GetThemeApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.SwitchThemeContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.InactivateThemeContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.ActivateThemeContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.NewThemeContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemApiControl.SetSystemApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemApiControl.GetSystemApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.InactivateSystemContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.ActivateSystemContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.NewSystemContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.CommitSportsBetReserveReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.ReserveSportsBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingReserveReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.EndSportsBettingGamingCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.CommitSportsBettingGamingCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingGamingCycleStateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.UpdateSportsBettingPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShowDemo.AddMoneyReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShowDemo.GetShowDemoPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.GetThemeInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.GetSelectableThemesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.SwitchThemeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.LogEndGameCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.RemoveCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.WriteCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.ReadCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.GetShellHistoryWritePermittedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.ShellHistoryWritePermittedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.ReadCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.BindCoplayerSessionToHistoryReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.GetHistoryContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellApiControl.SetShellApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellApiControl.GetShellApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.InactivateShellContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.ActivateShellContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.NewShellContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SetupValidation.ValidateThemeSetupReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.LaunchSessionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.DestroySessionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.CreateSessionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetGamePropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetSelectedAppReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AvailableAppsChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetAvailableAppsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayStateChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AppRequestedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.ChooserRequestedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AppStateChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetDefaultAppReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayShellReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayThemeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.SetChooserOfferableReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetAppStateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetThemePerformanceMetersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GetRuntimeGameEventsConfigurationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameBetMeterKeysUpdateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameBetMeterUpdateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameSelectionStatusUpdateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.PlayerChoiceUpdateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.WaitingForGenericInputStatusUpdateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RetrieveGameLevelAwards.GetGameLevelAwardValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ResponsibleGamingSessionDisplay.RequestDisplaySessionInfoReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGamePerformance.GetPerformanceReportReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetMinimumPlayableCreditBalanceReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetInspectionReportTypeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetHtmlInspectionReportReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetInspectionReportReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RandomNumberGeneration.GetListLimitedRandomNumbersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RandomNumberGeneration.GetRandomNumbersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryEnabledPayvarBasedProgressiveSettingsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryPayvarBasedProgressiveSettingsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryEnabledThemeBasedProgressiveSettingsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryThemeBasedProgressiveSettingsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetEnabledPayvarBasedProgressiveValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetPayvarBasedProgressiveValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetEnabledThemeBasedProgressiveValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetThemeBasedProgressiveValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.TippingResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.TippingRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.UpdatePropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.GetPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.GetConfigDataSessionTimerDisplayEnabledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.QueryPlayerSessionStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.PlayerSessionStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.ParametersResetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.CurrentResetParametersChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.QueryCurrentResetParametersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.GetConfigDataPlayerSessionParameterResetEnabledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.SessionInformationScreenEnteredReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.GameInformationScreenEnteredReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.ActivationStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.PidConfigurationChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.GetPidConfigurationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerControlContextMonitoring.PlayerControlContextStateUpdateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.SetCardAcceptanceStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.CardRemovedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.CardInsertedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.StopTrackingReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.StartTrackingReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.SessionTrackingStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.GetSessionDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PerformCashout.PerformCashoutResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PerformCashout.PerformCashoutRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.TransParcelCallRxReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.TransParcelCallTxReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.ParcelCallRxReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.ParcelCallTxReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NonTransactionalCritDataRead.ReadCritDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.GetPrioritizedIPListReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.GetIPAddressForHostConnectionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.NetworkSettingsChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NetworkManagement.AddIpv4RoutingTableEntryReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NetworkManagement.GetNicInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.EndOfferingMidGameMoneyAcceptanceReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.OfferingMidGameMoneyAcceptanceResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.RequestOfferingMidGameMoneyAcceptanceReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MessageStrip.UpdateMessagesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MessageStrip.GetMessagesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineSupervision.RequestMachineRebootReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineFloorLocationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineAssetNumberReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataG2SMachineIdentifierReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineSerialNumberReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.QueryLanguageIconsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.GetTimeOfDayFormatReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.GetCreditFormatterInfoReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LinkControl.ParkReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LinkControl.SetApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LinkControl.GetApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusHostLinkStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.EndLegacyBonusBookingHoldOffReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusArrivedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.QueryLegacyBonusHostStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.QueryLegacyBonusStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.RequestLegacyBonusBookingHoldOffReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusNotificationEnableReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreWriteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.RemoveReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.WriteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreReadReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.ReadReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.JackpotItaly.GetConfigDataJackpotBonusEnabledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.JackpotItaly.GetJackpotBonusValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.ReserveActivationCanceledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.RequestReserveActivationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.UpdateReserveParametersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.GetReserveParametersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameProgressiveSettings.QueryProgressiveSettingsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePresentationBehavior.GetConfigDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GameFocusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GameInProgressChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GetGameFocusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GetGameInProgressReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayReporting.PokerGamePlayReportReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameOutcomeEvents.FinalWinRecordEventReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLink.GetConfigDataStompBrokerReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLevelAward.GetThemeBasedGameLevelValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLevelAward.InitializeGameLevelDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetDenominationButtonPanelMinBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarButtonPanelMinBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeButtonPanelMinBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarEnabledDenominationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeEnabledDenominationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarSupportedDenominationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeSupportedDenominationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetDenominationMaxBetCreditsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarMaxBetCreditsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeMaxBetCreditsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetBetResolutionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarPaybackPercentageDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarsForThemeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameHistorySupplemental.SetExportDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupInformation.GetPayvarGroupsForThemeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.GetConfigDataPayvarGroupInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.GetSelectedPayvarReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.SelectPayvarReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.ClearGameCycleBehaviorModifierReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.EnableGameCycleBehaviorModifiersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.GameCycleModificationEventReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.SetGameCycleModificationEventRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AwardResultsPostedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EndGameCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AbortCompleteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FinalizeAwardResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FinalizeAwardRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AbortGameCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeResponseDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.StartPlayingReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.UnenrollGameCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollResponseDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollGameCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.UncommitGameCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.CommitGameCycleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.QueryGameCycleStateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleEvents.GameCycleEventReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleEvents.SetGameCycleEventRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.GetConfigDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.PlaceBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.PlaceStartingBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.UncommitBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.CommitBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetOcspSettingsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.CertificatesChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetCertificateAuthoritiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetClientCertificateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetG2SHostAddressReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.UpdateFlashPlayerClockPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.GetFlashPlayerClockPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.GetConfigDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetSSLCertConfigurationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetUrlAclConfigurationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetPortEnabledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.GetPortStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.GetConfigDataFirewallEnabledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.WapHandpayAcknowledgeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.WapHandpayReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.ValidationResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.ValidationRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.SetControllerLevelValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.GetConfigDataMinControllerLevelUpdateIntervalReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.QueryProgressiveLinksReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.RemoveProgressiveLinksReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.AddProgressiveLinksReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.QueryGameLevelDefinitionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.QueryControllersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.QueryControllerLevelsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.DestroyControllerReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.CreateControllerReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.AdjustControllerLevelParametersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.AddControllerLevelReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.ChooserRequestedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionCompleteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionCanceledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.AvailableCentralAppsChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.AppSelectionStateChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetSelectedCentralAppReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetAvailableCentralAppsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetAppSelectionStateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.SetAppSelectionEventRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetConfigDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EventLog.RecordEventReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EventBasedProgressive.AddQualifiedContributionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataRtpOrderedByBetRequiredReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataDisplayVideoReelsForStepperReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataDefaultBetSelectionStyleReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetMarketingBehaviorReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetAncillaryMonetaryLimitReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataExternalBonusWinCapReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataProgressiveWinCapReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataTotalWinCapReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetWinCapBehaviorReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetWinCapReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetMinimumBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.EbpEnabledChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetCertificateAuthoritiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetClientCertificateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetG2SHostAddressReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetEbpEnabledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DisplayControl.SetDisplayControlStateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.ReadDirectFundsTransferMetersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.DirectFundsTransferMetersUpdateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.SetDirectFundsTransferMetersRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.GetConfigDataDateTimeMinimumUpdateIntervalReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.GetDateTimeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.DateTimeChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetScopedCustomConfigItemNamesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemTypesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemReferencedEnumerationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemValueDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureWrite.SetDefaultCultureReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureWrite.SetCultureReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.CultureChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetDefaultCultureReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetAvailableCulturesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetCultureReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.GetConfigDataMaxNumOfCoplayersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.BindCoplayerSessionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.CreateCoplayersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.GetCoplayersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerApiControl.SetCoplayerApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerApiControl.GetCoplayerApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.InactivateCoplayerContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.ActivateCoplayerContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.NewCoplayerContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Connect.SetLinkControlApiVersionReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Connect.GetLinkControlApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeMonitoring.ConfigModeStateChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.ConfigModeAvailabilityEventReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.EnterConfigModeResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.ExitConfigModeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.EnterConfigModeRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ClockDisplay.GetClockDisplayEnabledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ClockDisplay.ClockDisplayEnabledChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.RequestChooserReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.UpdateChooserServicesPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.GetChooserServicesPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetAppPropertyValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetAppPropertyListReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetChooserPropertyValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetChooserPropertyListReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.RemoveCertificateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.HasCertificateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.AddCertificateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.AwardMismatchDetectedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetEnrollmentResponseDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.SetEnrollmentRequestDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetConfigDataMultidrawSupportedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetConfigDataCdsGameConfigReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.AwardMismatchDetectedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.SetProgressiveLookupDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.GetEnrollmentResponseDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.SetEnrollmentRequestDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.GetConfigDataCdsGameConfigReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.AwardMismatchDetectedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetEnrollmentResponseDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.SetEnrollmentRequestDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetConfigDataMultidrawSupportedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetConfigDataCdsGameConfigReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.AwardMismatchDetectedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.GetEnrollmentResponseDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.PlayCompleteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.SetEnrollmentRequestDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.ActionPlayReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.SetBetDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.GetConfigDataCdsGameConfigReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.MachineStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.CommitGameInProgressRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.WinMismatchNotificationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.FinalExpectedOutcomeRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.EnrollmentResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.EnrollmentRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoMeterReader.GetBingoMetersMaxValueReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoMeterReader.ReadBingoMetersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetMachineIdentificationCabinetModelReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetFloorLocationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.TaxableEventThresholdChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetTaxableEventThresholdReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.SetDateTimeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.CanSetDateTimeReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetConfigurationModeStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.ConfigurationModeStatusChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetThemeBingoInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetInstalledRomInformationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetEgmSerialNumberReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetDiscoveryPortReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.CashoutStatusReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.RequestPartialCashoutReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.RequestCashoutReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.UpdatePropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.GetPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.ReportVoucherStackedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.VoucherValidationResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.RequestVoucherValidationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.SetValidationRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.CashoutReviewResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.RequestCashoutReviewReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.SetCashoutReviewRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CallAttendant.ClearPriorityCallAttendantReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CallAttendant.SetPriorityCallAttendantReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Bonusing.BonusPaidReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Bonusing.EscrowBonusWinReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BetStepsConfiguration.GetBetStepsConfigurationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.GetPlayerMetersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.BankEventReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.SetBankEventRegistrationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.PlayerCashoutRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetConfigDataReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneySetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyWonReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyOutReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyInReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyCommittedChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBetReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBettableTransferReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetPlayerMetersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.UpdateBankPlayPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetBankPlayPropertiesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.InactivateAscribedShellContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.ActivateAscribedShellContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.NewAscribedShellContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedGameApiControl.SetAscribedGameApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedGameApiControl.GetAscribedGameApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppStorage.ReleaseInternalStorageReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppStorage.RequestInternalStorageReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.AvailableAppsChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAllowedSwitchBehaviorsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectorPropertyValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectorPropertyListReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAppPropertyValuesReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAppPropertyListReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectedAppReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAvailableAppsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.AppDecorationsChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.GetDecorationContentReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.GetAppDecorationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.RemoveDecorationsFromAppsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.AddDecorationsToAppsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.UnregisterDecorationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.RegisterDecorationsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.DisplayStateChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.AppRequestedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.ChooserRequestedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.AppStateChangedReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetDefaultDenominationReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetDefaultAppReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.DisplayAppReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.SetChooserOfferableReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetAppStateReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetAppPerformanceMetersReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetPriorityAppsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControlClient.AppSwitchCancelledReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControlClient.AppSwitchRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppApiControl.SetAppApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppApiControl.GetAppApiVersionsReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.InactivateAppContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.ActivateAppContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.NewAppContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.InactivateContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.ActivateContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.NewContextReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequest.ActionResponseReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequest.ActionRequestReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequestLite.ActionResponseLiteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequestLite.ActionRequestLiteReply))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class ReplyMessage {
    
    private ReplyException exceptionField;
    
    /// <remarks/>
    public ReplyException Exception {
        get {
            return this.exceptionField;
        }
        set {
            this.exceptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.WinMismatch {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XWinMismatchVer1.xsd")]
public partial class VerifyProgressiveAwardsReply : ReplyMessage {
    
    private List<ProgressiveAward> contentField = new List<ProgressiveAward>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("AdditionalProgressiveAwards", IsNullable=false)]
    public List<ProgressiveAward> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.WinMismatch {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ProgressiveAward", Namespace="F2XWinMismatchVer1.xsd")]
public partial class ProgressiveAward {
    
    private Amount amountField;
    
    private bool isDisplayableField;
    
    private bool isDisplayableFieldSpecified;
    
    private string displayableReasonField;
    
    private string prizeStringField;
    
    private ProgressiveAwardHitState hitStateField;
    
    private uint gameLevelField;
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool IsDisplayable {
        get {
            return this.isDisplayableField;
        }
        set {
            this.isDisplayableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IsDisplayableSpecified {
        get {
            return this.isDisplayableFieldSpecified;
        }
        set {
            this.isDisplayableFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string DisplayableReason {
        get {
            return this.displayableReasonField;
        }
        set {
            this.displayableReasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string PrizeString {
        get {
            return this.prizeStringField;
        }
        set {
            this.prizeStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ProgressiveAwardHitState HitState {
        get {
            return this.hitStateField;
        }
        set {
            this.hitStateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.WinMismatch {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XWinMismatchVer1.xsd")]
public enum ProgressiveAwardHitState {
    
    /// <remarks/>
    PotentialHit,
    
    /// <remarks/>
    Hit,
    
    /// <remarks/>
    NotHit,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class AbortVoucherRedemptionReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionRequestReply : ReplyMessage {
    
    private VoucherRedemptionRequestReplyContent contentField = new VoucherRedemptionRequestReplyContent();
    
    /// <remarks/>
    public VoucherRedemptionRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherReviewResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherReviewRequestReply : ReplyMessage {
    
    private VoucherReviewRequestReplyContent contentField = new VoucherReviewRequestReplyContent();
    
    /// <remarks/>
    public VoucherReviewRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class SetVoucherRedemptionRegistrationsReply : ReplyMessage {
    
    private SetVoucherRedemptionRegistrationsReplyContent contentField = new SetVoucherRedemptionRegistrationsReplyContent();
    
    /// <remarks/>
    public SetVoucherRedemptionRegistrationsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="PlayerCashoutRequestReply", Namespace="F2XVKBingoVer1.xsd")]
public partial class PlayerCashoutRequestReply : ReplyMessage {
    
    private ReplyContent contentField = new ReplyContent();
    
    /// <remarks/>
    public ReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DisplayStateChangedReply", Namespace="F2XVKBingoVer1.xsd")]
public partial class DisplayStateChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class UnLockResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class RequestUnLockReply : ReplyMessage {
    
    private ReplyContent contentField = new ReplyContent();
    
    /// <remarks/>
    public ReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class LockOutResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class RequestLockOutReply : ReplyMessage {
    
    private ReplyContent contentField = new ReplyContent();
    
    /// <remarks/>
    public ReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class GamePlayEndMeteringResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class RequestGamePlayEndMeteringReply : ReplyMessage {
    
    private ReplyContent contentField = new ReplyContent();
    
    /// <remarks/>
    public ReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class PlacePurchaseReply : ReplyMessage {
    
    private ReplyContent contentField = new ReplyContent();
    
    /// <remarks/>
    public ReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmApiControlVer1.xsd")]
public partial class SetTsmApiVersionsReply : ReplyMessage {
    
    private SetTsmApiVersionsReplyContent contentField = new SetTsmApiVersionsReplyContent();
    
    /// <remarks/>
    public SetTsmApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmApiControlVer1.xsd")]
public partial class GetTsmApiVersionsReply : ReplyMessage {
    
    private GetTsmApiVersionsReplyContent contentField = new GetTsmApiVersionsReplyContent();
    
    /// <remarks/>
    public GetTsmApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmActivationVer1.xsd")]
public partial class InactivateTsmContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmActivationVer1.xsd")]
public partial class ActivateTsmContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmActivationVer1.xsd")]
public partial class NewTsmContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="RemoveCritDataReply", Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class RemoveCritDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="WriteCritDataReply", Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class WriteCritDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ReadCritDataReply", Namespace="F2XTransactionalCritDataReadVer1.xsd")]
public partial class ReadCritDataReply : ReplyMessage {
    
    private ReadCritDataReplyContent contentField = new ReadCritDataReplyContent();
    
    /// <remarks/>
    public ReadCritDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionResetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionCompleteReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class FinishSessionReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionStartReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class ResetSessionRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class StartSessionRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionConfigurationChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class GetConfigDataSessionInitiatorReply : ReplyMessage {
    
    private GetConfigDataSessionInitiatorReplyContent contentField = new GetConfigDataSessionInitiatorReplyContent();
    
    /// <remarks/>
    public GetConfigDataSessionInitiatorReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class QuerySessionInformationReply : ReplyMessage {
    
    private QuerySessionInformationReplyContent contentField = new QuerySessionInformationReplyContent();
    
    /// <remarks/>
    public QuerySessionInformationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class GetTournamentPlayerMetersReply : ReplyMessage {
    
    private GetTournamentPlayerMetersReplyContent contentField = new GetTournamentPlayerMetersReplyContent();
    
    /// <remarks/>
    public GetTournamentPlayerMetersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCreditsSetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCreditsWonReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCommittedCreditsChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCreditsBetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class TiltClearedByAttendantReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class RequestClearTiltReply : ReplyMessage {
    
    private RequestTiltReplyContent contentField = new RequestTiltReplyContent();
    
    /// <remarks/>
    public RequestTiltReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class RequestTiltReply : ReplyMessage {
    
    private RequestTiltReplyContent contentField = new RequestTiltReplyContent();
    
    /// <remarks/>
    public RequestTiltReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class NotificationRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class PrinterEnabledStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class AbortTicketPrintReply : ReplyMessage {
    
    private AbortTicketPrintReplyContent contentField = new AbortTicketPrintReplyContent();
    
    /// <remarks/>
    public AbortTicketPrintReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class TicketStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class QueryTicketStatusReply : ReplyMessage {
    
    private QueryTicketStatusReplyContent contentField = new QueryTicketStatusReplyContent();
    
    /// <remarks/>
    public QueryTicketStatusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class PrintTicketReply : ReplyMessage {
    
    private PrintTicketReplyContent contentField = new PrintTicketReplyContent();
    
    /// <remarks/>
    public PrintTicketReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class QueryPrintingSupportReply : ReplyMessage {
    
    private QueryPrintingSupportReplyContent contentField = new QueryPrintingSupportReplyContent();
    
    /// <remarks/>
    public QueryPrintingSupportReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd")]
public partial class QueryDisplayedThemeReply : ReplyMessage {
    
    private QueryDisplayedThemeReplyContent contentField = new QueryDisplayedThemeReplyContent();
    
    /// <remarks/>
    public QueryDisplayedThemeReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd")]
public partial class DisplayedThemeChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemedHandpay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemedHandpayVer1.xsd")]
public partial class QueryHandpayLockupStatusReply : ReplyMessage {
    
    private QueryHandpayLockupStatusReplyContent contentField = new QueryHandpayLockupStatusReplyContent();
    
    /// <remarks/>
    public QueryHandpayLockupStatusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemedHandpay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemedHandpayVer1.xsd")]
public partial class QueryHandpayLockupStatusReplyContent {
    
    private bool isLockedField;
    
    /// <remarks/>
    public bool isLocked {
        get {
            return this.isLockedField;
        }
        set {
            this.isLockedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemedHandpay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemedHandpayVer1.xsd")]
public partial class HandpayLockupStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeSwitchCancelledReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class GetPayvarInfoReply : ReplyMessage {
    
    private List<PayvarInformation> contentField = new List<PayvarInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PayvarInfo", IsNullable=false)]
    public List<PayvarInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeSwitchRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetSelectableThemesReply", Namespace="F2XThemeControlVer1.xsd")]
public partial class GetSelectableThemesReply : ReplyMessage {
    
    private List<ThemeInformation> contentField = new List<ThemeInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Themes", IsNullable=false)]
    public List<ThemeInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeApiControlVer1.xsd")]
public partial class SetThemeApiVersionsReply : ReplyMessage {
    
    private SetThemeApiVersionsReplyContent contentField = new SetThemeApiVersionsReplyContent();
    
    /// <remarks/>
    public SetThemeApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeApiControlVer1.xsd")]
public partial class GetThemeApiVersionsReply : ReplyMessage {
    
    private GetThemeApiVersionsReplyContent contentField = new GetThemeApiVersionsReplyContent();
    
    /// <remarks/>
    public GetThemeApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class SwitchThemeContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class InactivateThemeContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class ActivateThemeContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class NewThemeContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemApiControlVer1.xsd")]
public partial class SetSystemApiVersionsReply : ReplyMessage {
    
    private SetSystemApiVersionsReplyContent contentField = new SetSystemApiVersionsReplyContent();
    
    /// <remarks/>
    public SetSystemApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemApiControlVer1.xsd")]
public partial class GetSystemApiVersionsReply : ReplyMessage {
    
    private GetSystemApiVersionsReplyContent contentField = new GetSystemApiVersionsReplyContent();
    
    /// <remarks/>
    public GetSystemApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemActivationVer1.xsd")]
public partial class InactivateSystemContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemActivationVer1.xsd")]
public partial class ActivateSystemContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemActivationVer1.xsd")]
public partial class NewSystemContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class CommitSportsBetReserveReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class ReserveSportsBetReply : ReplyMessage {
    
    private ReserveSportsBetReplyContent contentField = new ReserveSportsBetReplyContent();
    
    /// <remarks/>
    public ReserveSportsBetReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingReserveReply : ReplyMessage {
    
    private GetSportsBettingReserveReplyContent contentField = new GetSportsBettingReserveReplyContent();
    
    /// <remarks/>
    public GetSportsBettingReserveReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class EndSportsBettingGamingCycleReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class CommitSportsBettingGamingCycleReply : ReplyMessage {
    
    private CommitSportsBettingGamingCycleReplyContent contentField = new CommitSportsBettingGamingCycleReplyContent();
    
    /// <remarks/>
    public CommitSportsBettingGamingCycleReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingGamingCycleStateReply : ReplyMessage {
    
    private GetSportsBettingGamingCycleStateReplyContent contentField = new GetSportsBettingGamingCycleStateReplyContent();
    
    /// <remarks/>
    public GetSportsBettingGamingCycleStateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class UpdateSportsBettingPropertiesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingPropertiesReply : ReplyMessage {
    
    private GetSportsBettingPropertiesReplyContent contentField = new GetSportsBettingPropertiesReplyContent();
    
    /// <remarks/>
    public GetSportsBettingPropertiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public partial class AddMoneyReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public partial class GetShowDemoPropertiesReply : ReplyMessage {
    
    private GetShowDemoPropertiesReplyContent contentField = new GetShowDemoPropertiesReplyContent();
    
    /// <remarks/>
    public GetShowDemoPropertiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetThemeInformationReply", Namespace="F2XShellThemeControlVer1.xsd")]
public partial class GetThemeInformationReply : ReplyMessage {
    
    private GetThemeInformationReplyContent contentField = new GetThemeInformationReplyContent();
    
    /// <remarks/>
    public GetThemeInformationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellThemeControlVer1.xsd")]
public partial class GetSelectableThemesReply : ReplyMessage {
    
    private List<ThemeInformation> contentField = new List<ThemeInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Theme", IsNullable=false)]
    public List<ThemeInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellThemeControlVer1.xsd")]
public partial class SwitchThemeReply : ReplyMessage {
    
    private SwitchThemeReplyContent contentField = new SwitchThemeReplyContent();
    
    /// <remarks/>
    public SwitchThemeReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class LogEndGameCycleReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class RemoveCritDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class WriteCritDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ReadCritDataReply", Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class ReadCritDataReply : ReplyMessage {
    
    private List<ReadCritDataReplyContentItem> contentField = new List<ReadCritDataReplyContentItem>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
    public List<ReadCritDataReplyContentItem> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class ReadCritDataReplyContentItem {
    
    private string keyField;
    
    private byte[] valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="base64Binary")]
    public byte[] Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class GetShellHistoryWritePermittedReply : ReplyMessage {
    
    private GetShellHistoryWritePermittedReplyContent contentField = new GetShellHistoryWritePermittedReplyContent();
    
    /// <remarks/>
    public GetShellHistoryWritePermittedReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class ShellHistoryWritePermittedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ReadCritDataReply", Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class ReadCritDataReply : ReplyMessage {
    
    private List<ReadCritDataReplyContentItem> contentField = new List<ReadCritDataReplyContentItem>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
    public List<ReadCritDataReplyContentItem> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class ReadCritDataReplyContentItem {
    
    private string keyField;
    
    private byte[] valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="base64Binary")]
    public byte[] Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class BindCoplayerSessionToHistoryReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class GetHistoryContextReply : ReplyMessage {
    
    private GetHistoryContextReplyContent contentField = new GetHistoryContextReplyContent();
    
    /// <remarks/>
    public GetHistoryContextReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class SetShellApiVersionsReply : ReplyMessage {
    
    private SetShellApiVersionsReplyContent contentField = new SetShellApiVersionsReplyContent();
    
    /// <remarks/>
    public SetShellApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class GetShellApiVersionsReply : ReplyMessage {
    
    private GetShellApiVersionsReplyContent contentField = new GetShellApiVersionsReplyContent();
    
    /// <remarks/>
    public GetShellApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public partial class InactivateShellContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public partial class ActivateShellContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public partial class NewShellContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public partial class ValidateThemeSetupReply : ReplyMessage {
    
    private ValidateSetupReplyContent contentField = new ValidateSetupReplyContent();
    
    /// <remarks/>
    public ValidateSetupReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class LaunchSessionReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class DestroySessionReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class CreateSessionReply : ReplyMessage {
    
    private CreateSessionReplyContent contentField = new CreateSessionReplyContent();
    
    /// <remarks/>
    public CreateSessionReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetGamePropertiesReply : ReplyMessage {
    
    private List<GameProperties> contentField = new List<GameProperties>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Game", IsNullable=false)]
    public List<GameProperties> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetSelectedAppReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetSelectedAppReply : ReplyMessage {
    
    private GetSelectedAppReplyContent contentField = new GetSelectedAppReplyContent();
    
    /// <remarks/>
    public GetSelectedAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AvailableAppsChangedReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class AvailableAppsChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAvailableAppsReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetAvailableAppsReply : ReplyMessage {
    
    private GetAvailableAppsReplyContent contentField = new GetAvailableAppsReplyContent();
    
    /// <remarks/>
    public GetAvailableAppsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DisplayStateChangedReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DisplayStateChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AppRequestedReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class AppRequestedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ChooserRequestedReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class ChooserRequestedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AppStateChangedReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class AppStateChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetDefaultAppReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetDefaultAppReply : ReplyMessage {
    
    private GetDefaultAppReplyContent contentField = new GetDefaultAppReplyContent();
    
    /// <remarks/>
    public GetDefaultAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DisplayShellReply : ReplyMessage {
    
    private DisplayAppReplyContent contentField = new DisplayAppReplyContent();
    
    /// <remarks/>
    public DisplayAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DisplayThemeReply : ReplyMessage {
    
    private DisplayAppReplyContent contentField = new DisplayAppReplyContent();
    
    /// <remarks/>
    public DisplayAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetChooserOfferableReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class SetChooserOfferableReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppStateReply", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetAppStateReply : ReplyMessage {
    
    private GetAppStateReplyContent contentField = new GetAppStateReplyContent();
    
    /// <remarks/>
    public GetAppStateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetThemePerformanceMetersReply : ReplyMessage {
    
    private List<ThemePerformanceMeters> contentField = new List<ThemePerformanceMeters>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Meters", IsNullable=false)]
    public List<ThemePerformanceMeters> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GetRuntimeGameEventsConfigurationReply : ReplyMessage {
    
    private GetRuntimeGameEventsConfigurationContent contentField = new GetRuntimeGameEventsConfigurationContent();
    
    /// <remarks/>
    public GetRuntimeGameEventsConfigurationContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GameBetMeterKeysUpdateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GameBetMeterUpdateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GameSelectionStatusUpdateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class PlayerChoiceUpdateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class WaitingForGenericInputStatusUpdateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GetGameLevelAwardValuesReply : ReplyMessage {
    
    private List<GameLevelThemeData> contentField = new List<GameLevelThemeData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<GameLevelThemeData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ResponsibleGamingSessionDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XResponsibleGamingSessionDisplayVer1.xsd")]
public partial class RequestDisplaySessionInfoReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGamePerformance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGamePerformanceVer1.xsd")]
public partial class GetPerformanceReportReply : ReplyMessage {
    
    private GetPerformanceReportReplyContent contentField = new GetPerformanceReportReplyContent();
    
    /// <remarks/>
    public GetPerformanceReportReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetMinimumPlayableCreditBalanceReply : ReplyMessage {
    
    private GetMinimumPlayableCreditBalanceReplyContent contentField = new GetMinimumPlayableCreditBalanceReplyContent();
    
    /// <remarks/>
    public GetMinimumPlayableCreditBalanceReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetMinimumPlayableCreditBalanceReplyContent {
    
    private MinimumPlayableCreditBalanceResponseList minimumPlayableCreditBalanceResponseListField;
    
    /// <remarks/>
    public MinimumPlayableCreditBalanceResponseList MinimumPlayableCreditBalanceResponseList {
        get {
            return this.minimumPlayableCreditBalanceResponseListField;
        }
        set {
            this.minimumPlayableCreditBalanceResponseListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetInspectionReportTypeReply : ReplyMessage {
    
    private GetInspectionReportTypeReplyContent contentField = new GetInspectionReportTypeReplyContent();
    
    /// <remarks/>
    public GetInspectionReportTypeReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetInspectionReportTypeReplyContent {
    
    private InspectionReportType inspectionReportTypeField;
    
    /// <remarks/>
    public InspectionReportType InspectionReportType {
        get {
            return this.inspectionReportTypeField;
        }
        set {
            this.inspectionReportTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public enum InspectionReportType {
    
    /// <remarks/>
    Itemized,
    
    /// <remarks/>
    Html,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetHtmlInspectionReportReply : ReplyMessage {
    
    private GetHtmlInspectionReportReplyContent contentField = new GetHtmlInspectionReportReplyContent();
    
    /// <remarks/>
    public GetHtmlInspectionReportReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetHtmlInspectionReportReplyContent {
    
    private string htmlDataField;
    
    private bool reportGeneratedField;
    
    /// <remarks/>
    public string HtmlData {
        get {
            return this.htmlDataField;
        }
        set {
            this.htmlDataField = value;
        }
    }
    
    /// <remarks/>
    public bool ReportGenerated {
        get {
            return this.reportGeneratedField;
        }
        set {
            this.reportGeneratedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetInspectionReportReply : ReplyMessage {
    
    private GetInspectionReportReplyContent contentField = new GetInspectionReportReplyContent();
    
    /// <remarks/>
    public GetInspectionReportReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetInspectionReportReplyContent {
    
    private InspectionReport inspectionReportField;
    
    private bool reportGeneratedField;
    
    /// <remarks/>
    public InspectionReport InspectionReport {
        get {
            return this.inspectionReportField;
        }
        set {
            this.inspectionReportField = value;
        }
    }
    
    /// <remarks/>
    public bool ReportGenerated {
        get {
            return this.reportGeneratedField;
        }
        set {
            this.reportGeneratedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class GetListLimitedRandomNumbersReply : ReplyMessage {
    
    private GetListLimitedRandomNumbersReplyContent contentField = new GetListLimitedRandomNumbersReplyContent();
    
    /// <remarks/>
    public GetListLimitedRandomNumbersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class GetRandomNumbersReply : ReplyMessage {
    
    private GetRandomNumbersReplyContent contentField = new GetRandomNumbersReplyContent();
    
    /// <remarks/>
    public GetRandomNumbersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryEnabledPayvarBasedProgressiveSettingsReply : ReplyMessage {
    
    private QueryEnabledPayvarBasedProgressiveSettingsReplyContent contentField = new QueryEnabledPayvarBasedProgressiveSettingsReplyContent();
    
    /// <remarks/>
    public QueryEnabledPayvarBasedProgressiveSettingsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryEnabledPayvarBasedProgressiveSettingsReplyContent {
    
    private PayvarIdentifier payvarField;
    
    private List<EnabledProgressiveSettings> progressiveGameLevelSettingsDataField = new List<EnabledProgressiveSettings>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelSettingsData")]
    public List<EnabledProgressiveSettings> ProgressiveGameLevelSettingsData {
        get {
            return this.progressiveGameLevelSettingsDataField;
        }
        set {
            this.progressiveGameLevelSettingsDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryPayvarBasedProgressiveSettingsReply : ReplyMessage {
    
    private QueryPayvarBasedProgressiveSettingsReplyContent contentField = new QueryPayvarBasedProgressiveSettingsReplyContent();
    
    /// <remarks/>
    public QueryPayvarBasedProgressiveSettingsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryPayvarBasedProgressiveSettingsReplyContent {
    
    private PayvarIdentifier payvarField;
    
    private List<PayvarBasedProgressiveSettings> progressiveGameLevelSettingsDataField = new List<PayvarBasedProgressiveSettings>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelSettingsData")]
    public List<PayvarBasedProgressiveSettings> ProgressiveGameLevelSettingsData {
        get {
            return this.progressiveGameLevelSettingsDataField;
        }
        set {
            this.progressiveGameLevelSettingsDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryEnabledThemeBasedProgressiveSettingsReply : ReplyMessage {
    
    private QueryEnabledThemeBasedProgressiveSettingsReplyContent contentField = new QueryEnabledThemeBasedProgressiveSettingsReplyContent();
    
    /// <remarks/>
    public QueryEnabledThemeBasedProgressiveSettingsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryEnabledThemeBasedProgressiveSettingsReplyContent {
    
    private ThemeIdentifier themeField;
    
    private List<EnabledProgressiveSettings> progressiveGameLevelSettingsDataField = new List<EnabledProgressiveSettings>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelSettingsData")]
    public List<EnabledProgressiveSettings> ProgressiveGameLevelSettingsData {
        get {
            return this.progressiveGameLevelSettingsDataField;
        }
        set {
            this.progressiveGameLevelSettingsDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryThemeBasedProgressiveSettingsReply : ReplyMessage {
    
    private QueryThemeBasedProgressiveSettingsReplyContent contentField = new QueryThemeBasedProgressiveSettingsReplyContent();
    
    /// <remarks/>
    public QueryThemeBasedProgressiveSettingsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryThemeBasedProgressiveSettingsReplyContent {
    
    private ThemeIdentifier themeField;
    
    private List<ThemeBasedProgressiveSettings> progressiveGameLevelSettingsDataField = new List<ThemeBasedProgressiveSettings>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelSettingsData")]
    public List<ThemeBasedProgressiveSettings> ProgressiveGameLevelSettingsData {
        get {
            return this.progressiveGameLevelSettingsDataField;
        }
        set {
            this.progressiveGameLevelSettingsDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetEnabledPayvarBasedProgressiveValuesReply : ReplyMessage {
    
    private GetEnabledPayvarBasedProgressiveValuesReplyContent contentField = new GetEnabledPayvarBasedProgressiveValuesReplyContent();
    
    /// <remarks/>
    public GetEnabledPayvarBasedProgressiveValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetEnabledPayvarBasedProgressiveValuesReplyContent {
    
    private PayvarIdentifier payvarField;
    
    private List<EnabledProgressiveValues> progressiveGameLevelValueDataField = new List<EnabledProgressiveValues>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelValueData")]
    public List<EnabledProgressiveValues> ProgressiveGameLevelValueData {
        get {
            return this.progressiveGameLevelValueDataField;
        }
        set {
            this.progressiveGameLevelValueDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetPayvarBasedProgressiveValuesReply : ReplyMessage {
    
    private GetPayvarBasedProgressiveValuesReplyContent contentField = new GetPayvarBasedProgressiveValuesReplyContent();
    
    /// <remarks/>
    public GetPayvarBasedProgressiveValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetPayvarBasedProgressiveValuesReplyContent {
    
    private PayvarIdentifier payvarField;
    
    private List<PayvarBasedProgressiveValues> progressiveGameLevelValueDataField = new List<PayvarBasedProgressiveValues>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelValueData")]
    public List<PayvarBasedProgressiveValues> ProgressiveGameLevelValueData {
        get {
            return this.progressiveGameLevelValueDataField;
        }
        set {
            this.progressiveGameLevelValueDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetEnabledThemeBasedProgressiveValuesReply : ReplyMessage {
    
    private GetEnabledThemeBasedProgressiveValuesReplyContent contentField = new GetEnabledThemeBasedProgressiveValuesReplyContent();
    
    /// <remarks/>
    public GetEnabledThemeBasedProgressiveValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetEnabledThemeBasedProgressiveValuesReplyContent {
    
    private ThemeIdentifier themeField;
    
    private List<EnabledProgressiveValues> progressiveGameLevelValueDataField = new List<EnabledProgressiveValues>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelValueData")]
    public List<EnabledProgressiveValues> ProgressiveGameLevelValueData {
        get {
            return this.progressiveGameLevelValueDataField;
        }
        set {
            this.progressiveGameLevelValueDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetThemeBasedProgressiveValuesReply : ReplyMessage {
    
    private GetThemeBasedProgressiveValuesReplyContent contentField = new GetThemeBasedProgressiveValuesReplyContent();
    
    /// <remarks/>
    public GetThemeBasedProgressiveValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetThemeBasedProgressiveValuesReplyContent {
    
    private ThemeIdentifier themeField;
    
    private List<ThemeBasedProgressiveValues> progressiveGameLevelValueDataField = new List<ThemeBasedProgressiveValues>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveGameLevelValueData")]
    public List<ThemeBasedProgressiveValues> ProgressiveGameLevelValueData {
        get {
            return this.progressiveGameLevelValueDataField;
        }
        set {
            this.progressiveGameLevelValueDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerTippingVer1.xsd")]
public partial class TippingResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerTippingVer1.xsd")]
public partial class TippingRequestReply : ReplyMessage {
    
    private TippingRequestReplyContent contentField = new TippingRequestReplyContent();
    
    /// <remarks/>
    public TippingRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="UpdatePropertiesReply", Namespace="F2XPlayerTippingVer1.xsd")]
public partial class UpdatePropertiesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetPropertiesReply", Namespace="F2XPlayerTippingVer1.xsd")]
public partial class GetPropertiesReply : ReplyMessage {
    
    private GetPropertiesReplyContent contentField = new GetPropertiesReplyContent();
    
    /// <remarks/>
    public GetPropertiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class GetConfigDataSessionTimerDisplayEnabledReply : ReplyMessage {
    
    private GetConfigDataSessionTimerDisplayEnabledReplyContent contentField = new GetConfigDataSessionTimerDisplayEnabledReplyContent();
    
    /// <remarks/>
    public GetConfigDataSessionTimerDisplayEnabledReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerSessionVer1.xsd")]
public partial class GetConfigDataSessionTimerDisplayEnabledReplyContent {
    
    private bool sessionTimerDisplayEnabledField;
    
    /// <remarks/>
    public bool SessionTimerDisplayEnabled {
        get {
            return this.sessionTimerDisplayEnabledField;
        }
        set {
            this.sessionTimerDisplayEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class QueryPlayerSessionStatusReply : ReplyMessage {
    
    private QueryPlayerSessionStatusReplyContent contentField = new QueryPlayerSessionStatusReplyContent();
    
    /// <remarks/>
    public QueryPlayerSessionStatusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerSessionVer1.xsd")]
public partial class QueryPlayerSessionStatusReplyContent {
    
    private PlayerSessionStatusData playerSessionStatusField;
    
    /// <remarks/>
    public PlayerSessionStatusData PlayerSessionStatus {
        get {
            return this.playerSessionStatusField;
        }
        set {
            this.playerSessionStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class PlayerSessionStatusData {
    
    private bool sessionActiveField;
    
    private System.DateTime sessionStartTimeField;
    
    private bool sessionStartTimeFieldSpecified;
    
    /// <remarks/>
    public bool SessionActive {
        get {
            return this.sessionActiveField;
        }
        set {
            this.sessionActiveField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime SessionStartTime {
        get {
            return this.sessionStartTimeField;
        }
        set {
            this.sessionStartTimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SessionStartTimeSpecified {
        get {
            return this.sessionStartTimeFieldSpecified;
        }
        set {
            this.sessionStartTimeFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class PlayerSessionStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class ParametersResetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class CurrentResetParametersChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class QueryCurrentResetParametersReply : ReplyMessage {
    
    private QueryCurrentResetParametersReplyContent contentField = new QueryCurrentResetParametersReplyContent();
    
    /// <remarks/>
    public QueryCurrentResetParametersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class GetConfigDataPlayerSessionParameterResetEnabledReply : ReplyMessage {
    
    private GetConfigDataPlayerSessionParameterResetEnabledReplyContent contentField = new GetConfigDataPlayerSessionParameterResetEnabledReplyContent();
    
    /// <remarks/>
    public GetConfigDataPlayerSessionParameterResetEnabledReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class SessionInformationScreenEnteredReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class GameInformationScreenEnteredReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class ActivationStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class PidConfigurationChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class GetPidConfigurationReply : ReplyMessage {
    
    private GetPidConfigurationReplyContent contentField = new GetPidConfigurationReplyContent();
    
    /// <remarks/>
    public GetPidConfigurationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerControlContextMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerControlContextMonitoringVer1.xsd")]
public partial class PlayerControlContextStateUpdateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class SetCardAcceptanceStatusReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class CardRemovedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class CardInsertedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class StopTrackingReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class StartTrackingReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class SessionTrackingStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class GetSessionDataReply : ReplyMessage {
    
    private GetSessionDataReplyContent contentField = new GetSessionDataReplyContent();
    
    /// <remarks/>
    public GetSessionDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PerformCashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPerformCashoutVer1.xsd")]
public partial class PerformCashoutResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PerformCashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPerformCashoutVer1.xsd")]
public partial class PerformCashoutRequestReply : ReplyMessage {
    
    private PerformCashoutRequestReplyContent contentField = new PerformCashoutRequestReplyContent();
    
    /// <remarks/>
    public PerformCashoutRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class TransParcelCallRxReply : ReplyMessage {
    
    private TransParcelCallRxReplyContent contentField = new TransParcelCallRxReplyContent();
    
    /// <remarks/>
    public TransParcelCallRxReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class TransParcelCallTxReply : ReplyMessage {
    
    private TransParcelCallTxReplyContent contentField = new TransParcelCallTxReplyContent();
    
    /// <remarks/>
    public TransParcelCallTxReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCallRxReply : ReplyMessage {
    
    private ParcelCallRxReplyContent contentField = new ParcelCallRxReplyContent();
    
    /// <remarks/>
    public ParcelCallRxReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCallTxReply : ReplyMessage {
    
    private ParcelCallTxReplyContent contentField = new ParcelCallTxReplyContent();
    
    /// <remarks/>
    public ParcelCallTxReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd")]
public partial class ReadCritDataReply : ReplyMessage {
    
    private List<ReadCritDataItemReplyResult> contentField = new List<ReadCritDataItemReplyResult>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ReadCritDataItemReplyResult> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class GetPrioritizedIPListReply : ReplyMessage {
    
    private GetPrioritizedIPListReplyContent contentField = new GetPrioritizedIPListReplyContent();
    
    /// <remarks/>
    public GetPrioritizedIPListReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class GetIPAddressForHostConnectionReply : ReplyMessage {
    
    private GetIPAddressForHostConnectionReplyContent contentField = new GetIPAddressForHostConnectionReplyContent();
    
    /// <remarks/>
    public GetIPAddressForHostConnectionReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class NetworkSettingsChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class AddIpv4RoutingTableEntryReply : ReplyMessage {
    
    private AddIpv4RoutingTableEntryReplyContent contentField = new AddIpv4RoutingTableEntryReplyContent();
    
    /// <remarks/>
    public AddIpv4RoutingTableEntryReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class GetNicInformationReply : ReplyMessage {
    
    private GetNicInformationReplyContent contentField = new GetNicInformationReplyContent();
    
    /// <remarks/>
    public GetNicInformationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class EndOfferingMidGameMoneyAcceptanceReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class OfferingMidGameMoneyAcceptanceResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class RequestOfferingMidGameMoneyAcceptanceReply : ReplyMessage {
    
    private RequestOfferingMidGameMoneyAcceptanceReplyContent contentField = new RequestOfferingMidGameMoneyAcceptanceReplyContent();
    
    /// <remarks/>
    public RequestOfferingMidGameMoneyAcceptanceReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class UpdateMessagesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class GetMessagesReply : ReplyMessage {
    
    private GetMessagesReplyContent contentField = new GetMessagesReplyContent();
    
    /// <remarks/>
    public GetMessagesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineSupervisionVer1.xsd")]
public partial class RequestMachineRebootReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineFloorLocationReply : ReplyMessage {
    
    private GetConfigDataMachineFloorLocationReplyContent contentField = new GetConfigDataMachineFloorLocationReplyContent();
    
    /// <remarks/>
    public GetConfigDataMachineFloorLocationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineAssetNumberReply : ReplyMessage {
    
    private GetConfigDataMachineAssetNumberReplyContent contentField = new GetConfigDataMachineAssetNumberReplyContent();
    
    /// <remarks/>
    public GetConfigDataMachineAssetNumberReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataG2SMachineIdentifierReply : ReplyMessage {
    
    private GetConfigDataG2SMachineIdentifierReplyContent contentField = new GetConfigDataG2SMachineIdentifierReplyContent();
    
    /// <remarks/>
    public GetConfigDataG2SMachineIdentifierReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineSerialNumberReply : ReplyMessage {
    
    private GetConfigDataMachineSerialNumberReplyContent contentField = new GetConfigDataMachineSerialNumberReplyContent();
    
    /// <remarks/>
    public GetConfigDataMachineSerialNumberReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class QueryLanguageIconsReply : ReplyMessage {
    
    private List<LanguageIconEntry> contentField = new List<LanguageIconEntry>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<LanguageIconEntry> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class GetTimeOfDayFormatReply : ReplyMessage {
    
    private GetTimeOfDayFormatReplyContent contentField = new GetTimeOfDayFormatReplyContent();
    
    /// <remarks/>
    public GetTimeOfDayFormatReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLocalizationVer1.xsd")]
public partial class GetTimeOfDayFormatReplyContent {
    
    private TimeOfDayFormat timeOfDayFormatField;
    
    /// <remarks/>
    public TimeOfDayFormat TimeOfDayFormat {
        get {
            return this.timeOfDayFormatField;
        }
        set {
            this.timeOfDayFormatField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public enum TimeOfDayFormat {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    TwentyFourHour,
    
    /// <remarks/>
    TwelveHourWithAmPm,
    
    /// <remarks/>
    TwelveHourWithoutAmPm,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class GetCreditFormatterInfoReply : ReplyMessage {
    
    private GetCreditFormatterInfoReplyContent contentField = new GetCreditFormatterInfoReplyContent();
    
    /// <remarks/>
    public GetCreditFormatterInfoReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLocalizationVer1.xsd")]
public partial class GetCreditFormatterInfoReplyContent {
    
    private CreditFormatterInfo creditFormatterInfoField;
    
    /// <remarks/>
    public CreditFormatterInfo CreditFormatterInfo {
        get {
            return this.creditFormatterInfoField;
        }
        set {
            this.creditFormatterInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class ParkReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class SetApiVersionsReply : ReplyMessage {
    
    private SetApiVersionsReplyContent contentField = new SetApiVersionsReplyContent();
    
    /// <remarks/>
    public SetApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class GetApiVersionsReply : ReplyMessage {
    
    private GetApiVersionsReplyContent contentField = new GetApiVersionsReplyContent();
    
    /// <remarks/>
    public GetApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusHostLinkStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class EndLegacyBonusBookingHoldOffReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusArrivedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class QueryLegacyBonusHostStatusReply : ReplyMessage {
    
    private QueryLegacyBonusHostStatusReplyContent contentField = new QueryLegacyBonusHostStatusReplyContent();
    
    /// <remarks/>
    public QueryLegacyBonusHostStatusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class QueryLegacyBonusStatusReply : ReplyMessage {
    
    private QueryLegacyBonusStatusReplyContent contentField = new QueryLegacyBonusStatusReplyContent();
    
    /// <remarks/>
    public QueryLegacyBonusStatusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class RequestLegacyBonusBookingHoldOffReply : ReplyMessage {
    
    private RequestLegacyBonusBookingHoldOffReplyContent contentField = new RequestLegacyBonusBookingHoldOffReplyContent();
    
    /// <remarks/>
    public RequestLegacyBonusBookingHoldOffReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusNotificationEnableReply : ReplyMessage {
    
    private LegacyBonusNotificationEnableReplyContent contentField = new LegacyBonusNotificationEnableReplyContent();
    
    /// <remarks/>
    public LegacyBonusNotificationEnableReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreWriteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.RemoveReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.WriteReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreReadReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.ReadReply))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public abstract partial class KeyValueStoreReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.RemoveReply))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.WriteReply))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public abstract partial class KeyValueStoreWriteReply : KeyValueStoreReply {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public partial class RemoveReply : KeyValueStoreWriteReply {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public partial class WriteReply : KeyValueStoreWriteReply {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.ReadReply))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public abstract partial class KeyValueStoreReadReply : KeyValueStoreReply {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public partial class ReadReply : KeyValueStoreReadReply {
    
    private List<ReadReplyContentItem> contentField = new List<ReadReplyContentItem>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
    public List<ReadReplyContentItem> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XKVSTypesVer1.xsd")]
public partial class ReadReplyContentItem {
    
    private string keyField;
    
    private byte[] valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="base64Binary")]
    public byte[] Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XJackpotItalyVer1.xsd")]
public partial class GetConfigDataJackpotBonusEnabledReply : ReplyMessage {
    
    private GetConfigDataJackpotBonusEnabledReplyContent contentField = new GetConfigDataJackpotBonusEnabledReplyContent();
    
    /// <remarks/>
    public GetConfigDataJackpotBonusEnabledReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XJackpotItalyVer1.xsd")]
public partial class GetConfigDataJackpotBonusEnabledReplyContent {
    
    private bool bonusEnabledField;
    
    /// <remarks/>
    public bool BonusEnabled {
        get {
            return this.bonusEnabledField;
        }
        set {
            this.bonusEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XJackpotItalyVer1.xsd")]
public partial class GetJackpotBonusValuesReply : ReplyMessage {
    
    private List<LinkedJackpotBonusData> contentField = new List<LinkedJackpotBonusData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("LinkedJackpotBonusLevel", IsNullable=false)]
    public List<LinkedJackpotBonusData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class ReserveActivationCanceledReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class RequestReserveActivationReply : ReplyMessage {
    
    private RequestReserveActivationReplyContent contentField = new RequestReserveActivationReplyContent();
    
    /// <remarks/>
    public RequestReserveActivationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class UpdateReserveParametersReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class GetReserveParametersReply : ReplyMessage {
    
    private GetReserveParametersReplyContent contentField = new GetReserveParametersReplyContent();
    
    /// <remarks/>
    public GetReserveParametersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameProgressiveSettings {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameProgressiveSettingsVer1.xsd")]
public partial class QueryProgressiveSettingsReply : ReplyMessage {
    
    private List<GameLevelProgressiveSettings> contentField = new List<GameLevelProgressiveSettings>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ProgressiveLinkedGameLevelSettings", IsNullable=false)]
    public List<GameLevelProgressiveSettings> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReply", Namespace="F2XGamePresentationBehaviorVer1.xsd")]
public partial class GetConfigDataReply : ReplyMessage {
    
    private GetConfigDataReplyContent contentField = new GetConfigDataReplyContent();
    
    /// <remarks/>
    public GetConfigDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GameFocusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GameInProgressChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GetGameFocusReply : ReplyMessage {
    
    private GetGameFocusReplyContent contentField = new GetGameFocusReplyContent();
    
    /// <remarks/>
    public GetGameFocusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GetGameInProgressReply : ReplyMessage {
    
    private GetGameInProgressReplyContent contentField = new GetGameInProgressReplyContent();
    
    /// <remarks/>
    public GetGameInProgressReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public partial class PokerGamePlayReportReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameOutcomeEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameOutcomeEventsVer1.xsd")]
public partial class FinalWinRecordEventReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLink {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLinkVer1.xsd")]
public partial class GetConfigDataStompBrokerReply : ReplyMessage {
    
    private GetConfigDataStompBrokerReplyContent contentField = new GetConfigDataStompBrokerReplyContent();
    
    /// <remarks/>
    public GetConfigDataStompBrokerReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GetThemeBasedGameLevelValuesReply : ReplyMessage {
    
    private GetThemeBasedGameLevelValuesReplyContent contentField = new GetThemeBasedGameLevelValuesReplyContent();
    
    /// <remarks/>
    public GetThemeBasedGameLevelValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GetThemeBasedGameLevelValuesReplyContent {
    
    private ThemeIdentifier themeField;
    
    private List<GameLevelPayvarDenomData> gameLevelPayvarDenomDataField = new List<GameLevelPayvarDenomData>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameLevelPayvarDenomData")]
    public List<GameLevelPayvarDenomData> GameLevelPayvarDenomData {
        get {
            return this.gameLevelPayvarDenomDataField;
        }
        set {
            this.gameLevelPayvarDenomDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class InitializeGameLevelDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetDenominationButtonPanelMinBetReply : ReplyMessage {
    
    private List<DenominationButtonPanelMinBet> contentField = new List<DenominationButtonPanelMinBet>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("DenominatonButtonPanelMinBet", IsNullable=false)]
    public List<DenominationButtonPanelMinBet> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarButtonPanelMinBetReply : ReplyMessage {
    
    private List<PayvarButtonPanelMinBet> contentField = new List<PayvarButtonPanelMinBet>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<PayvarButtonPanelMinBet> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeButtonPanelMinBetReply : ReplyMessage {
    
    private List<ThemeButtonPanelMinBet> contentField = new List<ThemeButtonPanelMinBet>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemeButtonPanelMinBet> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarInformationReply : ReplyMessage {
    
    private List<PayvarInformation> contentField = new List<PayvarInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<PayvarInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeInformationReply : ReplyMessage {
    
    private List<ThemeInformation> contentField = new List<ThemeInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemeInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarEnabledDenominationsReply : ReplyMessage {
    
    private List<PayvarEnabledDenominations> contentField = new List<PayvarEnabledDenominations>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<PayvarEnabledDenominations> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeEnabledDenominationsReply : ReplyMessage {
    
    private List<ThemeEnabledDenominations> contentField = new List<ThemeEnabledDenominations>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemeEnabledDenominations> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarSupportedDenominationsReply : ReplyMessage {
    
    private List<PayvarSupportedDenominations> contentField = new List<PayvarSupportedDenominations>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<PayvarSupportedDenominations> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeSupportedDenominationsReply : ReplyMessage {
    
    private List<ThemeSupportedDenominations> contentField = new List<ThemeSupportedDenominations>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemeSupportedDenominations> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetDenominationMaxBetCreditsReply : ReplyMessage {
    
    private List<DenominationMaxBetCreditData> contentField = new List<DenominationMaxBetCreditData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MaxBetCreditData", IsNullable=false)]
    public List<DenominationMaxBetCreditData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarMaxBetCreditsReply : ReplyMessage {
    
    private List<PayvarMaxBetCreditData> contentField = new List<PayvarMaxBetCreditData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MaxBetCreditData", IsNullable=false)]
    public List<PayvarMaxBetCreditData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeMaxBetCreditsReply : ReplyMessage {
    
    private List<ThemeMaxBetCreditData> contentField = new List<ThemeMaxBetCreditData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("MaxBetCreditData", IsNullable=false)]
    public List<ThemeMaxBetCreditData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetBetResolutionReply : ReplyMessage {
    
    private List<ThemeBetResolution> contentField = new List<ThemeBetResolution>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BetResolutionData", IsNullable=false)]
    public List<ThemeBetResolution> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarPaybackPercentageDataReply : ReplyMessage {
    
    private List<PayvarPaybackPercentageData> contentField = new List<PayvarPaybackPercentageData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<PayvarPaybackPercentageData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarsForThemeReply : ReplyMessage {
    
    private List<ThemePayvarList> contentField = new List<ThemePayvarList>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PayvarsForTheme", IsNullable=false)]
    public List<ThemePayvarList> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameHistorySupplemental {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameHistorySupplementalVer1.xsd")]
public partial class SetExportDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupInformationVer1.xsd")]
public partial class GetPayvarGroupsForThemeReply : ReplyMessage {
    
    private List<ThemePayvarGroups> contentField = new List<ThemePayvarGroups>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemePayvarGroups> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class GetConfigDataPayvarGroupInformationReply : ReplyMessage {
    
    private List<PayvarInformation> contentField = new List<PayvarInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GameInformation", IsNullable=false)]
    public List<PayvarInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class GetSelectedPayvarReply : ReplyMessage {
    
    private GetSelectedPayvarReplyContent contentField = new GetSelectedPayvarReplyContent();
    
    /// <remarks/>
    public GetSelectedPayvarReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class SelectPayvarReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class ClearGameCycleBehaviorModifierReply : ReplyMessage {
    
    private ClearGameCycleBehaviorModifierReplyContent contentField = new ClearGameCycleBehaviorModifierReplyContent();
    
    /// <remarks/>
    public ClearGameCycleBehaviorModifierReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class EnableGameCycleBehaviorModifiersReply : ReplyMessage {
    
    private EnableGameCycleBehaviorModifiersReplyContent contentField = new EnableGameCycleBehaviorModifiersReplyContent();
    
    /// <remarks/>
    public EnableGameCycleBehaviorModifiersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class GameCycleModificationEventReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class SetGameCycleModificationEventRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AwardResultsPostedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EndGameCycleReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AbortCompleteReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class FinalizeAwardResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class FinalizeAwardRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AbortGameCycleReply : ReplyMessage {
    
    private AbortGameCycleReplyContent contentField = new AbortGameCycleReplyContent();
    
    /// <remarks/>
    public AbortGameCycleReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeResponseDataReply : ReplyMessage {
    
    private EvalOutcomeResponseDataReplyContent contentField = new EvalOutcomeResponseDataReplyContent();
    
    /// <remarks/>
    public EvalOutcomeResponseDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class StartPlayingReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class UnenrollGameCycleReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EnrollResponseDataReply : ReplyMessage {
    
    private EnrollResponseDataReplyContent contentField = new EnrollResponseDataReplyContent();
    
    /// <remarks/>
    public EnrollResponseDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EnrollResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EnrollGameCycleReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class UncommitGameCycleReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class CommitGameCycleReply : ReplyMessage {
    
    private CommitGameCycleReplyContent contentField = new CommitGameCycleReplyContent();
    
    /// <remarks/>
    public CommitGameCycleReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class QueryGameCycleStateReply : ReplyMessage {
    
    private QueryGameCycleStateReplyContent contentField = new QueryGameCycleStateReplyContent();
    
    /// <remarks/>
    public QueryGameCycleStateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleEventsVer1.xsd")]
public partial class GameCycleEventReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleEventsVer1.xsd")]
public partial class SetGameCycleEventRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReply", Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class GetConfigDataReply : ReplyMessage {
    
    private GetConfigDataReplyContent contentField = new GetConfigDataReplyContent();
    
    /// <remarks/>
    public GetConfigDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class PlaceBetReply : ReplyMessage {
    
    private PlaceBetReplyContent contentField = new PlaceBetReplyContent();
    
    /// <remarks/>
    public PlaceBetReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class PlaceStartingBetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class UncommitBetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class CommitBetReply : ReplyMessage {
    
    private CommitBetReplyContent contentField = new CommitBetReplyContent();
    
    /// <remarks/>
    public CommitBetReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetOcspSettingsReply : ReplyMessage {
    
    private GetOcspSettingsReplyContent contentField = new GetOcspSettingsReplyContent();
    
    /// <remarks/>
    public GetOcspSettingsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XG2SConnectionVer1.xsd")]
public partial class CertificatesChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetCertificateAuthoritiesReply", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetCertificateAuthoritiesReply : ReplyMessage {
    
    private GetCertificateAuthoritiesReplyContent contentField = new GetCertificateAuthoritiesReplyContent();
    
    /// <remarks/>
    public GetCertificateAuthoritiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetClientCertificateReply", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetClientCertificateReply : ReplyMessage {
    
    private GetClientCertificateReplyContent contentField = new GetClientCertificateReplyContent();
    
    /// <remarks/>
    public GetClientCertificateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetG2SHostAddressReply", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetG2SHostAddressReply : ReplyMessage {
    
    private GetG2SHostAddressReplyContent contentField = new GetG2SHostAddressReplyContent();
    
    /// <remarks/>
    public GetG2SHostAddressReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class UpdateFlashPlayerClockPropertiesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class GetFlashPlayerClockPropertiesReply : ReplyMessage {
    
    private GetFlashPlayerClockPropertiesReplyContent contentField = new GetFlashPlayerClockPropertiesReplyContent();
    
    /// <remarks/>
    public GetFlashPlayerClockPropertiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReply", Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class GetConfigDataReply : ReplyMessage {
    
    private GetConfigDataReplyContent contentField = new GetConfigDataReplyContent();
    
    /// <remarks/>
    public GetConfigDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetSSLCertConfigurationReply : ReplyMessage {
    
    private SetSSLCertConfigurationReplyContent contentField = new SetSSLCertConfigurationReplyContent();
    
    /// <remarks/>
    public SetSSLCertConfigurationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetUrlAclConfigurationReply : ReplyMessage {
    
    private SetUrlAclConfigurationReplyContent contentField = new SetUrlAclConfigurationReplyContent();
    
    /// <remarks/>
    public SetUrlAclConfigurationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetPortEnabledReply : ReplyMessage {
    
    private SetPortEnabledReplyContent contentField = new SetPortEnabledReplyContent();
    
    /// <remarks/>
    public SetPortEnabledReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class GetPortStatusReply : ReplyMessage {
    
    private GetPortStatusReplyContent contentField = new GetPortStatusReplyContent();
    
    /// <remarks/>
    public GetPortStatusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class GetConfigDataFirewallEnabledReply : ReplyMessage {
    
    private GetFirewallEnabledReplyContent contentField = new GetFirewallEnabledReplyContent();
    
    /// <remarks/>
    public GetFirewallEnabledReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class WapHandpayAcknowledgeReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class WapHandpayReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ValidationResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ValidationRequestReply : ReplyMessage {
    
    private ValidationRequestReplyContent contentField = new ValidationRequestReplyContent();
    
    /// <remarks/>
    public ValidationRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class SetControllerLevelValuesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class GetConfigDataMinControllerLevelUpdateIntervalReply : ReplyMessage {
    
    private GetConfigDataMinControllerLevelUpdateIntervalReplyContent contentField = new GetConfigDataMinControllerLevelUpdateIntervalReplyContent();
    
    /// <remarks/>
    public GetConfigDataMinControllerLevelUpdateIntervalReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class QueryProgressiveLinksReply : ReplyMessage {
    
    private QueryProgressiveLinksReplyContent contentField = new QueryProgressiveLinksReplyContent();
    
    /// <remarks/>
    public QueryProgressiveLinksReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class RemoveProgressiveLinksReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class AddProgressiveLinksReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class QueryGameLevelDefinitionsReply : ReplyMessage {
    
    private QueryGameLevelDefinitionsReplyContent contentField = new QueryGameLevelDefinitionsReplyContent();
    
    /// <remarks/>
    public QueryGameLevelDefinitionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class QueryControllersReply : ReplyMessage {
    
    private QueryControllersReplyContent contentField = new QueryControllersReplyContent();
    
    /// <remarks/>
    public QueryControllersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class QueryControllerLevelsReply : ReplyMessage {
    
    private QueryControllerLevelsReplyContent contentField = new QueryControllerLevelsReplyContent();
    
    /// <remarks/>
    public QueryControllerLevelsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class DestroyControllerReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class CreateControllerReply : ReplyMessage {
    
    private CreateControllerReplyContent contentField = new CreateControllerReplyContent();
    
    /// <remarks/>
    public CreateControllerReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class AdjustControllerLevelParametersReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class AddControllerLevelReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ChooserRequestedReply", Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class ChooserRequestedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class CentralAppSelectionCompleteReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class CentralAppSelectionCanceledReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class AvailableCentralAppsChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class AppSelectionStateChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetSelectedCentralAppReply : ReplyMessage {
    
    private GetSelectedCentralAppReplyContent contentField = new GetSelectedCentralAppReplyContent();
    
    /// <remarks/>
    public GetSelectedCentralAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class CentralAppSelectionRequestReply : ReplyMessage {
    
    private CentralAppSelectionRequestReplyContent contentField = new CentralAppSelectionRequestReplyContent();
    
    /// <remarks/>
    public CentralAppSelectionRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetAvailableCentralAppsReply : ReplyMessage {
    
    private GetAvailableCentralAppsReplyContent contentField = new GetAvailableCentralAppsReplyContent();
    
    /// <remarks/>
    public GetAvailableCentralAppsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetAppSelectionStateReply : ReplyMessage {
    
    private GetAppSelectionStateReplyContent contentField = new GetAppSelectionStateReplyContent();
    
    /// <remarks/>
    public GetAppSelectionStateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class SetAppSelectionEventRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataReply", Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetConfigDataReply : ReplyMessage {
    
    private GetConfigDataReplyContent contentField = new GetConfigDataReplyContent();
    
    /// <remarks/>
    public GetConfigDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventLog {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventLogVer1.xsd")]
public partial class RecordEventReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventBasedProgressive {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventBasedProgressiveVer1.xsd")]
public partial class AddQualifiedContributionReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataRtpOrderedByBetRequiredReply : ReplyMessage {
    
    private GetConfigDataRtpOrderedByBetRequiredReplyContent contentField = new GetConfigDataRtpOrderedByBetRequiredReplyContent();
    
    /// <remarks/>
    public GetConfigDataRtpOrderedByBetRequiredReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataDisplayVideoReelsForStepperReply : ReplyMessage {
    
    private GetConfigDataDisplayVideoReelsForStepperReplyContent contentField = new GetConfigDataDisplayVideoReelsForStepperReplyContent();
    
    /// <remarks/>
    public GetConfigDataDisplayVideoReelsForStepperReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataDefaultBetSelectionStyleReply : ReplyMessage {
    
    private GetConfigDataDefaultBetSelectionStyleReplyContent contentField = new GetConfigDataDefaultBetSelectionStyleReplyContent();
    
    /// <remarks/>
    public GetConfigDataDefaultBetSelectionStyleReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetMarketingBehaviorReply : ReplyMessage {
    
    private GetMarketingBehaviorReplyContent contentField = new GetMarketingBehaviorReplyContent();
    
    /// <remarks/>
    public GetMarketingBehaviorReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetAncillaryMonetaryLimitReply : ReplyMessage {
    
    private GetAncillaryMonetaryLimitReplyContent contentField = new GetAncillaryMonetaryLimitReplyContent();
    
    /// <remarks/>
    public GetAncillaryMonetaryLimitReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataExternalBonusWinCapReply : ReplyMessage {
    
    private GetConfigDataExternalBonusWinCapReplyContent contentField = new GetConfigDataExternalBonusWinCapReplyContent();
    
    /// <remarks/>
    public GetConfigDataExternalBonusWinCapReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataProgressiveWinCapReply : ReplyMessage {
    
    private GetConfigDataProgressiveWinCapReplyContent contentField = new GetConfigDataProgressiveWinCapReplyContent();
    
    /// <remarks/>
    public GetConfigDataProgressiveWinCapReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReply : ReplyMessage {
    
    private GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReplyContent contentField = new GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReplyContent();
    
    /// <remarks/>
    public GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataTotalWinCapReply : ReplyMessage {
    
    private GetConfigDataTotalWinCapReplyContent contentField = new GetConfigDataTotalWinCapReplyContent();
    
    /// <remarks/>
    public GetConfigDataTotalWinCapReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetWinCapBehaviorReply : ReplyMessage {
    
    private GetWinCapBehaviorReplyContent contentField = new GetWinCapBehaviorReplyContent();
    
    /// <remarks/>
    public GetWinCapBehaviorReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetWinCapReply : ReplyMessage {
    
    private GetWinCapReplyContent contentField = new GetWinCapReplyContent();
    
    /// <remarks/>
    public GetWinCapReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetMinimumBetReply : ReplyMessage {
    
    private GetMinimumBetReplyContent contentField = new GetMinimumBetReplyContent();
    
    /// <remarks/>
    public GetMinimumBetReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class EbpEnabledChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetCertificateAuthoritiesReply : ReplyMessage {
    
    private GetCertificateAuthoritiesReplyContent contentField = new GetCertificateAuthoritiesReplyContent();
    
    /// <remarks/>
    public GetCertificateAuthoritiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetClientCertificateReply : ReplyMessage {
    
    private GetClientCertificateReplyContent contentField = new GetClientCertificateReplyContent();
    
    /// <remarks/>
    public GetClientCertificateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetG2SHostAddressReply : ReplyMessage {
    
    private GetG2SHostAddressReplyContent contentField = new GetG2SHostAddressReplyContent();
    
    /// <remarks/>
    public GetG2SHostAddressReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetEbpEnabledReply : ReplyMessage {
    
    private GetEbpEnabledReplyContent contentField = new GetEbpEnabledReplyContent();
    
    /// <remarks/>
    public GetEbpEnabledReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DisplayControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDisplayControlVer1.xsd")]
public partial class SetDisplayControlStateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class ReadDirectFundsTransferMetersReply : ReplyMessage {
    
    private List<MeterData> contentField = new List<MeterData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Data", IsNullable=false)]
    public List<MeterData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class MeterData {
    
    private MeterId meterIdField;
    
    private Amount meterValueField;
    
    /// <remarks/>
    public MeterId MeterId {
        get {
            return this.meterIdField;
        }
        set {
            this.meterIdField = value;
        }
    }
    
    /// <remarks/>
    public Amount MeterValue {
        get {
            return this.meterValueField;
        }
        set {
            this.meterValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public enum MeterId {
    
    /// <remarks/>
    TotalTransferIn,
    
    /// <remarks/>
    TotalTransferOut,
    
    /// <remarks/>
    LiveTableGameTransferIn,
    
    /// <remarks/>
    LiveTableGameTransferOut,
    
    /// <remarks/>
    SportsTransferIn,
    
    /// <remarks/>
    SportsTransferOut,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class DirectFundsTransferMetersUpdateReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class SetDirectFundsTransferMetersRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class GetConfigDataDateTimeMinimumUpdateIntervalReply : ReplyMessage {
    
    private GetConfigDataDateTimeMinimumUpdateIntervalReplyContent contentField = new GetConfigDataDateTimeMinimumUpdateIntervalReplyContent();
    
    /// <remarks/>
    public GetConfigDataDateTimeMinimumUpdateIntervalReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class GetDateTimeReply : ReplyMessage {
    
    private GetDateTimeReplyContent contentField = new GetDateTimeReplyContent();
    
    /// <remarks/>
    public GetDateTimeReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class DateTimeChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetScopedCustomConfigItemNamesReply : ReplyMessage {
    
    private List<CustomConfigItemNameAndType> contentField = new List<CustomConfigItemNameAndType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CustomConfigItem", IsNullable=false)]
    public List<CustomConfigItemNameAndType> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemTypesReply : ReplyMessage {
    
    private List<GetCustomConfigItemTypesReplyResult> contentField = new List<GetCustomConfigItemTypesReplyResult>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CustomConfigItemType", IsNullable=false)]
    public List<GetCustomConfigItemTypesReplyResult> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemReferencedEnumerationsReply : ReplyMessage {
    
    private List<CustomConfigItemReferencedEnumeration> contentField = new List<CustomConfigItemReferencedEnumeration>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CustomConfigItemReferencedEnumerationList", IsNullable=false)]
    public List<CustomConfigItemReferencedEnumeration> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemValueDataReply : ReplyMessage {
    
    private List<GetCustomConfigItemValueDataReplyResult> contentField = new List<GetCustomConfigItemValueDataReplyResult>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CustomConfigItem", IsNullable=false)]
    public List<GetCustomConfigItemValueDataReplyResult> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureWriteVer1.xsd")]
public partial class SetDefaultCultureReply : ReplyMessage {
    
    private SetDefaultCultureReplyContent contentField = new SetDefaultCultureReplyContent();
    
    /// <remarks/>
    public SetDefaultCultureReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureWriteVer1.xsd")]
public partial class SetCultureReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class CultureChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetDefaultCultureReply : ReplyMessage {
    
    private GetDefaultCultureReplyContent contentField = new GetDefaultCultureReplyContent();
    
    /// <remarks/>
    public GetDefaultCultureReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetAvailableCulturesReply : ReplyMessage {
    
    private GetAvailableCulturesReplyContent contentField = new GetAvailableCulturesReplyContent();
    
    /// <remarks/>
    public GetAvailableCulturesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetCultureReply : ReplyMessage {
    
    private GetCultureReplyContent contentField = new GetCultureReplyContent();
    
    /// <remarks/>
    public GetCultureReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCultureReadVer1.xsd")]
public partial class GetCultureReplyContent {
    
    private string currentCultureField;
    
    /// <remarks/>
    public string CurrentCulture {
        get {
            return this.currentCultureField;
        }
        set {
            this.currentCultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class GetConfigDataMaxNumOfCoplayersReply : ReplyMessage {
    
    private GetConfigDataMaxNumOfCoplayersReplyContent contentField = new GetConfigDataMaxNumOfCoplayersReplyContent();
    
    /// <remarks/>
    public GetConfigDataMaxNumOfCoplayersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class BindCoplayerSessionReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class CreateCoplayersReply : ReplyMessage {
    
    private List<int> contentField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Coplayer", IsNullable=false)]
    public List<int> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class GetCoplayersReply : ReplyMessage {
    
    private List<CoplayerInstance> contentField = new List<CoplayerInstance>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Coplayer", IsNullable=false)]
    public List<CoplayerInstance> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class SetCoplayerApiVersionsReply : ReplyMessage {
    
    private SetCoplayerApiVersionsReplyContent contentField = new SetCoplayerApiVersionsReplyContent();
    
    /// <remarks/>
    public SetCoplayerApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class GetCoplayerApiVersionsReply : ReplyMessage {
    
    private GetCoplayerApiVersionsReplyContent contentField = new GetCoplayerApiVersionsReplyContent();
    
    /// <remarks/>
    public GetCoplayerApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerActivationVer1.xsd")]
public partial class InactivateCoplayerContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerActivationVer1.xsd")]
public partial class ActivateCoplayerContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerActivationVer1.xsd")]
public partial class NewCoplayerContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConnectVer1.xsd")]
public partial class SetLinkControlApiVersionReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConnectVer1.xsd")]
public partial class GetLinkControlApiVersionsReply : ReplyMessage {
    
    private GetLinkControlApiVersionsReplyContent contentField = new GetLinkControlApiVersionsReplyContent();
    
    /// <remarks/>
    public GetLinkControlApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeMonitoringVer1.xsd")]
public partial class ConfigModeStateChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class ConfigModeAvailabilityEventReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class EnterConfigModeResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class ExitConfigModeReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class EnterConfigModeRequestReply : ReplyMessage {
    
    private EnterConfigModeRequestReplyContent contentField = new EnterConfigModeRequestReplyContent();
    
    /// <remarks/>
    public EnterConfigModeRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ClockDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XClockDisplayVer1.xsd")]
public partial class GetClockDisplayEnabledReply : ReplyMessage {
    
    private GetClockDisplayEnabledReplyContent contentField = new GetClockDisplayEnabledReplyContent();
    
    /// <remarks/>
    public GetClockDisplayEnabledReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ClockDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XClockDisplayVer1.xsd")]
public partial class ClockDisplayEnabledChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class RequestChooserReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class UpdateChooserServicesPropertiesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class GetChooserServicesPropertiesReply : ReplyMessage {
    
    private GetChooserServicesPropertiesReplyContent contentField = new GetChooserServicesPropertiesReplyContent();
    
    /// <remarks/>
    public GetChooserServicesPropertiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppPropertyValuesReply", Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetAppPropertyValuesReply : ReplyMessage {
    
    private GetAppPropertyValuesReplyContent contentField = new GetAppPropertyValuesReplyContent();
    
    /// <remarks/>
    public GetAppPropertyValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppPropertyListReply", Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetAppPropertyListReply : ReplyMessage {
    
    private GetAppPropertyListReplyContent contentField = new GetAppPropertyListReplyContent();
    
    /// <remarks/>
    public GetAppPropertyListReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetChooserPropertyValuesReply : ReplyMessage {
    
    private GetChooserPropertyValuesReplyContent contentField = new GetChooserPropertyValuesReplyContent();
    
    /// <remarks/>
    public GetChooserPropertyValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetChooserPropertyListReply : ReplyMessage {
    
    private GetChooserPropertyListReplyContent contentField = new GetChooserPropertyListReplyContent();
    
    /// <remarks/>
    public GetChooserPropertyListReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class RemoveCertificateReply : ReplyMessage {
    
    private RemoveCertificateReplyContent contentField = new RemoveCertificateReplyContent();
    
    /// <remarks/>
    public RemoveCertificateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class HasCertificateReply : ReplyMessage {
    
    private HasCertificateReplyContent contentField = new HasCertificateReplyContent();
    
    /// <remarks/>
    public HasCertificateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class AddCertificateReply : ReplyMessage {
    
    private AddCertificateReplyContent contentField = new AddCertificateReplyContent();
    
    /// <remarks/>
    public AddCertificateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AwardMismatchDetectedReply", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class AwardMismatchDetectedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetEnrollmentResponseDataReply", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetEnrollmentResponseDataReply : ReplyMessage {
    
    private GetEnrollmentResponseDataReplyContent contentField = new GetEnrollmentResponseDataReplyContent();
    
    /// <remarks/>
    public GetEnrollmentResponseDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetEnrollmentResponseDataReplyContent {
    
    private GetEnrollmentResponseDataReplyContentEnrollmentResponse enrollmentResponseField;
    
    /// <remarks/>
    public GetEnrollmentResponseDataReplyContentEnrollmentResponse EnrollmentResponse {
        get {
            return this.enrollmentResponseField;
        }
        set {
            this.enrollmentResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetEnrollmentResponseDataReplyContentEnrollmentResponse {
    
    private List<EnrollmentResponseItem> enrollmentResponseItemField = new List<EnrollmentResponseItem>();
    
    private bool enrollSuccessField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EnrollmentResponseItem")]
    public List<EnrollmentResponseItem> EnrollmentResponseItem {
        get {
            return this.enrollmentResponseItemField;
        }
        set {
            this.enrollmentResponseItemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool EnrollSuccess {
        get {
            return this.enrollSuccessField;
        }
        set {
            this.enrollSuccessField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetEnrollmentRequestDataReply", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class SetEnrollmentRequestDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataMultidrawSupportedReply", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetConfigDataMultidrawSupportedReply : ReplyMessage {
    
    private GetConfigDataMultidrawSupportedReplyContent contentField = new GetConfigDataMultidrawSupportedReplyContent();
    
    /// <remarks/>
    public GetConfigDataMultidrawSupportedReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetConfigDataMultidrawSupportedReplyContent {
    
    private bool multidrawSupportedField;
    
    /// <remarks/>
    public bool MultidrawSupported {
        get {
            return this.multidrawSupportedField;
        }
        set {
            this.multidrawSupportedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataCdsGameConfigReply", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetConfigDataCdsGameConfigReply : ReplyMessage {
    
    private List<DenomConfig> contentField = new List<DenomConfig>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<DenomConfig> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AwardMismatchDetectedReply", Namespace="F2XCdsIcdVer1.xsd")]
public partial class AwardMismatchDetectedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsIcdVer1.xsd")]
public partial class SetProgressiveLookupDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetEnrollmentResponseDataReply", Namespace="F2XCdsIcdVer1.xsd")]
public partial class GetEnrollmentResponseDataReply : ReplyMessage {
    
    private GetEnrollmentResponseDataReplyContentEnrollmentResponse contentField = new GetEnrollmentResponseDataReplyContentEnrollmentResponse();
    
    /// <remarks/>
    public GetEnrollmentResponseDataReplyContentEnrollmentResponse Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetEnrollmentRequestDataReply", Namespace="F2XCdsIcdVer1.xsd")]
public partial class SetEnrollmentRequestDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataCdsGameConfigReply", Namespace="F2XCdsIcdVer1.xsd")]
public partial class GetConfigDataCdsGameConfigReply : ReplyMessage {
    
    private GetConfigDataCdsGameConfigReplyContent contentField = new GetConfigDataCdsGameConfigReplyContent();
    
    /// <remarks/>
    public GetConfigDataCdsGameConfigReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AwardMismatchDetectedReply", Namespace="F2XCdsHhrVer1.xsd")]
public partial class AwardMismatchDetectedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetEnrollmentResponseDataReply", Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetEnrollmentResponseDataReply : ReplyMessage {
    
    private GetEnrollmentResponseDataReplyContent contentField = new GetEnrollmentResponseDataReplyContent();
    
    /// <remarks/>
    public GetEnrollmentResponseDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetEnrollmentRequestDataReply", Namespace="F2XCdsHhrVer1.xsd")]
public partial class SetEnrollmentRequestDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetConfigDataMultidrawSupportedReply : ReplyMessage {
    
    private GetConfigDataMultidrawSupportedReplyContent contentField = new GetConfigDataMultidrawSupportedReplyContent();
    
    /// <remarks/>
    public GetConfigDataMultidrawSupportedReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataCdsGameConfigReply", Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetConfigDataCdsGameConfigReply : ReplyMessage {
    
    private List<DenomConfig> contentField = new List<DenomConfig>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<DenomConfig> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class AwardMismatchDetectedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class GetEnrollmentResponseDataReply : ReplyMessage {
    
    private GetEnrollmentResponseDataReplyContentEnrollmentResponse contentField = new GetEnrollmentResponseDataReplyContentEnrollmentResponse();
    
    /// <remarks/>
    public GetEnrollmentResponseDataReplyContentEnrollmentResponse Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class PlayCompleteReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class SetEnrollmentRequestDataReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class ActionPlayReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class SetBetDataReply : ReplyMessage {
    
    private SetBetDataReplyContent contentField = new SetBetDataReplyContent();
    
    /// <remarks/>
    public SetBetDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsEcpVer1.xsd")]
public partial class SetBetDataReplyContent {
    
    private bool initiateGamePlayField;
    
    /// <remarks/>
    public bool InitiateGamePlay {
        get {
            return this.initiateGamePlayField;
        }
        set {
            this.initiateGamePlayField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class GetConfigDataCdsGameConfigReply : ReplyMessage {
    
    private GetConfigDataCdsGameConfigReplyContent contentField = new GetConfigDataCdsGameConfigReplyContent();
    
    /// <remarks/>
    public GetConfigDataCdsGameConfigReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class MachineStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class CommitGameInProgressRequestReply : ReplyMessage {
    
    private CommitGameInProgressRequestReplyContent contentField = new CommitGameInProgressRequestReplyContent();
    
    /// <remarks/>
    public CommitGameInProgressRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class WinMismatchNotificationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class FinalExpectedOutcomeRequestReply : ReplyMessage {
    
    private FinalExpectedOutcomeRequestReplyContent contentField = new FinalExpectedOutcomeRequestReplyContent();
    
    /// <remarks/>
    public FinalExpectedOutcomeRequestReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class EnrollmentResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class EnrollmentRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public partial class GetBingoMetersMaxValueReply : ReplyMessage {
    
    private List<BingoMeterMaxValueData> contentField = new List<BingoMeterMaxValueData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BingoMeterMaxValue", IsNullable=false)]
    public List<BingoMeterMaxValueData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public partial class ReadBingoMetersReply : ReplyMessage {
    
    private List<BingoMeterData> contentField = new List<BingoMeterData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BingoMeter", IsNullable=false)]
    public List<BingoMeterData> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetMachineIdentificationCabinetModelReply : ReplyMessage {
    
    private GetMachineIdentificationCabinetModelReplyContent contentField = new GetMachineIdentificationCabinetModelReplyContent();
    
    /// <remarks/>
    public GetMachineIdentificationCabinetModelReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetFloorLocationReply : ReplyMessage {
    
    private GetFloorLocationReplyContent contentField = new GetFloorLocationReplyContent();
    
    /// <remarks/>
    public GetFloorLocationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class TaxableEventThresholdChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetTaxableEventThresholdReply : ReplyMessage {
    
    private GetTaxableEventThresholdReplyContent contentField = new GetTaxableEventThresholdReplyContent();
    
    /// <remarks/>
    public GetTaxableEventThresholdReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class SetDateTimeReply : ReplyMessage {
    
    private SetDateTimeReplyContent contentField = new SetDateTimeReplyContent();
    
    /// <remarks/>
    public SetDateTimeReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class SetDateTimeReplyContent {
    
    private SetDateTimeCommandResultType commandResultField;
    
    /// <remarks/>
    public SetDateTimeCommandResultType CommandResult {
        get {
            return this.commandResultField;
        }
        set {
            this.commandResultField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public enum SetDateTimeCommandResultType {
    
    /// <remarks/>
    NotEnabled,
    
    /// <remarks/>
    IgnoredDueToDebounce,
    
    /// <remarks/>
    Success,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class CanSetDateTimeReply : ReplyMessage {
    
    private CanSetDateTimeReplyContent contentField = new CanSetDateTimeReplyContent();
    
    /// <remarks/>
    public CanSetDateTimeReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class CanSetDateTimeReplyContent {
    
    private bool canSetDateTimeField;
    
    /// <remarks/>
    public bool CanSetDateTime {
        get {
            return this.canSetDateTimeField;
        }
        set {
            this.canSetDateTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetConfigurationModeStatusReply : ReplyMessage {
    
    private GetConfigurationModeStatusReplyContent contentField = new GetConfigurationModeStatusReplyContent();
    
    /// <remarks/>
    public GetConfigurationModeStatusReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetConfigurationModeStatusReplyContent {
    
    private bool inConfigurationModeField;
    
    /// <remarks/>
    public bool InConfigurationMode {
        get {
            return this.inConfigurationModeField;
        }
        set {
            this.inConfigurationModeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class ConfigurationModeStatusChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetThemeBingoInformationReply : ReplyMessage {
    
    private List<ThemeBingoInformation> contentField = new List<ThemeBingoInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemeBingoInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetInstalledRomInformationReply : ReplyMessage {
    
    private List<RomInformation> contentField = new List<RomInformation>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<RomInformation> Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetEgmSerialNumberReply : ReplyMessage {
    
    private GetEgmSerialNumberReplyContent contentField = new GetEgmSerialNumberReplyContent();
    
    /// <remarks/>
    public GetEgmSerialNumberReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetEgmSerialNumberReplyContent {
    
    private string serialNumberField;
    
    /// <remarks/>
    public string SerialNumber {
        get {
            return this.serialNumberField;
        }
        set {
            this.serialNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetDiscoveryPortReply : ReplyMessage {
    
    private GetDiscoveryPortReplyContent contentField = new GetDiscoveryPortReplyContent();
    
    /// <remarks/>
    public GetDiscoveryPortReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetDiscoveryPortReplyContent {
    
    private ushort udpPortNumberField;
    
    /// <remarks/>
    public ushort UdpPortNumber {
        get {
            return this.udpPortNumberField;
        }
        set {
            this.udpPortNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class CashoutStatusReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class RequestPartialCashoutReply : ReplyMessage {
    
    private RequestPartialCashoutReplyContent contentField = new RequestPartialCashoutReplyContent();
    
    /// <remarks/>
    public RequestPartialCashoutReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class RequestCashoutReply : ReplyMessage {
    
    private RequestCashoutReplyContent contentField = new RequestCashoutReplyContent();
    
    /// <remarks/>
    public RequestCashoutReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class UpdatePropertiesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class GetPropertiesReply : ReplyMessage {
    
    private GetPropertiesReplyContent contentField = new GetPropertiesReplyContent();
    
    /// <remarks/>
    public GetPropertiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class ReportVoucherStackedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class VoucherValidationResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class RequestVoucherValidationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class SetValidationRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class CashoutReviewResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class RequestCashoutReviewReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class SetCashoutReviewRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CallAttendant {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCallAttendantVer1.xsd")]
public partial class ClearPriorityCallAttendantReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CallAttendant {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCallAttendantVer1.xsd")]
public partial class SetPriorityCallAttendantReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Bonusing {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBonusingVer1.xsd")]
public partial class BonusPaidReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Bonusing {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBonusingVer1.xsd")]
public partial class EscrowBonusWinReply : ReplyMessage {
    
    private EscrowBonusWinReplyContent contentField = new EscrowBonusWinReplyContent();
    
    /// <remarks/>
    public EscrowBonusWinReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BetStepsConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBetStepsConfigurationVer1.xsd")]
public partial class GetBetStepsConfigurationReply : ReplyMessage {
    
    private GetBetStepsConfigurationReplyContent contentField = new GetBetStepsConfigurationReplyContent();
    
    /// <remarks/>
    public GetBetStepsConfigurationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetPlayerMetersReply", Namespace="F2XBankStatusVer1.xsd")]
public partial class GetPlayerMetersReply : ReplyMessage {
    
    private GetPlayerMetersReplyContent contentField = new GetPlayerMetersReplyContent();
    
    /// <remarks/>
    public GetPlayerMetersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class BankEventReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class SetBankEventRegistrationReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class PlayerCashoutRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetConfigDataReply : ReplyMessage {
    
    private GetConfigDataReplyContent contentField = new GetConfigDataReplyContent();
    
    /// <remarks/>
    public GetConfigDataReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneySetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyWonReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyOutReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyInReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyCommittedChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyBetReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyBettableTransferReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetPlayerMetersReply : ReplyMessage {
    
    private GetPlayerMetersReplyContent contentField = new GetPlayerMetersReplyContent();
    
    /// <remarks/>
    public GetPlayerMetersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class UpdateBankPlayPropertiesReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetBankPlayPropertiesReply : ReplyMessage {
    
    private GetBankPlayPropertiesReplyContent contentField = new GetBankPlayPropertiesReplyContent();
    
    /// <remarks/>
    public GetBankPlayPropertiesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public partial class InactivateAscribedShellContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public partial class ActivateAscribedShellContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public partial class NewAscribedShellContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class SetAscribedGameApiVersionsReply : ReplyMessage {
    
    private SetAscribedGameApiVersionsReplyContent contentField = new SetAscribedGameApiVersionsReplyContent();
    
    /// <remarks/>
    public SetAscribedGameApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class GetAscribedGameApiVersionsReply : ReplyMessage {
    
    private GetAscribedGameApiVersionsReplyContent contentField = new GetAscribedGameApiVersionsReplyContent();
    
    /// <remarks/>
    public GetAscribedGameApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public partial class ReleaseInternalStorageReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public partial class RequestInternalStorageReply : ReplyMessage {
    
    private RequestInternalStorageReplyContent contentField = new RequestInternalStorageReplyContent();
    
    /// <remarks/>
    public RequestInternalStorageReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class AvailableAppsChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAllowedSwitchBehaviorsReply : ReplyMessage {
    
    private GetAllowedSwitchBehaviorsReplyContent contentField = new GetAllowedSwitchBehaviorsReplyContent();
    
    /// <remarks/>
    public GetAllowedSwitchBehaviorsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectorPropertyValuesReply : ReplyMessage {
    
    private GetSelectorPropertyValuesReplyContent contentField = new GetSelectorPropertyValuesReplyContent();
    
    /// <remarks/>
    public GetSelectorPropertyValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectorPropertyListReply : ReplyMessage {
    
    private GetSelectorPropertyListReplyContent contentField = new GetSelectorPropertyListReplyContent();
    
    /// <remarks/>
    public GetSelectorPropertyListReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAppPropertyValuesReply : ReplyMessage {
    
    private GetAppPropertyValuesReplyContent contentField = new GetAppPropertyValuesReplyContent();
    
    /// <remarks/>
    public GetAppPropertyValuesReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAppPropertyListReply : ReplyMessage {
    
    private GetAppPropertyListReplyContent contentField = new GetAppPropertyListReplyContent();
    
    /// <remarks/>
    public GetAppPropertyListReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectedAppReply : ReplyMessage {
    
    private GetSelectedAppReplyContent contentField = new GetSelectedAppReplyContent();
    
    /// <remarks/>
    public GetSelectedAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAvailableAppsReply : ReplyMessage {
    
    private GetAvailableAppsReplyContent contentField = new GetAvailableAppsReplyContent();
    
    /// <remarks/>
    public GetAvailableAppsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class AppDecorationsChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class GetDecorationContentReply : ReplyMessage {
    
    private GetDecorationContentReplyContent contentField = new GetDecorationContentReplyContent();
    
    /// <remarks/>
    public GetDecorationContentReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class GetAppDecorationsReply : ReplyMessage {
    
    private GetAppDecorationsReplyContent contentField = new GetAppDecorationsReplyContent();
    
    /// <remarks/>
    public GetAppDecorationsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class RemoveDecorationsFromAppsReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class AddDecorationsToAppsReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class UnregisterDecorationsReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class RegisterDecorationsReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class DisplayStateChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class AppRequestedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class ChooserRequestedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class AppStateChangedReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetDefaultDenominationReply : ReplyMessage {
    
    private GetDefaultDenominationReplyContent contentField = new GetDefaultDenominationReplyContent();
    
    /// <remarks/>
    public GetDefaultDenominationReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetDefaultAppReply : ReplyMessage {
    
    private GetDefaultAppReplyContent contentField = new GetDefaultAppReplyContent();
    
    /// <remarks/>
    public GetDefaultAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class DisplayAppReply : ReplyMessage {
    
    private DisplayAppReplyContent contentField = new DisplayAppReplyContent();
    
    /// <remarks/>
    public DisplayAppReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class SetChooserOfferableReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetAppStateReply : ReplyMessage {
    
    private GetAppStateReplyContent contentField = new GetAppStateReplyContent();
    
    /// <remarks/>
    public GetAppStateReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetAppPerformanceMetersReply : ReplyMessage {
    
    private GetAppPerformanceMetersReplyContent contentField = new GetAppPerformanceMetersReplyContent();
    
    /// <remarks/>
    public GetAppPerformanceMetersReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetPriorityAppsReply : ReplyMessage {
    
    private GetPriorityAppsReplyContent contentField = new GetPriorityAppsReplyContent();
    
    /// <remarks/>
    public GetPriorityAppsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControlClient {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlClientVer1.xsd")]
public partial class AppSwitchCancelledReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControlClient {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlClientVer1.xsd")]
public partial class AppSwitchRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppApiControlVer1.xsd")]
public partial class SetAppApiVersionsReply : ReplyMessage {
    
    private SetAppApiVersionsReplyContent contentField = new SetAppApiVersionsReplyContent();
    
    /// <remarks/>
    public SetAppApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppApiControlVer1.xsd")]
public partial class GetAppApiVersionsReply : ReplyMessage {
    
    private GetAppApiVersionsReplyContent contentField = new GetAppApiVersionsReplyContent();
    
    /// <remarks/>
    public GetAppApiVersionsReplyContent Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppActivationVer1.xsd")]
public partial class InactivateAppContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppActivationVer1.xsd")]
public partial class ActivateAppContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppActivationVer1.xsd")]
public partial class NewAppContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActivationVer1.xsd")]
public partial class InactivateContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActivationVer1.xsd")]
public partial class ActivateContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActivationVer1.xsd")]
public partial class NewContextReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequest {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestVer1.xsd")]
public partial class ActionResponseReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequest {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestVer1.xsd")]
public partial class ActionRequestReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequestLite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestLiteVer1.xsd")]
public partial class ActionResponseLiteReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequestLite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestLiteVer1.xsd")]
public partial class ActionRequestLiteReply : ReplyMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionInfo {
    
    private Amount voucherAmountField;
    
    private VoucherSubType voucherSubTypeField;
    
    /// <remarks/>
    public Amount VoucherAmount {
        get {
            return this.voucherAmountField;
        }
        set {
            this.voucherAmountField = value;
        }
    }
    
    /// <remarks/>
    public VoucherSubType VoucherSubType {
        get {
            return this.voucherSubTypeField;
        }
        set {
            this.voucherSubTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public enum VoucherSubType {
    
    /// <remarks/>
    SportsBettingSlip,
    
    /// <remarks/>
    SportsVoucher,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionRegistrationType {
    
    private VoucherRedemptionProcessType voucherRedemptionProcessTypeField;
    
    private VoucherType voucherTypeField;
    
    /// <remarks/>
    public VoucherRedemptionProcessType VoucherRedemptionProcessType {
        get {
            return this.voucherRedemptionProcessTypeField;
        }
        set {
            this.voucherRedemptionProcessTypeField = value;
        }
    }
    
    /// <remarks/>
    public VoucherType VoucherType {
        get {
            return this.voucherTypeField;
        }
        set {
            this.voucherTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public enum VoucherRedemptionProcessType {
    
    /// <remarks/>
    SportsBettingVoucherRedemption,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class TsmIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataWrite.CriticalDataItemSelector))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="CriticalDataItemScopeSelector", Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class CriticalDataItemScopeSelector {
    
    private ExtensionIdentifier itemField;
    
    private ItemChoiceType itemElementNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Extension", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionAnalytics", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("ExtensionPersistent", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public ExtensionIdentifier Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public ItemChoiceType ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTransactionalCritDataWriteVer1.xsd", IncludeInSchema=false)]
public enum ItemChoiceType {
    
    /// <remarks/>
    Extension,
    
    /// <remarks/>
    ExtensionAnalytics,
    
    /// <remarks/>
    ExtensionPersistent,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="CriticalDataItemSelector", Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class CriticalDataItemSelector : CriticalDataItemScopeSelector {
    
    private string nameField;
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class CriticalDataItem {
    
    private CriticalDataItemSelector criticalDataItemSelectorField;
    
    private byte[] dataField;
    
    /// <remarks/>
    public CriticalDataItemSelector CriticalDataItemSelector {
        get {
            return this.criticalDataItemSelectorField;
        }
        set {
            this.criticalDataItemSelectorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class WriteCritDataSendContent {
    
    private List<CriticalDataItem> criticalDataItemsField = new List<CriticalDataItem>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CritDataItem", IsNullable=false)]
    public List<CriticalDataItem> CriticalDataItems {
        get {
            return this.criticalDataItemsField;
        }
        set {
            this.criticalDataItemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class TiltLocalization {
    
    private string titleField;
    
    private string messageField;
    
    private string cultureField;
    
    /// <remarks/>
    public string Title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    public string Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class PortraitCashoutTicketTypeData {
    
    private string validationNumberField;
    
    private string establishmentField;
    
    private string address1Field;
    
    private string address2Field;
    
    private Amount valueField;
    
    private System.DateTime dateTimeField;
    
    private string expirationField;
    
    private string slipIDField;
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public string Establishment {
        get {
            return this.establishmentField;
        }
        set {
            this.establishmentField = value;
        }
    }
    
    /// <remarks/>
    public string Address1 {
        get {
            return this.address1Field;
        }
        set {
            this.address1Field = value;
        }
    }
    
    /// <remarks/>
    public string Address2 {
        get {
            return this.address2Field;
        }
        set {
            this.address2Field = value;
        }
    }
    
    /// <remarks/>
    public Amount Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime DateTime {
        get {
            return this.dateTimeField;
        }
        set {
            this.dateTimeField = value;
        }
    }
    
    /// <remarks/>
    public string Expiration {
        get {
            return this.expirationField;
        }
        set {
            this.expirationField = value;
        }
    }
    
    /// <remarks/>
    public string SlipID {
        get {
            return this.slipIDField;
        }
        set {
            this.slipIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class SportsWagerTicketWager {
    
    private string selectionField;
    
    private string eventField;
    
    private string marketField;
    
    private string rotationNumberField;
    
    private System.DateTime eventDateTimeField;
    
    /// <remarks/>
    public string Selection {
        get {
            return this.selectionField;
        }
        set {
            this.selectionField = value;
        }
    }
    
    /// <remarks/>
    public string Event {
        get {
            return this.eventField;
        }
        set {
            this.eventField = value;
        }
    }
    
    /// <remarks/>
    public string Market {
        get {
            return this.marketField;
        }
        set {
            this.marketField = value;
        }
    }
    
    /// <remarks/>
    public string RotationNumber {
        get {
            return this.rotationNumberField;
        }
        set {
            this.rotationNumberField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime EventDateTime {
        get {
            return this.eventDateTimeField;
        }
        set {
            this.eventDateTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class SportsWagerTicketTypeData {
    
    private string validationNumberField;
    
    private string establishmentField;
    
    private string address1Field;
    
    private string address2Field;
    
    private Amount maximumPayoutField;
    
    private Amount betCostField;
    
    private string betTypeField;
    
    private System.DateTime betPlacementTimeField;
    
    private string redemptionTextField;
    
    private string slipIDField;
    
    private List<SportsWagerTicketWager> wagersField = new List<SportsWagerTicketWager>();
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public string Establishment {
        get {
            return this.establishmentField;
        }
        set {
            this.establishmentField = value;
        }
    }
    
    /// <remarks/>
    public string Address1 {
        get {
            return this.address1Field;
        }
        set {
            this.address1Field = value;
        }
    }
    
    /// <remarks/>
    public string Address2 {
        get {
            return this.address2Field;
        }
        set {
            this.address2Field = value;
        }
    }
    
    /// <remarks/>
    public Amount MaximumPayout {
        get {
            return this.maximumPayoutField;
        }
        set {
            this.maximumPayoutField = value;
        }
    }
    
    /// <remarks/>
    public Amount BetCost {
        get {
            return this.betCostField;
        }
        set {
            this.betCostField = value;
        }
    }
    
    /// <remarks/>
    public string BetType {
        get {
            return this.betTypeField;
        }
        set {
            this.betTypeField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime BetPlacementTime {
        get {
            return this.betPlacementTimeField;
        }
        set {
            this.betPlacementTimeField = value;
        }
    }
    
    /// <remarks/>
    public string RedemptionText {
        get {
            return this.redemptionTextField;
        }
        set {
            this.redemptionTextField = value;
        }
    }
    
    /// <remarks/>
    public string SlipID {
        get {
            return this.slipIDField;
        }
        set {
            this.slipIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Wager", IsNullable=false)]
    public List<SportsWagerTicketWager> Wagers {
        get {
            return this.wagersField;
        }
        set {
            this.wagersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion14Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion13Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion12Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion11Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion10Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion9Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion8Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion7Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion6Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion5Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion4Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion3Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion2Type))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.DynamicPrizeRegion1Type))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public abstract partial class RegionTypeParameter {
    
    private string regionTextField;
    
    private string regionIdField;
    
    private uint fontSizeField;
    
    private bool fontSizeFieldSpecified;
    
    private uint recommendedMaxLinesField;
    
    private bool recommendedMaxLinesFieldSpecified;
    
    private float recommendedAvgCharsField;
    
    private bool recommendedAvgCharsFieldSpecified;
    
    private uint allWsMaxCharsField;
    
    private bool allWsMaxCharsFieldSpecified;
    
    private uint allisMaxCharsField;
    
    private bool allisMaxCharsFieldSpecified;
    
    /// <remarks/>
    public string RegionText {
        get {
            return this.regionTextField;
        }
        set {
            this.regionTextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string RegionId {
        get {
            return this.regionIdField;
        }
        set {
            this.regionIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint FontSize {
        get {
            return this.fontSizeField;
        }
        set {
            this.fontSizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FontSizeSpecified {
        get {
            return this.fontSizeFieldSpecified;
        }
        set {
            this.fontSizeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint RecommendedMaxLines {
        get {
            return this.recommendedMaxLinesField;
        }
        set {
            this.recommendedMaxLinesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RecommendedMaxLinesSpecified {
        get {
            return this.recommendedMaxLinesFieldSpecified;
        }
        set {
            this.recommendedMaxLinesFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public float RecommendedAvgChars {
        get {
            return this.recommendedAvgCharsField;
        }
        set {
            this.recommendedAvgCharsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RecommendedAvgCharsSpecified {
        get {
            return this.recommendedAvgCharsFieldSpecified;
        }
        set {
            this.recommendedAvgCharsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint AllWsMaxChars {
        get {
            return this.allWsMaxCharsField;
        }
        set {
            this.allWsMaxCharsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllWsMaxCharsSpecified {
        get {
            return this.allWsMaxCharsFieldSpecified;
        }
        set {
            this.allWsMaxCharsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint AllisMaxChars {
        get {
            return this.allisMaxCharsField;
        }
        set {
            this.allisMaxCharsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllisMaxCharsSpecified {
        get {
            return this.allisMaxCharsFieldSpecified;
        }
        set {
            this.allisMaxCharsFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion14Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion13Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion12Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion11Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion10Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion9Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion8Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion7Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion6Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion5Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion4Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion3Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion2Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeRegion1Type : RegionTypeParameter {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class DynamicPrizeTicketTypeData {
    
    private DynamicPrizeRegion1Type region1Field;
    
    private DynamicPrizeRegion2Type region2Field;
    
    private DynamicPrizeRegion3Type region3Field;
    
    private DynamicPrizeRegion4Type region4Field;
    
    private DynamicPrizeRegion5Type region5Field;
    
    private DynamicPrizeRegion6Type region6Field;
    
    private DynamicPrizeRegion7Type region7Field;
    
    private DynamicPrizeRegion8Type region8Field;
    
    private DynamicPrizeRegion9Type region9Field;
    
    private DynamicPrizeRegion10Type region10Field;
    
    private DynamicPrizeRegion11Type region11Field;
    
    private DynamicPrizeRegion12Type region12Field;
    
    private DynamicPrizeRegion13Type region13Field;
    
    private DynamicPrizeRegion14Type region14Field;
    
    /// <remarks/>
    public DynamicPrizeRegion1Type Region1 {
        get {
            return this.region1Field;
        }
        set {
            this.region1Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion2Type Region2 {
        get {
            return this.region2Field;
        }
        set {
            this.region2Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion3Type Region3 {
        get {
            return this.region3Field;
        }
        set {
            this.region3Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion4Type Region4 {
        get {
            return this.region4Field;
        }
        set {
            this.region4Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion5Type Region5 {
        get {
            return this.region5Field;
        }
        set {
            this.region5Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion6Type Region6 {
        get {
            return this.region6Field;
        }
        set {
            this.region6Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion7Type Region7 {
        get {
            return this.region7Field;
        }
        set {
            this.region7Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion8Type Region8 {
        get {
            return this.region8Field;
        }
        set {
            this.region8Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion9Type Region9 {
        get {
            return this.region9Field;
        }
        set {
            this.region9Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion10Type Region10 {
        get {
            return this.region10Field;
        }
        set {
            this.region10Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion11Type Region11 {
        get {
            return this.region11Field;
        }
        set {
            this.region11Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion12Type Region12 {
        get {
            return this.region12Field;
        }
        set {
            this.region12Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion13Type Region13 {
        get {
            return this.region13Field;
        }
        set {
            this.region13Field = value;
        }
    }
    
    /// <remarks/>
    public DynamicPrizeRegion14Type Region14 {
        get {
            return this.region14Field;
        }
        set {
            this.region14Field = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class BarcodeCenteredTypeFieldData {
    
    private string textEntryField;
    
    private bool overwriteField;
    
    private bool overwriteFieldSpecified;
    
    /// <remarks/>
    public string TextEntry {
        get {
            return this.textEntryField;
        }
        set {
            this.textEntryField = value;
        }
    }
    
    /// <remarks/>
    public bool Overwrite {
        get {
            return this.overwriteField;
        }
        set {
            this.overwriteField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OverwriteSpecified {
        get {
            return this.overwriteFieldSpecified;
        }
        set {
            this.overwriteFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class BarcodeCenteredTypeData {
    
    private string titleField;
    
    private BarcodeCenteredTypeFieldData validationTextField;
    
    private BarcodeCenteredTypeFieldData validationNumberFormattedField;
    
    private BarcodeCenteredTypeFieldData validationNumberBarcodeField;
    
    private BarcodeCenteredTypeFieldData address1Field;
    
    private BarcodeCenteredTypeFieldData address2Field;
    
    private BarcodeCenteredTypeFieldData establishmentLocationField;
    
    private BarcodeCenteredTypeFieldData ticketVoidAfterField;
    
    private Amount moneyField;
    
    private BarcodeCenteredTypeFieldData moneyInWordsField;
    
    private BarcodeCenteredTypeFieldData ticketNumberField;
    
    private BarcodeCenteredTypeFieldData dateField;
    
    private BarcodeCenteredTypeFieldData timeField;
    
    /// <remarks/>
    public string Title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData ValidationText {
        get {
            return this.validationTextField;
        }
        set {
            this.validationTextField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData ValidationNumberFormatted {
        get {
            return this.validationNumberFormattedField;
        }
        set {
            this.validationNumberFormattedField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData ValidationNumberBarcode {
        get {
            return this.validationNumberBarcodeField;
        }
        set {
            this.validationNumberBarcodeField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData Address1 {
        get {
            return this.address1Field;
        }
        set {
            this.address1Field = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData Address2 {
        get {
            return this.address2Field;
        }
        set {
            this.address2Field = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData EstablishmentLocation {
        get {
            return this.establishmentLocationField;
        }
        set {
            this.establishmentLocationField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData TicketVoidAfter {
        get {
            return this.ticketVoidAfterField;
        }
        set {
            this.ticketVoidAfterField = value;
        }
    }
    
    /// <remarks/>
    public Amount Money {
        get {
            return this.moneyField;
        }
        set {
            this.moneyField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData MoneyInWords {
        get {
            return this.moneyInWordsField;
        }
        set {
            this.moneyInWordsField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData TicketNumber {
        get {
            return this.ticketNumberField;
        }
        set {
            this.ticketNumberField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData Date {
        get {
            return this.dateField;
        }
        set {
            this.dateField = value;
        }
    }
    
    /// <remarks/>
    public BarcodeCenteredTypeFieldData Time {
        get {
            return this.timeField;
        }
        set {
            this.timeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class GenericTicketTypeData {
    
    private List<GenericTicketTypeEntry> textEntryField = new List<GenericTicketTypeEntry>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TextEntry")]
    public List<GenericTicketTypeEntry> TextEntry {
        get {
            return this.textEntryField;
        }
        set {
            this.textEntryField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class GenericTicketTypeEntry {
    
    private string lineTextField;
    
    private GenericTicketTypeJustification justificationField;
    
    private uint lineNumberField;
    
    /// <remarks/>
    public string LineText {
        get {
            return this.lineTextField;
        }
        set {
            this.lineTextField = value;
        }
    }
    
    /// <remarks/>
    public GenericTicketTypeJustification Justification {
        get {
            return this.justificationField;
        }
        set {
            this.justificationField = value;
        }
    }
    
    /// <remarks/>
    public uint LineNumber {
        get {
            return this.lineNumberField;
        }
        set {
            this.lineNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public enum GenericTicketTypeJustification {
    
    /// <remarks/>
    Left,
    
    /// <remarks/>
    Center,
    
    /// <remarks/>
    Right,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class TicketInformation {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BarcodeCenteredTypeData", typeof(BarcodeCenteredTypeData))]
    [System.Xml.Serialization.XmlElementAttribute("DynamicPrizeTicketTypeData", typeof(DynamicPrizeTicketTypeData))]
    [System.Xml.Serialization.XmlElementAttribute("GenericTicketInformation", typeof(GenericTicketTypeData))]
    [System.Xml.Serialization.XmlElementAttribute("PortraitCashoutTicketTypeData", typeof(PortraitCashoutTicketTypeData))]
    [System.Xml.Serialization.XmlElementAttribute("SportsWagerTicketTypeData", typeof(SportsWagerTicketTypeData))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ThemeSelector", Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeSelector {
    
    private ThemeIdentifier themeIdentifierField;
    
    private uint denomField;
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class GamingMeters {
    
    private Amount playerBettableField;
    
    private Amount playerTransferableField;
    
    private Amount paidMeterField;
    
    /// <remarks/>
    public Amount PlayerBettable {
        get {
            return this.playerBettableField;
        }
        set {
            this.playerBettableField = value;
        }
    }
    
    /// <remarks/>
    public Amount PlayerTransferable {
        get {
            return this.playerTransferableField;
        }
        set {
            this.playerTransferableField = value;
        }
    }
    
    /// <remarks/>
    public Amount PaidMeter {
        get {
            return this.paidMeterField;
        }
        set {
            this.paidMeterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class LinkedExtension {
    
    private Extension extensionField;
    
    private string resourceDirectoryBaseField;
    
    /// <remarks/>
    public Extension Extension {
        get {
            return this.extensionField;
        }
        set {
            this.extensionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string ResourceDirectoryBase {
        get {
            return this.resourceDirectoryBaseField;
        }
        set {
            this.resourceDirectoryBaseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class Extension {
    
    private string extensionIdentifierField;
    
    private ExtensionVersion extensionVersionField;
    
    /// <remarks/>
    public string ExtensionIdentifier {
        get {
            return this.extensionIdentifierField;
        }
        set {
            this.extensionIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public ExtensionVersion ExtensionVersion {
        get {
            return this.extensionVersionField;
        }
        set {
            this.extensionVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class ExtensionVersion {
    
    private uint majorVersionField;
    
    private uint minorVersionField;
    
    private uint patchVersionField;
    
    /// <remarks/>
    public uint MajorVersion {
        get {
            return this.majorVersionField;
        }
        set {
            this.majorVersionField = value;
        }
    }
    
    /// <remarks/>
    public uint MinorVersion {
        get {
            return this.minorVersionField;
        }
        set {
            this.minorVersionField = value;
        }
    }
    
    /// <remarks/>
    public uint PatchVersion {
        get {
            return this.patchVersionField;
        }
        set {
            this.patchVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class MinimumPlayableCreditBalanceRequest {
    
    private ThemePayvarDenomSelector themePayvarDenomSelectorField;
    
    /// <remarks/>
    public ThemePayvarDenomSelector ThemePayvarDenomSelector {
        get {
            return this.themePayvarDenomSelectorField;
        }
        set {
            this.themePayvarDenomSelectorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class MinimumPlayableCreditBalanceRequestList {
    
    private List<MinimumPlayableCreditBalanceRequest> minimumPlayableCreditBalanceRequestField = new List<MinimumPlayableCreditBalanceRequest>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MinimumPlayableCreditBalanceRequest")]
    public List<MinimumPlayableCreditBalanceRequest> MinimumPlayableCreditBalanceRequest {
        get {
            return this.minimumPlayableCreditBalanceRequestField;
        }
        set {
            this.minimumPlayableCreditBalanceRequestField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class PayvarInfo {
    
    private PayvarIdentifier payvarIdentifierField;
    
    private List<uint> denominationListField = new List<uint>();
    
    /// <remarks/>
    public PayvarIdentifier PayvarIdentifier {
        get {
            return this.payvarIdentifierField;
        }
        set {
            this.payvarIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Denomination", IsNullable=false)]
    public List<uint> DenominationList {
        get {
            return this.denominationListField;
        }
        set {
            this.denominationListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class ThemeInfo {
    
    private ThemeIdentifier themeIdentifierField;
    
    private List<PayvarInfo> payvarInfoListField = new List<PayvarInfo>();
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<PayvarInfo> PayvarInfoList {
        get {
            return this.payvarInfoListField;
        }
        set {
            this.payvarInfoListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class Track {
    
    private ushort numberField;
    
    private string dataField;
    
    /// <remarks/>
    public ushort Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public string Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class PrioritizedIPList {
    
    private List<string> iPAddressField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("IPAddress")]
    public List<string> IPAddress {
        get {
            return this.iPAddressField;
        }
        set {
            this.iPAddressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class Ipv4RoutingTableEntry {
    
    private string nicNameField;
    
    private string destinationAddressField;
    
    private string networkMaskField;
    
    private string gatewayAddressField;
    
    /// <remarks/>
    public string NicName {
        get {
            return this.nicNameField;
        }
        set {
            this.nicNameField = value;
        }
    }
    
    /// <remarks/>
    public string DestinationAddress {
        get {
            return this.destinationAddressField;
        }
        set {
            this.destinationAddressField = value;
        }
    }
    
    /// <remarks/>
    public string NetworkMask {
        get {
            return this.networkMaskField;
        }
        set {
            this.networkMaskField = value;
        }
    }
    
    /// <remarks/>
    public string GatewayAddress {
        get {
            return this.gatewayAddressField;
        }
        set {
            this.gatewayAddressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public partial class PokerCard {
    
    private CardRank rankField;
    
    private CardSuit suitField;
    
    private PokerCardPlayState playStateField;
    
    private PokerCardOptimalAction optimalActionField;
    
    private bool optimalActionFieldSpecified;
    
    private bool isWildField;
    
    private bool isWildFieldSpecified;
    
    /// <remarks/>
    public CardRank Rank {
        get {
            return this.rankField;
        }
        set {
            this.rankField = value;
        }
    }
    
    /// <remarks/>
    public CardSuit Suit {
        get {
            return this.suitField;
        }
        set {
            this.suitField = value;
        }
    }
    
    /// <remarks/>
    public PokerCardPlayState PlayState {
        get {
            return this.playStateField;
        }
        set {
            this.playStateField = value;
        }
    }
    
    /// <remarks/>
    public PokerCardOptimalAction OptimalAction {
        get {
            return this.optimalActionField;
        }
        set {
            this.optimalActionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool OptimalActionSpecified {
        get {
            return this.optimalActionFieldSpecified;
        }
        set {
            this.optimalActionFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool IsWild {
        get {
            return this.isWildField;
        }
        set {
            this.isWildField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IsWildSpecified {
        get {
            return this.isWildFieldSpecified;
        }
        set {
            this.isWildFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public enum CardRank {
    
    /// <remarks/>
    Ace,
    
    /// <remarks/>
    Two,
    
    /// <remarks/>
    Three,
    
    /// <remarks/>
    Four,
    
    /// <remarks/>
    Five,
    
    /// <remarks/>
    Six,
    
    /// <remarks/>
    Seven,
    
    /// <remarks/>
    Eight,
    
    /// <remarks/>
    Nine,
    
    /// <remarks/>
    Ten,
    
    /// <remarks/>
    Jack,
    
    /// <remarks/>
    Queen,
    
    /// <remarks/>
    King,
    
    /// <remarks/>
    Joker,
    
    /// <remarks/>
    Other,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public enum CardSuit {
    
    /// <remarks/>
    Clubs,
    
    /// <remarks/>
    Diamonds,
    
    /// <remarks/>
    Hearts,
    
    /// <remarks/>
    Spades,
    
    /// <remarks/>
    Joker,
    
    /// <remarks/>
    Other,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGamePlayReportingVer1.xsd")]
public enum PokerCardPlayState {
    
    /// <remarks/>
    InitiallyDealt,
    
    /// <remarks/>
    Held,
    
    /// <remarks/>
    Discarded,
    
    /// <remarks/>
    Drawn,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGamePlayReportingVer1.xsd")]
public enum PokerCardOptimalAction {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    Hold,
    
    /// <remarks/>
    Discard,
    
    /// <remarks/>
    Other,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public partial class PokerHand {
    
    private List<PokerCard> cardsField = new List<PokerCard>();
    
    private uint winLevelIndexField;
    
    private bool winLevelIndexFieldSpecified;
    
    private Amount optimalWinValueField;
    
    private Amount currentWinValueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Card", IsNullable=false)]
    public List<PokerCard> Cards {
        get {
            return this.cardsField;
        }
        set {
            this.cardsField = value;
        }
    }
    
    /// <remarks/>
    public uint WinLevelIndex {
        get {
            return this.winLevelIndexField;
        }
        set {
            this.winLevelIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WinLevelIndexSpecified {
        get {
            return this.winLevelIndexFieldSpecified;
        }
        set {
            this.winLevelIndexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Amount OptimalWinValue {
        get {
            return this.optimalWinValueField;
        }
        set {
            this.optimalWinValueField = value;
        }
    }
    
    /// <remarks/>
    public Amount CurrentWinValue {
        get {
            return this.currentWinValueField;
        }
        set {
            this.currentWinValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class PayvarDenominations {
    
    private PayvarIdentifier payvarField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameHistorySupplemental {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameHistorySupplementalVer1.xsd")]
public partial class DataFormatIdentifier {
    
    private string formatDescriptorField;
    
    private uint majorVersionField;
    
    private uint minorVersionField;
    
    private string authorityField;
    
    /// <remarks/>
    public string FormatDescriptor {
        get {
            return this.formatDescriptorField;
        }
        set {
            this.formatDescriptorField = value;
        }
    }
    
    /// <remarks/>
    public uint MajorVersion {
        get {
            return this.majorVersionField;
        }
        set {
            this.majorVersionField = value;
        }
    }
    
    /// <remarks/>
    public uint MinorVersion {
        get {
            return this.minorVersionField;
        }
        set {
            this.minorVersionField = value;
        }
    }
    
    /// <remarks/>
    public string Authority {
        get {
            return this.authorityField;
        }
        set {
            this.authorityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class WagerCatOutcome {
    
    private uint wagerCatIndexField;
    
    private Amount wagerAmountField;
    
    /// <remarks/>
    public uint WagerCatIndex {
        get {
            return this.wagerCatIndexField;
        }
        set {
            this.wagerCatIndexField = value;
        }
    }
    
    /// <remarks/>
    public Amount WagerAmount {
        get {
            return this.wagerAmountField;
        }
        set {
            this.wagerAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetSSLCertConfigurationSendContent {
    
    private string iPPortField;
    
    private string appIdField;
    
    private byte[] certThumbprintField;
    
    private bool setField;
    
    /// <remarks/>
    public string IPPort {
        get {
            return this.iPPortField;
        }
        set {
            this.iPPortField = value;
        }
    }
    
    /// <remarks/>
    public string AppId {
        get {
            return this.appIdField;
        }
        set {
            this.appIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] CertThumbprint {
        get {
            return this.certThumbprintField;
        }
        set {
            this.certThumbprintField = value;
        }
    }
    
    /// <remarks/>
    public bool Set {
        get {
            return this.setField;
        }
        set {
            this.setField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetUrlAclConfigurationSendContent {
    
    private string ruleNameField;
    
    private string uRLField;
    
    private string userNameField;
    
    private bool ruleEnabledField;
    
    /// <remarks/>
    public string RuleName {
        get {
            return this.ruleNameField;
        }
        set {
            this.ruleNameField = value;
        }
    }
    
    /// <remarks/>
    public string URL {
        get {
            return this.uRLField;
        }
        set {
            this.uRLField = value;
        }
    }
    
    /// <remarks/>
    public string UserName {
        get {
            return this.userNameField;
        }
        set {
            this.userNameField = value;
        }
    }
    
    /// <remarks/>
    public bool RuleEnabled {
        get {
            return this.ruleEnabledField;
        }
        set {
            this.ruleEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetPortEnabledSendContent {
    
    private string portNameField;
    
    private Protocol portTypeField;
    
    private ushort portNumberField;
    
    private bool portEnableField;
    
    /// <remarks/>
    public string PortName {
        get {
            return this.portNameField;
        }
        set {
            this.portNameField = value;
        }
    }
    
    /// <remarks/>
    public Protocol PortType {
        get {
            return this.portTypeField;
        }
        set {
            this.portTypeField = value;
        }
    }
    
    /// <remarks/>
    public ushort PortNumber {
        get {
            return this.portNumberField;
        }
        set {
            this.portNumberField = value;
        }
    }
    
    /// <remarks/>
    public bool PortEnable {
        get {
            return this.portEnableField;
        }
        set {
            this.portEnableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public enum Protocol {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Tcp,
    
    /// <remarks/>
    Udp,
    
    /// <remarks/>
    Any,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class GetPortStatusSendContent {
    
    private Protocol portTypeField;
    
    private ushort portNumberField;
    
    /// <remarks/>
    public Protocol PortType {
        get {
            return this.portTypeField;
        }
        set {
            this.portTypeField = value;
        }
    }
    
    /// <remarks/>
    public ushort PortNumber {
        get {
            return this.portNumberField;
        }
        set {
            this.portNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class WapWin {
    
    private uint controllerLevelField;
    
    private Amount amountWonField;
    
    /// <remarks/>
    public uint ControllerLevel {
        get {
            return this.controllerLevelField;
        }
        set {
            this.controllerLevelField = value;
        }
    }
    
    /// <remarks/>
    public Amount AmountWon {
        get {
            return this.amountWonField;
        }
        set {
            this.amountWonField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class PotentialHitOutcome {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Hit", typeof(ProgressiveLevelValue))]
    [System.Xml.Serialization.XmlElementAttribute("NotHit", typeof(PotentialHitOutcomeNotHit))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerTypesVer1.xsd")]
public partial class ProgressiveLevelValue {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Amount", typeof(Amount))]
    [System.Xml.Serialization.XmlElementAttribute("LinkDown", typeof(LinkDownString))]
    [System.Xml.Serialization.XmlElementAttribute("Prize", typeof(PrizeString))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class PotentialHitOutcomeNotHit {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class PotentialHitResult {
    
    private string progressiveHitIdField;
    
    private bool displayableField;
    
    private PotentialHitOutcome outcomeField;
    
    /// <remarks/>
    public string ProgressiveHitId {
        get {
            return this.progressiveHitIdField;
        }
        set {
            this.progressiveHitIdField = value;
        }
    }
    
    /// <remarks/>
    public bool Displayable {
        get {
            return this.displayableField;
        }
        set {
            this.displayableField = value;
        }
    }
    
    /// <remarks/>
    public PotentialHitOutcome Outcome {
        get {
            return this.outcomeField;
        }
        set {
            this.outcomeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class PotentialHit {
    
    private string controllerIdField;
    
    private uint controllerLevelField;
    
    private Amount paytableAmountField;
    
    private Amount supplementalAmountField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
    
    /// <remarks/>
    public uint ControllerLevel {
        get {
            return this.controllerLevelField;
        }
        set {
            this.controllerLevelField = value;
        }
    }
    
    /// <remarks/>
    public Amount PaytableAmount {
        get {
            return this.paytableAmountField;
        }
        set {
            this.paytableAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount SupplementalAmount {
        get {
            return this.supplementalAmountField;
        }
        set {
            this.supplementalAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class ControllerLevelParameters {
    
    private Amount startAmountField;
    
    private Amount maximumAmountField;
    
    private string betContributionPercentageField;
    
    /// <remarks/>
    public Amount StartAmount {
        get {
            return this.startAmountField;
        }
        set {
            this.startAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount MaximumAmount {
        get {
            return this.maximumAmountField;
        }
        set {
            this.maximumAmountField = value;
        }
    }
    
    /// <remarks/>
    public string BetContributionPercentage {
        get {
            return this.betContributionPercentageField;
        }
        set {
            this.betContributionPercentageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class AppSelectionEventList {
    
    private List<AppSelectionEvent> appSelectionEventField = new List<AppSelectionEvent>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppSelectionEvent")]
    public List<AppSelectionEvent> AppSelectionEvent {
        get {
            return this.appSelectionEventField;
        }
        set {
            this.appSelectionEventField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public enum AppSelectionEvent {
    
    /// <remarks/>
    AppSelectionStateChanged,
    
    /// <remarks/>
    AvailableCentralAppsChanged,
    
    /// <remarks/>
    CentralAppSelectionCanceled,
    
    /// <remarks/>
    CentralAppSelectionComplete,
    
    /// <remarks/>
    ChooserRequested,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventLog {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventLogVer1.xsd")]
public partial class SourceSelector {
    
    private string itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Extension")]
    public string Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventBasedProgressive {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventBasedProgressiveVer1.xsd")]
public partial class FractionalAmountData {
    
    private long numeratorField;
    
    private long denominatorField;
    
    /// <remarks/>
    public long Numerator {
        get {
            return this.numeratorField;
        }
        set {
            this.numeratorField = value;
        }
    }
    
    /// <remarks/>
    public long Denominator {
        get {
            return this.denominatorField;
        }
        set {
            this.denominatorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventBasedProgressive {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventBasedProgressiveVer1.xsd")]
public partial class EventBasedContributionData {
    
    private Amount qualifiedContributionAmountField;
    
    private uint gameProgressiveLevelField;
    
    private FractionalAmountData fractionalAmountField;
    
    /// <remarks/>
    public Amount QualifiedContributionAmount {
        get {
            return this.qualifiedContributionAmountField;
        }
        set {
            this.qualifiedContributionAmountField = value;
        }
    }
    
    /// <remarks/>
    public uint GameProgressiveLevel {
        get {
            return this.gameProgressiveLevelField;
        }
        set {
            this.gameProgressiveLevelField = value;
        }
    }
    
    /// <remarks/>
    public FractionalAmountData FractionalAmount {
        get {
            return this.fractionalAmountField;
        }
        set {
            this.fractionalAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemValueDataSendSelector {
    
    private CustomConfigurationItemSelector customConfigurationItemSelectorField;
    
    private ConfigurationItemType typeField;
    
    /// <remarks/>
    public CustomConfigurationItemSelector CustomConfigurationItemSelector {
        get {
            return this.customConfigurationItemSelectorField;
        }
        set {
            this.customConfigurationItemSelectorField = value;
        }
    }
    
    /// <remarks/>
    public ConfigurationItemType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class CertificateIdentifier {
    
    private X509StoreName storeNameField;
    
    private byte[] thumbprintField;
    
    /// <remarks/>
    public X509StoreName StoreName {
        get {
            return this.storeNameField;
        }
        set {
            this.storeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Thumbprint {
        get {
            return this.thumbprintField;
        }
        set {
            this.thumbprintField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public enum X509StoreName {
    
    /// <remarks/>
    AddressBook,
    
    /// <remarks/>
    AuthRoot,
    
    /// <remarks/>
    IntermediateCA,
    
    /// <remarks/>
    Disallow,
    
    /// <remarks/>
    Personal,
    
    /// <remarks/>
    Root,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class CertificateInformation {
    
    private X509StoreName storeNameField;
    
    private byte[] certificateDataField;
    
    /// <remarks/>
    public X509StoreName StoreName {
        get {
            return this.storeNameField;
        }
        set {
            this.storeNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] CertificateData {
        get {
            return this.certificateDataField;
        }
        set {
            this.certificateDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="EnrollmentRequestItem", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class EnrollmentRequestItem {
    
    private BetConfig betConfigField;
    
    /// <remarks/>
    public BetConfig BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class EnrollmentRequestItem {
    
    private BetConfig betConfigField;
    
    /// <remarks/>
    public BetConfig BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class BetData {
    
    private BetConfig betConfigField;
    
    private SetBetDataReason setBetDataReasonField;
    
    /// <remarks/>
    public BetConfig BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
    
    /// <remarks/>
    public SetBetDataReason SetBetDataReason {
        get {
            return this.setBetDataReasonField;
        }
        set {
            this.setBetDataReasonField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public enum SetBetDataReason {
    
    /// <remarks/>
    BetSelected,
    
    /// <remarks/>
    NonCommittal,
    
    /// <remarks/>
    Committal,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class EnrollmentResponseData {
    
    private Amount paytableWinAmountField;
    
    private Amount bingoWinAmountField;
    
    private Amount bingoProgressiveWinAmountField;
    
    private Amount bingoInterimProgressiveWinAmountField;
    
    private Amount sleptWinAmountField;
    
    private string logMessageField;
    
    private byte[] enrollmentDataField;
    
    /// <remarks/>
    public Amount PaytableWinAmount {
        get {
            return this.paytableWinAmountField;
        }
        set {
            this.paytableWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount BingoWinAmount {
        get {
            return this.bingoWinAmountField;
        }
        set {
            this.bingoWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount BingoProgressiveWinAmount {
        get {
            return this.bingoProgressiveWinAmountField;
        }
        set {
            this.bingoProgressiveWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount BingoInterimProgressiveWinAmount {
        get {
            return this.bingoInterimProgressiveWinAmountField;
        }
        set {
            this.bingoInterimProgressiveWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount SleptWinAmount {
        get {
            return this.sleptWinAmountField;
        }
        set {
            this.sleptWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] EnrollmentData {
        get {
            return this.enrollmentDataField;
        }
        set {
            this.enrollmentDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.CashoutEndEventData))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.CashoutStartEventData))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.CreditMovementEventData))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class PlayerMetersEventData {
    
    private PlayerMeters currentPlayerMetersField;
    
    /// <remarks/>
    public PlayerMeters CurrentPlayerMeters {
        get {
            return this.currentPlayerMetersField;
        }
        set {
            this.currentPlayerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class CashoutEndEventData : PlayerMetersEventData {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class CashoutStartEventData : PlayerMetersEventData {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class CreditMovementEventData : PlayerMetersEventData {
    
    private CreditMovementType movementTypeField;
    
    private bool movementTypeFieldSpecified;
    
    /// <remarks/>
    public CreditMovementType MovementType {
        get {
            return this.movementTypeField;
        }
        set {
            this.movementTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MovementTypeSpecified {
        get {
            return this.movementTypeFieldSpecified;
        }
        set {
            this.movementTypeFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public enum CreditMovementType {
    
    /// <remarks/>
    Unspecified,
    
    /// <remarks/>
    MoneyCommittedChanged,
    
    /// <remarks/>
    MoneyBet,
    
    /// <remarks/>
    MoneyIn,
    
    /// <remarks/>
    MoneyOut,
    
    /// <remarks/>
    MoneyWon,
    
    /// <remarks/>
    MoneySet,
    
    /// <remarks/>
    TransferToWagerable,
    
    /// <remarks/>
    TransferFromWagerable,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class BankEventData {
    
    private PlayerMetersEventData itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CashoutEndEventData", typeof(CashoutEndEventData))]
    [System.Xml.Serialization.XmlElementAttribute("CashoutStartEventData", typeof(CashoutStartEventData))]
    [System.Xml.Serialization.XmlElementAttribute("CreditMovementEventData", typeof(CreditMovementEventData))]
    public PlayerMetersEventData Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class AscribedGame {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Shell", typeof(ShellIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Theme", typeof(ThemeIdentifier))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public partial class Identifier {
    
    private ExtensionIdentifier itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Extension")]
    public ExtensionIdentifier Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class AppDecorationUpdates {
    
    private DecorationIdentifier decorationField;
    
    private AppIdentifierList addedToField;
    
    private AppIdentifierList removedFromField;
    
    /// <remarks/>
    public DecorationIdentifier Decoration {
        get {
            return this.decorationField;
        }
        set {
            this.decorationField = value;
        }
    }
    
    /// <remarks/>
    public AppIdentifierList AddedTo {
        get {
            return this.addedToField;
        }
        set {
            this.addedToField = value;
        }
    }
    
    /// <remarks/>
    public AppIdentifierList RemovedFrom {
        get {
            return this.removedFromField;
        }
        set {
            this.removedFromField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class AppDecorationUpdatesList {
    
    private List<AppDecorationUpdates> appDecorationUpdatesField = new List<AppDecorationUpdates>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppDecorationUpdates")]
    public List<AppDecorationUpdates> AppDecorationUpdates {
        get {
            return this.appDecorationUpdatesField;
        }
        set {
            this.appDecorationUpdatesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationTypesVer1.xsd")]
public partial class DecorationApps {
    
    private DecorationIdentifier decorationField;
    
    private AppIdentifierList appIdentifiersField;
    
    /// <remarks/>
    public DecorationIdentifier Decoration {
        get {
            return this.decorationField;
        }
        set {
            this.decorationField = value;
        }
    }
    
    /// <remarks/>
    public AppIdentifierList AppIdentifiers {
        get {
            return this.appIdentifiersField;
        }
        set {
            this.appIdentifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ChooserSelector {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class CommonThemeControlSelector {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class PtcEndpointIdentifier {
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCommEntity {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Chooser", typeof(ChooserSelector))]
    [System.Xml.Serialization.XmlElementAttribute("CommonThemeControl", typeof(CommonThemeControlSelector))]
    [System.Xml.Serialization.XmlElementAttribute("Extension", typeof(ExtensionIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("PtcEndpoint", typeof(PtcEndpointIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Shell", typeof(ShellIdentifier))]
    [System.Xml.Serialization.XmlElementAttribute("Theme", typeof(ThemeIdentifier))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class RequestParcel {
    
    private ParcelCommEntity sourceField;
    
    private ParcelCommEntity targetField;
    
    private byte[] payloadField;
    
    /// <remarks/>
    public ParcelCommEntity Source {
        get {
            return this.sourceField;
        }
        set {
            this.sourceField = value;
        }
    }
    
    /// <remarks/>
    public ParcelCommEntity Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class ExtensionImport {
    
    private Extension extensionField;
    
    private string resourceDirectoryBaseField;
    
    /// <remarks/>
    public Extension Extension {
        get {
            return this.extensionField;
        }
        set {
            this.extensionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string ResourceDirectoryBase {
        get {
            return this.resourceDirectoryBaseField;
        }
        set {
            this.resourceDirectoryBaseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DiscoveryContextTypes {
    using System.Collections.Generic;
    using Types;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDiscoveryContextTypesVer1.xsd")]
public partial class DiscoveryContext {
    
    private string identifierField;
    
    private DiscoveryContextTagDataFile tagDataFileField;
    
    private string mountPathField;
    
    private DiscoveryType discoveryTypeField;
    
    /// <remarks/>
    public string Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    public DiscoveryContextTagDataFile TagDataFile {
        get {
            return this.tagDataFileField;
        }
        set {
            this.tagDataFileField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
    public string MountPath {
        get {
            return this.mountPathField;
        }
        set {
            this.mountPathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public DiscoveryType DiscoveryType {
        get {
            return this.discoveryTypeField;
        }
        set {
            this.discoveryTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DiscoveryContextTypes {
    using System.Collections.Generic;
    using Types;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XDiscoveryContextTypesVer1.xsd")]
public partial class DiscoveryContextTagDataFile {
    
    private string tagField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DiscoveryContextTypes {
    using System.Collections.Generic;
    using Types;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDiscoveryContextTypesVer1.xsd")]
public enum DiscoveryType {
    
    /// <remarks/>
    Bin,
    
    /// <remarks/>
    Theme,
    
    /// <remarks/>
    ExecutableExtensionBin,
    
    /// <remarks/>
    ExecutableExtension,
    
    /// <remarks/>
    ConfigurationExtension,
    
    /// <remarks/>
    MenuExtension,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ProgressiveLevelValue", Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class ProgressiveLevelValue {
    
    private Amount amountField;
    
    private List<ProgressiveLevelValuePrizeLocalization> prizeField = new List<ProgressiveLevelValuePrizeLocalization>();
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("PrizeLocalization", IsNullable=false)]
    public List<ProgressiveLevelValuePrizeLocalization> Prize {
        get {
            return this.prizeField;
        }
        set {
            this.prizeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class ProgressiveLevelValuePrizeLocalization {
    
    private string cultureField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class ProgressiveLevelLinkedValue {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LinkDownText", typeof(LinkDownTextLocalizations))]
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLevelValue", typeof(ProgressiveLevelValue))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class ProgressiveLevelLinkedData {
    
    private uint gameLevelField;
    
    private ProgressiveLevelLinkedValue progressiveLevelLinkedValueField;
    
    /// <remarks/>
    public uint GameLevel {
        get {
            return this.gameLevelField;
        }
        set {
            this.gameLevelField = value;
        }
    }
    
    /// <remarks/>
    public ProgressiveLevelLinkedValue ProgressiveLevelLinkedValue {
        get {
            return this.progressiveLevelLinkedValueField;
        }
        set {
            this.progressiveLevelLinkedValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class ProgressiveLevelDenomData {
    
    private uint denominationField;
    
    private List<ProgressiveLevelLinkedData> progressiveLevelLinkedDataField = new List<ProgressiveLevelLinkedData>();
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLevelLinkedData")]
    public List<ProgressiveLevelLinkedData> ProgressiveLevelLinkedData {
        get {
            return this.progressiveLevelLinkedDataField;
        }
        set {
            this.progressiveLevelLinkedDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class ProgressiveLevelPayvarDenomData {
    
    private PayvarIdentifier payvarField;
    
    private List<ProgressiveLevelDenomData> progressiveLevelDenomDataField = new List<ProgressiveLevelDenomData>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLevelDenomData")]
    public List<ProgressiveLevelDenomData> ProgressiveLevelDenomData {
        get {
            return this.progressiveLevelDenomDataField;
        }
        set {
            this.progressiveLevelDenomDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ControllerLevelValue {
    
    private uint controllerLevelField;
    
    private ProgressiveLevelValue controllerLevelValue1Field;
    
    /// <remarks/>
    public uint ControllerLevel {
        get {
            return this.controllerLevelField;
        }
        set {
            this.controllerLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ControllerLevelValue")]
    public ProgressiveLevelValue ControllerLevelValue1 {
        get {
            return this.controllerLevelValue1Field;
        }
        set {
            this.controllerLevelValue1Field = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ControllerLevelValues {
    
    private string controllerIdField;
    
    private List<ControllerLevelValue> valuesField = new List<ControllerLevelValue>();
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Value", IsNullable=false)]
    public List<ControllerLevelValue> Values {
        get {
            return this.valuesField;
        }
        set {
            this.valuesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;
    using WinMismatch;
    using VoucherRedemption;
    using VKBingo;
    using TsmApiControl;
    using TsmActivation;
    using TransactionalCritDataWrite;
    using TransactionalCritDataRead;
    using TournamentSessionControl;
    using TournamentMeters;
    using TiltControl;
    using TicketPrintControl;
    using ThemeDisplayEvents;
    using ThemedHandpay;
    using ThemeControl;
    using ThemeApiControl;
    using ThemeActivation;
    using SystemApiControl;
    using SystemActivation;
    using SportsBettingGamingCycle;
    using ShowDemo;
    using ShellThemeControl;
    using ShellHistoryStore;
    using ShellHistoryControl;
    using ShellApiControl;
    using ShellActivation;
    using SetupValidation;
    using SessionManagement;
    using SelectionManagement;
    using RuntimeGameEvents;
    using ResponsibleGamingSessionDisplay;
    using ReportGamePerformance;
    using ReportGameDataInspection;
    using RandomNumberGeneration;
    using ProgressiveData;
    using PlayerTipping;
    using PlayerSession;
    using PlayerSessionParameters;
    using PlayerInformationDisplay;
    using PlayerControlContextMonitoring;
    using PlayerCardServices;
    using PIDSessionTracking;
    using PerformCashout;
    using ParcelComm;
    using NICInformation;
    using NetworkManagement;
    using MidGameMoneyAcceptance;
    using MessageStrip;
    using MachineIdentification;
    using Localization;
    using LegacyBonusControl;
    using KVSTypes;
    using JackpotItaly;
    using GameReserve;
    using GameProgressiveSettings;
    using GamePresentationBehavior;
    using GamePlayStatus;
    using GamePlayReporting;
    using GameOutcomeEvents;
    using GameLink;
    using GameLevelAward;
    using GameInformation;
    using GameHistorySupplemental;
    using GameGroupInformation;
    using GameGroupControl;
    using GameCycleSupervision;
    using GameCyclePlay;
    using GameCycleEvents;
    using GameCycleBetting;
    using G2SConnection;
    using FlashPlayerClock;
    using FirewallManager;
    using ExtensionProgressiveControllerRuntime;
    using ExtensionProgressiveControllerLinking;
    using ExtensionProgressiveControllerConfig;
    using ExtensionAppSelection;
    using EventLog;
    using EventBasedProgressive;
    using EGMConfigData;
    using EbpConfiguration;
    using DisplayControl;
    using DftMeterReader;
    using DateTime;
    using CustomConfigurationRead;
    using CultureWrite;
    using CultureRead;
    using CoplayerManagement;
    using CoplayerApiControl;
    using CoplayerActivation;
    using ConfigurationModeMonitoring;
    using ConfigurationModeControl;
    using ClockDisplay;
    using ChooserServices;
    using ChooserDefinitionQuery;
    using CertificateManagement;
    using CdsPullTab;
    using CdsIcd;
    using CdsHhr;
    using CdsEcp;
    using CdsBingo;
    using CdsBingoMeterReader;
    using CdsBingoConfig;
    using Cashout;
    using CashDeviceSupervision;
    using CallAttendant;
    using Bonusing;
    using BetStepsConfiguration;
    using BankStatus;
    using BankPlay;
    using AscribedShellActivation;
    using AscribedGameApiControl;
    using AppStorage;
    using AppQuery;
    using AppDecorationQuery;
    using AppDecorationManagement;
    using AppControl;
    using AppControlClient;
    using AppApiControl;
    using AppActivation;
    using Activation;
    using ActionRequest;
    using ActionRequestLite;
    using RetrieveGameLevelAwards;
    using NonTransactionalCritDataRead;
    using MachineSupervision;
    using LinkControl;
    using Connect;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Types.SendTransactionalMessage))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.WinMismatch.VerifyProgressiveAwardsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.AbortVoucherRedemptionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherRedemptionResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherRedemptionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherReviewResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherReviewRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.SetVoucherRedemptionRegistrationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.PlayerCashoutRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.DisplayStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.UnLockResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestUnLockSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.LockOutResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestLockOutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.GamePlayEndMeteringResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestGamePlayEndMeteringSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.PlacePurchaseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmApiControl.SetTsmApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmApiControl.GetTsmApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.InactivateTsmContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.ActivateTsmContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.NewTsmContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataWrite.RemoveCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataWrite.WriteCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataRead.ReadCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionResetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionCompleteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.FinishSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionStartSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.ResetSessionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.StartSessionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionConfigurationChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.GetConfigDataSessionInitiatorSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.QuerySessionInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.GetTournamentPlayerMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsSetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsWonSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCommittedCreditsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.TiltClearedByAttendantSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.RequestClearTiltSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.RequestTiltSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.NotificationRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.PrinterEnabledStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.AbortTicketPrintSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.TicketStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.QueryTicketStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.PrintTicketSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.QueryPrintingSupportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeDisplayEvents.QueryDisplayedThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeDisplayEvents.DisplayedThemeChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemedHandpay.QueryHandpayLockupStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemedHandpay.HandpayLockupStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.ThemeSwitchCancelledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.GetPayvarInfoSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.ThemeSwitchRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.GetSelectableThemesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeApiControl.SetThemeApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeApiControl.GetThemeApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.SwitchThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.InactivateThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.ActivateThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.NewThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemApiControl.SetSystemApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemApiControl.GetSystemApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.InactivateSystemContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.ActivateSystemContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.NewSystemContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.CommitSportsBetReserveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.ReserveSportsBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingReserveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.EndSportsBettingGamingCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.CommitSportsBettingGamingCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingGamingCycleStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShowDemo.GetShowDemoPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.GetThemeInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.GetSelectableThemesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.SwitchThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.LogEndGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.RemoveCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.WriteCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.ReadCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.GetShellHistoryWritePermittedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.ReadCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.BindCoplayerSessionToHistorySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.GetHistoryContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellApiControl.SetShellApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellApiControl.GetShellApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.InactivateShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.ActivateShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.NewShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SetupValidation.ValidateThemeSetupSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.LaunchSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.DestroySessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.CreateSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetGamePropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetSelectedAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AvailableAppsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetAvailableAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AppRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.ChooserRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AppStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetDefaultAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayShellSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.SetChooserOfferableSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetAppStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetThemePerformanceMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GetRuntimeGameEventsConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameBetMeterKeysUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameBetMeterUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameSelectionStatusUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.PlayerChoiceUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.WaitingForGenericInputStatusUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ResponsibleGamingSessionDisplay.RequestDisplaySessionInfoSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGamePerformance.GetPerformanceReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetMinimumPlayableCreditBalanceSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetInspectionReportTypeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetHtmlInspectionReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetInspectionReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RandomNumberGeneration.GetListLimitedRandomNumbersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RandomNumberGeneration.GetRandomNumbersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryEnabledPayvarBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryPayvarBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryEnabledThemeBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryThemeBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.TippingResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.TippingRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.GetPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.GetConfigDataSessionTimerDisplayEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.QueryPlayerSessionStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.PlayerSessionStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.ParametersResetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.CurrentResetParametersChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.QueryCurrentResetParametersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.GetConfigDataPlayerSessionParameterResetEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.SessionInformationScreenEnteredSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.GameInformationScreenEnteredSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.ActivationStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.GetPidConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerControlContextMonitoring.PlayerControlContextStateUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.SetCardAcceptanceStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.CardRemovedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.CardInsertedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.StopTrackingSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.StartTrackingSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.GetSessionDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PerformCashout.PerformCashoutResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PerformCashout.PerformCashoutRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.TransParcelCallRxSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.TransParcelCallTxSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.GetPrioritizedIPListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.GetIPAddressForHostConnectionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.NetworkSettingsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NetworkManagement.AddIpv4RoutingTableEntrySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NetworkManagement.GetNicInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.EndOfferingMidGameMoneyAcceptanceSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.OfferingMidGameMoneyAcceptanceResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.RequestOfferingMidGameMoneyAcceptanceSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MessageStrip.GetMessagesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineFloorLocationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineAssetNumberSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataG2SMachineIdentifierSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineSerialNumberSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.QueryLanguageIconsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.GetTimeOfDayFormatSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.GetCreditFormatterInfoSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusHostLinkStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.EndLegacyBonusBookingHoldOffSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusArrivedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.QueryLegacyBonusHostStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.QueryLegacyBonusStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.RequestLegacyBonusBookingHoldOffSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusNotificationEnableSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreWriteMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.RemoveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.WriteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreReadMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.ReadSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.JackpotItaly.GetConfigDataJackpotBonusEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.ReserveActivationCanceledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.RequestReserveActivationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.GetReserveParametersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameProgressiveSettings.QueryProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePresentationBehavior.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GameFocusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GameInProgressChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GetGameFocusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GetGameInProgressSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayReporting.PokerGamePlayReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameOutcomeEvents.FinalWinRecordEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLink.GetConfigDataStompBrokerSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLevelAward.InitializeGameLevelDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetDenominationButtonPanelMinBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarButtonPanelMinBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeButtonPanelMinBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarEnabledDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeEnabledDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarSupportedDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeSupportedDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetDenominationMaxBetCreditsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarMaxBetCreditsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeMaxBetCreditsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetBetResolutionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarPaybackPercentageDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarsForThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameHistorySupplemental.SetExportDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupInformation.GetPayvarGroupsForThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.GetConfigDataPayvarGroupInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.GetSelectedPayvarSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.SelectPayvarSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.ClearGameCycleBehaviorModifierSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.EnableGameCycleBehaviorModifiersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.GameCycleModificationEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.SetGameCycleModificationEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AwardResultsPostedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EndGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FinalizeAwardRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AbortGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.StartPlayingSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.UnenrollGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.UncommitGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.CommitGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.QueryGameCycleStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleEvents.GameCycleEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleEvents.SetGameCycleEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.PlaceBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.PlaceStartingBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.UncommitBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.CommitBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetOcspSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.CertificatesChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetCertificateAuthoritiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetClientCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetG2SHostAddressSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.GetFlashPlayerClockPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetSSLCertConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetUrlAclConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetPortEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.GetPortStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.GetConfigDataFirewallEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.WapHandpayAcknowledgeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.WapHandpaySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.ValidationResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.ValidationRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.GetConfigDataMinControllerLevelUpdateIntervalSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.QueryProgressiveLinksSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.RemoveProgressiveLinksSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.AddProgressiveLinksSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.QueryGameLevelDefinitionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.QueryControllersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.QueryControllerLevelsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.DestroyControllerSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.CreateControllerSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.AdjustControllerLevelParametersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.AddControllerLevelSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.ChooserRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionCompleteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionCanceledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.AvailableCentralAppsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.AppSelectionStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetSelectedCentralAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetAvailableCentralAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetAppSelectionStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.SetAppSelectionEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EventLog.RecordEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EventBasedProgressive.AddQualifiedContributionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataRtpOrderedByBetRequiredSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataDisplayVideoReelsForStepperSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataDefaultBetSelectionStyleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetMarketingBehaviorSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetAncillaryMonetaryLimitSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataExternalBonusWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataProgressiveWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataTotalWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetWinCapBehaviorSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetMinimumBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.EbpEnabledChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetCertificateAuthoritiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetClientCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetG2SHostAddressSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetEbpEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DisplayControl.SetDisplayControlStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.ReadDirectFundsTransferMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.DirectFundsTransferMetersUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.SetDirectFundsTransferMetersRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.GetConfigDataDateTimeMinimumUpdateIntervalSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.DateTimeChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetScopedCustomConfigItemNamesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemTypesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemReferencedEnumerationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemValueDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureWrite.SetDefaultCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureWrite.SetCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.CultureChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetDefaultCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetAvailableCulturesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.GetConfigDataMaxNumOfCoplayersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.BindCoplayerSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.CreateCoplayersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.GetCoplayersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerApiControl.SetCoplayerApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerApiControl.GetCoplayerApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.InactivateCoplayerContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.ActivateCoplayerContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.NewCoplayerContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeMonitoring.ConfigModeStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.ConfigModeAvailabilityEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.EnterConfigModeResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.ExitConfigModeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.EnterConfigModeRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ClockDisplay.GetClockDisplayEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ClockDisplay.ClockDisplayEnabledChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.RequestChooserSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.GetChooserServicesPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetAppPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetAppPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetChooserPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetChooserPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.RemoveCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.HasCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.AddCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetConfigDataMultidrawSupportedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.SetProgressiveLookupDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetConfigDataMultidrawSupportedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.PlayCompleteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.ActionPlaySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.SetBetDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.MachineStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.CommitGameInProgressRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.WinMismatchNotificationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.FinalExpectedOutcomeRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.EnrollmentResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.EnrollmentRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoMeterReader.GetBingoMetersMaxValueSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoMeterReader.ReadBingoMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetMachineIdentificationCabinetModelSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetFloorLocationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.TaxableEventThresholdChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetTaxableEventThresholdSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.CanSetDateTimeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetConfigurationModeStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.ConfigurationModeStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetThemeBingoInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetInstalledRomInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetEgmSerialNumberSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetDiscoveryPortSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.CashoutStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.RequestPartialCashoutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.RequestCashoutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.GetPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.ReportVoucherStackedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.VoucherValidationResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.RequestVoucherValidationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.SetValidationRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.CashoutReviewResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.RequestCashoutReviewSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.SetCashoutReviewRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CallAttendant.ClearPriorityCallAttendantSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CallAttendant.SetPriorityCallAttendantSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Bonusing.BonusPaidSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Bonusing.EscrowBonusWinSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BetStepsConfiguration.GetBetStepsConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.GetPlayerMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.BankEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.SetBankEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.PlayerCashoutRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.SendTransactionalMoneyChangedMessage))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneySetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyWonSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyOutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyInSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyCommittedChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBettableTransferSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetPlayerMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetBankPlayPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.InactivateAscribedShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.ActivateAscribedShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.NewAscribedShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedGameApiControl.SetAscribedGameApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedGameApiControl.GetAscribedGameApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppStorage.ReleaseInternalStorageSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppStorage.RequestInternalStorageSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.AvailableAppsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAllowedSwitchBehaviorsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectorPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectorPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAppPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAppPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectedAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAvailableAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.AppDecorationsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.GetDecorationContentSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.GetAppDecorationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.RemoveDecorationsFromAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.AddDecorationsToAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.UnregisterDecorationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.RegisterDecorationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.DisplayStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.AppRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.ChooserRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.AppStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetDefaultDenominationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetDefaultAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.DisplayAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.SetChooserOfferableSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetAppStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetAppPerformanceMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetPriorityAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControlClient.AppSwitchCancelledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControlClient.AppSwitchRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppApiControl.SetAppApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppApiControl.GetAppApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.InactivateAppContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.ActivateAppContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.NewAppContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.InactivateContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.ActivateContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.NewContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequest.ActionResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequestLite.ActionResponseLiteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.UpdateSportsBettingPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShowDemo.AddMoneySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.ShellHistoryWritePermittedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RetrieveGameLevelAwards.GetGameLevelAwardValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetEnabledPayvarBasedProgressiveValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetPayvarBasedProgressiveValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetEnabledThemeBasedProgressiveValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.GetThemeBasedProgressiveValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.UpdatePropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.PidConfigurationChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.SessionTrackingStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.ParcelCallRxSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.ParcelCallTxSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NonTransactionalCritDataRead.ReadCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MessageStrip.UpdateMessagesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineSupervision.RequestMachineRebootSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LinkControl.ParkSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LinkControl.SetApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LinkControl.GetApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.JackpotItaly.GetJackpotBonusValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.UpdateReserveParametersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLevelAward.GetThemeBasedGameLevelValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AbortCompleteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FinalizeAwardResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.UpdateFlashPlayerClockPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.SetControllerLevelValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.GetDateTimeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Connect.ShutdownSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Connect.SetLinkControlApiVersionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Connect.GetLinkControlApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.UpdateChooserServicesPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.SetDateTimeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.UpdatePropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.UpdateBankPlayPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequest.ActionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequestLite.ActionRequestLiteSend))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Types {
    using System.Collections.Generic;
    using WinMismatch;
    using VoucherRedemption;
    using VKBingo;
    using TsmApiControl;
    using TsmActivation;
    using TransactionalCritDataWrite;
    using TransactionalCritDataRead;
    using TournamentSessionControl;
    using TournamentMeters;
    using TiltControl;
    using TicketPrintControl;
    using ThemeDisplayEvents;
    using ThemedHandpay;
    using ThemeControl;
    using ThemeApiControl;
    using ThemeActivation;
    using SystemApiControl;
    using SystemActivation;
    using SportsBettingGamingCycle;
    using ShowDemo;
    using ShellThemeControl;
    using ShellHistoryStore;
    using ShellHistoryControl;
    using ShellApiControl;
    using ShellActivation;
    using SetupValidation;
    using SessionManagement;
    using SelectionManagement;
    using RuntimeGameEvents;
    using ResponsibleGamingSessionDisplay;
    using ReportGamePerformance;
    using ReportGameDataInspection;
    using RandomNumberGeneration;
    using ProgressiveData;
    using PlayerTipping;
    using PlayerSession;
    using PlayerSessionParameters;
    using PlayerInformationDisplay;
    using PlayerControlContextMonitoring;
    using PlayerCardServices;
    using PIDSessionTracking;
    using PerformCashout;
    using ParcelComm;
    using NICInformation;
    using NetworkManagement;
    using MidGameMoneyAcceptance;
    using MessageStrip;
    using MachineIdentification;
    using Localization;
    using LegacyBonusControl;
    using KVSTypes;
    using JackpotItaly;
    using GameReserve;
    using GameProgressiveSettings;
    using GamePresentationBehavior;
    using GamePlayStatus;
    using GamePlayReporting;
    using GameOutcomeEvents;
    using GameLink;
    using GameLevelAward;
    using GameInformation;
    using GameHistorySupplemental;
    using GameGroupInformation;
    using GameGroupControl;
    using GameCycleSupervision;
    using GameCyclePlay;
    using GameCycleEvents;
    using GameCycleBetting;
    using G2SConnection;
    using FlashPlayerClock;
    using FirewallManager;
    using ExtensionProgressiveControllerRuntime;
    using ExtensionProgressiveControllerLinking;
    using ExtensionProgressiveControllerConfig;
    using ExtensionAppSelection;
    using EventLog;
    using EventBasedProgressive;
    using EGMConfigData;
    using EbpConfiguration;
    using DisplayControl;
    using DftMeterReader;
    using DateTime;
    using CustomConfigurationRead;
    using CultureWrite;
    using CultureRead;
    using CoplayerManagement;
    using CoplayerApiControl;
    using CoplayerActivation;
    using ConfigurationModeMonitoring;
    using ConfigurationModeControl;
    using ClockDisplay;
    using ChooserServices;
    using ChooserDefinitionQuery;
    using CertificateManagement;
    using CdsPullTab;
    using CdsIcd;
    using CdsHhr;
    using CdsEcp;
    using CdsBingo;
    using CdsBingoMeterReader;
    using CdsBingoConfig;
    using Cashout;
    using CashDeviceSupervision;
    using CallAttendant;
    using Bonusing;
    using BetStepsConfiguration;
    using BankStatus;
    using BankPlay;
    using AscribedShellActivation;
    using AscribedGameApiControl;
    using AppStorage;
    using AppQuery;
    using AppDecorationQuery;
    using AppDecorationManagement;
    using AppControl;
    using AppControlClient;
    using AppApiControl;
    using AppActivation;
    using Activation;
    using ActionRequest;
    using ActionRequestLite;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.WinMismatch.VerifyProgressiveAwardsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.AbortVoucherRedemptionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherRedemptionResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherRedemptionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherReviewResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.VoucherReviewRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VoucherRedemption.SetVoucherRedemptionRegistrationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.PlayerCashoutRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.DisplayStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.UnLockResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestUnLockSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.LockOutResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestLockOutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.GamePlayEndMeteringResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.RequestGamePlayEndMeteringSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.VKBingo.PlacePurchaseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmApiControl.SetTsmApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmApiControl.GetTsmApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.InactivateTsmContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.ActivateTsmContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TsmActivation.NewTsmContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataWrite.RemoveCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataWrite.WriteCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TransactionalCritDataRead.ReadCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionResetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionCompleteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.FinishSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionStartSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.ResetSessionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.StartSessionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.SessionConfigurationChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.GetConfigDataSessionInitiatorSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentSessionControl.QuerySessionInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.GetTournamentPlayerMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsSetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsWonSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCommittedCreditsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TournamentMeters.TournamentCreditsBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.TiltClearedByAttendantSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.RequestClearTiltSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TiltControl.RequestTiltSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.NotificationRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.PrinterEnabledStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.AbortTicketPrintSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.TicketStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.QueryTicketStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.PrintTicketSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.TicketPrintControl.QueryPrintingSupportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeDisplayEvents.QueryDisplayedThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeDisplayEvents.DisplayedThemeChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemedHandpay.QueryHandpayLockupStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemedHandpay.HandpayLockupStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.ThemeSwitchCancelledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.GetPayvarInfoSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.ThemeSwitchRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeControl.GetSelectableThemesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeApiControl.SetThemeApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeApiControl.GetThemeApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.SwitchThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.InactivateThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.ActivateThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ThemeActivation.NewThemeContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemApiControl.SetSystemApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemApiControl.GetSystemApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.InactivateSystemContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.ActivateSystemContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SystemActivation.NewSystemContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.CommitSportsBetReserveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.ReserveSportsBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingReserveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.EndSportsBettingGamingCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.CommitSportsBettingGamingCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingGamingCycleStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SportsBettingGamingCycle.GetSportsBettingPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShowDemo.GetShowDemoPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.GetThemeInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.GetSelectableThemesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellThemeControl.SwitchThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.LogEndGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.RemoveCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.WriteCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.ReadCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryStore.GetShellHistoryWritePermittedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.ReadCritDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.BindCoplayerSessionToHistorySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellHistoryControl.GetHistoryContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellApiControl.SetShellApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellApiControl.GetShellApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.InactivateShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.ActivateShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ShellActivation.NewShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SetupValidation.ValidateThemeSetupSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.LaunchSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.DestroySessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SessionManagement.CreateSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetGamePropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetSelectedAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AvailableAppsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetAvailableAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AppRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.ChooserRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.AppStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetDefaultAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayShellSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.DisplayThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.SetChooserOfferableSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetAppStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.SelectionManagement.GetThemePerformanceMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GetRuntimeGameEventsConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameBetMeterKeysUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameBetMeterUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.GameSelectionStatusUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.PlayerChoiceUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RuntimeGameEvents.WaitingForGenericInputStatusUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ResponsibleGamingSessionDisplay.RequestDisplaySessionInfoSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGamePerformance.GetPerformanceReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetMinimumPlayableCreditBalanceSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetInspectionReportTypeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetHtmlInspectionReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ReportGameDataInspection.GetInspectionReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RandomNumberGeneration.GetListLimitedRandomNumbersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.RandomNumberGeneration.GetRandomNumbersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryEnabledPayvarBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryPayvarBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryEnabledThemeBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ProgressiveData.QueryThemeBasedProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.TippingResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.TippingRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerTipping.GetPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.GetConfigDataSessionTimerDisplayEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.QueryPlayerSessionStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSession.PlayerSessionStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.ParametersResetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.CurrentResetParametersChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.QueryCurrentResetParametersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerSessionParameters.GetConfigDataPlayerSessionParameterResetEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.SessionInformationScreenEnteredSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.GameInformationScreenEnteredSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.ActivationStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerInformationDisplay.GetPidConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerControlContextMonitoring.PlayerControlContextStateUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.SetCardAcceptanceStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.CardRemovedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PlayerCardServices.CardInsertedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.StopTrackingSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.StartTrackingSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PIDSessionTracking.GetSessionDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PerformCashout.PerformCashoutResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.PerformCashout.PerformCashoutRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.TransParcelCallRxSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ParcelComm.TransParcelCallTxSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.GetPrioritizedIPListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.GetIPAddressForHostConnectionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NICInformation.NetworkSettingsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NetworkManagement.AddIpv4RoutingTableEntrySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.NetworkManagement.GetNicInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.EndOfferingMidGameMoneyAcceptanceSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.OfferingMidGameMoneyAcceptanceResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MidGameMoneyAcceptance.RequestOfferingMidGameMoneyAcceptanceSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MessageStrip.GetMessagesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineFloorLocationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineAssetNumberSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataG2SMachineIdentifierSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.MachineIdentification.GetConfigDataMachineSerialNumberSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.QueryLanguageIconsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.GetTimeOfDayFormatSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Localization.GetCreditFormatterInfoSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusHostLinkStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.EndLegacyBonusBookingHoldOffSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusArrivedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.QueryLegacyBonusHostStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.QueryLegacyBonusStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.RequestLegacyBonusBookingHoldOffSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.LegacyBonusControl.LegacyBonusNotificationEnableSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreWriteMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.RemoveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.WriteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreReadMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.ReadSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.JackpotItaly.GetConfigDataJackpotBonusEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.ReserveActivationCanceledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.RequestReserveActivationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameReserve.GetReserveParametersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameProgressiveSettings.QueryProgressiveSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePresentationBehavior.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GameFocusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GameInProgressChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GetGameFocusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayStatus.GetGameInProgressSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GamePlayReporting.PokerGamePlayReportSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameOutcomeEvents.FinalWinRecordEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLink.GetConfigDataStompBrokerSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameLevelAward.InitializeGameLevelDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetDenominationButtonPanelMinBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarButtonPanelMinBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeButtonPanelMinBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarEnabledDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeEnabledDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarSupportedDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeSupportedDenominationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetDenominationMaxBetCreditsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarMaxBetCreditsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetThemeMaxBetCreditsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetBetResolutionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarPaybackPercentageDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameInformation.GetPayvarsForThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameHistorySupplemental.SetExportDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupInformation.GetPayvarGroupsForThemeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.GetConfigDataPayvarGroupInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.GetSelectedPayvarSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameGroupControl.SelectPayvarSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.ClearGameCycleBehaviorModifierSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.EnableGameCycleBehaviorModifiersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.GameCycleModificationEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleSupervision.SetGameCycleModificationEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AwardResultsPostedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EndGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.FinalizeAwardRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.AbortGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EvalOutcomeRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.StartPlayingSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.UnenrollGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.EnrollGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.UncommitGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.CommitGameCycleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCyclePlay.QueryGameCycleStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleEvents.GameCycleEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleEvents.SetGameCycleEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.PlaceBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.PlaceStartingBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.UncommitBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.GameCycleBetting.CommitBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetOcspSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.CertificatesChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetCertificateAuthoritiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetClientCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.G2SConnection.GetG2SHostAddressSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.GetFlashPlayerClockPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FlashPlayerClock.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetSSLCertConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetUrlAclConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.SetPortEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.GetPortStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.FirewallManager.GetConfigDataFirewallEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.WapHandpayAcknowledgeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.WapHandpaySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.ValidationResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.ValidationRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerRuntime.GetConfigDataMinControllerLevelUpdateIntervalSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.QueryProgressiveLinksSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.RemoveProgressiveLinksSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.AddProgressiveLinksSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerLinking.QueryGameLevelDefinitionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.QueryControllersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.QueryControllerLevelsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.DestroyControllerSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.CreateControllerSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.AdjustControllerLevelParametersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionProgressiveControllerConfig.AddControllerLevelSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.ChooserRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionCompleteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionCanceledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.AvailableCentralAppsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.AppSelectionStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetSelectedCentralAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.CentralAppSelectionRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetAvailableCentralAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetAppSelectionStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.SetAppSelectionEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ExtensionAppSelection.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EventLog.RecordEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EventBasedProgressive.AddQualifiedContributionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataRtpOrderedByBetRequiredSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataDisplayVideoReelsForStepperSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataDefaultBetSelectionStyleSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetMarketingBehaviorSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetAncillaryMonetaryLimitSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataExternalBonusWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataProgressiveWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetConfigDataTotalWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetWinCapBehaviorSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetWinCapSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EGMConfigData.GetMinimumBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.EbpEnabledChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetCertificateAuthoritiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetClientCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetG2SHostAddressSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.EbpConfiguration.GetEbpEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DisplayControl.SetDisplayControlStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.ReadDirectFundsTransferMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.DirectFundsTransferMetersUpdateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DftMeterReader.SetDirectFundsTransferMetersRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.GetConfigDataDateTimeMinimumUpdateIntervalSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.DateTime.DateTimeChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetScopedCustomConfigItemNamesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemTypesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemReferencedEnumerationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CustomConfigurationRead.GetCustomConfigItemValueDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureWrite.SetDefaultCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureWrite.SetCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.CultureChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetDefaultCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetAvailableCulturesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CultureRead.GetCultureSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.GetConfigDataMaxNumOfCoplayersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.BindCoplayerSessionSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.CreateCoplayersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerManagement.GetCoplayersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerApiControl.SetCoplayerApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerApiControl.GetCoplayerApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.InactivateCoplayerContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.ActivateCoplayerContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CoplayerActivation.NewCoplayerContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeMonitoring.ConfigModeStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.ConfigModeAvailabilityEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.EnterConfigModeResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.ExitConfigModeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ConfigurationModeControl.EnterConfigModeRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ClockDisplay.GetClockDisplayEnabledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ClockDisplay.ClockDisplayEnabledChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.RequestChooserSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserServices.GetChooserServicesPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetAppPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetAppPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetChooserPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ChooserDefinitionQuery.GetChooserPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.RemoveCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.HasCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CertificateManagement.AddCertificateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetConfigDataMultidrawSupportedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsPullTab.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.SetProgressiveLookupDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsIcd.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetConfigDataMultidrawSupportedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsHhr.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.AwardMismatchDetectedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.GetEnrollmentResponseDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.PlayCompleteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.SetEnrollmentRequestDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.ActionPlaySend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.SetBetDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsEcp.GetConfigDataCdsGameConfigSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.MachineStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.CommitGameInProgressRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.WinMismatchNotificationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.FinalExpectedOutcomeRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.EnrollmentResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingo.EnrollmentRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoMeterReader.GetBingoMetersMaxValueSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoMeterReader.ReadBingoMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetMachineIdentificationCabinetModelSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetFloorLocationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.TaxableEventThresholdChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetTaxableEventThresholdSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.CanSetDateTimeSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetConfigurationModeStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.ConfigurationModeStatusChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetThemeBingoInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetInstalledRomInformationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetEgmSerialNumberSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CdsBingoConfig.GetDiscoveryPortSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.CashoutStatusSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.RequestPartialCashoutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.RequestCashoutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Cashout.GetPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.ReportVoucherStackedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.VoucherValidationResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.RequestVoucherValidationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.SetValidationRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.CashoutReviewResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.RequestCashoutReviewSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CashDeviceSupervision.SetCashoutReviewRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CallAttendant.ClearPriorityCallAttendantSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.CallAttendant.SetPriorityCallAttendantSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Bonusing.BonusPaidSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Bonusing.EscrowBonusWinSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BetStepsConfiguration.GetBetStepsConfigurationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.GetPlayerMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.BankEventSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankStatus.SetBankEventRegistrationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.PlayerCashoutRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetConfigDataSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.SendTransactionalMoneyChangedMessage))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneySetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyWonSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyOutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyInSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyCommittedChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBettableTransferSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetPlayerMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.GetBankPlayPropertiesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.InactivateAscribedShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.ActivateAscribedShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedShellActivation.NewAscribedShellContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedGameApiControl.SetAscribedGameApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AscribedGameApiControl.GetAscribedGameApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppStorage.ReleaseInternalStorageSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppStorage.RequestInternalStorageSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.AvailableAppsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAllowedSwitchBehaviorsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectorPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectorPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAppPropertyValuesSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAppPropertyListSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetSelectedAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppQuery.GetAvailableAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.AppDecorationsChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.GetDecorationContentSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationQuery.GetAppDecorationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.RemoveDecorationsFromAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.AddDecorationsToAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.UnregisterDecorationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppDecorationManagement.RegisterDecorationsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.DisplayStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.AppRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.ChooserRequestedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.AppStateChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetDefaultDenominationSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetDefaultAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.DisplayAppSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.SetChooserOfferableSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetAppStateSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetAppPerformanceMetersSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControl.GetPriorityAppsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControlClient.AppSwitchCancelledSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppControlClient.AppSwitchRequestSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppApiControl.SetAppApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppApiControl.GetAppApiVersionsSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.InactivateAppContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.ActivateAppContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.AppActivation.NewAppContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.InactivateContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.ActivateContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.Activation.NewContextSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequest.ActionResponseSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.ActionRequestLite.ActionResponseLiteSend))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTypesVer1.xsd")]
public partial class SendTransactionalMessage : SendMessage {
    
    private uint transactionIDField;
    
    /// <remarks/>
    public uint TransactionID {
        get {
            return this.transactionIDField;
        }
        set {
            this.transactionIDField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.WinMismatch {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XWinMismatchVer1.xsd")]
public partial class VerifyProgressiveAwardsSend : SendTransactionalMessage {
    
    private List<ProgressiveAward> currentProgressiveAwardsField = new List<ProgressiveAward>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CurrentProgressiveAwards")]
    public List<ProgressiveAward> CurrentProgressiveAwards {
        get {
            return this.currentProgressiveAwardsField;
        }
        set {
            this.currentProgressiveAwardsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class AbortVoucherRedemptionSend : SendTransactionalMessage {
    
    private string validationNumberField;
    
    private VoucherType voucherTypeField;
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public VoucherType VoucherType {
        get {
            return this.voucherTypeField;
        }
        set {
            this.voucherTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionResponseSend : SendTransactionalMessage {
    
    private string validationNumberField;
    
    private VoucherType voucherTypeField;
    
    private bool successField;
    
    private VoucherRedemptionInfo voucherRedemptionInfoField;
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public VoucherType VoucherType {
        get {
            return this.voucherTypeField;
        }
        set {
            this.voucherTypeField = value;
        }
    }
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
    
    /// <remarks/>
    public VoucherRedemptionInfo VoucherRedemptionInfo {
        get {
            return this.voucherRedemptionInfoField;
        }
        set {
            this.voucherRedemptionInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionRequestSend : SendTransactionalMessage {
    
    private string validationNumberField;
    
    private VoucherType voucherTypeField;
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public VoucherType VoucherType {
        get {
            return this.voucherTypeField;
        }
        set {
            this.voucherTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherReviewResponseSend : SendTransactionalMessage {
    
    private string validationNumberField;
    
    private VoucherType voucherTypeField;
    
    private bool successField;
    
    private VoucherRedemptionInfo voucherRedemptionInfoField;
    
    private string messageField;
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public VoucherType VoucherType {
        get {
            return this.voucherTypeField;
        }
        set {
            this.voucherTypeField = value;
        }
    }
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
    
    /// <remarks/>
    public VoucherRedemptionInfo VoucherRedemptionInfo {
        get {
            return this.voucherRedemptionInfoField;
        }
        set {
            this.voucherRedemptionInfoField = value;
        }
    }
    
    /// <remarks/>
    public string Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherReviewRequestSend : SendTransactionalMessage {
    
    private string validationNumberField;
    
    private VoucherType voucherTypeField;
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public VoucherType VoucherType {
        get {
            return this.voucherTypeField;
        }
        set {
            this.voucherTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class SetVoucherRedemptionRegistrationsSend : SendTransactionalMessage {
    
    private List<VoucherRedemptionRegistrationType> voucherRedemptionRegistrationsField = new List<VoucherRedemptionRegistrationType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("VoucherRedemptionRegistration", IsNullable=false)]
    public List<VoucherRedemptionRegistrationType> VoucherRedemptionRegistrations {
        get {
            return this.voucherRedemptionRegistrationsField;
        }
        set {
            this.voucherRedemptionRegistrationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="PlayerCashoutRequestSend", Namespace="F2XVKBingoVer1.xsd")]
public partial class PlayerCashoutRequestSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DisplayStateChangedSend", Namespace="F2XVKBingoVer1.xsd")]
public partial class DisplayStateChangedSend : SendTransactionalMessage {
    
    private DisplayControlState displayStateField;
    
    /// <remarks/>
    public DisplayControlState DisplayState {
        get {
            return this.displayStateField;
        }
        set {
            this.displayStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DisplayControlState", Namespace="F2XVKBingoVer1.xsd")]
public enum DisplayControlState {
    
    /// <remarks/>
    Hidden,
    
    /// <remarks/>
    Suspended,
    
    /// <remarks/>
    Normal,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class UnLockResponseSend : SendTransactionalMessage {
    
    private string accountNumberField;
    
    private UnLockingReason reasonField;
    
    private bool successField;
    
    /// <remarks/>
    public string AccountNumber {
        get {
            return this.accountNumberField;
        }
        set {
            this.accountNumberField = value;
        }
    }
    
    /// <remarks/>
    public UnLockingReason Reason {
        get {
            return this.reasonField;
        }
        set {
            this.reasonField = value;
        }
    }
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public enum UnLockingReason {
    
    /// <remarks/>
    Timeout,
    
    /// <remarks/>
    PerPlayerRequest,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class RequestUnLockSend : SendTransactionalMessage {
    
    private UnLockingReason reasonField;
    
    private string accountNumberField;
    
    /// <remarks/>
    public UnLockingReason Reason {
        get {
            return this.reasonField;
        }
        set {
            this.reasonField = value;
        }
    }
    
    /// <remarks/>
    public string AccountNumber {
        get {
            return this.accountNumberField;
        }
        set {
            this.accountNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class LockOutResponseSend : SendTransactionalMessage {
    
    private string accountNumberField;
    
    private bool successField;
    
    /// <remarks/>
    public string AccountNumber {
        get {
            return this.accountNumberField;
        }
        set {
            this.accountNumberField = value;
        }
    }
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class RequestLockOutSend : SendTransactionalMessage {
    
    private string accountNumberField;
    
    /// <remarks/>
    public string AccountNumber {
        get {
            return this.accountNumberField;
        }
        set {
            this.accountNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class GamePlayEndMeteringResponseSend : SendTransactionalMessage {
    
    private GamePlayEndMeteringResponseType statusField;
    
    /// <remarks/>
    public GamePlayEndMeteringResponseType Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public enum GamePlayEndMeteringResponseType {
    
    /// <remarks/>
    Completed,
    
    /// <remarks/>
    Error,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class RequestGamePlayEndMeteringSend : SendTransactionalMessage {
    
    private GamePlayOutcomeType winStatusField;
    
    private Amount amountField;
    
    /// <remarks/>
    public GamePlayOutcomeType WinStatus {
        get {
            return this.winStatusField;
        }
        set {
            this.winStatusField = value;
        }
    }
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public enum GamePlayOutcomeType {
    
    /// <remarks/>
    Lose,
    
    /// <remarks/>
    Win,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class PlacePurchaseSend : SendTransactionalMessage {
    
    private PurchaseRequestState requestStateField;
    
    private Amount amountField;
    
    /// <remarks/>
    public PurchaseRequestState RequestState {
        get {
            return this.requestStateField;
        }
        set {
            this.requestStateField = value;
        }
    }
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public enum PurchaseRequestState {
    
    /// <remarks/>
    Reserve,
    
    /// <remarks/>
    Commit,
    
    /// <remarks/>
    Rollback,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmApiControlVer1.xsd")]
public partial class SetTsmApiVersionsSend : SendTransactionalMessage {
    
    private SetTsmApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetTsmApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTsmApiControlVer1.xsd")]
public partial class SetTsmApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmApiControlVer1.xsd")]
public partial class GetTsmApiVersionsSend : SendTransactionalMessage {
    
    private TsmIdentifier tsmField;
    
    private List<Extension> extensionsField = new List<Extension>();
    
    /// <remarks/>
    public TsmIdentifier Tsm {
        get {
            return this.tsmField;
        }
        set {
            this.tsmField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="F2XTypesVer1.xsd", IsNullable=false)]
    public List<Extension> Extensions {
        get {
            return this.extensionsField;
        }
        set {
            this.extensionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmActivationVer1.xsd")]
public partial class InactivateTsmContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmActivationVer1.xsd")]
public partial class ActivateTsmContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmActivationVer1.xsd")]
public partial class NewTsmContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="RemoveCritDataSend", Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class RemoveCritDataSend : SendTransactionalMessage {
    
    private List<CriticalDataItemSelector> criticalDataItemsField = new List<CriticalDataItemSelector>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<CriticalDataItemSelector> CriticalDataItems {
        get {
            return this.criticalDataItemsField;
        }
        set {
            this.criticalDataItemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="WriteCritDataSend", Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class WriteCritDataSend : SendTransactionalMessage {
    
    private WriteCritDataSendContent writeCritDataContentField;
    
    /// <remarks/>
    public WriteCritDataSendContent WriteCritDataContent {
        get {
            return this.writeCritDataContentField;
        }
        set {
            this.writeCritDataContentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ReadCritDataSend", Namespace="F2XTransactionalCritDataReadVer1.xsd")]
public partial class ReadCritDataSend : SendTransactionalMessage {
    
    private List<CriticalDataItemSelector> criticalDataItemSelectorField = new List<CriticalDataItemSelector>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CriticalDataItemSelector")]
    public List<CriticalDataItemSelector> CriticalDataItemSelector {
        get {
            return this.criticalDataItemSelectorField;
        }
        set {
            this.criticalDataItemSelectorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionResetSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionCompleteSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class FinishSessionSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionStartSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class ResetSessionRequestSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class StartSessionRequestSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class SessionConfigurationChangedSend : SendTransactionalMessage {
    
    private SessionConfiguration configurationField;
    
    /// <remarks/>
    public SessionConfiguration Configuration {
        get {
            return this.configurationField;
        }
        set {
            this.configurationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class GetConfigDataSessionInitiatorSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class QuerySessionInformationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class GetTournamentPlayerMetersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCreditsSetSend : SendTransactionalMessage {
    
    private TournamentPlayerMeters playerMetersField;
    
    /// <remarks/>
    public TournamentPlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCreditsWonSend : SendTransactionalMessage {
    
    private Amount amountWonField;
    
    private TournamentPlayerMeters playerMetersField;
    
    /// <remarks/>
    public Amount AmountWon {
        get {
            return this.amountWonField;
        }
        set {
            this.amountWonField = value;
        }
    }
    
    /// <remarks/>
    public TournamentPlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCommittedCreditsChangedSend : SendTransactionalMessage {
    
    private Amount amountCommittedField;
    
    private TournamentPlayerMeters playerMetersField;
    
    /// <remarks/>
    public Amount AmountCommitted {
        get {
            return this.amountCommittedField;
        }
        set {
            this.amountCommittedField = value;
        }
    }
    
    /// <remarks/>
    public TournamentPlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentCreditsBetSend : SendTransactionalMessage {
    
    private Amount amountBetField;
    
    private TournamentPlayerMeters playerMetersField;
    
    /// <remarks/>
    public Amount AmountBet {
        get {
            return this.amountBetField;
        }
        set {
            this.amountBetField = value;
        }
    }
    
    /// <remarks/>
    public TournamentPlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class TiltClearedByAttendantSend : SendTransactionalMessage {
    
    private string tiltNameField;
    
    /// <remarks/>
    public string TiltName {
        get {
            return this.tiltNameField;
        }
        set {
            this.tiltNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class RequestClearTiltSend : SendTransactionalMessage {
    
    private string tiltNameField;
    
    /// <remarks/>
    public string TiltName {
        get {
            return this.tiltNameField;
        }
        set {
            this.tiltNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class RequestTiltSend : SendTransactionalMessage {
    
    private string tiltNameField;
    
    private List<TiltLocalization> tiltLocalizationsField = new List<TiltLocalization>();
    
    private List<TiltAttribute> tiltAttributesField = new List<TiltAttribute>();
    
    /// <remarks/>
    public string TiltName {
        get {
            return this.tiltNameField;
        }
        set {
            this.tiltNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TiltLocalizations")]
    public List<TiltLocalization> TiltLocalizations {
        get {
            return this.tiltLocalizationsField;
        }
        set {
            this.tiltLocalizationsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TiltAttributes")]
    public List<TiltAttribute> TiltAttributes {
        get {
            return this.tiltAttributesField;
        }
        set {
            this.tiltAttributesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public enum TiltAttribute {
    
    /// <remarks/>
    PreventGamePlay,
    
    /// <remarks/>
    NotifyProtocols,
    
    /// <remarks/>
    ProgressiveLinkDown,
    
    /// <remarks/>
    AttendantClear,
    
    /// <remarks/>
    DelayPreventGamePlayUntilNoGameInProgress,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class NotificationRegistrationSend : SendTransactionalMessage {
    
    private List<NotificationOriginType> settingsField = new List<NotificationOriginType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("NotificationSettings", IsNullable=false)]
    public List<NotificationOriginType> Settings {
        get {
            return this.settingsField;
        }
        set {
            this.settingsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public enum NotificationOriginType {
    
    /// <remarks/>
    All,
    
    /// <remarks/>
    Myself,
    
    /// <remarks/>
    OtherClients,
    
    /// <remarks/>
    Foundation,
    
    /// <remarks/>
    Configuration,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class PrinterEnabledStatusChangedSend : SendTransactionalMessage {
    
    private bool printerEnabledField;
    
    /// <remarks/>
    public bool PrinterEnabled {
        get {
            return this.printerEnabledField;
        }
        set {
            this.printerEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class AbortTicketPrintSend : SendTransactionalMessage {
    
    private uint ticketIdField;
    
    /// <remarks/>
    public uint TicketId {
        get {
            return this.ticketIdField;
        }
        set {
            this.ticketIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class TicketStatusChangedSend : SendTransactionalMessage {
    
    private uint ticketIdField;
    
    private bool ticketIdFieldSpecified;
    
    private TicketStatus ticketStatusField;
    
    private Amount valueField;
    
    /// <remarks/>
    public uint TicketId {
        get {
            return this.ticketIdField;
        }
        set {
            this.ticketIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool TicketIdSpecified {
        get {
            return this.ticketIdFieldSpecified;
        }
        set {
            this.ticketIdFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public TicketStatus TicketStatus {
        get {
            return this.ticketStatusField;
        }
        set {
            this.ticketStatusField = value;
        }
    }
    
    /// <remarks/>
    public Amount Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class QueryTicketStatusSend : SendTransactionalMessage {
    
    private uint ticketIdField;
    
    /// <remarks/>
    public uint TicketId {
        get {
            return this.ticketIdField;
        }
        set {
            this.ticketIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class PrintTicketSend : SendTransactionalMessage {
    
    private TicketInformation ticketInformationField;
    
    /// <remarks/>
    public TicketInformation TicketInformation {
        get {
            return this.ticketInformationField;
        }
        set {
            this.ticketInformationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class QueryPrintingSupportSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd")]
public partial class QueryDisplayedThemeSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd")]
public partial class DisplayedThemeChangedSend : SendTransactionalMessage {
    
    private DisplayedTheme themeField;
    
    /// <remarks/>
    public DisplayedTheme Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemedHandpay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemedHandpayVer1.xsd")]
public partial class QueryHandpayLockupStatusSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemedHandpay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemedHandpayVer1.xsd")]
public partial class HandpayLockupStatusChangedSend : SendTransactionalMessage {
    
    private bool isLockedField;
    
    /// <remarks/>
    public bool isLocked {
        get {
            return this.isLockedField;
        }
        set {
            this.isLockedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeSwitchCancelledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class GetPayvarInfoSend : SendTransactionalMessage {
    
    private List<uint> denomField = new List<uint>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denom")]
    public List<uint> Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeSwitchRequestSend : SendTransactionalMessage {
    
    private ThemeSelector themeSelectorField;
    
    private ThemeSwitchBehavior themeSwitchBehaviorField;
    
    /// <remarks/>
    public ThemeSelector ThemeSelector {
        get {
            return this.themeSelectorField;
        }
        set {
            this.themeSelectorField = value;
        }
    }
    
    /// <remarks/>
    public ThemeSwitchBehavior ThemeSwitchBehavior {
        get {
            return this.themeSwitchBehaviorField;
        }
        set {
            this.themeSwitchBehaviorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetSelectableThemesSend", Namespace="F2XThemeControlVer1.xsd")]
public partial class GetSelectableThemesSend : SendTransactionalMessage {
    
    private ThemeFilter filterField;
    
    /// <remarks/>
    public ThemeFilter Filter {
        get {
            return this.filterField;
        }
        set {
            this.filterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public enum ThemeFilter {
    
    /// <remarks/>
    All,
    
    /// <remarks/>
    SameBin,
    
    /// <remarks/>
    SamePackage,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeApiControlVer1.xsd")]
public partial class SetThemeApiVersionsSend : SendTransactionalMessage {
    
    private SetThemeApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetThemeApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeApiControlVer1.xsd")]
public partial class SetThemeApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeApiControlVer1.xsd")]
public partial class GetThemeApiVersionsSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    private List<Extension> extensionsField = new List<Extension>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="F2XTypesVer1.xsd", IsNullable=false)]
    public List<Extension> Extensions {
        get {
            return this.extensionsField;
        }
        set {
            this.extensionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class SwitchThemeContextSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    private PayvarIdentifier payvarField;
    
    private uint denominationField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class InactivateThemeContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class ActivateThemeContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class NewThemeContextSend : SendTransactionalMessage {
    
    private PayvarIdentifier payvarField;
    
    private uint denominationField;
    
    private GameMode gameModeField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    public GameMode GameMode {
        get {
            return this.gameModeField;
        }
        set {
            this.gameModeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameMode", Namespace="F2XThemeActivationVer1.xsd")]
public enum GameMode {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Play,
    
    /// <remarks/>
    History,
    
    /// <remarks/>
    Utility,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemApiControlVer1.xsd")]
public partial class SetSystemApiVersionsSend : SendTransactionalMessage {
    
    private SetSystemApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetSystemApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSystemApiControlVer1.xsd")]
public partial class SetSystemApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemApiControlVer1.xsd")]
public partial class GetSystemApiVersionsSend : SendTransactionalMessage {
    
    private List<Extension> extensionsField = new List<Extension>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="F2XTypesVer1.xsd", IsNullable=false)]
    public List<Extension> Extensions {
        get {
            return this.extensionsField;
        }
        set {
            this.extensionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemActivationVer1.xsd")]
public partial class InactivateSystemContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemActivationVer1.xsd")]
public partial class ActivateSystemContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemActivationVer1.xsd")]
public partial class NewSystemContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class CommitSportsBetReserveSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class ReserveSportsBetSend : SendTransactionalMessage {
    
    private Amount amountField;
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingReserveSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class EndSportsBettingGamingCycleSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class CommitSportsBettingGamingCycleSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingGamingCycleStateSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class GetSportsBettingPropertiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public partial class GetShowDemoPropertiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetThemeInformationSend", Namespace="F2XShellThemeControlVer1.xsd")]
public partial class GetThemeInformationSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeIdentifierField;
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellThemeControlVer1.xsd")]
public partial class GetSelectableThemesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellThemeControlVer1.xsd")]
public partial class SwitchThemeSend : SendTransactionalMessage {
    
    private int coplayerField;
    
    private ThemeSelector themeSelectorField;
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    public ThemeSelector ThemeSelector {
        get {
            return this.themeSelectorField;
        }
        set {
            this.themeSelectorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class LogEndGameCycleSend : SendTransactionalMessage {
    
    private int coplayerField;
    
    private uint numberOfStepsField;
    
    private GamingMeters gamingMetersField;
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    public uint NumberOfSteps {
        get {
            return this.numberOfStepsField;
        }
        set {
            this.numberOfStepsField = value;
        }
    }
    
    /// <remarks/>
    public GamingMeters GamingMeters {
        get {
            return this.gamingMetersField;
        }
        set {
            this.gamingMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class RemoveCritDataSend : SendTransactionalMessage {
    
    private int coplayerField;
    
    private List<string> criticalDataItemsField = new List<string>();
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Key", IsNullable=false)]
    public List<string> CriticalDataItems {
        get {
            return this.criticalDataItemsField;
        }
        set {
            this.criticalDataItemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class WriteCritDataSend : SendTransactionalMessage {
    
    private int coplayerField;
    
    private List<CriticalDataItemListItem> criticalDataItemsField = new List<CriticalDataItemListItem>();
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Item", IsNullable=false)]
    public List<CriticalDataItemListItem> CriticalDataItems {
        get {
            return this.criticalDataItemsField;
        }
        set {
            this.criticalDataItemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class CriticalDataItemListItem {
    
    private string keyField;
    
    private byte[] valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="base64Binary")]
    public byte[] Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ReadCritDataSend", Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class ReadCritDataSend : SendTransactionalMessage {
    
    private int coplayerField;
    
    private List<string> readKeysField = new List<string>();
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Key", IsNullable=false)]
    public List<string> ReadKeys {
        get {
            return this.readKeysField;
        }
        set {
            this.readKeysField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class GetShellHistoryWritePermittedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ReadCritDataSend", Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class ReadCritDataSend : SendTransactionalMessage {
    
    private List<string> readKeysField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Key", IsNullable=false)]
    public List<string> ReadKeys {
        get {
            return this.readKeysField;
        }
        set {
            this.readKeysField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class BindCoplayerSessionToHistorySend : SendTransactionalMessage {
    
    private int sessionField;
    
    /// <remarks/>
    public int Session {
        get {
            return this.sessionField;
        }
        set {
            this.sessionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class GetHistoryContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class SetShellApiVersionsSend : SendTransactionalMessage {
    
    private SetShellApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetShellApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellApiControlVer1.xsd")]
public partial class SetShellApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class GetShellApiVersionsSend : SendTransactionalMessage {
    
    private ShellIdentifier shellField;
    
    private GetShellApiVersionsSendTagDataFile tagDataFileField;
    
    private GetShellApiVersionsSendLinkedExtensions linkedExtensionsField;
    
    /// <remarks/>
    public ShellIdentifier Shell {
        get {
            return this.shellField;
        }
        set {
            this.shellField = value;
        }
    }
    
    /// <remarks/>
    public GetShellApiVersionsSendTagDataFile TagDataFile {
        get {
            return this.tagDataFileField;
        }
        set {
            this.tagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public GetShellApiVersionsSendLinkedExtensions LinkedExtensions {
        get {
            return this.linkedExtensionsField;
        }
        set {
            this.linkedExtensionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellApiControlVer1.xsd")]
public partial class GetShellApiVersionsSendTagDataFile {
    
    private string tagField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Tag {
        get {
            return this.tagField;
        }
        set {
            this.tagField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute(DataType="anyURI")]
    public string Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellApiControlVer1.xsd")]
public partial class GetShellApiVersionsSendLinkedExtensions {
    
    private List<LinkedExtension> linkedExtensionField = new List<LinkedExtension>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LinkedExtension")]
    public List<LinkedExtension> LinkedExtension {
        get {
            return this.linkedExtensionField;
        }
        set {
            this.linkedExtensionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public partial class InactivateShellContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public partial class ActivateShellContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public partial class NewShellContextSend : SendTransactionalMessage {
    
    private GameMode gameModeField;
    
    private SecurityLevelType securityLevelField;
    
    /// <remarks/>
    public GameMode GameMode {
        get {
            return this.gameModeField;
        }
        set {
            this.gameModeField = value;
        }
    }
    
    /// <remarks/>
    public SecurityLevelType SecurityLevel {
        get {
            return this.securityLevelField;
        }
        set {
            this.securityLevelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameMode", Namespace="F2XShellActivationVer1.xsd")]
public enum GameMode {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Play,
    
    /// <remarks/>
    History,
    
    /// <remarks/>
    Utility,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public enum SecurityLevelType {
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-none")]
    securitynone,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-attendant")]
    securityattendant,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-operator")]
    securityoperator,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("security-ekey")]
    securityekey,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public partial class ValidateThemeSetupSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class LaunchSessionSend : SendTransactionalMessage {
    
    private int sessionField;
    
    /// <remarks/>
    public int Session {
        get {
            return this.sessionField;
        }
        set {
            this.sessionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class DestroySessionSend : SendTransactionalMessage {
    
    private int sessionField;
    
    /// <remarks/>
    public int Session {
        get {
            return this.sessionField;
        }
        set {
            this.sessionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class CreateSessionSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetGamePropertiesSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    private List<string> sectionField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Section")]
    public List<string> Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetSelectedAppSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetSelectedAppSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AvailableAppsChangedSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class AvailableAppsChangedSend : SendTransactionalMessage {
    
    private List<ThemeInfo> themesField = new List<ThemeInfo>();
    
    private List<ShellInfo> shellsField = new List<ShellInfo>();
    
    private List<CoThemeInfo> coThemesField = new List<CoThemeInfo>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Theme", IsNullable=false)]
    public List<ThemeInfo> Themes {
        get {
            return this.themesField;
        }
        set {
            this.themesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Shell", IsNullable=false)]
    public List<ShellInfo> Shells {
        get {
            return this.shellsField;
        }
        set {
            this.shellsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("CoTheme", IsNullable=false)]
    public List<CoThemeInfo> CoThemes {
        get {
            return this.coThemesField;
        }
        set {
            this.coThemesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAvailableAppsSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetAvailableAppsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DisplayStateChangedSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DisplayStateChangedSend : SendTransactionalMessage {
    
    private DisplayState displayStateField;
    
    /// <remarks/>
    public DisplayState DisplayState {
        get {
            return this.displayStateField;
        }
        set {
            this.displayStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public enum DisplayState {
    
    /// <remarks/>
    Hidden,
    
    /// <remarks/>
    Normal,
    
    /// <remarks/>
    Suspended,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AppRequestedSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class AppRequestedSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    private ShellIdentifier shellField;
    
    private uint denomField;
    
    private bool requiredField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public ShellIdentifier Shell {
        get {
            return this.shellField;
        }
        set {
            this.shellField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    public bool Required {
        get {
            return this.requiredField;
        }
        set {
            this.requiredField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ChooserRequestedSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class ChooserRequestedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AppStateChangedSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class AppStateChangedSend : SendTransactionalMessage {
    
    private AppState stateField;
    
    /// <remarks/>
    public AppState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetDefaultAppSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetDefaultAppSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DisplayShellSend : SendTransactionalMessage {
    
    private ShellIdentifier shellField;
    
    private uint denomField;
    
    private DisplayState displayStateField;
    
    /// <remarks/>
    public ShellIdentifier Shell {
        get {
            return this.shellField;
        }
        set {
            this.shellField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    public DisplayState DisplayState {
        get {
            return this.displayStateField;
        }
        set {
            this.displayStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class DisplayThemeSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    private uint denomField;
    
    private DisplayState displayStateField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    public DisplayState DisplayState {
        get {
            return this.displayStateField;
        }
        set {
            this.displayStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetChooserOfferableSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class SetChooserOfferableSend : SendTransactionalMessage {
    
    private bool offerableField;
    
    /// <remarks/>
    public bool Offerable {
        get {
            return this.offerableField;
        }
        set {
            this.offerableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppStateSend", Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetAppStateSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class GetThemePerformanceMetersSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    private int periodInWeeksField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public int PeriodInWeeks {
        get {
            return this.periodInWeeksField;
        }
        set {
            this.periodInWeeksField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GetRuntimeGameEventsConfigurationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GameBetMeterKeysUpdateSend : SendTransactionalMessage {
    
    private string horizontalKeyField;
    
    private string verticalKeyField;
    
    /// <remarks/>
    public string HorizontalKey {
        get {
            return this.horizontalKeyField;
        }
        set {
            this.horizontalKeyField = value;
        }
    }
    
    /// <remarks/>
    public string VerticalKey {
        get {
            return this.verticalKeyField;
        }
        set {
            this.verticalKeyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GameBetMeterUpdateSend : SendTransactionalMessage {
    
    private Amount betPerLineField;
    
    private uint selectedLinesField;
    
    /// <remarks/>
    public Amount BetPerLine {
        get {
            return this.betPerLineField;
        }
        set {
            this.betPerLineField = value;
        }
    }
    
    /// <remarks/>
    public uint SelectedLines {
        get {
            return this.selectedLinesField;
        }
        set {
            this.selectedLinesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class GameSelectionStatusUpdateSend : SendTransactionalMessage {
    
    private bool activeField;
    
    /// <remarks/>
    public bool Active {
        get {
            return this.activeField;
        }
        set {
            this.activeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class PlayerChoiceUpdateSend : SendTransactionalMessage {
    
    private uint playerChoiceIndexField;
    
    /// <remarks/>
    public uint PlayerChoiceIndex {
        get {
            return this.playerChoiceIndexField;
        }
        set {
            this.playerChoiceIndexField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class WaitingForGenericInputStatusUpdateSend : SendTransactionalMessage {
    
    private bool waitingForInputField;
    
    /// <remarks/>
    public bool WaitingForInput {
        get {
            return this.waitingForInputField;
        }
        set {
            this.waitingForInputField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ResponsibleGamingSessionDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XResponsibleGamingSessionDisplayVer1.xsd")]
public partial class RequestDisplaySessionInfoSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGamePerformance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGamePerformanceVer1.xsd")]
public partial class GetPerformanceReportSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    private PayvarIdentifier payvarField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetMinimumPlayableCreditBalanceSend : SendTransactionalMessage {
    
    private MinimumPlayableCreditBalanceRequestList minimumPlayableCreditBalanceRequestListField;
    
    /// <remarks/>
    public MinimumPlayableCreditBalanceRequestList MinimumPlayableCreditBalanceRequestList {
        get {
            return this.minimumPlayableCreditBalanceRequestListField;
        }
        set {
            this.minimumPlayableCreditBalanceRequestListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetInspectionReportTypeSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetHtmlInspectionReportSend : SendTransactionalMessage {
    
    private string cultureField;
    
    private List<ThemeInfo> themeInfoListField = new List<ThemeInfo>();
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ThemeInfo> ThemeInfoList {
        get {
            return this.themeInfoListField;
        }
        set {
            this.themeInfoListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class GetInspectionReportSend : SendTransactionalMessage {
    
    private string cultureField;
    
    private ThemeIdentifier themeField;
    
    private PayvarIdentifier payvarField;
    
    private uint denominationField;
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class GetListLimitedRandomNumbersSend : SendTransactionalMessage {
    
    private string nameField;
    
    private List<GetListLimitedRandomNumbersSendRange> rangeListField = new List<GetListLimitedRandomNumbersSendRange>();
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Range", IsNullable=false)]
    public List<GetListLimitedRandomNumbersSendRange> RangeList {
        get {
            return this.rangeListField;
        }
        set {
            this.rangeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class GetListLimitedRandomNumbersSendRange {
    
    private int minimumValueField;
    
    private int maximumValueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public int MinimumValue {
        get {
            return this.minimumValueField;
        }
        set {
            this.minimumValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public int MaximumValue {
        get {
            return this.maximumValueField;
        }
        set {
            this.maximumValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class GetRandomNumbersSend : SendTransactionalMessage {
    
    private uint countField;
    
    private uint duplicatesField;
    
    private int minimumValueField;
    
    private int maximumValueField;
    
    private string nameField;
    
    private List<int> alreadyPickedNumbersField = new List<int>();
    
    /// <remarks/>
    public uint Count {
        get {
            return this.countField;
        }
        set {
            this.countField = value;
        }
    }
    
    /// <remarks/>
    public uint Duplicates {
        get {
            return this.duplicatesField;
        }
        set {
            this.duplicatesField = value;
        }
    }
    
    /// <remarks/>
    public int MinimumValue {
        get {
            return this.minimumValueField;
        }
        set {
            this.minimumValueField = value;
        }
    }
    
    /// <remarks/>
    public int MaximumValue {
        get {
            return this.maximumValueField;
        }
        set {
            this.maximumValueField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("RandomNumber", IsNullable=false)]
    public List<int> AlreadyPickedNumbers {
        get {
            return this.alreadyPickedNumbersField;
        }
        set {
            this.alreadyPickedNumbersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryEnabledPayvarBasedProgressiveSettingsSend : SendTransactionalMessage {
    
    private PayvarIdentifier payvarField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryPayvarBasedProgressiveSettingsSend : SendTransactionalMessage {
    
    private PayvarIdentifier payvarField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryEnabledThemeBasedProgressiveSettingsSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class QueryThemeBasedProgressiveSettingsSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerTippingVer1.xsd")]
public partial class TippingResponseSend : SendTransactionalMessage {
    
    private string templateTypeField;
    
    private string validationNumberField;
    
    private string address1Field;
    
    private string address2Field;
    
    private string address3Field;
    
    private string ticketTitleField;
    
    private string validationLabelField;
    
    private string formattedValidationNumberField;
    
    private string ticketDateField;
    
    private string ticketTimeField;
    
    private string formattedTicketNumberField;
    
    private string formattedMoneyText1Field;
    
    private string formattedMoneyText2Field;
    
    private string formattedNumericAmountField;
    
    private string expirationField;
    
    private string machineIdField;
    
    private string formattedValidationNumber2Field;
    
    private string manualAuthenticationNumberField;
    
    private string manualAuthentication2DBarcodeField;
    
    /// <remarks/>
    public string TemplateType {
        get {
            return this.templateTypeField;
        }
        set {
            this.templateTypeField = value;
        }
    }
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public string Address1 {
        get {
            return this.address1Field;
        }
        set {
            this.address1Field = value;
        }
    }
    
    /// <remarks/>
    public string Address2 {
        get {
            return this.address2Field;
        }
        set {
            this.address2Field = value;
        }
    }
    
    /// <remarks/>
    public string Address3 {
        get {
            return this.address3Field;
        }
        set {
            this.address3Field = value;
        }
    }
    
    /// <remarks/>
    public string TicketTitle {
        get {
            return this.ticketTitleField;
        }
        set {
            this.ticketTitleField = value;
        }
    }
    
    /// <remarks/>
    public string ValidationLabel {
        get {
            return this.validationLabelField;
        }
        set {
            this.validationLabelField = value;
        }
    }
    
    /// <remarks/>
    public string FormattedValidationNumber {
        get {
            return this.formattedValidationNumberField;
        }
        set {
            this.formattedValidationNumberField = value;
        }
    }
    
    /// <remarks/>
    public string TicketDate {
        get {
            return this.ticketDateField;
        }
        set {
            this.ticketDateField = value;
        }
    }
    
    /// <remarks/>
    public string TicketTime {
        get {
            return this.ticketTimeField;
        }
        set {
            this.ticketTimeField = value;
        }
    }
    
    /// <remarks/>
    public string FormattedTicketNumber {
        get {
            return this.formattedTicketNumberField;
        }
        set {
            this.formattedTicketNumberField = value;
        }
    }
    
    /// <remarks/>
    public string FormattedMoneyText1 {
        get {
            return this.formattedMoneyText1Field;
        }
        set {
            this.formattedMoneyText1Field = value;
        }
    }
    
    /// <remarks/>
    public string FormattedMoneyText2 {
        get {
            return this.formattedMoneyText2Field;
        }
        set {
            this.formattedMoneyText2Field = value;
        }
    }
    
    /// <remarks/>
    public string FormattedNumericAmount {
        get {
            return this.formattedNumericAmountField;
        }
        set {
            this.formattedNumericAmountField = value;
        }
    }
    
    /// <remarks/>
    public string Expiration {
        get {
            return this.expirationField;
        }
        set {
            this.expirationField = value;
        }
    }
    
    /// <remarks/>
    public string MachineId {
        get {
            return this.machineIdField;
        }
        set {
            this.machineIdField = value;
        }
    }
    
    /// <remarks/>
    public string FormattedValidationNumber2 {
        get {
            return this.formattedValidationNumber2Field;
        }
        set {
            this.formattedValidationNumber2Field = value;
        }
    }
    
    /// <remarks/>
    public string ManualAuthenticationNumber {
        get {
            return this.manualAuthenticationNumberField;
        }
        set {
            this.manualAuthenticationNumberField = value;
        }
    }
    
    /// <remarks/>
    public string ManualAuthentication2DBarcode {
        get {
            return this.manualAuthentication2DBarcodeField;
        }
        set {
            this.manualAuthentication2DBarcodeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerTippingVer1.xsd")]
public partial class TippingRequestSend : SendTransactionalMessage {
    
    private Amount amountField;
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetPropertiesSend", Namespace="F2XPlayerTippingVer1.xsd")]
public partial class GetPropertiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class GetConfigDataSessionTimerDisplayEnabledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class QueryPlayerSessionStatusSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class PlayerSessionStatusChangedSend : SendTransactionalMessage {
    
    private PlayerSessionStatusData playerSessionStatusField;
    
    /// <remarks/>
    public PlayerSessionStatusData PlayerSessionStatus {
        get {
            return this.playerSessionStatusField;
        }
        set {
            this.playerSessionStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class ParametersResetSend : SendTransactionalMessage {
    
    private List<SessionParameterType> resetParametersField = new List<SessionParameterType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Parameter", IsNullable=false)]
    public List<SessionParameterType> ResetParameters {
        get {
            return this.resetParametersField;
        }
        set {
            this.resetParametersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class CurrentResetParametersChangedSend : SendTransactionalMessage {
    
    private List<SessionParameterType> pendingParametersField = new List<SessionParameterType>();
    
    private List<SessionParameterType> resetParametersField = new List<SessionParameterType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Parameter", IsNullable=false)]
    public List<SessionParameterType> PendingParameters {
        get {
            return this.pendingParametersField;
        }
        set {
            this.pendingParametersField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Parameter", IsNullable=false)]
    public List<SessionParameterType> ResetParameters {
        get {
            return this.resetParametersField;
        }
        set {
            this.resetParametersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class QueryCurrentResetParametersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class GetConfigDataPlayerSessionParameterResetEnabledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class SessionInformationScreenEnteredSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class GameInformationScreenEnteredSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class ActivationStatusChangedSend : SendTransactionalMessage {
    
    private bool isActiveField;
    
    /// <remarks/>
    public bool IsActive {
        get {
            return this.isActiveField;
        }
        set {
            this.isActiveField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class GetPidConfigurationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerControlContextMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerControlContextMonitoringVer1.xsd")]
public partial class PlayerControlContextStateUpdateSend : SendTransactionalMessage {
    
    private PlayerControlContextState playerControlContextStateField;
    
    /// <remarks/>
    public PlayerControlContextState PlayerControlContextState {
        get {
            return this.playerControlContextStateField;
        }
        set {
            this.playerControlContextStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerControlContextMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerControlContextMonitoringVer1.xsd")]
public enum PlayerControlContextState {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Normal,
    
    /// <remarks/>
    Suspended,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class SetCardAcceptanceStatusSend : SendTransactionalMessage {
    
    private bool acceptedField;
    
    /// <remarks/>
    public bool Accepted {
        get {
            return this.acceptedField;
        }
        set {
            this.acceptedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class CardRemovedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class CardInsertedSend : SendTransactionalMessage {
    
    private List<Track> tracksField = new List<Track>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<Track> Tracks {
        get {
            return this.tracksField;
        }
        set {
            this.tracksField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class StopTrackingSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class StartTrackingSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class GetSessionDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PerformCashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPerformCashoutVer1.xsd")]
public partial class PerformCashoutResponseSend : SendTransactionalMessage {
    
    private bool successField;
    
    private string failureReasonField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
    
    /// <remarks/>
    public string FailureReason {
        get {
            return this.failureReasonField;
        }
        set {
            this.failureReasonField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PerformCashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPerformCashoutVer1.xsd")]
public partial class PerformCashoutRequestSend : SendTransactionalMessage {
    
    private Amount amountField;
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class TransParcelCallRxSend : SendTransactionalMessage {
    
    private RequestParcel parcelField;
    
    /// <remarks/>
    public RequestParcel Parcel {
        get {
            return this.parcelField;
        }
        set {
            this.parcelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class TransParcelCallTxSend : SendTransactionalMessage {
    
    private RequestParcel parcelField;
    
    /// <remarks/>
    public RequestParcel Parcel {
        get {
            return this.parcelField;
        }
        set {
            this.parcelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class GetPrioritizedIPListSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class GetIPAddressForHostConnectionSend : SendTransactionalMessage {
    
    private string hostIPAddressField;
    
    /// <remarks/>
    public string HostIPAddress {
        get {
            return this.hostIPAddressField;
        }
        set {
            this.hostIPAddressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class NetworkSettingsChangedSend : SendTransactionalMessage {
    
    private PrioritizedIPList contentField = new PrioritizedIPList();
    
    /// <remarks/>
    public PrioritizedIPList Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class AddIpv4RoutingTableEntrySend : SendTransactionalMessage {
    
    private Ipv4RoutingTableEntry ipv4RoutingTableEntryField;
    
    /// <remarks/>
    public Ipv4RoutingTableEntry Ipv4RoutingTableEntry {
        get {
            return this.ipv4RoutingTableEntryField;
        }
        set {
            this.ipv4RoutingTableEntryField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class GetNicInformationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class EndOfferingMidGameMoneyAcceptanceSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class OfferingMidGameMoneyAcceptanceResponseSend : SendTransactionalMessage {
    
    private bool enabledField;
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class RequestOfferingMidGameMoneyAcceptanceSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class GetMessagesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineFloorLocationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineAssetNumberSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataG2SMachineIdentifierSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class GetConfigDataMachineSerialNumberSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class QueryLanguageIconsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class GetTimeOfDayFormatSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class GetCreditFormatterInfoSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusHostLinkStatusChangedSend : SendTransactionalMessage {
    
    private LegacyBonusHostStatusData hostStatusDataField;
    
    /// <remarks/>
    public LegacyBonusHostStatusData HostStatusData {
        get {
            return this.hostStatusDataField;
        }
        set {
            this.hostStatusDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class EndLegacyBonusBookingHoldOffSend : SendTransactionalMessage {
    
    private uint uniqueBonusIdField;
    
    private bool uniqueBonusIdFieldSpecified;
    
    /// <remarks/>
    public uint UniqueBonusId {
        get {
            return this.uniqueBonusIdField;
        }
        set {
            this.uniqueBonusIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UniqueBonusIdSpecified {
        get {
            return this.uniqueBonusIdFieldSpecified;
        }
        set {
            this.uniqueBonusIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusArrivedSend : SendTransactionalMessage {
    
    private LegacyBonusData bonusField;
    
    /// <remarks/>
    public LegacyBonusData Bonus {
        get {
            return this.bonusField;
        }
        set {
            this.bonusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class QueryLegacyBonusHostStatusSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class QueryLegacyBonusStatusSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class RequestLegacyBonusBookingHoldOffSend : SendTransactionalMessage {
    
    private uint uniqueBonusIdField;
    
    /// <remarks/>
    public uint UniqueBonusId {
        get {
            return this.uniqueBonusIdField;
        }
        set {
            this.uniqueBonusIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusNotificationEnableSend : SendTransactionalMessage {
    
    private bool enabledField;
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreWriteMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.RemoveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.WriteSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.KeyValueStoreReadMethod))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.ReadSend))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public abstract partial class KeyValueStoreMethod : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.RemoveSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.WriteSend))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public abstract partial class KeyValueStoreWriteMethod : KeyValueStoreMethod {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public partial class RemoveSend : KeyValueStoreWriteMethod {
    
    private List<string> keyField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Key")]
    public List<string> Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public partial class WriteSend : KeyValueStoreWriteMethod {
    
    private List<WriteSendItem> itemField = new List<WriteSendItem>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Item")]
    public List<WriteSendItem> Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XKVSTypesVer1.xsd")]
public partial class WriteSendItem {
    
    private string keyField;
    
    private byte[] valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="base64Binary")]
    public byte[] Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.KVSTypes.ReadSend))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public abstract partial class KeyValueStoreReadMethod : KeyValueStoreMethod {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public partial class ReadSend : KeyValueStoreReadMethod {
    
    private List<string> keyField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Key")]
    public List<string> Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XJackpotItalyVer1.xsd")]
public partial class GetConfigDataJackpotBonusEnabledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class ReserveActivationCanceledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class RequestReserveActivationSend : SendTransactionalMessage {
    
    private bool reserveActiveField;
    
    /// <remarks/>
    public bool ReserveActive {
        get {
            return this.reserveActiveField;
        }
        set {
            this.reserveActiveField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class GetReserveParametersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameProgressiveSettings {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameProgressiveSettingsVer1.xsd")]
public partial class QueryProgressiveSettingsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataSend", Namespace="F2XGamePresentationBehaviorVer1.xsd")]
public partial class GetConfigDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GameFocusChangedSend : SendTransactionalMessage {
    
    private GameFocus gameFocusField;
    
    /// <remarks/>
    public GameFocus GameFocus {
        get {
            return this.gameFocusField;
        }
        set {
            this.gameFocusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GameInProgressChangedSend : SendTransactionalMessage {
    
    private bool gameInProgressField;
    
    /// <remarks/>
    public bool GameInProgress {
        get {
            return this.gameInProgressField;
        }
        set {
            this.gameInProgressField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GetGameFocusSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GetGameInProgressSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public partial class PokerGamePlayReportSend : SendTransactionalMessage {
    
    private ReportType reportTypeField;
    
    private List<PokerHand> handField = new List<PokerHand>();
    
    /// <remarks/>
    public ReportType ReportType {
        get {
            return this.reportTypeField;
        }
        set {
            this.reportTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Hand")]
    public List<PokerHand> Hand {
        get {
            return this.handField;
        }
        set {
            this.handField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public enum ReportType {
    
    /// <remarks/>
    Initial,
    
    /// <remarks/>
    Intermediate,
    
    /// <remarks/>
    Final,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameOutcomeEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameOutcomeEventsVer1.xsd")]
public partial class FinalWinRecordEventSend : SendTransactionalMessage {
    
    private Amount totalBetField;
    
    private Amount totalWinField;
    
    private Amount paytableWinField;
    
    private Amount progressiveWinField;
    
    private Amount ancillaryWinField;
    
    private Amount externalBonusWinField;
    
    /// <remarks/>
    public Amount TotalBet {
        get {
            return this.totalBetField;
        }
        set {
            this.totalBetField = value;
        }
    }
    
    /// <remarks/>
    public Amount TotalWin {
        get {
            return this.totalWinField;
        }
        set {
            this.totalWinField = value;
        }
    }
    
    /// <remarks/>
    public Amount PaytableWin {
        get {
            return this.paytableWinField;
        }
        set {
            this.paytableWinField = value;
        }
    }
    
    /// <remarks/>
    public Amount ProgressiveWin {
        get {
            return this.progressiveWinField;
        }
        set {
            this.progressiveWinField = value;
        }
    }
    
    /// <remarks/>
    public Amount AncillaryWin {
        get {
            return this.ancillaryWinField;
        }
        set {
            this.ancillaryWinField = value;
        }
    }
    
    /// <remarks/>
    public Amount ExternalBonusWin {
        get {
            return this.externalBonusWinField;
        }
        set {
            this.externalBonusWinField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLink {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLinkVer1.xsd")]
public partial class GetConfigDataStompBrokerSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class InitializeGameLevelDataSend : SendTransactionalMessage {
    
    private ThemeIdentifier themeField;
    
    private List<PayvarDenominations> payvarDenominationsField = new List<PayvarDenominations>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PayvarDenominations")]
    public List<PayvarDenominations> PayvarDenominations {
        get {
            return this.payvarDenominationsField;
        }
        set {
            this.payvarDenominationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetDenominationButtonPanelMinBetSend : SendTransactionalMessage {
    
    private List<PayvarDenomination> payvarDenominationSelectionField = new List<PayvarDenomination>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PayvarDenominationSelection")]
    public List<PayvarDenomination> PayvarDenominationSelection {
        get {
            return this.payvarDenominationSelectionField;
        }
        set {
            this.payvarDenominationSelectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarButtonPanelMinBetSend : SendTransactionalMessage {
    
    private List<PayvarIdentifier> payvarField = new List<PayvarIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarIdentifier> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeButtonPanelMinBetSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarInformationSend : SendTransactionalMessage {
    
    private List<PayvarIdentifier> payvarField = new List<PayvarIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarIdentifier> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeInformationSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarEnabledDenominationsSend : SendTransactionalMessage {
    
    private List<PayvarIdentifier> payvarField = new List<PayvarIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarIdentifier> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeEnabledDenominationsSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarSupportedDenominationsSend : SendTransactionalMessage {
    
    private List<PayvarIdentifier> payvarField = new List<PayvarIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarIdentifier> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeSupportedDenominationsSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetDenominationMaxBetCreditsSend : SendTransactionalMessage {
    
    private List<PayvarDenomination> payvarDenominationSelectionField = new List<PayvarDenomination>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PayvarDenominationSelection")]
    public List<PayvarDenomination> PayvarDenominationSelection {
        get {
            return this.payvarDenominationSelectionField;
        }
        set {
            this.payvarDenominationSelectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarMaxBetCreditsSend : SendTransactionalMessage {
    
    private List<PayvarIdentifier> payvarField = new List<PayvarIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarIdentifier> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetThemeMaxBetCreditsSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetBetResolutionSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarPaybackPercentageDataSend : SendTransactionalMessage {
    
    private List<PayvarIdentifier> payvarField = new List<PayvarIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Payvar")]
    public List<PayvarIdentifier> Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GetPayvarsForThemeSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameHistorySupplemental {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameHistorySupplementalVer1.xsd")]
public partial class SetExportDataSend : SendTransactionalMessage {
    
    private DataFormatIdentifier exportDataFormatIdentifierField;
    
    private byte[] exportDataField;
    
    /// <remarks/>
    public DataFormatIdentifier ExportDataFormatIdentifier {
        get {
            return this.exportDataFormatIdentifierField;
        }
        set {
            this.exportDataFormatIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] ExportData {
        get {
            return this.exportDataField;
        }
        set {
            this.exportDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupInformationVer1.xsd")]
public partial class GetPayvarGroupsForThemeSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class GetConfigDataPayvarGroupInformationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class GetSelectedPayvarSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class SelectPayvarSend : SendTransactionalMessage {
    
    private PayvarIdentifier payvarField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class ClearGameCycleBehaviorModifierSend : SendTransactionalMessage {
    
    private List<GameCycleBehaviorModifier> behaviorModifiersField = new List<GameCycleBehaviorModifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BehaviorModifier", IsNullable=false)]
    public List<GameCycleBehaviorModifier> BehaviorModifiers {
        get {
            return this.behaviorModifiersField;
        }
        set {
            this.behaviorModifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class EnableGameCycleBehaviorModifiersSend : SendTransactionalMessage {
    
    private List<GameCycleBehaviorModifier> behaviorModifiersField = new List<GameCycleBehaviorModifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("BehaviorModifier", IsNullable=false)]
    public List<GameCycleBehaviorModifier> BehaviorModifiers {
        get {
            return this.behaviorModifiersField;
        }
        set {
            this.behaviorModifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class GameCycleModificationEventSend : SendTransactionalMessage {
    
    private GameCycleModificationEventType gameCycleModificationEventField;
    
    /// <remarks/>
    public GameCycleModificationEventType GameCycleModificationEvent {
        get {
            return this.gameCycleModificationEventField;
        }
        set {
            this.gameCycleModificationEventField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public enum GameCycleModificationEventType {
    
    /// <remarks/>
    DelayingMainPlayComplete,
    
    /// <remarks/>
    AncillaryOfferPrevented,
    
    /// <remarks/>
    ExternalPresentationEntered,
    
    /// <remarks/>
    DelayingGameEnd,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class SetGameCycleModificationEventRegistrationSend : SendTransactionalMessage {
    
    private List<GameCycleModificationEventType> eventsField = new List<GameCycleModificationEventType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Event", IsNullable=false)]
    public List<GameCycleModificationEventType> Events {
        get {
            return this.eventsField;
        }
        set {
            this.eventsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AwardResultsPostedSend : SendTransactionalMessage {
    
    private Amount amountWonField;
    
    /// <remarks/>
    public Amount AmountWon {
        get {
            return this.amountWonField;
        }
        set {
            this.amountWonField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EndGameCycleSend : SendTransactionalMessage {
    
    private uint numberOfStepsField;
    
    /// <remarks/>
    public uint NumberOfSteps {
        get {
            return this.numberOfStepsField;
        }
        set {
            this.numberOfStepsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class FinalizeAwardRequestSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AbortGameCycleSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeResponseDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeRequestSend : SendTransactionalMessage {
    
    private OutcomeList outcomeListField;
    
    private bool lastOutcomeField;
    
    private EvalOutcomeRequestSendWagerCatOutcomes wagerCatOutcomesField;
    
    /// <remarks/>
    public OutcomeList OutcomeList {
        get {
            return this.outcomeListField;
        }
        set {
            this.outcomeListField = value;
        }
    }
    
    /// <remarks/>
    public bool LastOutcome {
        get {
            return this.lastOutcomeField;
        }
        set {
            this.lastOutcomeField = value;
        }
    }
    
    /// <remarks/>
    public EvalOutcomeRequestSendWagerCatOutcomes WagerCatOutcomes {
        get {
            return this.wagerCatOutcomesField;
        }
        set {
            this.wagerCatOutcomesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeRequestSendWagerCatOutcomes {
    
    private List<WagerCatOutcome> wagerCatOutcomeField = new List<WagerCatOutcome>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WagerCatOutcome")]
    public List<WagerCatOutcome> WagerCatOutcome {
        get {
            return this.wagerCatOutcomeField;
        }
        set {
            this.wagerCatOutcomeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class StartPlayingSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class UnenrollGameCycleSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EnrollResponseDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EnrollGameCycleSend : SendTransactionalMessage {
    
    private byte[] hostEnrollmentDataField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] HostEnrollmentData {
        get {
            return this.hostEnrollmentDataField;
        }
        set {
            this.hostEnrollmentDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class UncommitGameCycleSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class CommitGameCycleSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class QueryGameCycleStateSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleEventsVer1.xsd")]
public partial class GameCycleEventSend : SendTransactionalMessage {
    
    private GameCycleEventType gameCycleEventField;
    
    /// <remarks/>
    public GameCycleEventType GameCycleEvent {
        get {
            return this.gameCycleEventField;
        }
        set {
            this.gameCycleEventField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleEventsVer1.xsd")]
public enum GameCycleEventType {
    
    /// <remarks/>
    GameCycleEntered,
    
    /// <remarks/>
    GameCycleEnded,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleEventsVer1.xsd")]
public partial class SetGameCycleEventRegistrationSend : SendTransactionalMessage {
    
    private List<GameCycleEventType> eventsField = new List<GameCycleEventType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Event", IsNullable=false)]
    public List<GameCycleEventType> Events {
        get {
            return this.eventsField;
        }
        set {
            this.eventsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataSend", Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class GetConfigDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class PlaceBetSend : SendTransactionalMessage {
    
    private Amount betAmountField;
    
    /// <remarks/>
    public Amount BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class PlaceStartingBetSend : SendTransactionalMessage {
    
    private bool isMaxBetField;
    
    /// <remarks/>
    public bool IsMaxBet {
        get {
            return this.isMaxBetField;
        }
        set {
            this.isMaxBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class UncommitBetSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class CommitBetSend : SendTransactionalMessage {
    
    private Amount betAmountField;
    
    /// <remarks/>
    public Amount BetAmount {
        get {
            return this.betAmountField;
        }
        set {
            this.betAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetOcspSettingsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XG2SConnectionVer1.xsd")]
public partial class CertificatesChangedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetCertificateAuthoritiesSend", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetCertificateAuthoritiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetClientCertificateSend", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetClientCertificateSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetG2SHostAddressSend", Namespace="F2XG2SConnectionVer1.xsd")]
public partial class GetG2SHostAddressSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class GetFlashPlayerClockPropertiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataSend", Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class GetConfigDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetSSLCertConfigurationSend : SendTransactionalMessage {
    
    private SetSSLCertConfigurationSendContent sendContentField;
    
    /// <remarks/>
    public SetSSLCertConfigurationSendContent SendContent {
        get {
            return this.sendContentField;
        }
        set {
            this.sendContentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetUrlAclConfigurationSend : SendTransactionalMessage {
    
    private SetUrlAclConfigurationSendContent sendContentField;
    
    /// <remarks/>
    public SetUrlAclConfigurationSendContent SendContent {
        get {
            return this.sendContentField;
        }
        set {
            this.sendContentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class SetPortEnabledSend : SendTransactionalMessage {
    
    private SetPortEnabledSendContent sendContentField;
    
    /// <remarks/>
    public SetPortEnabledSendContent SendContent {
        get {
            return this.sendContentField;
        }
        set {
            this.sendContentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class GetPortStatusSend : SendTransactionalMessage {
    
    private GetPortStatusSendContent sendContentField;
    
    /// <remarks/>
    public GetPortStatusSendContent SendContent {
        get {
            return this.sendContentField;
        }
        set {
            this.sendContentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class GetConfigDataFirewallEnabledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class WapHandpayAcknowledgeSend : SendTransactionalMessage {
    
    private string controllerIdField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class WapHandpaySend : SendTransactionalMessage {
    
    private string controllerIdField;
    
    private PayvarIdentifier payvarIdField;
    
    private uint denominationField;
    
    private List<WapWin> wapWinsField = new List<WapWin>();
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
    
    /// <remarks/>
    public PayvarIdentifier PayvarId {
        get {
            return this.payvarIdField;
        }
        set {
            this.payvarIdField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<WapWin> WapWins {
        get {
            return this.wapWinsField;
        }
        set {
            this.wapWinsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ValidationResponseSend : SendTransactionalMessage {
    
    private List<PotentialHitResult> resultsField = new List<PotentialHitResult>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Result", IsNullable=false)]
    public List<PotentialHitResult> Results {
        get {
            return this.resultsField;
        }
        set {
            this.resultsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ValidationRequestSend : SendTransactionalMessage {
    
    private PayvarIdentifier payvarIdField;
    
    private uint denominationField;
    
    private List<PotentialHit> potentialHitsField = new List<PotentialHit>();
    
    /// <remarks/>
    public PayvarIdentifier PayvarId {
        get {
            return this.payvarIdField;
        }
        set {
            this.payvarIdField = value;
        }
    }
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<PotentialHit> PotentialHits {
        get {
            return this.potentialHitsField;
        }
        set {
            this.potentialHitsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class GetConfigDataMinControllerLevelUpdateIntervalSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class QueryProgressiveLinksSend : SendTransactionalMessage {
    
    private string controllerIdField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class RemoveProgressiveLinksSend : SendTransactionalMessage {
    
    private List<ProgressiveLink> progressiveLinksField = new List<ProgressiveLink>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ProgressiveLink> ProgressiveLinks {
        get {
            return this.progressiveLinksField;
        }
        set {
            this.progressiveLinksField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class AddProgressiveLinksSend : SendTransactionalMessage {
    
    private List<ProgressiveLink> progressiveLinksField = new List<ProgressiveLink>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<ProgressiveLink> ProgressiveLinks {
        get {
            return this.progressiveLinksField;
        }
        set {
            this.progressiveLinksField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class QueryGameLevelDefinitionsSend : SendTransactionalMessage {
    
    private PayvarIdentifier payvarIdField;
    
    /// <remarks/>
    public PayvarIdentifier PayvarId {
        get {
            return this.payvarIdField;
        }
        set {
            this.payvarIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class QueryControllersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class QueryControllerLevelsSend : SendTransactionalMessage {
    
    private string controllerIdField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class DestroyControllerSend : SendTransactionalMessage {
    
    private string controllerIdField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class CreateControllerSend : SendTransactionalMessage {
    
    private ControllerName controllerNameField;
    
    private string controllerTypeField;
    
    /// <remarks/>
    public ControllerName ControllerName {
        get {
            return this.controllerNameField;
        }
        set {
            this.controllerNameField = value;
        }
    }
    
    /// <remarks/>
    public string ControllerType {
        get {
            return this.controllerTypeField;
        }
        set {
            this.controllerTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class AdjustControllerLevelParametersSend : SendTransactionalMessage {
    
    private string controllerIdField;
    
    private uint controllerLevelField;
    
    private ControllerLevelParameters parametersField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
    
    /// <remarks/>
    public uint ControllerLevel {
        get {
            return this.controllerLevelField;
        }
        set {
            this.controllerLevelField = value;
        }
    }
    
    /// <remarks/>
    public ControllerLevelParameters Parameters {
        get {
            return this.parametersField;
        }
        set {
            this.parametersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class AddControllerLevelSend : SendTransactionalMessage {
    
    private string controllerIdField;
    
    private ControllerLevelDefinition controllerLevelDefinitionField;
    
    private ProgressiveLevelValue initialValueField;
    
    /// <remarks/>
    public string ControllerId {
        get {
            return this.controllerIdField;
        }
        set {
            this.controllerIdField = value;
        }
    }
    
    /// <remarks/>
    public ControllerLevelDefinition ControllerLevelDefinition {
        get {
            return this.controllerLevelDefinitionField;
        }
        set {
            this.controllerLevelDefinitionField = value;
        }
    }
    
    /// <remarks/>
    public ProgressiveLevelValue InitialValue {
        get {
            return this.initialValueField;
        }
        set {
            this.initialValueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="ChooserRequestedSend", Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class ChooserRequestedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class CentralAppSelectionCompleteSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class CentralAppSelectionCanceledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class AvailableCentralAppsChangedSend : SendTransactionalMessage {
    
    private AppInformationList availableField;
    
    private AppInformationList updatedField;
    
    private AppIdentifierList removedField;
    
    /// <remarks/>
    public AppInformationList Available {
        get {
            return this.availableField;
        }
        set {
            this.availableField = value;
        }
    }
    
    /// <remarks/>
    public AppInformationList Updated {
        get {
            return this.updatedField;
        }
        set {
            this.updatedField = value;
        }
    }
    
    /// <remarks/>
    public AppIdentifierList Removed {
        get {
            return this.removedField;
        }
        set {
            this.removedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class AppSelectionStateChangedSend : SendTransactionalMessage {
    
    private AppSelectionState stateField;
    
    /// <remarks/>
    public AppSelectionState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetSelectedCentralAppSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class CentralAppSelectionRequestSend : SendTransactionalMessage {
    
    private AppSelector appField;
    
    private bool skipLoadingScreenField;
    
    /// <remarks/>
    public AppSelector App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public bool SkipLoadingScreen {
        get {
            return this.skipLoadingScreenField;
        }
        set {
            this.skipLoadingScreenField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetAvailableCentralAppsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetAppSelectionStateSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class SetAppSelectionEventRegistrationSend : SendTransactionalMessage {
    
    private AppSelectionEventList appSelectionEventListsField;
    
    /// <remarks/>
    public AppSelectionEventList AppSelectionEventLists {
        get {
            return this.appSelectionEventListsField;
        }
        set {
            this.appSelectionEventListsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataSend", Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class GetConfigDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventLog {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventLogVer1.xsd")]
public partial class RecordEventSend : SendTransactionalMessage {
    
    private SourceSelector sourceSelectorField;
    
    private string eventTextField;
    
    /// <remarks/>
    public SourceSelector SourceSelector {
        get {
            return this.sourceSelectorField;
        }
        set {
            this.sourceSelectorField = value;
        }
    }
    
    /// <remarks/>
    public string EventText {
        get {
            return this.eventTextField;
        }
        set {
            this.eventTextField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventBasedProgressive {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventBasedProgressiveVer1.xsd")]
public partial class AddQualifiedContributionSend : SendTransactionalMessage {
    
    private EventBasedContributionData eventBasedContributionDataField;
    
    /// <remarks/>
    public EventBasedContributionData EventBasedContributionData {
        get {
            return this.eventBasedContributionDataField;
        }
        set {
            this.eventBasedContributionDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataRtpOrderedByBetRequiredSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataDisplayVideoReelsForStepperSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataDefaultBetSelectionStyleSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetMarketingBehaviorSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetAncillaryMonetaryLimitSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataExternalBonusWinCapSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataProgressiveWinCapSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetConfigDataTotalWinCapSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetWinCapBehaviorSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetWinCapSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class GetMinimumBetSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class EbpEnabledChangedSend : SendTransactionalMessage {
    
    private bool enabledField;
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetCertificateAuthoritiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetClientCertificateSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetG2SHostAddressSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class GetEbpEnabledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DisplayControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDisplayControlVer1.xsd")]
public partial class SetDisplayControlStateSend : SendTransactionalMessage {
    
    private DisplayControlState displayControlStateField;
    
    /// <remarks/>
    public DisplayControlState DisplayControlState {
        get {
            return this.displayControlStateField;
        }
        set {
            this.displayControlStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DisplayControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DisplayControlState", Namespace="F2XDisplayControlVer1.xsd")]
public enum DisplayControlState {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    DisplayAsHidden,
    
    /// <remarks/>
    DisplayAsNormal,
    
    /// <remarks/>
    DisplayAsSuspended,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class ReadDirectFundsTransferMetersSend : SendTransactionalMessage {
    
    private List<MeterId> meterIdField = new List<MeterId>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MeterId")]
    public List<MeterId> MeterId {
        get {
            return this.meterIdField;
        }
        set {
            this.meterIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class DirectFundsTransferMetersUpdateSend : SendTransactionalMessage {
    
    private List<MeterData> dataField = new List<MeterData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Data")]
    public List<MeterData> Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class SetDirectFundsTransferMetersRegistrationSend : SendTransactionalMessage {
    
    private List<MeterId> meterIdField = new List<MeterId>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MeterId")]
    public List<MeterId> MeterId {
        get {
            return this.meterIdField;
        }
        set {
            this.meterIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class GetConfigDataDateTimeMinimumUpdateIntervalSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class DateTimeChangedSend : SendTransactionalMessage {
    
    private System.DateTime newTimeField;
    
    private System.DateTime oldTimeField;
    
    /// <remarks/>
    public System.DateTime NewTime {
        get {
            return this.newTimeField;
        }
        set {
            this.newTimeField = value;
        }
    }
    
    /// <remarks/>
    public System.DateTime OldTime {
        get {
            return this.oldTimeField;
        }
        set {
            this.oldTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetScopedCustomConfigItemNamesSend : SendTransactionalMessage {
    
    private CustomConfigurationItemScopeSelector customConfigItemScopeSelectionField;
    
    /// <remarks/>
    public CustomConfigurationItemScopeSelector CustomConfigItemScopeSelection {
        get {
            return this.customConfigItemScopeSelectionField;
        }
        set {
            this.customConfigItemScopeSelectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemTypesSend : SendTransactionalMessage {
    
    private List<CustomConfigurationItemSelector> customConfigItemSelectionField = new List<CustomConfigurationItemSelector>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CustomConfigItemSelection")]
    public List<CustomConfigurationItemSelector> CustomConfigItemSelection {
        get {
            return this.customConfigItemSelectionField;
        }
        set {
            this.customConfigItemSelectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemReferencedEnumerationsSend : SendTransactionalMessage {
    
    private List<CustomConfigurationItemSelector> customConfigItemSelectionField = new List<CustomConfigurationItemSelector>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CustomConfigItemSelection")]
    public List<CustomConfigurationItemSelector> CustomConfigItemSelection {
        get {
            return this.customConfigItemSelectionField;
        }
        set {
            this.customConfigItemSelectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class GetCustomConfigItemValueDataSend : SendTransactionalMessage {
    
    private List<GetCustomConfigItemValueDataSendSelector> customConfigItemSelectionField = new List<GetCustomConfigItemValueDataSendSelector>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CustomConfigItemSelection")]
    public List<GetCustomConfigItemValueDataSendSelector> CustomConfigItemSelection {
        get {
            return this.customConfigItemSelectionField;
        }
        set {
            this.customConfigItemSelectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureWriteVer1.xsd")]
public partial class SetDefaultCultureSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureWriteVer1.xsd")]
public partial class SetCultureSend : SendTransactionalMessage {
    
    private string cultureField;
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class CultureChangedSend : SendTransactionalMessage {
    
    private CultureContext affectedContextField;
    
    private string currentCultureField;
    
    /// <remarks/>
    public CultureContext AffectedContext {
        get {
            return this.affectedContextField;
        }
        set {
            this.affectedContextField = value;
        }
    }
    
    /// <remarks/>
    public string CurrentCulture {
        get {
            return this.currentCultureField;
        }
        set {
            this.currentCultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public enum CultureContext {
    
    /// <remarks/>
    Theme,
    
    /// <remarks/>
    Tsm,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetDefaultCultureSend : SendTransactionalMessage {
    
    private CultureContext contextRequestedField;
    
    /// <remarks/>
    public CultureContext ContextRequested {
        get {
            return this.contextRequestedField;
        }
        set {
            this.contextRequestedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetAvailableCulturesSend : SendTransactionalMessage {
    
    private CultureContext contextRequestedField;
    
    /// <remarks/>
    public CultureContext ContextRequested {
        get {
            return this.contextRequestedField;
        }
        set {
            this.contextRequestedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class GetCultureSend : SendTransactionalMessage {
    
    private CultureContext contextRequestedField;
    
    /// <remarks/>
    public CultureContext ContextRequested {
        get {
            return this.contextRequestedField;
        }
        set {
            this.contextRequestedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class GetConfigDataMaxNumOfCoplayersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class BindCoplayerSessionSend : SendTransactionalMessage {
    
    private int coplayerField;
    
    private int sessionField;
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    public int Session {
        get {
            return this.sessionField;
        }
        set {
            this.sessionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class CreateCoplayersSend : SendTransactionalMessage {
    
    private int numberOfCoplayersField;
    
    /// <remarks/>
    public int NumberOfCoplayers {
        get {
            return this.numberOfCoplayersField;
        }
        set {
            this.numberOfCoplayersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class GetCoplayersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class SetCoplayerApiVersionsSend : SendTransactionalMessage {
    
    private SetCoplayerApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetCoplayerApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class SetCoplayerApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class GetCoplayerApiVersionsSend : SendTransactionalMessage {
    
    private int coplayerField;
    
    private ThemeIdentifier themeField;
    
    private string themeTagField;
    
    private string themeTagDataFileField;
    
    private string g2SThemeIdentifierField;
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTag {
        get {
            return this.themeTagField;
        }
        set {
            this.themeTagField = value;
        }
    }
    
    /// <remarks/>
    public string ThemeTagDataFile {
        get {
            return this.themeTagDataFileField;
        }
        set {
            this.themeTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public string G2SThemeIdentifier {
        get {
            return this.g2SThemeIdentifierField;
        }
        set {
            this.g2SThemeIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerActivationVer1.xsd")]
public partial class InactivateCoplayerContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerActivationVer1.xsd")]
public partial class ActivateCoplayerContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerActivationVer1.xsd")]
public partial class NewCoplayerContextSend : SendTransactionalMessage {
    
    private uint denominationField;
    
    private string payvarTagField;
    
    private string payvarTagDataFileField;
    
    private GameMode gameModeField;
    
    /// <remarks/>
    public uint Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
    
    /// <remarks/>
    public string PayvarTag {
        get {
            return this.payvarTagField;
        }
        set {
            this.payvarTagField = value;
        }
    }
    
    /// <remarks/>
    public string PayvarTagDataFile {
        get {
            return this.payvarTagDataFileField;
        }
        set {
            this.payvarTagDataFileField = value;
        }
    }
    
    /// <remarks/>
    public GameMode GameMode {
        get {
            return this.gameModeField;
        }
        set {
            this.gameModeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GameMode", Namespace="F2XCoplayerActivationVer1.xsd")]
public enum GameMode {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Play,
    
    /// <remarks/>
    History,
    
    /// <remarks/>
    Utility,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeMonitoringVer1.xsd")]
public partial class ConfigModeStateChangedSend : SendTransactionalMessage {
    
    private ConfigModeState configModeStateField;
    
    /// <remarks/>
    public ConfigModeState ConfigModeState {
        get {
            return this.configModeStateField;
        }
        set {
            this.configModeStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeMonitoringVer1.xsd")]
public enum ConfigModeState {
    
    /// <remarks/>
    Inactive,
    
    /// <remarks/>
    Active,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class ConfigModeAvailabilityEventSend : SendTransactionalMessage {
    
    private bool isAvailableField;
    
    /// <remarks/>
    public bool IsAvailable {
        get {
            return this.isAvailableField;
        }
        set {
            this.isAvailableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class EnterConfigModeResponseSend : SendTransactionalMessage {
    
    private EnterConfigModeConfirmationCode confirmationCodeField;
    
    /// <remarks/>
    public EnterConfigModeConfirmationCode ConfirmationCode {
        get {
            return this.confirmationCodeField;
        }
        set {
            this.confirmationCodeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public enum EnterConfigModeConfirmationCode {
    
    /// <remarks/>
    Denied,
    
    /// <remarks/>
    Entered,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class ExitConfigModeSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class EnterConfigModeRequestSend : SendTransactionalMessage {
    
    private bool forceCashoutField;
    
    public EnterConfigModeRequestSend() {
        this.forceCashoutField = false;
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(false)]
    public bool ForceCashout {
        get {
            return this.forceCashoutField;
        }
        set {
            this.forceCashoutField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ClockDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XClockDisplayVer1.xsd")]
public partial class GetClockDisplayEnabledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ClockDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XClockDisplayVer1.xsd")]
public partial class ClockDisplayEnabledChangedSend : SendTransactionalMessage {
    
    private bool clockDisplayEnabledField;
    
    /// <remarks/>
    public bool ClockDisplayEnabled {
        get {
            return this.clockDisplayEnabledField;
        }
        set {
            this.clockDisplayEnabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class RequestChooserSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class GetChooserServicesPropertiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppPropertyValuesSend", Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetAppPropertyValuesSend : SendTransactionalMessage {
    
    private AppIdentifier appField;
    
    private string sectionField;
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetAppPropertyListSend", Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetAppPropertyListSend : SendTransactionalMessage {
    
    private AppIdentifier appField;
    
    private string sectionField;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetChooserPropertyValuesSend : SendTransactionalMessage {
    
    private string sectionField;
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class GetChooserPropertyListSend : SendTransactionalMessage {
    
    private string sectionField;
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class RemoveCertificateSend : SendTransactionalMessage {
    
    private CertificateIdentifier certificateIdentifierField;
    
    /// <remarks/>
    public CertificateIdentifier CertificateIdentifier {
        get {
            return this.certificateIdentifierField;
        }
        set {
            this.certificateIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class HasCertificateSend : SendTransactionalMessage {
    
    private CertificateIdentifier certificateIdentifierField;
    
    /// <remarks/>
    public CertificateIdentifier CertificateIdentifier {
        get {
            return this.certificateIdentifierField;
        }
        set {
            this.certificateIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class AddCertificateSend : SendTransactionalMessage {
    
    private CertificateInformation certificateStorageInformationField;
    
    /// <remarks/>
    public CertificateInformation CertificateStorageInformation {
        get {
            return this.certificateStorageInformationField;
        }
        set {
            this.certificateStorageInformationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AwardMismatchDetectedSend", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class AwardMismatchDetectedSend : SendTransactionalMessage {
    
    private string logMessageField;
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetEnrollmentResponseDataSend", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetEnrollmentResponseDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetEnrollmentRequestDataSend", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class SetEnrollmentRequestDataSend : SendTransactionalMessage {
    
    private List<EnrollmentRequestItem> enrollmentRequestField = new List<EnrollmentRequestItem>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<EnrollmentRequestItem> EnrollmentRequest {
        get {
            return this.enrollmentRequestField;
        }
        set {
            this.enrollmentRequestField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataMultidrawSupportedSend", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetConfigDataMultidrawSupportedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataCdsGameConfigSend", Namespace="F2XCdsPullTabVer1.xsd")]
public partial class GetConfigDataCdsGameConfigSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AwardMismatchDetectedSend", Namespace="F2XCdsIcdVer1.xsd")]
public partial class AwardMismatchDetectedSend : SendTransactionalMessage {
    
    private string logMessageField;
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsIcdVer1.xsd")]
public partial class SetProgressiveLookupDataSend : SendTransactionalMessage {
    
    private List<ushort> hitProgressiveLevelsField = new List<ushort>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("HitProgressiveLevel", IsNullable=false)]
    public List<ushort> HitProgressiveLevels {
        get {
            return this.hitProgressiveLevelsField;
        }
        set {
            this.hitProgressiveLevelsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetEnrollmentResponseDataSend", Namespace="F2XCdsIcdVer1.xsd")]
public partial class GetEnrollmentResponseDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetEnrollmentRequestDataSend", Namespace="F2XCdsIcdVer1.xsd")]
public partial class SetEnrollmentRequestDataSend : SendTransactionalMessage {
    
    private BetConfig betConfigField;
    
    /// <remarks/>
    public BetConfig BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataCdsGameConfigSend", Namespace="F2XCdsIcdVer1.xsd")]
public partial class GetConfigDataCdsGameConfigSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="AwardMismatchDetectedSend", Namespace="F2XCdsHhrVer1.xsd")]
public partial class AwardMismatchDetectedSend : SendTransactionalMessage {
    
    private string logMessageField;
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetEnrollmentResponseDataSend", Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetEnrollmentResponseDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="SetEnrollmentRequestDataSend", Namespace="F2XCdsHhrVer1.xsd")]
public partial class SetEnrollmentRequestDataSend : SendTransactionalMessage {
    
    private List<EnrollmentRequestItem> enrollmentRequestItemsField = new List<EnrollmentRequestItem>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<EnrollmentRequestItem> EnrollmentRequestItems {
        get {
            return this.enrollmentRequestItemsField;
        }
        set {
            this.enrollmentRequestItemsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetConfigDataMultidrawSupportedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetConfigDataCdsGameConfigSend", Namespace="F2XCdsHhrVer1.xsd")]
public partial class GetConfigDataCdsGameConfigSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class AwardMismatchDetectedSend : SendTransactionalMessage {
    
    private string logMessageField;
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class GetEnrollmentResponseDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class PlayCompleteSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class SetEnrollmentRequestDataSend : SendTransactionalMessage {
    
    private BetConfig betConfigField;
    
    /// <remarks/>
    public BetConfig BetConfig {
        get {
            return this.betConfigField;
        }
        set {
            this.betConfigField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class ActionPlaySend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class SetBetDataSend : SendTransactionalMessage {
    
    private BetData betDataField;
    
    /// <remarks/>
    public BetData BetData {
        get {
            return this.betDataField;
        }
        set {
            this.betDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class GetConfigDataCdsGameConfigSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class MachineStatusChangedSend : SendTransactionalMessage {
    
    private MachineStatusCode machineStatusCodeField;
    
    private string descriptionField;
    
    /// <remarks/>
    public MachineStatusCode MachineStatusCode {
        get {
            return this.machineStatusCodeField;
        }
        set {
            this.machineStatusCodeField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public enum MachineStatusCode {
    
    /// <remarks/>
    NormalStatus,
    
    /// <remarks/>
    CardCageDoorOpen,
    
    /// <remarks/>
    MainDoorOpen,
    
    /// <remarks/>
    CoinOutJam,
    
    /// <remarks/>
    HopperEmpty,
    
    /// <remarks/>
    ExtraCoinPaidOut,
    
    /// <remarks/>
    CoinInJam,
    
    /// <remarks/>
    PrinterMalfunction,
    
    /// <remarks/>
    BadEeprom,
    
    /// <remarks/>
    LowCmosBattery,
    
    /// <remarks/>
    InputsShorted,
    
    /// <remarks/>
    BillValidatorMalfunction,
    
    /// <remarks/>
    GameOutOfService,
    
    /// <remarks/>
    PeripheralDeviceFailure,
    
    /// <remarks/>
    Reel1Tilt,
    
    /// <remarks/>
    Reel2Tilt,
    
    /// <remarks/>
    Reel3Tilt,
    
    /// <remarks/>
    Reel4Tilt,
    
    /// <remarks/>
    Reel5Tilt,
    
    /// <remarks/>
    WinMismatch,
    
    /// <remarks/>
    BillStackerFull,
    
    /// <remarks/>
    DropDoorOpen,
    
    /// <remarks/>
    BillDoorOpen,
    
    /// <remarks/>
    BillStackerDoorOpen,
    
    /// <remarks/>
    CardCageDoorClosed,
    
    /// <remarks/>
    MainDoorClosed,
    
    /// <remarks/>
    DropDoorClosed,
    
    /// <remarks/>
    BillDoorClosed,
    
    /// <remarks/>
    BillStackerDoorClosed,
    
    /// <remarks/>
    BillRejected,
    
    /// <remarks/>
    LastRamClear,
    
    /// <remarks/>
    TellTaleBillStackerDoorOpen,
    
    /// <remarks/>
    TellTaleCardCageDoorOpen,
    
    /// <remarks/>
    FrontDoorOpen,
    
    /// <remarks/>
    FrontDoorClosed,
    
    /// <remarks/>
    TellTaleFrontDoorOpen,
    
    /// <remarks/>
    SecurityDoorOpen,
    
    /// <remarks/>
    SecurityDoorClosed,
    
    /// <remarks/>
    TellTaleSecurityDoorOpen,
    
    /// <remarks/>
    TellTaleTopBoxCageOpen,
    
    /// <remarks/>
    DoorAlarm,
    
    /// <remarks/>
    TopBoxCageOpen,
    
    /// <remarks/>
    TopBoxCageClosed,
    
    /// <remarks/>
    ClientNvRamError,
    
    /// <remarks/>
    GenericException,
    
    /// <remarks/>
    TellTaleMainDoorOpen,
    
    /// <remarks/>
    TellTaleDropDoorOpen,
    
    /// <remarks/>
    TellTaleBillDoorOpen,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class CommitGameInProgressRequestSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class WinMismatchNotificationSend : SendTransactionalMessage {
    
    private Amount expectedPaytableWinAmountField;
    
    private Amount gameReportedPaytableWinAmountField;
    
    private Amount expectedBingoWinAmountField;
    
    private Amount gameReportedBingoWinAmountField;
    
    private Amount expectedBingoProgressiveWinAmountField;
    
    private Amount gameReportedBingoProgressiveWinAmountField;
    
    private string logMessageField;
    
    /// <remarks/>
    public Amount ExpectedPaytableWinAmount {
        get {
            return this.expectedPaytableWinAmountField;
        }
        set {
            this.expectedPaytableWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount GameReportedPaytableWinAmount {
        get {
            return this.gameReportedPaytableWinAmountField;
        }
        set {
            this.gameReportedPaytableWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount ExpectedBingoWinAmount {
        get {
            return this.expectedBingoWinAmountField;
        }
        set {
            this.expectedBingoWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount GameReportedBingoWinAmount {
        get {
            return this.gameReportedBingoWinAmountField;
        }
        set {
            this.gameReportedBingoWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount ExpectedBingoProgressiveWinAmount {
        get {
            return this.expectedBingoProgressiveWinAmountField;
        }
        set {
            this.expectedBingoProgressiveWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount GameReportedBingoProgressiveWinAmount {
        get {
            return this.gameReportedBingoProgressiveWinAmountField;
        }
        set {
            this.gameReportedBingoProgressiveWinAmountField = value;
        }
    }
    
    /// <remarks/>
    public string LogMessage {
        get {
            return this.logMessageField;
        }
        set {
            this.logMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class FinalExpectedOutcomeRequestSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class EnrollmentResponseSend : SendTransactionalMessage {
    
    private EnrollmentResponseData enrollmentResponseDataField;
    
    /// <remarks/>
    public EnrollmentResponseData EnrollmentResponseData {
        get {
            return this.enrollmentResponseDataField;
        }
        set {
            this.enrollmentResponseDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class EnrollmentRequestSend : SendTransactionalMessage {
    
    private PayvarIdentifier payvarField;
    
    private uint denomField;
    
    private Amount committedBetAmountField;
    
    private byte[] enrollmentDataField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    public uint Denom {
        get {
            return this.denomField;
        }
        set {
            this.denomField = value;
        }
    }
    
    /// <remarks/>
    public Amount CommittedBetAmount {
        get {
            return this.committedBetAmountField;
        }
        set {
            this.committedBetAmountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] EnrollmentData {
        get {
            return this.enrollmentDataField;
        }
        set {
            this.enrollmentDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public partial class GetBingoMetersMaxValueSend : SendTransactionalMessage {
    
    private List<BingoMeterId> meterField = new List<BingoMeterId>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Meter")]
    public List<BingoMeterId> Meter {
        get {
            return this.meterField;
        }
        set {
            this.meterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public partial class ReadBingoMetersSend : SendTransactionalMessage {
    
    private List<BingoMeterId> meterField = new List<BingoMeterId>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Meter")]
    public List<BingoMeterId> Meter {
        get {
            return this.meterField;
        }
        set {
            this.meterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetMachineIdentificationCabinetModelSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetFloorLocationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class TaxableEventThresholdChangedSend : SendTransactionalMessage {
    
    private Amount thresholdField;
    
    /// <remarks/>
    public Amount Threshold {
        get {
            return this.thresholdField;
        }
        set {
            this.thresholdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetTaxableEventThresholdSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class CanSetDateTimeSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetConfigurationModeStatusSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class ConfigurationModeStatusChangedSend : SendTransactionalMessage {
    
    private bool inConfigurationModeField;
    
    /// <remarks/>
    public bool InConfigurationMode {
        get {
            return this.inConfigurationModeField;
        }
        set {
            this.inConfigurationModeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetThemeBingoInformationSend : SendTransactionalMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetInstalledRomInformationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetEgmSerialNumberSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class GetDiscoveryPortSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class CashoutStatusSend : SendTransactionalMessage {
    
    private string cashoutIdField;
    
    private CashoutStatus statusField;
    
    private Amount requestedAmountField;
    
    private Amount cashedOutAmountField;
    
    /// <remarks/>
    public string CashoutId {
        get {
            return this.cashoutIdField;
        }
        set {
            this.cashoutIdField = value;
        }
    }
    
    /// <remarks/>
    public CashoutStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    public Amount RequestedAmount {
        get {
            return this.requestedAmountField;
        }
        set {
            this.requestedAmountField = value;
        }
    }
    
    /// <remarks/>
    public Amount CashedOutAmount {
        get {
            return this.cashedOutAmountField;
        }
        set {
            this.cashedOutAmountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public enum CashoutStatus {
    
    /// <remarks/>
    Ignored,
    
    /// <remarks/>
    Denied,
    
    /// <remarks/>
    Aborted,
    
    /// <remarks/>
    Canceled,
    
    /// <remarks/>
    Completed,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class RequestPartialCashoutSend : SendTransactionalMessage {
    
    private Amount cashoutAmountField;
    
    private bool allowPlayerCancelField;
    
    /// <remarks/>
    public Amount CashoutAmount {
        get {
            return this.cashoutAmountField;
        }
        set {
            this.cashoutAmountField = value;
        }
    }
    
    /// <remarks/>
    public bool AllowPlayerCancel {
        get {
            return this.allowPlayerCancelField;
        }
        set {
            this.allowPlayerCancelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class RequestCashoutSend : SendTransactionalMessage {
    
    private bool allowPlayerCancelField;
    
    /// <remarks/>
    public bool AllowPlayerCancel {
        get {
            return this.allowPlayerCancelField;
        }
        set {
            this.allowPlayerCancelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class GetPropertiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class ReportVoucherStackedSend : SendTransactionalMessage {
    
    private int systemIdField;
    
    private string validationNumberField;
    
    private bool acceptField;
    
    /// <remarks/>
    public int SystemId {
        get {
            return this.systemIdField;
        }
        set {
            this.systemIdField = value;
        }
    }
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public bool Accept {
        get {
            return this.acceptField;
        }
        set {
            this.acceptField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class VoucherValidationResponseSend : SendTransactionalMessage {
    
    private int systemIdField;
    
    private string validationNumberField;
    
    private bool acceptField;
    
    /// <remarks/>
    public int SystemId {
        get {
            return this.systemIdField;
        }
        set {
            this.systemIdField = value;
        }
    }
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
    
    /// <remarks/>
    public bool Accept {
        get {
            return this.acceptField;
        }
        set {
            this.acceptField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class RequestVoucherValidationSend : SendTransactionalMessage {
    
    private int systemIdField;
    
    private string validationNumberField;
    
    /// <remarks/>
    public int SystemId {
        get {
            return this.systemIdField;
        }
        set {
            this.systemIdField = value;
        }
    }
    
    /// <remarks/>
    public string ValidationNumber {
        get {
            return this.validationNumberField;
        }
        set {
            this.validationNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class SetValidationRegistrationSend : SendTransactionalMessage {
    
    private List<int> systemIdListField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("SystemId", IsNullable=false)]
    public List<int> SystemIdList {
        get {
            return this.systemIdListField;
        }
        set {
            this.systemIdListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class CashoutReviewResponseSend : SendTransactionalMessage {
    
    private CashoutReviewType cashoutReviewTypeField;
    
    private CashoutResponseStatus statusField;
    
    /// <remarks/>
    public CashoutReviewType CashoutReviewType {
        get {
            return this.cashoutReviewTypeField;
        }
        set {
            this.cashoutReviewTypeField = value;
        }
    }
    
    /// <remarks/>
    public CashoutResponseStatus Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public enum CashoutReviewType {
    
    /// <remarks/>
    PreCustomCashoutReview,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public enum CashoutResponseStatus {
    
    /// <remarks/>
    Completed,
    
    /// <remarks/>
    Error,
    
    /// <remarks/>
    UserCanceled,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class RequestCashoutReviewSend : SendTransactionalMessage {
    
    private CashoutReviewType cashoutReviewTypeField;
    
    /// <remarks/>
    public CashoutReviewType CashoutReviewType {
        get {
            return this.cashoutReviewTypeField;
        }
        set {
            this.cashoutReviewTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class SetCashoutReviewRegistrationSend : SendTransactionalMessage {
    
    private List<CashoutReviewType> cashoutReviewTypeListField = new List<CashoutReviewType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Register", IsNullable=false)]
    public List<CashoutReviewType> CashoutReviewTypeList {
        get {
            return this.cashoutReviewTypeListField;
        }
        set {
            this.cashoutReviewTypeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CallAttendant {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCallAttendantVer1.xsd")]
public partial class ClearPriorityCallAttendantSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CallAttendant {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCallAttendantVer1.xsd")]
public partial class SetPriorityCallAttendantSend : SendTransactionalMessage {
    
    private bool ignoreLampsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool IgnoreLamps {
        get {
            return this.ignoreLampsField;
        }
        set {
            this.ignoreLampsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Bonusing {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBonusingVer1.xsd")]
public partial class BonusPaidSend : SendTransactionalMessage {
    
    private string transferIdField;
    
    private Amount amountField;
    
    /// <remarks/>
    public string TransferId {
        get {
            return this.transferIdField;
        }
        set {
            this.transferIdField = value;
        }
    }
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Bonusing {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBonusingVer1.xsd")]
public partial class EscrowBonusWinSend : SendTransactionalMessage {
    
    private string transferIdField;
    
    private Amount amountField;
    
    /// <remarks/>
    public string TransferId {
        get {
            return this.transferIdField;
        }
        set {
            this.transferIdField = value;
        }
    }
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BetStepsConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBetStepsConfigurationVer1.xsd")]
public partial class GetBetStepsConfigurationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetPlayerMetersSend", Namespace="F2XBankStatusVer1.xsd")]
public partial class GetPlayerMetersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class BankEventSend : SendTransactionalMessage {
    
    private BankEventData bankEventField;
    
    /// <remarks/>
    public BankEventData BankEvent {
        get {
            return this.bankEventField;
        }
        set {
            this.bankEventField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class SetBankEventRegistrationSend : SendTransactionalMessage {
    
    private List<BankEventType> bankEventTypeListField = new List<BankEventType>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Event", IsNullable=false)]
    public List<BankEventType> BankEventTypeList {
        get {
            return this.bankEventTypeListField;
        }
        set {
            this.bankEventTypeListField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public enum BankEventType {
    
    /// <remarks/>
    CreditMovement,
    
    /// <remarks/>
    CashoutStart,
    
    /// <remarks/>
    CashoutEnd,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class PlayerCashoutRequestSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetConfigDataSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneySetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyWonSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyOutSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyInSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyCommittedChangedSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBetSend))]
[System.Xml.Serialization.XmlIncludeAttribute(typeof(Internal.BankPlay.MoneyBettableTransferSend))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class SendTransactionalMoneyChangedMessage : SendTransactionalMessage {
    
    private PlayerMeters playerMetersField;
    
    /// <remarks/>
    public PlayerMeters PlayerMeters {
        get {
            return this.playerMetersField;
        }
        set {
            this.playerMetersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneySetSend : SendTransactionalMoneyChangedMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyWonSend : SendTransactionalMoneyChangedMessage {
    
    private Amount amountWonField;
    
    /// <remarks/>
    public Amount AmountWon {
        get {
            return this.amountWonField;
        }
        set {
            this.amountWonField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyOutSend : SendTransactionalMoneyChangedMessage {
    
    private Amount amountOutField;
    
    private MoneyOutSource moneyOutSourceField;
    
    /// <remarks/>
    public Amount AmountOut {
        get {
            return this.amountOutField;
        }
        set {
            this.amountOutField = value;
        }
    }
    
    /// <remarks/>
    public MoneyOutSource MoneyOutSource {
        get {
            return this.moneyOutSourceField;
        }
        set {
            this.moneyOutSourceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public enum MoneyOutSource {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    OtherSource,
    
    /// <remarks/>
    Bill,
    
    /// <remarks/>
    Coin,
    
    /// <remarks/>
    Ticket,
    
    /// <remarks/>
    FundsTransfer,
    
    /// <remarks/>
    Handpay,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyInSend : SendTransactionalMoneyChangedMessage {
    
    private Amount amountInField;
    
    private MoneyInSource moneyInSourceField;
    
    private FundsTransferAccountSource fundsTransferAccountSourceField;
    
    private bool fundsTransferAccountSourceFieldSpecified;
    
    /// <remarks/>
    public Amount AmountIn {
        get {
            return this.amountInField;
        }
        set {
            this.amountInField = value;
        }
    }
    
    /// <remarks/>
    public MoneyInSource MoneyInSource {
        get {
            return this.moneyInSourceField;
        }
        set {
            this.moneyInSourceField = value;
        }
    }
    
    /// <remarks/>
    public FundsTransferAccountSource FundsTransferAccountSource {
        get {
            return this.fundsTransferAccountSourceField;
        }
        set {
            this.fundsTransferAccountSourceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool FundsTransferAccountSourceSpecified {
        get {
            return this.fundsTransferAccountSourceFieldSpecified;
        }
        set {
            this.fundsTransferAccountSourceFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public enum MoneyInSource {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    OtherSource,
    
    /// <remarks/>
    Bill,
    
    /// <remarks/>
    Coin,
    
    /// <remarks/>
    Ticket,
    
    /// <remarks/>
    FundsTransfer,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public enum FundsTransferAccountSource {
    
    /// <remarks/>
    OtherAccount,
    
    /// <remarks/>
    CasinoAccount,
    
    /// <remarks/>
    BankAccount,
    
    /// <remarks/>
    BonusSystem,
    
    /// <remarks/>
    NonWinBonusSystem,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyCommittedChangedSend : SendTransactionalMoneyChangedMessage {
    
    private Amount amountCommittedField;
    
    /// <remarks/>
    public Amount AmountCommitted {
        get {
            return this.amountCommittedField;
        }
        set {
            this.amountCommittedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyBetSend : SendTransactionalMoneyChangedMessage {
    
    private Amount amountBetField;
    
    /// <remarks/>
    public Amount AmountBet {
        get {
            return this.amountBetField;
        }
        set {
            this.amountBetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class MoneyBettableTransferSend : SendTransactionalMoneyChangedMessage {
    
    private Amount amountMovedField;
    
    private bool gameTransferRequestSuccessfulField;
    
    private bool gameTransferRequestSuccessfulFieldSpecified;
    
    private BettableTransferDirection bettableTransferDirectionField;
    
    /// <remarks/>
    public Amount AmountMoved {
        get {
            return this.amountMovedField;
        }
        set {
            this.amountMovedField = value;
        }
    }
    
    /// <remarks/>
    public bool GameTransferRequestSuccessful {
        get {
            return this.gameTransferRequestSuccessfulField;
        }
        set {
            this.gameTransferRequestSuccessfulField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GameTransferRequestSuccessfulSpecified {
        get {
            return this.gameTransferRequestSuccessfulFieldSpecified;
        }
        set {
            this.gameTransferRequestSuccessfulFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public BettableTransferDirection BettableTransferDirection {
        get {
            return this.bettableTransferDirectionField;
        }
        set {
            this.bettableTransferDirectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public enum BettableTransferDirection {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    ToUnknownSource,
    
    /// <remarks/>
    FromUnknownSource,
    
    /// <remarks/>
    FromTransferable,
    
    /// <remarks/>
    ToTransferable,
    
    /// <remarks/>
    FromCashEscrow,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetPlayerMetersSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class GetBankPlayPropertiesSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public partial class InactivateAscribedShellContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public partial class ActivateAscribedShellContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public partial class NewAscribedShellContextSend : SendTransactionalMessage {
    
    private GameMode gameModeField;
    
    /// <remarks/>
    public GameMode GameMode {
        get {
            return this.gameModeField;
        }
        set {
            this.gameModeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public enum GameMode {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Play,
    
    /// <remarks/>
    History,
    
    /// <remarks/>
    Utility,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class SetAscribedGameApiVersionsSend : SendTransactionalMessage {
    
    private SetAscribedGameApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetAscribedGameApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class SetAscribedGameApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class GetAscribedGameApiVersionsSend : SendTransactionalMessage {
    
    private AscribedGame ascribedGameField;
    
    private List<Extension> extensionsField = new List<Extension>();
    
    /// <remarks/>
    public AscribedGame AscribedGame {
        get {
            return this.ascribedGameField;
        }
        set {
            this.ascribedGameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="F2XTypesVer1.xsd", IsNullable=false)]
    public List<Extension> Extensions {
        get {
            return this.extensionsField;
        }
        set {
            this.extensionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public partial class ReleaseInternalStorageSend : SendTransactionalMessage {
    
    private Identifier identifierField;
    
    /// <remarks/>
    public Identifier Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public partial class RequestInternalStorageSend : SendTransactionalMessage {
    
    private Identifier identifierField;
    
    private uint requestedSpaceField;
    
    /// <remarks/>
    public Identifier Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    public uint RequestedSpace {
        get {
            return this.requestedSpaceField;
        }
        set {
            this.requestedSpaceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class AvailableAppsChangedSend : SendTransactionalMessage {
    
    private AppInfoList availableField;
    
    private AppInfoList updatedField;
    
    private AppIdentifierList removedField;
    
    /// <remarks/>
    public AppInfoList Available {
        get {
            return this.availableField;
        }
        set {
            this.availableField = value;
        }
    }
    
    /// <remarks/>
    public AppInfoList Updated {
        get {
            return this.updatedField;
        }
        set {
            this.updatedField = value;
        }
    }
    
    /// <remarks/>
    public AppIdentifierList Removed {
        get {
            return this.removedField;
        }
        set {
            this.removedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAllowedSwitchBehaviorsSend : SendTransactionalMessage {
    
    private AppIdentifier targetField;
    
    /// <remarks/>
    public AppIdentifier Target {
        get {
            return this.targetField;
        }
        set {
            this.targetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectorPropertyValuesSend : SendTransactionalMessage {
    
    private AppSelector appField;
    
    private string sectionField;
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public AppSelector App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectorPropertyListSend : SendTransactionalMessage {
    
    private AppSelector appField;
    
    private string sectionField;
    
    /// <remarks/>
    public AppSelector App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAppPropertyValuesSend : SendTransactionalMessage {
    
    private AppIdentifier appField;
    
    private string sectionField;
    
    private PropertyNameList propertiesField;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
    
    /// <remarks/>
    public PropertyNameList Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAppPropertyListSend : SendTransactionalMessage {
    
    private AppIdentifier appField;
    
    private string sectionField;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public string Section {
        get {
            return this.sectionField;
        }
        set {
            this.sectionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetSelectedAppSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class GetAvailableAppsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class AppDecorationsChangedSend : SendTransactionalMessage {
    
    private AppDecorationUpdatesList updatedAppsField;
    
    /// <remarks/>
    public AppDecorationUpdatesList UpdatedApps {
        get {
            return this.updatedAppsField;
        }
        set {
            this.updatedAppsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class GetDecorationContentSend : SendTransactionalMessage {
    
    private DecorationIdentifierList decorationIdentifiersField;
    
    /// <remarks/>
    public DecorationIdentifierList DecorationIdentifiers {
        get {
            return this.decorationIdentifiersField;
        }
        set {
            this.decorationIdentifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class GetAppDecorationsSend : SendTransactionalMessage {
    
    private AppIdentifierList appIdentifiersField;
    
    /// <remarks/>
    public AppIdentifierList AppIdentifiers {
        get {
            return this.appIdentifiersField;
        }
        set {
            this.appIdentifiersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class RemoveDecorationsFromAppsSend : SendTransactionalMessage {
    
    private List<DecorationApps> decorationAppsField = new List<DecorationApps>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DecorationApps")]
    public List<DecorationApps> DecorationApps {
        get {
            return this.decorationAppsField;
        }
        set {
            this.decorationAppsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class AddDecorationsToAppsSend : SendTransactionalMessage {
    
    private List<DecorationApps> decorationAppsField = new List<DecorationApps>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DecorationApps")]
    public List<DecorationApps> DecorationApps {
        get {
            return this.decorationAppsField;
        }
        set {
            this.decorationAppsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class UnregisterDecorationsSend : SendTransactionalMessage {
    
    private List<DecorationIdentifier> decorationIdsField = new List<DecorationIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DecorationIds")]
    public List<DecorationIdentifier> DecorationIds {
        get {
            return this.decorationIdsField;
        }
        set {
            this.decorationIdsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class RegisterDecorationsSend : SendTransactionalMessage {
    
    private List<DecorationInfo> decorationInfoField = new List<DecorationInfo>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DecorationInfo")]
    public List<DecorationInfo> DecorationInfo {
        get {
            return this.decorationInfoField;
        }
        set {
            this.decorationInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class DisplayStateChangedSend : SendTransactionalMessage {
    
    private DisplayControlState displayStateField;
    
    /// <remarks/>
    public DisplayControlState DisplayState {
        get {
            return this.displayStateField;
        }
        set {
            this.displayStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public enum DisplayControlState {
    
    /// <remarks/>
    Hidden,
    
    /// <remarks/>
    Normal,
    
    /// <remarks/>
    Suspended,
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class AppRequestedSend : SendTransactionalMessage {
    
    private AppSelector appField;
    
    private AppSwitchBehavior switchBehaviorField;
    
    private bool requiredField;
    
    /// <remarks/>
    public AppSelector App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public AppSwitchBehavior SwitchBehavior {
        get {
            return this.switchBehaviorField;
        }
        set {
            this.switchBehaviorField = value;
        }
    }
    
    /// <remarks/>
    public bool Required {
        get {
            return this.requiredField;
        }
        set {
            this.requiredField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class ChooserRequestedSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class AppStateChangedSend : SendTransactionalMessage {
    
    private AppState stateField;
    
    /// <remarks/>
    public AppState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetDefaultDenominationSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetDefaultAppSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class DisplayAppSend : SendTransactionalMessage {
    
    private AppSelector appField;
    
    private DisplayControlState displayStateField;
    
    private AppSwitchBehavior switchBehaviorField;
    
    /// <remarks/>
    public AppSelector App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public DisplayControlState DisplayState {
        get {
            return this.displayStateField;
        }
        set {
            this.displayStateField = value;
        }
    }
    
    /// <remarks/>
    public AppSwitchBehavior SwitchBehavior {
        get {
            return this.switchBehaviorField;
        }
        set {
            this.switchBehaviorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class SetChooserOfferableSend : SendTransactionalMessage {
    
    private bool offerableField;
    
    /// <remarks/>
    public bool Offerable {
        get {
            return this.offerableField;
        }
        set {
            this.offerableField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetAppStateSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetAppPerformanceMetersSend : SendTransactionalMessage {
    
    private AppIdentifier appField;
    
    private int periodInWeeksField;
    
    /// <remarks/>
    public AppIdentifier App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public int PeriodInWeeks {
        get {
            return this.periodInWeeksField;
        }
        set {
            this.periodInWeeksField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class GetPriorityAppsSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControlClient {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlClientVer1.xsd")]
public partial class AppSwitchCancelledSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControlClient {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlClientVer1.xsd")]
public partial class AppSwitchRequestSend : SendTransactionalMessage {
    
    private AppSelector appField;
    
    private AppSwitchBehavior switchBehaviorField;
    
    /// <remarks/>
    public AppSelector App {
        get {
            return this.appField;
        }
        set {
            this.appField = value;
        }
    }
    
    /// <remarks/>
    public AppSwitchBehavior SwitchBehavior {
        get {
            return this.switchBehaviorField;
        }
        set {
            this.switchBehaviorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppApiControlVer1.xsd")]
public partial class SetAppApiVersionsSend : SendTransactionalMessage {
    
    private SetAppApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetAppApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppApiControlVer1.xsd")]
public partial class SetAppApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppApiControlVer1.xsd")]
public partial class GetAppApiVersionsSend : SendTransactionalMessage {
    
    private List<Extension> extensionsField = new List<Extension>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="F2XTypesVer1.xsd", IsNullable=false)]
    public List<Extension> Extensions {
        get {
            return this.extensionsField;
        }
        set {
            this.extensionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppActivationVer1.xsd")]
public partial class InactivateAppContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppActivationVer1.xsd")]
public partial class ActivateAppContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppActivationVer1.xsd")]
public partial class NewAppContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActivationVer1.xsd")]
public partial class InactivateContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActivationVer1.xsd")]
public partial class ActivateContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActivationVer1.xsd")]
public partial class NewContextSend : SendTransactionalMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequest {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestVer1.xsd")]
public partial class ActionResponseSend : SendTransactionalMessage {
    
    private byte[] payloadField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequestLite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestLiteVer1.xsd")]
public partial class ActionResponseLiteSend : SendTransactionalMessage {
    
    private byte[] payloadField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class UpdateSportsBettingPropertiesSend : SendMessage {
    
    private SportsBettingProperties sportsBettingPropertiesField;
    
    /// <remarks/>
    public SportsBettingProperties SportsBettingProperties {
        get {
            return this.sportsBettingPropertiesField;
        }
        set {
            this.sportsBettingPropertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public partial class AddMoneySend : SendMessage {
    
    private Amount amountField;
    
    /// <remarks/>
    public Amount Amount {
        get {
            return this.amountField;
        }
        set {
            this.amountField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class ShellHistoryWritePermittedSend : SendMessage {
    
    private bool writePermittedField;
    
    private int coplayerField;
    
    /// <remarks/>
    public bool WritePermitted {
        get {
            return this.writePermittedField;
        }
        set {
            this.writePermittedField = value;
        }
    }
    
    /// <remarks/>
    public int Coplayer {
        get {
            return this.coplayerField;
        }
        set {
            this.coplayerField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class GetGameLevelAwardValuesSend : SendMessage {
    
    private List<ThemeIdentifier> themeField = new List<ThemeIdentifier>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Theme")]
    public List<ThemeIdentifier> Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetEnabledPayvarBasedProgressiveValuesSend : SendMessage {
    
    private PayvarIdentifier payvarField;
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetPayvarBasedProgressiveValuesSend : SendMessage {
    
    private PayvarIdentifier payvarField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public PayvarIdentifier Payvar {
        get {
            return this.payvarField;
        }
        set {
            this.payvarField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetEnabledThemeBasedProgressiveValuesSend : SendMessage {
    
    private ThemeIdentifier themeField;
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class GetThemeBasedProgressiveValuesSend : SendMessage {
    
    private ThemeIdentifier themeField;
    
    private List<uint> denominationField = new List<uint>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Denomination")]
    public List<uint> Denomination {
        get {
            return this.denominationField;
        }
        set {
            this.denominationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="UpdatePropertiesSend", Namespace="F2XPlayerTippingVer1.xsd")]
public partial class UpdatePropertiesSend : SendMessage {
    
    private Properties contentField = new Properties();
    
    /// <remarks/>
    public Properties Content {
        get {
            return this.contentField;
        }
        set {
            this.contentField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class PidConfigurationChangedSend : SendMessage {
    
    private PidConfigurationInfo pidConfigurationInfoField;
    
    /// <remarks/>
    public PidConfigurationInfo PidConfigurationInfo {
        get {
            return this.pidConfigurationInfoField;
        }
        set {
            this.pidConfigurationInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class SessionTrackingStatusChangedSend : SendMessage {
    
    private bool isSessionTrackingActiveField;
    
    /// <remarks/>
    public bool IsSessionTrackingActive {
        get {
            return this.isSessionTrackingActiveField;
        }
        set {
            this.isSessionTrackingActiveField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCallRxSend : SendMessage {
    
    private RequestParcel parcelField;
    
    /// <remarks/>
    public RequestParcel Parcel {
        get {
            return this.parcelField;
        }
        set {
            this.parcelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCallTxSend : SendMessage {
    
    private RequestParcel parcelField;
    
    /// <remarks/>
    public RequestParcel Parcel {
        get {
            return this.parcelField;
        }
        set {
            this.parcelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd")]
public partial class ReadCritDataSend : SendMessage {
    
    private List<CriticalDataItemSelector> criticalDataItemSelectorField = new List<CriticalDataItemSelector>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CriticalDataItemSelector")]
    public List<CriticalDataItemSelector> CriticalDataItemSelector {
        get {
            return this.criticalDataItemSelectorField;
        }
        set {
            this.criticalDataItemSelectorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class UpdateMessagesSend : SendMessage {
    
    private List<Message> messagesField = new List<Message>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<Message> Messages {
        get {
            return this.messagesField;
        }
        set {
            this.messagesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineSupervisionVer1.xsd")]
public partial class RequestMachineRebootSend : SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class ParkSend : SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class SetApiVersionsSend : SendMessage {
    
    private SetApiVersionsSendCategoryVersions categoryVersionsField;
    
    /// <remarks/>
    public SetApiVersionsSendCategoryVersions CategoryVersions {
        get {
            return this.categoryVersionsField;
        }
        set {
            this.categoryVersionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLinkControlVer1.xsd")]
public partial class SetApiVersionsSendCategoryVersions {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion> CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class GetApiVersionsSend : SendMessage {
    
    private string jurisdictionField;
    
    private string connectTokenField;
    
    private GetApiVersionsSendDiscoveryContexts discoveryContextsField;
    
    private GetApiVersionsSendExtensionImports extensionImportsField;
    
    /// <remarks/>
    public string Jurisdiction {
        get {
            return this.jurisdictionField;
        }
        set {
            this.jurisdictionField = value;
        }
    }
    
    /// <remarks/>
    public string ConnectToken {
        get {
            return this.connectTokenField;
        }
        set {
            this.connectTokenField = value;
        }
    }
    
    /// <remarks/>
    public GetApiVersionsSendDiscoveryContexts DiscoveryContexts {
        get {
            return this.discoveryContextsField;
        }
        set {
            this.discoveryContextsField = value;
        }
    }
    
    /// <remarks/>
    public GetApiVersionsSendExtensionImports ExtensionImports {
        get {
            return this.extensionImportsField;
        }
        set {
            this.extensionImportsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLinkControlVer1.xsd")]
public partial class GetApiVersionsSendDiscoveryContexts {
    
    private List<DiscoveryContext> discoveryContextField = new List<DiscoveryContext>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DiscoveryContext")]
    public List<DiscoveryContext> DiscoveryContext {
        get {
            return this.discoveryContextField;
        }
        set {
            this.discoveryContextField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLinkControlVer1.xsd")]
public partial class GetApiVersionsSendExtensionImports {
    
    private List<ExtensionImport> extensionImportField = new List<ExtensionImport>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ExtensionImport")]
    public List<ExtensionImport> ExtensionImport {
        get {
            return this.extensionImportField;
        }
        set {
            this.extensionImportField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XJackpotItalyVer1.xsd")]
public partial class GetJackpotBonusValuesSend : SendMessage {
    
    private ThemeIdentifier themeIdentifierField;
    
    /// <remarks/>
    public ThemeIdentifier ThemeIdentifier {
        get {
            return this.themeIdentifierField;
        }
        set {
            this.themeIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class UpdateReserveParametersSend : SendMessage {
    
    private ReserveParameters reserveParametersField;
    
    /// <remarks/>
    public ReserveParameters ReserveParameters {
        get {
            return this.reserveParametersField;
        }
        set {
            this.reserveParametersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GetThemeBasedGameLevelValuesSend : SendMessage {
    
    private ThemeIdentifier themeField;
    
    private List<ProgressiveLevelPayvarDenomData> progressiveLevelPayvarDenomDataField = new List<ProgressiveLevelPayvarDenomData>();
    
    /// <remarks/>
    public ThemeIdentifier Theme {
        get {
            return this.themeField;
        }
        set {
            this.themeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ProgressiveLevelPayvarDenomData")]
    public List<ProgressiveLevelPayvarDenomData> ProgressiveLevelPayvarDenomData {
        get {
            return this.progressiveLevelPayvarDenomDataField;
        }
        set {
            this.progressiveLevelPayvarDenomDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class AbortCompleteSend : SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class FinalizeAwardResponseSend : SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EvalOutcomeResponseSend : SendMessage {
    
    private bool isLastOutcomeField;
    
    /// <remarks/>
    public bool IsLastOutcome {
        get {
            return this.isLastOutcomeField;
        }
        set {
            this.isLastOutcomeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class EnrollResponseSend : SendMessage {
    
    private bool successField;
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class UpdateFlashPlayerClockPropertiesSend : SendMessage {
    
    private FlashPlayerClockProperties flashPlayerClockPropertiesField;
    
    /// <remarks/>
    public FlashPlayerClockProperties FlashPlayerClockProperties {
        get {
            return this.flashPlayerClockPropertiesField;
        }
        set {
            this.flashPlayerClockPropertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class SetControllerLevelValuesSend : SendMessage {
    
    private ControllerLevelValues valuesField;
    
    /// <remarks/>
    public ControllerLevelValues Values {
        get {
            return this.valuesField;
        }
        set {
            this.valuesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class GetDateTimeSend : SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConnectVer1.xsd")]
public partial class ShutdownSend : SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConnectVer1.xsd")]
public partial class SetLinkControlApiVersionSend : SendMessage {
    
    private CategoryVersion categoryVersionField;
    
    /// <remarks/>
    public CategoryVersion CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConnectVer1.xsd")]
public partial class GetLinkControlApiVersionsSend : SendMessage {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class UpdateChooserServicesPropertiesSend : SendMessage {
    
    private ChooserServicesProperties propertiesField;
    
    /// <remarks/>
    public ChooserServicesProperties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class SetDateTimeSend : SendMessage {
    
    private System.DateTime dateTimeToSetField;
    
    /// <remarks/>
    public System.DateTime DateTimeToSet {
        get {
            return this.dateTimeToSetField;
        }
        set {
            this.dateTimeToSetField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class UpdatePropertiesSend : SendMessage {
    
    private Properties propertiesField;
    
    /// <remarks/>
    public Properties Properties {
        get {
            return this.propertiesField;
        }
        set {
            this.propertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class UpdateBankPlayPropertiesSend : SendMessage {
    
    private BankPlayProperties bankPlayPropertiesField;
    
    /// <remarks/>
    public BankPlayProperties BankPlayProperties {
        get {
            return this.bankPlayPropertiesField;
        }
        set {
            this.bankPlayPropertiesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequest {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestVer1.xsd")]
public partial class ActionRequestSend : SendMessage {
    
    private byte[] payloadField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequestLite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestLiteVer1.xsd")]
public partial class ActionRequestLiteSend : SendMessage {
    
    private byte[] payloadField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Payload {
        get {
            return this.payloadField;
        }
        set {
            this.payloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequestLite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestLiteVer1.xsd")]
public partial class ActionRequestLiteMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActionRequestLiteReply", typeof(ActionRequestLiteReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActionRequestLiteSend", typeof(ActionRequestLiteSend))]
    [System.Xml.Serialization.XmlElementAttribute("ActionResponseLiteReply", typeof(ActionResponseLiteReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActionResponseLiteSend", typeof(ActionResponseLiteSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequest {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XActionRequestVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XActionRequestVer1.xsd", IsNullable=false)]
public partial class ActionRequest {
    
    private Version versionField;
    
    private ActionRequestMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ActionRequestMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ActionRequest {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActionRequestVer1.xsd")]
public partial class ActionRequestMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActionRequestReply", typeof(ActionRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActionRequestSend", typeof(ActionRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("ActionResponseReply", typeof(ActionResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActionResponseSend", typeof(ActionResponseSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XActivationVer1.xsd", IsNullable=false)]
public partial class Activation {
    
    private Version versionField;
    
    private ActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Activation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XActivationVer1.xsd")]
public partial class ActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateContextReply", typeof(ActivateContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateContextSend", typeof(ActivateContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateContextReply", typeof(InactivateContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateContextSend", typeof(InactivateContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewContextReply", typeof(NewContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewContextSend", typeof(NewContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppActivationVer1.xsd", IsNullable=false)]
public partial class AppActivation {
    
    private Version versionField;
    
    private AppActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppActivationVer1.xsd")]
public partial class AppActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateAppContextReply", typeof(ActivateAppContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateAppContextSend", typeof(ActivateAppContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateAppContextReply", typeof(InactivateAppContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateAppContextSend", typeof(InactivateAppContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewAppContextReply", typeof(NewAppContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewAppContextSend", typeof(NewAppContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppApiControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppApiControlVer1.xsd", IsNullable=false)]
public partial class AppApiControl {
    
    private Version versionField;
    
    private AppApiControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppApiControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppApiControlVer1.xsd")]
public partial class AppApiControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetAppApiVersionsReply", typeof(GetAppApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppApiVersionsSend", typeof(GetAppApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetAppApiVersionsReply", typeof(SetAppApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetAppApiVersionsSend", typeof(SetAppApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControlClient {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppControlClientVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppControlClientVer1.xsd", IsNullable=false)]
public partial class AppControlClient {
    
    private Version versionField;
    
    private AppControlClientMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppControlClientMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControlClient {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlClientVer1.xsd")]
public partial class AppControlClientMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppSwitchCancelledReply", typeof(AppSwitchCancelledReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppSwitchCancelledSend", typeof(AppSwitchCancelledSend))]
    [System.Xml.Serialization.XmlElementAttribute("AppSwitchRequestReply", typeof(AppSwitchRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppSwitchRequestSend", typeof(AppSwitchRequestSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppControlVer2.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppControlVer2.xsd", IsNullable=false)]
public partial class AppControl {
    
    private Version versionField;
    
    private AppControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppControlVer2.xsd")]
public partial class AppControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppRequestedReply", typeof(AppRequestedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppRequestedSend", typeof(AppRequestedSend))]
    [System.Xml.Serialization.XmlElementAttribute("AppStateChangedReply", typeof(AppStateChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppStateChangedSend", typeof(AppStateChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("ChooserRequestedReply", typeof(ChooserRequestedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ChooserRequestedSend", typeof(ChooserRequestedSend))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayAppReply", typeof(DisplayAppReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayAppSend", typeof(DisplayAppSend))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayStateChangedReply", typeof(DisplayStateChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayStateChangedSend", typeof(DisplayStateChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPerformanceMetersReply", typeof(GetAppPerformanceMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPerformanceMetersSend", typeof(GetAppPerformanceMetersSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppStateReply", typeof(GetAppStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppStateSend", typeof(GetAppStateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultAppReply", typeof(GetDefaultAppReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultAppSend", typeof(GetDefaultAppSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultDenominationReply", typeof(GetDefaultDenominationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultDenominationSend", typeof(GetDefaultDenominationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPriorityAppsReply", typeof(GetPriorityAppsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPriorityAppsSend", typeof(GetPriorityAppsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetChooserOfferableReply", typeof(SetChooserOfferableReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetChooserOfferableSend", typeof(SetChooserOfferableSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppDecorationManagementVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppDecorationManagementVer1.xsd", IsNullable=false)]
public partial class AppDecorationManagement {
    
    private Version versionField;
    
    private AppDecorationManagementMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppDecorationManagementMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationManagementVer1.xsd")]
public partial class AppDecorationManagementMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddDecorationsToAppsReply", typeof(AddDecorationsToAppsReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddDecorationsToAppsSend", typeof(AddDecorationsToAppsSend))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterDecorationsReply", typeof(RegisterDecorationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterDecorationsSend", typeof(RegisterDecorationsSend))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveDecorationsFromAppsReply", typeof(RemoveDecorationsFromAppsReply))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveDecorationsFromAppsSend", typeof(RemoveDecorationsFromAppsSend))]
    [System.Xml.Serialization.XmlElementAttribute("UnregisterDecorationsReply", typeof(UnregisterDecorationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("UnregisterDecorationsSend", typeof(UnregisterDecorationsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppDecorationQueryVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppDecorationQueryVer1.xsd", IsNullable=false)]
public partial class AppDecorationQuery {
    
    private Version versionField;
    
    private AppDecorationQueryMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppDecorationQueryMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppDecorationQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppDecorationQueryVer1.xsd")]
public partial class AppDecorationQueryMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppDecorationsChangedReply", typeof(AppDecorationsChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppDecorationsChangedSend", typeof(AppDecorationsChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppDecorationsReply", typeof(GetAppDecorationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppDecorationsSend", typeof(GetAppDecorationsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDecorationContentReply", typeof(GetDecorationContentReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDecorationContentSend", typeof(GetDecorationContentSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppQueryVer2.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppQueryVer2.xsd", IsNullable=false)]
public partial class AppQuery {
    
    private Version versionField;
    
    private AppQueryMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppQueryMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppQueryVer2.xsd")]
public partial class AppQueryMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AvailableAppsChangedReply", typeof(AvailableAppsChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AvailableAppsChangedSend", typeof(AvailableAppsChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAllowedSwitchBehaviorsReply", typeof(GetAllowedSwitchBehaviorsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAllowedSwitchBehaviorsSend", typeof(GetAllowedSwitchBehaviorsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyListReply", typeof(GetAppPropertyListReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyListSend", typeof(GetAppPropertyListSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyValuesReply", typeof(GetAppPropertyValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyValuesSend", typeof(GetAppPropertyValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableAppsReply", typeof(GetAvailableAppsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableAppsSend", typeof(GetAvailableAppsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedAppReply", typeof(GetSelectedAppReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedAppSend", typeof(GetSelectedAppSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectorPropertyListReply", typeof(GetSelectorPropertyListReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectorPropertyListSend", typeof(GetSelectorPropertyListSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectorPropertyValuesReply", typeof(GetSelectorPropertyValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectorPropertyValuesSend", typeof(GetSelectorPropertyValuesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAppStorageVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAppStorageVer1.xsd", IsNullable=false)]
public partial class AppStorage {
    
    private Version versionField;
    
    private AppStorageMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AppStorageMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AppStorage {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAppStorageVer1.xsd")]
public partial class AppStorageMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReleaseInternalStorageReply", typeof(ReleaseInternalStorageReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReleaseInternalStorageSend", typeof(ReleaseInternalStorageSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestInternalStorageReply", typeof(RequestInternalStorageReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestInternalStorageSend", typeof(RequestInternalStorageSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAscribedGameApiControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd", IsNullable=false)]
public partial class AscribedGameApiControl {
    
    private Version versionField;
    
    private AscribedGameApiControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AscribedGameApiControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedGameApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedGameApiControlVer1.xsd")]
public partial class AscribedGameApiControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetAscribedGameApiVersionsReply", typeof(GetAscribedGameApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAscribedGameApiVersionsSend", typeof(GetAscribedGameApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetAscribedGameApiVersionsReply", typeof(SetAscribedGameApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetAscribedGameApiVersionsSend", typeof(SetAscribedGameApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XAscribedShellActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XAscribedShellActivationVer1.xsd", IsNullable=false)]
public partial class AscribedShellActivation {
    
    private Version versionField;
    
    private AscribedShellActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public AscribedShellActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.AscribedShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XAscribedShellActivationVer1.xsd")]
public partial class AscribedShellActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateAscribedShellContextReply", typeof(ActivateAscribedShellContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateAscribedShellContextSend", typeof(ActivateAscribedShellContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateAscribedShellContextReply", typeof(InactivateAscribedShellContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateAscribedShellContextSend", typeof(InactivateAscribedShellContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewAscribedShellContextReply", typeof(NewAscribedShellContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewAscribedShellContextSend", typeof(NewAscribedShellContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XBankPlayVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XBankPlayVer1.xsd", IsNullable=false)]
public partial class BankPlay {
    
    private Version versionField;
    
    private BankPlayMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public BankPlayMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankPlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankPlayVer1.xsd")]
public partial class BankPlayMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetBankPlayPropertiesReply", typeof(GetBankPlayPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetBankPlayPropertiesSend", typeof(GetBankPlayPropertiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataReply", typeof(GetConfigDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSend", typeof(GetConfigDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerMetersReply", typeof(GetPlayerMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerMetersSend", typeof(GetPlayerMetersSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyBetReply", typeof(MoneyBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyBetSend", typeof(MoneyBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyBettableTransferReply", typeof(MoneyBettableTransferReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyBettableTransferSend", typeof(MoneyBettableTransferSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyCommittedChangedReply", typeof(MoneyCommittedChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyCommittedChangedSend", typeof(MoneyCommittedChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyInReply", typeof(MoneyInReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyInSend", typeof(MoneyInSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyOutReply", typeof(MoneyOutReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyOutSend", typeof(MoneyOutSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneySetReply", typeof(MoneySetReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneySetSend", typeof(MoneySetSend))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyWonReply", typeof(MoneyWonReply))]
    [System.Xml.Serialization.XmlElementAttribute("MoneyWonSend", typeof(MoneyWonSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerCashoutRequestReply", typeof(PlayerCashoutRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerCashoutRequestSend", typeof(PlayerCashoutRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateBankPlayPropertiesReply", typeof(UpdateBankPlayPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateBankPlayPropertiesSend", typeof(UpdateBankPlayPropertiesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XBankStatusVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XBankStatusVer1.xsd", IsNullable=false)]
public partial class BankStatus {
    
    private Version versionField;
    
    private BankStatusMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public BankStatusMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BankStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBankStatusVer1.xsd")]
public partial class BankStatusMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BankEventReply", typeof(BankEventReply))]
    [System.Xml.Serialization.XmlElementAttribute("BankEventSend", typeof(BankEventSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerMetersReply", typeof(GetPlayerMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerMetersSend", typeof(GetPlayerMetersSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetBankEventRegistrationReply", typeof(SetBankEventRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetBankEventRegistrationSend", typeof(SetBankEventRegistrationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BetStepsConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XBetStepsConfigurationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XBetStepsConfigurationVer1.xsd", IsNullable=false)]
public partial class BetStepsConfiguration {
    
    private Version versionField;
    
    private BetStepsConfigurationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public BetStepsConfigurationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.BetStepsConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBetStepsConfigurationVer1.xsd")]
public partial class BetStepsConfigurationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetBetStepsConfigurationReply", typeof(GetBetStepsConfigurationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetBetStepsConfigurationSend", typeof(GetBetStepsConfigurationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Bonusing {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XBonusingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XBonusingVer1.xsd", IsNullable=false)]
public partial class Bonusing {
    
    private Version versionField;
    
    private BonusingMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public BonusingMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Bonusing {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XBonusingVer1.xsd")]
public partial class BonusingMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BonusPaidReply", typeof(BonusPaidReply))]
    [System.Xml.Serialization.XmlElementAttribute("BonusPaidSend", typeof(BonusPaidSend))]
    [System.Xml.Serialization.XmlElementAttribute("EscrowBonusWinReply", typeof(EscrowBonusWinReply))]
    [System.Xml.Serialization.XmlElementAttribute("EscrowBonusWinSend", typeof(EscrowBonusWinSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CallAttendant {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCallAttendantVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCallAttendantVer1.xsd", IsNullable=false)]
public partial class CallAttendant {
    
    private Version versionField;
    
    private CallAttendantMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CallAttendantMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CallAttendant {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCallAttendantVer1.xsd")]
public partial class CallAttendantMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ClearPriorityCallAttendantReply", typeof(ClearPriorityCallAttendantReply))]
    [System.Xml.Serialization.XmlElementAttribute("ClearPriorityCallAttendantSend", typeof(ClearPriorityCallAttendantSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetPriorityCallAttendantReply", typeof(SetPriorityCallAttendantReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetPriorityCallAttendantSend", typeof(SetPriorityCallAttendantSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCashDeviceSupervisionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd", IsNullable=false)]
public partial class CashDeviceSupervision {
    
    private Version versionField;
    
    private CashDeviceSupervisionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CashDeviceSupervisionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CashDeviceSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashDeviceSupervisionVer1.xsd")]
public partial class CashDeviceSupervisionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CashoutReviewResponseReply", typeof(CashoutReviewResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("CashoutReviewResponseSend", typeof(CashoutReviewResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReportVoucherStackedReply", typeof(ReportVoucherStackedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReportVoucherStackedSend", typeof(ReportVoucherStackedSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestCashoutReviewReply", typeof(RequestCashoutReviewReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestCashoutReviewSend", typeof(RequestCashoutReviewSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestVoucherValidationReply", typeof(RequestVoucherValidationReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestVoucherValidationSend", typeof(RequestVoucherValidationSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetCashoutReviewRegistrationReply", typeof(SetCashoutReviewRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetCashoutReviewRegistrationSend", typeof(SetCashoutReviewRegistrationSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetValidationRegistrationReply", typeof(SetValidationRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetValidationRegistrationSend", typeof(SetValidationRegistrationSend))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherValidationResponseReply", typeof(VoucherValidationResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherValidationResponseSend", typeof(VoucherValidationResponseSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCashoutVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCashoutVer1.xsd", IsNullable=false)]
public partial class Cashout {
    
    private Version versionField;
    
    private CashoutMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CashoutMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Cashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCashoutVer1.xsd")]
public partial class CashoutMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CashoutStatusReply", typeof(CashoutStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("CashoutStatusSend", typeof(CashoutStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPropertiesReply", typeof(GetPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPropertiesSend", typeof(GetPropertiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestCashoutReply", typeof(RequestCashoutReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestCashoutSend", typeof(RequestCashoutSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestPartialCashoutReply", typeof(RequestPartialCashoutReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestPartialCashoutSend", typeof(RequestPartialCashoutSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdatePropertiesReply", typeof(UpdatePropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdatePropertiesSend", typeof(UpdatePropertiesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoConfigVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCdsBingoConfigVer1.xsd", IsNullable=false)]
public partial class CdsBingoConfig {
    
    private Version versionField;
    
    private CdsBingoConfigMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsBingoConfigMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoConfigVer1.xsd")]
public partial class CdsBingoConfigMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CanSetDateTimeReply", typeof(CanSetDateTimeReply))]
    [System.Xml.Serialization.XmlElementAttribute("CanSetDateTimeSend", typeof(CanSetDateTimeSend))]
    [System.Xml.Serialization.XmlElementAttribute("ConfigurationModeStatusChangedReply", typeof(ConfigurationModeStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ConfigurationModeStatusChangedSend", typeof(ConfigurationModeStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigurationModeStatusReply", typeof(GetConfigurationModeStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigurationModeStatusSend", typeof(GetConfigurationModeStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDiscoveryPortReply", typeof(GetDiscoveryPortReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDiscoveryPortSend", typeof(GetDiscoveryPortSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEgmSerialNumberReply", typeof(GetEgmSerialNumberReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEgmSerialNumberSend", typeof(GetEgmSerialNumberSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetFloorLocationReply", typeof(GetFloorLocationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetFloorLocationSend", typeof(GetFloorLocationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetInstalledRomInformationReply", typeof(GetInstalledRomInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetInstalledRomInformationSend", typeof(GetInstalledRomInformationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetMachineIdentificationCabinetModelReply", typeof(GetMachineIdentificationCabinetModelReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetMachineIdentificationCabinetModelSend", typeof(GetMachineIdentificationCabinetModelSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetTaxableEventThresholdReply", typeof(GetTaxableEventThresholdReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetTaxableEventThresholdSend", typeof(GetTaxableEventThresholdSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeBingoInformationReply", typeof(GetThemeBingoInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeBingoInformationSend", typeof(GetThemeBingoInformationSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetDateTimeReply", typeof(SetDateTimeReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetDateTimeSend", typeof(SetDateTimeSend))]
    [System.Xml.Serialization.XmlElementAttribute("TaxableEventThresholdChangedReply", typeof(TaxableEventThresholdChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("TaxableEventThresholdChangedSend", typeof(TaxableEventThresholdChangedSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd", IsNullable=false)]
public partial class CdsBingoMeterReader {
    
    private Version versionField;
    
    private CdsBingoMeterReaderMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsBingoMeterReaderMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingoMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoMeterReaderVer1.xsd")]
public partial class CdsBingoMeterReaderMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetBingoMetersMaxValueReply", typeof(GetBingoMetersMaxValueReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetBingoMetersMaxValueSend", typeof(GetBingoMetersMaxValueSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReadBingoMetersReply", typeof(ReadBingoMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReadBingoMetersSend", typeof(ReadBingoMetersSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsBingoVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCdsBingoVer1.xsd", IsNullable=false)]
public partial class CdsBingo {
    
    private Version versionField;
    
    private CdsBingoMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsBingoMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsBingoVer1.xsd")]
public partial class CdsBingoMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CommitGameInProgressRequestReply", typeof(CommitGameInProgressRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitGameInProgressRequestSend", typeof(CommitGameInProgressRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollmentRequestReply", typeof(EnrollmentRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollmentRequestSend", typeof(EnrollmentRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollmentResponseReply", typeof(EnrollmentResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollmentResponseSend", typeof(EnrollmentResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("FinalExpectedOutcomeRequestReply", typeof(FinalExpectedOutcomeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("FinalExpectedOutcomeRequestSend", typeof(FinalExpectedOutcomeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("MachineStatusChangedReply", typeof(MachineStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("MachineStatusChangedSend", typeof(MachineStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("WinMismatchNotificationReply", typeof(WinMismatchNotificationReply))]
    [System.Xml.Serialization.XmlElementAttribute("WinMismatchNotificationSend", typeof(WinMismatchNotificationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsEcpVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCdsEcpVer1.xsd", IsNullable=false)]
public partial class CdsEcp {
    
    private Version versionField;
    
    private CdsEcpMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsEcpMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsEcp {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsEcpVer1.xsd")]
public partial class CdsEcpMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActionPlayReply", typeof(ActionPlayReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActionPlaySend", typeof(ActionPlaySend))]
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedReply", typeof(AwardMismatchDetectedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedSend", typeof(AwardMismatchDetectedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigReply", typeof(GetConfigDataCdsGameConfigReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigSend", typeof(GetConfigDataCdsGameConfigSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataReply", typeof(GetEnrollmentResponseDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataSend", typeof(GetEnrollmentResponseDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlayCompleteReply", typeof(PlayCompleteReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlayCompleteSend", typeof(PlayCompleteSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetBetDataReply", typeof(SetBetDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetBetDataSend", typeof(SetBetDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataReply", typeof(SetEnrollmentRequestDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataSend", typeof(SetEnrollmentRequestDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsHhrVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCdsHhrVer1.xsd", IsNullable=false)]
public partial class CdsHhr {
    
    private Version versionField;
    
    private CdsHhrMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsHhrMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsHhr {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsHhrVer1.xsd")]
public partial class CdsHhrMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedReply", typeof(AwardMismatchDetectedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedSend", typeof(AwardMismatchDetectedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigReply", typeof(GetConfigDataCdsGameConfigReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigSend", typeof(GetConfigDataCdsGameConfigSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMultidrawSupportedReply", typeof(GetConfigDataMultidrawSupportedReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMultidrawSupportedSend", typeof(GetConfigDataMultidrawSupportedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataReply", typeof(GetEnrollmentResponseDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataSend", typeof(GetEnrollmentResponseDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataReply", typeof(SetEnrollmentRequestDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataSend", typeof(SetEnrollmentRequestDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsIcdVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCdsIcdVer1.xsd", IsNullable=false)]
public partial class CdsIcd {
    
    private Version versionField;
    
    private CdsIcdMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsIcdMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsIcd {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsIcdVer1.xsd")]
public partial class CdsIcdMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedReply", typeof(AwardMismatchDetectedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedSend", typeof(AwardMismatchDetectedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigReply", typeof(GetConfigDataCdsGameConfigReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigSend", typeof(GetConfigDataCdsGameConfigSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataReply", typeof(GetEnrollmentResponseDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataSend", typeof(GetEnrollmentResponseDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataReply", typeof(SetEnrollmentRequestDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataSend", typeof(SetEnrollmentRequestDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetProgressiveLookupDataReply", typeof(SetProgressiveLookupDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetProgressiveLookupDataSend", typeof(SetProgressiveLookupDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsPullTabVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCdsPullTabVer1.xsd", IsNullable=false)]
public partial class CdsPullTab {
    
    private Version versionField;
    
    private CdsPullTabMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CdsPullTabMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CdsPullTab {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCdsPullTabVer1.xsd")]
public partial class CdsPullTabMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedReply", typeof(AwardMismatchDetectedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AwardMismatchDetectedSend", typeof(AwardMismatchDetectedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigReply", typeof(GetConfigDataCdsGameConfigReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataCdsGameConfigSend", typeof(GetConfigDataCdsGameConfigSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMultidrawSupportedReply", typeof(GetConfigDataMultidrawSupportedReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMultidrawSupportedSend", typeof(GetConfigDataMultidrawSupportedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataReply", typeof(GetEnrollmentResponseDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnrollmentResponseDataSend", typeof(GetEnrollmentResponseDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataReply", typeof(SetEnrollmentRequestDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnrollmentRequestDataSend", typeof(SetEnrollmentRequestDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCertificateManagementVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCertificateManagementVer1.xsd", IsNullable=false)]
public partial class CertificateManagement {
    
    private Version versionField;
    
    private CertificateMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CertificateMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CertificateManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCertificateManagementVer1.xsd")]
public partial class CertificateMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddCertificateReply", typeof(AddCertificateReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddCertificateSend", typeof(AddCertificateSend))]
    [System.Xml.Serialization.XmlElementAttribute("HasCertificateReply", typeof(HasCertificateReply))]
    [System.Xml.Serialization.XmlElementAttribute("HasCertificateSend", typeof(HasCertificateSend))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveCertificateReply", typeof(RemoveCertificateReply))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveCertificateSend", typeof(RemoveCertificateSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XChooserDefinitionQueryVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd", IsNullable=false)]
public partial class ChooserDefinitionQuery {
    
    private Version versionField;
    
    private ChooserDefinitionQueryMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ChooserDefinitionQueryMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserDefinitionQuery {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserDefinitionQueryVer1.xsd")]
public partial class ChooserDefinitionQueryMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyListReply", typeof(GetAppPropertyListReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyListSend", typeof(GetAppPropertyListSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyValuesReply", typeof(GetAppPropertyValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppPropertyValuesSend", typeof(GetAppPropertyValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetChooserPropertyListReply", typeof(GetChooserPropertyListReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetChooserPropertyListSend", typeof(GetChooserPropertyListSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetChooserPropertyValuesReply", typeof(GetChooserPropertyValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetChooserPropertyValuesSend", typeof(GetChooserPropertyValuesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XChooserServicesVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XChooserServicesVer1.xsd", IsNullable=false)]
public partial class ChooserServices {
    
    private Version versionField;
    
    private ChooserServicesMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ChooserServicesMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ChooserServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XChooserServicesVer1.xsd")]
public partial class ChooserServicesMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetChooserServicesPropertiesReply", typeof(GetChooserServicesPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetChooserServicesPropertiesSend", typeof(GetChooserServicesPropertiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestChooserReply", typeof(RequestChooserReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestChooserSend", typeof(RequestChooserSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateChooserServicesPropertiesReply", typeof(UpdateChooserServicesPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateChooserServicesPropertiesSend", typeof(UpdateChooserServicesPropertiesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ClockDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XClockDisplayVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XClockDisplayVer1.xsd", IsNullable=false)]
public partial class ClockDisplay {
    
    private Version versionField;
    
    private ClockDisplayMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ClockDisplayMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ClockDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XClockDisplayVer1.xsd")]
public partial class ClockDisplayMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ClockDisplayEnabledChangedReply", typeof(ClockDisplayEnabledChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ClockDisplayEnabledChangedSend", typeof(ClockDisplayEnabledChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetClockDisplayEnabledReply", typeof(GetClockDisplayEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetClockDisplayEnabledSend", typeof(GetClockDisplayEnabledSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XConfigurationModeControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XConfigurationModeControlVer1.xsd", IsNullable=false)]
public partial class ConfigurationModeControl {
    
    private Version versionField;
    
    private ConfigurationModeControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ConfigurationModeControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeControlVer1.xsd")]
public partial class ConfigurationModeControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ConfigModeAvailabilityEventReply", typeof(ConfigModeAvailabilityEventReply))]
    [System.Xml.Serialization.XmlElementAttribute("ConfigModeAvailabilityEventSend", typeof(ConfigModeAvailabilityEventSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnterConfigModeRequestReply", typeof(EnterConfigModeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnterConfigModeRequestSend", typeof(EnterConfigModeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnterConfigModeResponseReply", typeof(EnterConfigModeResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnterConfigModeResponseSend", typeof(EnterConfigModeResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("ExitConfigModeReply", typeof(ExitConfigModeReply))]
    [System.Xml.Serialization.XmlElementAttribute("ExitConfigModeSend", typeof(ExitConfigModeSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XConfigurationModeMonitoringVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XConfigurationModeMonitoringVer1.xsd", IsNullable=false)]
public partial class ConfigurationModeMonitoring {
    
    private Version versionField;
    
    private ConfigurationModeMonitoringMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ConfigurationModeMonitoringMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ConfigurationModeMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConfigurationModeMonitoringVer1.xsd")]
public partial class ConfigurationModeMonitoringMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ConfigModeStateChangedReply", typeof(ConfigModeStateChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ConfigModeStateChangedSend", typeof(ConfigModeStateChangedSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XConnectVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XConnectVer1.xsd", IsNullable=false)]
public partial class Connect {
    
    private Version versionField;
    
    private ConnectMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ConnectMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Connect {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XConnectVer1.xsd")]
public partial class ConnectMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetLinkControlApiVersionsReply", typeof(GetLinkControlApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetLinkControlApiVersionsSend", typeof(GetLinkControlApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetLinkControlApiVersionReply", typeof(SetLinkControlApiVersionReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetLinkControlApiVersionSend", typeof(SetLinkControlApiVersionSend))]
    [System.Xml.Serialization.XmlElementAttribute("ShutdownSend", typeof(ShutdownSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCoplayerActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCoplayerActivationVer1.xsd", IsNullable=false)]
public partial class CoplayerActivation {
    
    private Version versionField;
    
    private CoplayerActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CoplayerActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerActivationVer1.xsd")]
public partial class CoplayerActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateCoplayerContextReply", typeof(ActivateCoplayerContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateCoplayerContextSend", typeof(ActivateCoplayerContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateCoplayerContextReply", typeof(InactivateCoplayerContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateCoplayerContextSend", typeof(InactivateCoplayerContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewCoplayerContextReply", typeof(NewCoplayerContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewCoplayerContextSend", typeof(NewCoplayerContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCoplayerApiControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCoplayerApiControlVer1.xsd", IsNullable=false)]
public partial class CoplayerApiControl {
    
    private Version versionField;
    
    private CoplayerApiControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CoplayerApiControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerApiControlVer1.xsd")]
public partial class CoplayerApiControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetCoplayerApiVersionsReply", typeof(GetCoplayerApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCoplayerApiVersionsSend", typeof(GetCoplayerApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetCoplayerApiVersionsReply", typeof(SetCoplayerApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetCoplayerApiVersionsSend", typeof(SetCoplayerApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCoplayerHistoryStoreVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCoplayerHistoryStoreVer1.xsd", IsNullable=false)]
public partial class CoplayerHistoryStore : KeyValueStore {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XKVSTypesVer1.xsd")]
public abstract partial class KeyValueStore {
    
    private Version versionField;
    
    private KeyValueStoreMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public KeyValueStoreMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.KVSTypes {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XKVSTypesVer1.xsd")]
public partial class KeyValueStoreMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Method", typeof(KeyValueStoreMethod))]
    [System.Xml.Serialization.XmlElementAttribute("Reply", typeof(KeyValueStoreReply))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCoplayerManagementVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCoplayerManagementVer1.xsd", IsNullable=false)]
public partial class CoplayerManagement {
    
    private Version versionField;
    
    private CoplayerManagementMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CoplayerManagementMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CoplayerManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCoplayerManagementVer1.xsd")]
public partial class CoplayerManagementMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BindCoplayerSessionReply", typeof(BindCoplayerSessionReply))]
    [System.Xml.Serialization.XmlElementAttribute("BindCoplayerSessionSend", typeof(BindCoplayerSessionSend))]
    [System.Xml.Serialization.XmlElementAttribute("CreateCoplayersReply", typeof(CreateCoplayersReply))]
    [System.Xml.Serialization.XmlElementAttribute("CreateCoplayersSend", typeof(CreateCoplayersSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMaxNumOfCoplayersReply", typeof(GetConfigDataMaxNumOfCoplayersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMaxNumOfCoplayersSend", typeof(GetConfigDataMaxNumOfCoplayersSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCoplayersReply", typeof(GetCoplayersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCoplayersSend", typeof(GetCoplayersSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCultureReadVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCultureReadVer1.xsd", IsNullable=false)]
public partial class CultureRead {
    
    private Version versionField;
    
    private CultureReadMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CultureReadMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureReadVer1.xsd")]
public partial class CultureReadMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CultureChangedReply", typeof(CultureChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("CultureChangedSend", typeof(CultureChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableCulturesReply", typeof(GetAvailableCulturesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableCulturesSend", typeof(GetAvailableCulturesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCultureReply", typeof(GetCultureReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCultureSend", typeof(GetCultureSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultCultureReply", typeof(GetDefaultCultureReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultCultureSend", typeof(GetDefaultCultureSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCultureWriteVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCultureWriteVer1.xsd", IsNullable=false)]
public partial class CultureWrite {
    
    private Version versionField;
    
    private CultureWriteMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CultureWriteMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CultureWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCultureWriteVer1.xsd")]
public partial class CultureWriteMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SetCultureReply", typeof(SetCultureReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetCultureSend", typeof(SetCultureSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetDefaultCultureReply", typeof(SetDefaultCultureReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetDefaultCultureSend", typeof(SetDefaultCultureSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XCustomConfigurationReadVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd", IsNullable=false)]
public partial class CustomConfigurationRead {
    
    private Version versionField;
    
    private CustomConfigurationReadMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public CustomConfigurationReadMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.CustomConfigurationRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XCustomConfigurationReadVer1.xsd")]
public partial class CustomConfigurationReadMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemDataReply", typeof(GetCustomConfigItemValueDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemDataSend", typeof(GetCustomConfigItemValueDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemReferencedEnumerationsReply", typeof(GetCustomConfigItemReferencedEnumerationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemReferencedEnumerationsSend", typeof(GetCustomConfigItemReferencedEnumerationsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemTypesReply", typeof(GetCustomConfigItemTypesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCustomConfigItemTypesSend", typeof(GetCustomConfigItemTypesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetScopedCustomConfigItemNamesReply", typeof(GetScopedCustomConfigItemNamesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetScopedCustomConfigItemNamesSend", typeof(GetScopedCustomConfigItemNamesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XDateTimeVer2.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XDateTimeVer2.xsd", IsNullable=false)]
public partial class DateTime {
    
    private Version versionField;
    
    private DateTimeMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public DateTimeMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DateTime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDateTimeVer2.xsd")]
public partial class DateTimeMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DateTimeChangedReply", typeof(DateTimeChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("DateTimeChangedSend", typeof(DateTimeChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataDateTimeMinimumUpdateIntervalReply", typeof(GetConfigDataDateTimeMinimumUpdateIntervalReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataDateTimeMinimumUpdateIntervalSend", typeof(GetConfigDataDateTimeMinimumUpdateIntervalSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDateTimeReply", typeof(GetDateTimeReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDateTimeSend", typeof(GetDateTimeSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XDftMeterReaderVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XDftMeterReaderVer1.xsd", IsNullable=false)]
public partial class DftMeterReader {
    
    private Version versionField;
    
    private DftMeterReaderMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public DftMeterReaderMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DftMeterReader {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDftMeterReaderVer1.xsd")]
public partial class DftMeterReaderMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DirectFundsTransferMetersUpdateReply", typeof(DirectFundsTransferMetersUpdateReply))]
    [System.Xml.Serialization.XmlElementAttribute("DirectFundsTransferMetersUpdateSend", typeof(DirectFundsTransferMetersUpdateSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReadDirectFundsTransferMetersReply", typeof(ReadDirectFundsTransferMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReadDirectFundsTransferMetersSend", typeof(ReadDirectFundsTransferMetersSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetDirectFundsTransferMetersRegistrationReply", typeof(SetDirectFundsTransferMetersRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetDirectFundsTransferMetersRegistrationSend", typeof(SetDirectFundsTransferMetersRegistrationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DisplayControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XDisplayControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XDisplayControlVer1.xsd", IsNullable=false)]
public partial class DisplayControl {
    
    private Version versionField;
    
    private DisplayControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public DisplayControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.DisplayControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XDisplayControlVer1.xsd")]
public partial class DisplayControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SetDisplayControlStateReply", typeof(SetDisplayControlStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetDisplayControlStateSend", typeof(SetDisplayControlStateSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XEbpConfigurationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XEbpConfigurationVer1.xsd", IsNullable=false)]
public partial class EbpConfiguration {
    
    private Version versionField;
    
    private EbpConfigurationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public EbpConfigurationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EbpConfiguration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEbpConfigurationVer1.xsd")]
public partial class EbpConfigurationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EbpEnabledChangedReply", typeof(EbpEnabledChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("EbpEnabledChangedSend", typeof(EbpEnabledChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEbpEnabledReply", typeof(GetEbpEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEbpEnabledSend", typeof(GetEbpEnabledSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XEGMConfigDataVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XEGMConfigDataVer1.xsd", IsNullable=false)]
public partial class EGMConfigData {
    
    private Version versionField;
    
    private EGMConfigDataMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public EGMConfigDataMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EGMConfigData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEGMConfigDataVer1.xsd")]
public partial class EGMConfigDataMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetAncillaryMonetaryLimitReply", typeof(GetAncillaryMonetaryLimitReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAncillaryMonetaryLimitSend", typeof(GetAncillaryMonetaryLimitSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataDefaultBetSelectionStyleReply", typeof(GetConfigDataDefaultBetSelectionStyleReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataDefaultBetSelectionStyleSend", typeof(GetConfigDataDefaultBetSelectionStyleSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataDisplayVideoReelsForStepperReply", typeof(GetConfigDataDisplayVideoReelsForStepperReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataDisplayVideoReelsForStepperSend", typeof(GetConfigDataDisplayVideoReelsForStepperSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataExternalBonusWinCapReply", typeof(GetConfigDataExternalBonusWinCapReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataExternalBonusWinCapSend", typeof(GetConfigDataExternalBonusWinCapSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReply", typeof(GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsSend", typeof(GetConfigDataGameFeatureSingleOptionAutoAdvanceSettingsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataProgressiveWinCapReply", typeof(GetConfigDataProgressiveWinCapReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataProgressiveWinCapSend", typeof(GetConfigDataProgressiveWinCapSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataRtpOrderedByBetRequiredReply", typeof(GetConfigDataRtpOrderedByBetRequiredReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataRtpOrderedByBetRequiredSend", typeof(GetConfigDataRtpOrderedByBetRequiredSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataTotalWinCapReply", typeof(GetConfigDataTotalWinCapReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataTotalWinCapSend", typeof(GetConfigDataTotalWinCapSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetMarketingBehaviorReply", typeof(GetMarketingBehaviorReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetMarketingBehaviorSend", typeof(GetMarketingBehaviorSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetMinimumBetReply", typeof(GetMinimumBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetMinimumBetSend", typeof(GetMinimumBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetWinCapBehaviorReply", typeof(GetWinCapBehaviorReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetWinCapBehaviorSend", typeof(GetWinCapBehaviorSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetWinCapReply", typeof(GetWinCapReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetWinCapSend", typeof(GetWinCapSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventBasedProgressive {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XEventBasedProgressiveVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XEventBasedProgressiveVer1.xsd", IsNullable=false)]
public partial class EventBasedProgressive {
    
    private Version versionField;
    
    private EventBasedProgressiveMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public EventBasedProgressiveMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventBasedProgressive {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventBasedProgressiveVer1.xsd")]
public partial class EventBasedProgressiveMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddQualifiedContributionReply", typeof(AddQualifiedContributionReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddQualifiedContributionSend", typeof(AddQualifiedContributionSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventLog {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XEventLogVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XEventLogVer1.xsd", IsNullable=false)]
public partial class EventLog {
    
    private Version versionField;
    
    private EventLogMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public EventLogMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.EventLog {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XEventLogVer1.xsd")]
public partial class EventLogMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RecordEventReply", typeof(RecordEventReply))]
    [System.Xml.Serialization.XmlElementAttribute("RecordEventSend", typeof(RecordEventSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XExtensionAppSelectionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd", IsNullable=false)]
public partial class ExtensionAppSelection {
    
    private Version versionField;
    
    private ExtensionAppSelectionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ExtensionAppSelectionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionAppSelection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionAppSelectionVer1.xsd")]
public partial class ExtensionAppSelectionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppSelectionStateChangedReply", typeof(AppSelectionStateChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppSelectionStateChangedSend", typeof(AppSelectionStateChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("AvailableCentralAppsChangedReply", typeof(AvailableCentralAppsChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AvailableCentralAppsChangedSend", typeof(AvailableCentralAppsChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("CentralAppSelectionCanceledReply", typeof(CentralAppSelectionCanceledReply))]
    [System.Xml.Serialization.XmlElementAttribute("CentralAppSelectionCanceledSend", typeof(CentralAppSelectionCanceledSend))]
    [System.Xml.Serialization.XmlElementAttribute("CentralAppSelectionCompleteReply", typeof(CentralAppSelectionCompleteReply))]
    [System.Xml.Serialization.XmlElementAttribute("CentralAppSelectionCompleteSend", typeof(CentralAppSelectionCompleteSend))]
    [System.Xml.Serialization.XmlElementAttribute("CentralAppSelectionRequestReply", typeof(CentralAppSelectionRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("CentralAppSelectionRequestSend", typeof(CentralAppSelectionRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("ChooserRequestedReply", typeof(ChooserRequestedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ChooserRequestedSend", typeof(ChooserRequestedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppSelectionStateReply", typeof(GetAppSelectionStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppSelectionStateSend", typeof(GetAppSelectionStateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableCentralAppsReply", typeof(GetAvailableCentralAppsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableCentralAppsSend", typeof(GetAvailableCentralAppsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataReply", typeof(GetConfigDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSend", typeof(GetConfigDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedCentralAppReply", typeof(GetSelectedCentralAppReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedCentralAppSend", typeof(GetSelectedCentralAppSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetAppSelectionEventRegistrationReply", typeof(SetAppSelectionEventRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetAppSelectionEventRegistrationSend", typeof(SetAppSelectionEventRegistrationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd", IsNullable=false)]
public partial class ExtensionProgressiveControllerConfig {
    
    private Version versionField;
    
    private ExtensionProgressiveControllerConfigMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ExtensionProgressiveControllerConfigMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerConfig {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerConfigVer1.xsd")]
public partial class ExtensionProgressiveControllerConfigMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddControllerLevelReply", typeof(AddControllerLevelReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddControllerLevelSend", typeof(AddControllerLevelSend))]
    [System.Xml.Serialization.XmlElementAttribute("AdjustControllerLevelParametersReply", typeof(AdjustControllerLevelParametersReply))]
    [System.Xml.Serialization.XmlElementAttribute("AdjustControllerLevelParametersSend", typeof(AdjustControllerLevelParametersSend))]
    [System.Xml.Serialization.XmlElementAttribute("CreateControllerReply", typeof(CreateControllerReply))]
    [System.Xml.Serialization.XmlElementAttribute("CreateControllerSend", typeof(CreateControllerSend))]
    [System.Xml.Serialization.XmlElementAttribute("DestroyControllerReply", typeof(DestroyControllerReply))]
    [System.Xml.Serialization.XmlElementAttribute("DestroyControllerSend", typeof(DestroyControllerSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryControllerLevelsReply", typeof(QueryControllerLevelsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryControllerLevelsSend", typeof(QueryControllerLevelsSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryControllersReply", typeof(QueryControllersReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryControllersSend", typeof(QueryControllersSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd", IsNullable=false)]
public partial class ExtensionProgressiveControllerLinking {
    
    private Version versionField;
    
    private ExtensionProgressiveControllerLinkingMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ExtensionProgressiveControllerLinkingMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerLinking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerLinkingVer1.xsd")]
public partial class ExtensionProgressiveControllerLinkingMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddProgressiveLinksReply", typeof(AddProgressiveLinksReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddProgressiveLinksSend", typeof(AddProgressiveLinksSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryGameLevelDefinitionsReply", typeof(QueryGameLevelDefinitionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryGameLevelDefinitionsSend", typeof(QueryGameLevelDefinitionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryProgressiveLinksReply", typeof(QueryProgressiveLinksReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryProgressiveLinksSend", typeof(QueryProgressiveLinksSend))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveProgressiveLinksReply", typeof(RemoveProgressiveLinksReply))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveProgressiveLinksSend", typeof(RemoveProgressiveLinksSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd", IsNullable=false)]
public partial class ExtensionProgressiveControllerRuntime {
    
    private Version versionField;
    
    private ExtensionProgressiveControllerRuntimeMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ExtensionProgressiveControllerRuntimeMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ExtensionProgressiveControllerRuntime {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XExtensionProgressiveControllerRuntimeVer1.xsd")]
public partial class ExtensionProgressiveControllerRuntimeMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinControllerLevelUpdateIntervalReply", typeof(GetConfigDataMinControllerLevelUpdateIntervalReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMinControllerLevelUpdateIntervalSend", typeof(GetConfigDataMinControllerLevelUpdateIntervalSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetControllerLevelValuesReply", typeof(SetControllerLevelValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetControllerLevelValuesSend", typeof(SetControllerLevelValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("ValidationRequestReply", typeof(ValidationRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("ValidationRequestSend", typeof(ValidationRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("ValidationResponseReply", typeof(ValidationResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("ValidationResponseSend", typeof(ValidationResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("WapHandpayAcknowledgeReply", typeof(WapHandpayAcknowledgeReply))]
    [System.Xml.Serialization.XmlElementAttribute("WapHandpayAcknowledgeSend", typeof(WapHandpayAcknowledgeSend))]
    [System.Xml.Serialization.XmlElementAttribute("WapHandpayReply", typeof(WapHandpayReply))]
    [System.Xml.Serialization.XmlElementAttribute("WapHandpaySend", typeof(WapHandpaySend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XFirewallManagerVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XFirewallManagerVer1.xsd", IsNullable=false)]
public partial class FirewallManager {
    
    private Version versionField;
    
    private FirewallManagerMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public FirewallManagerMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FirewallManager {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFirewallManagerVer1.xsd")]
public partial class FirewallManagerMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataFirewallEnabledReply", typeof(GetConfigDataFirewallEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataFirewallEnabledSend", typeof(GetConfigDataFirewallEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPortStatusReply", typeof(GetPortStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPortStatusSend", typeof(GetPortStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetPortEnabledReply", typeof(SetPortEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetPortEnabledSend", typeof(SetPortEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetSSLCertConfigurationReply", typeof(SetSSLCertConfigurationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetSSLCertConfigurationSend", typeof(SetSSLCertConfigurationSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetUrlAclConfigurationReply", typeof(SetUrlAclConfigurationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetUrlAclConfigurationSend", typeof(SetUrlAclConfigurationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XFlashPlayerClockVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XFlashPlayerClockVer1.xsd", IsNullable=false)]
public partial class FlashPlayerClock {
    
    private Version versionField;
    
    private FlashPlayerClockMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public FlashPlayerClockMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.FlashPlayerClock {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XFlashPlayerClockVer1.xsd")]
public partial class FlashPlayerClockMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataReply", typeof(GetConfigDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSend", typeof(GetConfigDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetFlashPlayerClockPropertiesReply", typeof(GetFlashPlayerClockPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetFlashPlayerClockPropertiesSend", typeof(GetFlashPlayerClockPropertiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateFlashPlayerClockPropertiesReply", typeof(UpdateFlashPlayerClockPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateFlashPlayerClockPropertiesSend", typeof(UpdateFlashPlayerClockPropertiesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XG2SConnectionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XG2SConnectionVer1.xsd", IsNullable=false)]
public partial class G2SConnection {
    
    private Version versionField;
    
    private G2SConnectionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public G2SConnectionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.G2SConnection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XG2SConnectionVer1.xsd")]
public partial class G2SConnectionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CertificatesChangedReply", typeof(CertificatesChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("CertificatesChangedSend", typeof(CertificatesChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetCertificateAuthoritiesReply", typeof(GetCertificateAuthoritiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCertificateAuthoritiesSend", typeof(GetCertificateAuthoritiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetClientCertificateReply", typeof(GetClientCertificateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetClientCertificateSend", typeof(GetClientCertificateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetG2SHostAddressReply", typeof(GetG2SHostAddressReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetG2SHostAddressSend", typeof(GetG2SHostAddressSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetOcspSettingsReply", typeof(GetOcspSettingsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetOcspSettingsSend", typeof(GetOcspSettingsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCycleBettingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameCycleBettingVer1.xsd", IsNullable=false)]
public partial class GameCycleBetting {
    
    private Version versionField;
    
    private GameCycleBettingMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameCycleBettingMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleBetting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleBettingVer1.xsd")]
public partial class GameCycleBettingMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CommitBetReply", typeof(CommitBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitBetSend", typeof(CommitBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataReply", typeof(GetConfigDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSend", typeof(GetConfigDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceBetReply", typeof(PlaceBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceBetSend", typeof(PlaceBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceStartingBetReply", typeof(PlaceStartingBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlaceStartingBetSend", typeof(PlaceStartingBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitBetReply", typeof(UncommitBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitBetSend", typeof(UncommitBetSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCycleEventsVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameCycleEventsVer1.xsd", IsNullable=false)]
public partial class GameCycleEvents {
    
    private Version versionField;
    
    private GameCycleEventsMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameCycleEventsMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleEventsVer1.xsd")]
public partial class GameCycleEventsMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameCycleEventReply", typeof(GameCycleEventReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameCycleEventSend", typeof(GameCycleEventSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetGameCycleEventRegistrationReply", typeof(SetGameCycleEventRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetGameCycleEventRegistrationSend", typeof(SetGameCycleEventRegistrationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCyclePlayVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameCyclePlayVer1.xsd", IsNullable=false)]
public partial class GameCyclePlay {
    
    private Version versionField;
    
    private GameCyclePlayMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameCyclePlayMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCyclePlay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCyclePlayVer1.xsd")]
public partial class GameCyclePlayMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AbortCompleteReply", typeof(AbortCompleteReply))]
    [System.Xml.Serialization.XmlElementAttribute("AbortCompleteSend", typeof(AbortCompleteSend))]
    [System.Xml.Serialization.XmlElementAttribute("AbortGameCycleReply", typeof(AbortGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("AbortGameCycleSend", typeof(AbortGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("AwardResultsPostedReply", typeof(AwardResultsPostedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AwardResultsPostedSend", typeof(AwardResultsPostedSend))]
    [System.Xml.Serialization.XmlElementAttribute("CommitGameCycleReply", typeof(CommitGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitGameCycleSend", typeof(CommitGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("EndGameCycleReply", typeof(EndGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("EndGameCycleSend", typeof(EndGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollGameCycleReply", typeof(EnrollGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollGameCycleSend", typeof(EnrollGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollResponseDataReply", typeof(EnrollResponseDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollResponseDataSend", typeof(EnrollResponseDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollResponseReply", typeof(EnrollResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnrollResponseSend", typeof(EnrollResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeRequestReply", typeof(EvalOutcomeRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeRequestSend", typeof(EvalOutcomeRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeResponseDataReply", typeof(EvalOutcomeResponseDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeResponseDataSend", typeof(EvalOutcomeResponseDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeResponseReply", typeof(EvalOutcomeResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("EvalOutcomeResponseSend", typeof(EvalOutcomeResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardRequestReply", typeof(FinalizeAwardRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardRequestSend", typeof(FinalizeAwardRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardResponseReply", typeof(FinalizeAwardResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("FinalizeAwardResponseSend", typeof(FinalizeAwardResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryGameCycleStateReply", typeof(QueryGameCycleStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryGameCycleStateSend", typeof(QueryGameCycleStateSend))]
    [System.Xml.Serialization.XmlElementAttribute("StartPlayingReply", typeof(StartPlayingReply))]
    [System.Xml.Serialization.XmlElementAttribute("StartPlayingSend", typeof(StartPlayingSend))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitGameCycleReply", typeof(UncommitGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("UncommitGameCycleSend", typeof(UncommitGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("UnenrollGameCycleReply", typeof(UnenrollGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("UnenrollGameCycleSend", typeof(UnenrollGameCycleSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameCycleSupervisionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd", IsNullable=false)]
public partial class GameCycleSupervision {
    
    private Version versionField;
    
    private GameCycleSupervisionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameCycleSupervisionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameCycleSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameCycleSupervisionVer1.xsd")]
public partial class GameCycleSupervisionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ClearGameCycleBehaviorModifierReply", typeof(ClearGameCycleBehaviorModifierReply))]
    [System.Xml.Serialization.XmlElementAttribute("ClearGameCycleBehaviorModifierSend", typeof(ClearGameCycleBehaviorModifierSend))]
    [System.Xml.Serialization.XmlElementAttribute("EnableGameCycleBehaviorModifiersReply", typeof(EnableGameCycleBehaviorModifiersReply))]
    [System.Xml.Serialization.XmlElementAttribute("EnableGameCycleBehaviorModifiersSend", typeof(EnableGameCycleBehaviorModifiersSend))]
    [System.Xml.Serialization.XmlElementAttribute("GameCycleModificationEventReply", typeof(GameCycleModificationEventReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameCycleModificationEventSend", typeof(GameCycleModificationEventSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetGameCycleModificationEventRegistrationReply", typeof(SetGameCycleModificationEventRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetGameCycleModificationEventRegistrationSend", typeof(SetGameCycleModificationEventRegistrationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameGroupControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameGroupControlVer1.xsd", IsNullable=false)]
public partial class GameGroupControl {
    
    private Version versionField;
    
    private GameGroupControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameGroupControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupControlVer1.xsd")]
public partial class GameGroupControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPayvarGroupInformationReply", typeof(GetConfigDataPayvarGroupInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPayvarGroupInformationSend", typeof(GetConfigDataPayvarGroupInformationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedPayvarReply", typeof(GetSelectedPayvarReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedPayvarSend", typeof(GetSelectedPayvarSend))]
    [System.Xml.Serialization.XmlElementAttribute("SelectPayvarReply", typeof(SelectPayvarReply))]
    [System.Xml.Serialization.XmlElementAttribute("SelectPayvarSend", typeof(SelectPayvarSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameGroupInformationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameGroupInformationVer1.xsd", IsNullable=false)]
public partial class GameGroupInformation {
    
    private Version versionField;
    
    private GameGroupInformationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameGroupInformationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameGroupInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameGroupInformationVer1.xsd")]
public partial class GameGroupInformationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarGroupsForThemeReply", typeof(GetPayvarGroupsForThemeReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarGroupsForThemeSend", typeof(GetPayvarGroupsForThemeSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameHistorySupplemental {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameHistorySupplementalVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameHistorySupplementalVer1.xsd", IsNullable=false)]
public partial class GameHistorySupplemental {
    
    private Version versionField;
    
    private GameHistorySupplementalMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameHistorySupplementalMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameHistorySupplemental {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameHistorySupplementalVer1.xsd")]
public partial class GameHistorySupplementalMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SetExportDataReply", typeof(SetExportDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetExportDataSend", typeof(SetExportDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameInformationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameInformationVer1.xsd", IsNullable=false)]
public partial class GameInformation {
    
    private Version versionField;
    
    private GameInformationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameInformationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameInformationVer1.xsd")]
public partial class GameInformationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetBetResolutionReply", typeof(GetBetResolutionReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetBetResolutionSend", typeof(GetBetResolutionSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDenominationButtonPanelMinBetReply", typeof(GetDenominationButtonPanelMinBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDenominationButtonPanelMinBetSend", typeof(GetDenominationButtonPanelMinBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDenominationMaxBetCreditsReply", typeof(GetDenominationMaxBetCreditsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDenominationMaxBetCreditsSend", typeof(GetDenominationMaxBetCreditsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarButtonPanelMinBetReply", typeof(GetPayvarButtonPanelMinBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarButtonPanelMinBetSend", typeof(GetPayvarButtonPanelMinBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarEnabledDenominationsReply", typeof(GetPayvarEnabledDenominationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarEnabledDenominationsSend", typeof(GetPayvarEnabledDenominationsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarInformationReply", typeof(GetPayvarInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarInformationSend", typeof(GetPayvarInformationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarMaxBetCreditsReply", typeof(GetPayvarMaxBetCreditsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarMaxBetCreditsSend", typeof(GetPayvarMaxBetCreditsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarPaybackPercentageDataReply", typeof(GetPayvarPaybackPercentageDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarPaybackPercentageDataSend", typeof(GetPayvarPaybackPercentageDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarSupportedDenominationsReply", typeof(GetPayvarSupportedDenominationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarSupportedDenominationsSend", typeof(GetPayvarSupportedDenominationsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarsForThemeReply", typeof(GetPayvarsForThemeReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarsForThemeSend", typeof(GetPayvarsForThemeSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeButtonPanelMinBetReply", typeof(GetThemeButtonPanelMinBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeButtonPanelMinBetSend", typeof(GetThemeButtonPanelMinBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeEnabledDenominationsReply", typeof(GetThemeEnabledDenominationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeEnabledDenominationsSend", typeof(GetThemeEnabledDenominationsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeInformationReply", typeof(GetThemeInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeInformationSend", typeof(GetThemeInformationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeMaxBetCreditsReply", typeof(GetThemeMaxBetCreditsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeMaxBetCreditsSend", typeof(GetThemeMaxBetCreditsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeSupportedDenominationsReply", typeof(GetThemeSupportedDenominationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeSupportedDenominationsSend", typeof(GetThemeSupportedDenominationsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameLevelAwardVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameLevelAwardVer1.xsd", IsNullable=false)]
public partial class GameLevelAward {
    
    private Version versionField;
    
    private GameLevelAwardMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameLevelAwardMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLevelAward {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLevelAwardVer1.xsd")]
public partial class GameLevelAwardMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetThemeBasedGameLevelValuesReply", typeof(GetThemeBasedGameLevelValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeBasedGameLevelValuesSend", typeof(GetThemeBasedGameLevelValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("InitializeGameLevelDataReply", typeof(InitializeGameLevelDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("InitializeGameLevelDataSend", typeof(InitializeGameLevelDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLink {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameLinkVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameLinkVer1.xsd", IsNullable=false)]
public partial class GameLink {
    
    private Version versionField;
    
    private GameLinkMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameLinkMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameLink {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameLinkVer1.xsd")]
public partial class GameLinkMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataStompBrokerReply", typeof(GetConfigDataStompBrokerReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataStompBrokerSend", typeof(GetConfigDataStompBrokerSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameOutcomeEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameOutcomeEventsVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameOutcomeEventsVer1.xsd", IsNullable=false)]
public partial class GameOutcomeEvents {
    
    private Version versionField;
    
    private GameOutcomeEventsMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameOutcomeEventsMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameOutcomeEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameOutcomeEventsVer1.xsd")]
public partial class GameOutcomeEventsMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FinalWinRecordEventReply", typeof(FinalWinRecordEventReply))]
    [System.Xml.Serialization.XmlElementAttribute("FinalWinRecordEventSend", typeof(FinalWinRecordEventSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGamePlayReportingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGamePlayReportingVer1.xsd", IsNullable=false)]
public partial class GamePlayReporting {
    
    private Version versionField;
    
    private GamePlayReportingMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GamePlayReportingMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayReporting {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayReportingVer1.xsd")]
public partial class GamePlayReportingMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PokerGamePlayReportReply", typeof(PokerGamePlayReportReply))]
    [System.Xml.Serialization.XmlElementAttribute("PokerGamePlayReportSend", typeof(PokerGamePlayReportSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGamePlayStatusVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGamePlayStatusVer1.xsd", IsNullable=false)]
public partial class GamePlayStatus {
    
    private Version versionField;
    
    private GamePlayStatusMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GamePlayStatusMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStatus {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePlayStatusVer1.xsd")]
public partial class GamePlayStatusMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameFocusChangedReply", typeof(GameFocusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameFocusChangedSend", typeof(GameFocusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GameInProgressChangedReply", typeof(GameInProgressChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameInProgressChangedSend", typeof(GameInProgressChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetGameFocusReply", typeof(GetGameFocusReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetGameFocusSend", typeof(GetGameFocusSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetGameInProgressReply", typeof(GetGameInProgressReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetGameInProgressSend", typeof(GetGameInProgressSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePlayStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGamePlayStoreVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGamePlayStoreVer1.xsd", IsNullable=false)]
public partial class GamePlayStore : KeyValueStore {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGamePresentationBehaviorVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGamePresentationBehaviorVer1.xsd", IsNullable=false)]
public partial class GamePresentationBehavior {
    
    private Version versionField;
    
    private GamePresentationBehaviorMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GamePresentationBehaviorMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GamePresentationBehavior {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGamePresentationBehaviorVer1.xsd")]
public partial class GamePresentationBehaviorMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataReply", typeof(GetConfigDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSend", typeof(GetConfigDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameProgressiveSettings {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameProgressiveSettingsVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameProgressiveSettingsVer1.xsd", IsNullable=false)]
public partial class GameProgressiveSettings {
    
    private Version versionField;
    
    private GameProgressiveSettingsMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameProgressiveSettingsMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameProgressiveSettings {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameProgressiveSettingsVer1.xsd")]
public partial class GameProgressiveSettingsMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("QueryProgressiveSettingsReply", typeof(QueryProgressiveSettingsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryProgressiveSettingsSend", typeof(QueryProgressiveSettingsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XGameReserveVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XGameReserveVer1.xsd", IsNullable=false)]
public partial class GameReserve {
    
    private Version versionField;
    
    private GameReserveMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public GameReserveMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.GameReserve {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XGameReserveVer1.xsd")]
public partial class GameReserveMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetReserveParametersReply", typeof(GetReserveParametersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetReserveParametersSend", typeof(GetReserveParametersSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestReserveActivationReply", typeof(RequestReserveActivationReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestReserveActivationSend", typeof(RequestReserveActivationSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReserveActivationCanceledReply", typeof(ReserveActivationCanceledReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReserveActivationCanceledSend", typeof(ReserveActivationCanceledSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateReserveParametersReply", typeof(UpdateReserveParametersReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateReserveParametersSend", typeof(UpdateReserveParametersSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XJackpotItalyVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XJackpotItalyVer1.xsd", IsNullable=false)]
public partial class JackpotItaly {
    
    private Version versionField;
    
    private JackpotItalyMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public JackpotItalyMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.JackpotItaly {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XJackpotItalyVer1.xsd")]
public partial class JackpotItalyMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataJackpotBonusEnabledReply", typeof(GetConfigDataJackpotBonusEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataJackpotBonusEnabledSend", typeof(GetConfigDataJackpotBonusEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetJackpotBonusValuesReply", typeof(GetJackpotBonusValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetJackpotBonusValuesSend", typeof(GetJackpotBonusValuesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLegacyBonusControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XLegacyBonusControlVer1.xsd", IsNullable=false)]
public partial class LegacyBonusControl {
    
    private Version versionField;
    
    private LegacyBonusControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public LegacyBonusControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LegacyBonusControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLegacyBonusControlVer1.xsd")]
public partial class LegacyBonusControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EndLegacyBonusBookingHoldOffReply", typeof(EndLegacyBonusBookingHoldOffReply))]
    [System.Xml.Serialization.XmlElementAttribute("EndLegacyBonusBookingHoldOffSend", typeof(EndLegacyBonusBookingHoldOffSend))]
    [System.Xml.Serialization.XmlElementAttribute("LegacyBonusArrivedReply", typeof(LegacyBonusArrivedReply))]
    [System.Xml.Serialization.XmlElementAttribute("LegacyBonusArrivedSend", typeof(LegacyBonusArrivedSend))]
    [System.Xml.Serialization.XmlElementAttribute("LegacyBonusHostLinkStatusChangedReply", typeof(LegacyBonusHostLinkStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("LegacyBonusHostLinkStatusChangedSend", typeof(LegacyBonusHostLinkStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("LegacyBonusNotificationEnableReply", typeof(LegacyBonusNotificationEnableReply))]
    [System.Xml.Serialization.XmlElementAttribute("LegacyBonusNotificationEnableSend", typeof(LegacyBonusNotificationEnableSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryLegacyBonusHostStatusReply", typeof(QueryLegacyBonusHostStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryLegacyBonusHostStatusSend", typeof(QueryLegacyBonusHostStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryLegacyBonusStatusReply", typeof(QueryLegacyBonusStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryLegacyBonusStatusSend", typeof(QueryLegacyBonusStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestLegacyBonusBookingHoldOffReply", typeof(RequestLegacyBonusBookingHoldOffReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestLegacyBonusBookingHoldOffSend", typeof(RequestLegacyBonusBookingHoldOffSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLinkControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XLinkControlVer1.xsd", IsNullable=false)]
public partial class LinkControl {
    
    private Version versionField;
    
    private LinkControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public LinkControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.LinkControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLinkControlVer1.xsd")]
public partial class LinkControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetApiVersionsReply", typeof(GetApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetApiVersionsSend", typeof(GetApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("ParkReply", typeof(ParkReply))]
    [System.Xml.Serialization.XmlElementAttribute("ParkSend", typeof(ParkSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetApiVersionsReply", typeof(SetApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetApiVersionsSend", typeof(SetApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XLocalizationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XLocalizationVer1.xsd", IsNullable=false)]
public partial class Localization {
    
    private Version versionField;
    
    private LocalizationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public LocalizationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.Localization {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XLocalizationVer1.xsd")]
public partial class LocalizationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetCreditFormatterInfoReply", typeof(GetCreditFormatterInfoReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetCreditFormatterInfoSend", typeof(GetCreditFormatterInfoSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetTimeOfDayFormatReply", typeof(GetTimeOfDayFormatReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetTimeOfDayFormatSend", typeof(GetTimeOfDayFormatSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryLanguageIconsReply", typeof(QueryLanguageIconsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryLanguageIconsSend", typeof(QueryLanguageIconsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XMachineIdentificationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XMachineIdentificationVer1.xsd", IsNullable=false)]
public partial class MachineIdentification {
    
    private Version versionField;
    
    private MachineIdentificationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public MachineIdentificationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineIdentification {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineIdentificationVer1.xsd")]
public partial class MachineIdentificationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataG2SMachineIdentifierReply", typeof(GetConfigDataG2SMachineIdentifierReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataG2SMachineIdentifierSend", typeof(GetConfigDataG2SMachineIdentifierSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineAssetNumberReply", typeof(GetConfigDataMachineAssetNumberReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineAssetNumberSend", typeof(GetConfigDataMachineAssetNumberSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineFloorLocationReply", typeof(GetConfigDataMachineFloorLocationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineFloorLocationSend", typeof(GetConfigDataMachineFloorLocationSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineSerialNumberReply", typeof(GetConfigDataMachineSerialNumberReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataMachineSerialNumberSend", typeof(GetConfigDataMachineSerialNumberSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XMachineSupervisionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XMachineSupervisionVer1.xsd", IsNullable=false)]
public partial class MachineSupervision {
    
    private Version versionField;
    
    private MachineSupervisionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public MachineSupervisionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MachineSupervision {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMachineSupervisionVer1.xsd")]
public partial class MachineSupervisionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RequestMachineRebootReply", typeof(RequestMachineRebootReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestMachineRebootSend", typeof(RequestMachineRebootSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XMessageStripVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XMessageStripVer1.xsd", IsNullable=false)]
public partial class MessageStrip {
    
    private Version versionField;
    
    private MessageStripMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public MessageStripMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MessageStrip {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMessageStripVer1.xsd")]
public partial class MessageStripMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetMessagesReply", typeof(GetMessagesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetMessagesSend", typeof(GetMessagesSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateMessagesReply", typeof(UpdateMessagesReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateMessagesSend", typeof(UpdateMessagesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd", IsNullable=false)]
public partial class MidGameMoneyAcceptance {
    
    private Version versionField;
    
    private MidGameMoneyAcceptanceMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public MidGameMoneyAcceptanceMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.MidGameMoneyAcceptance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XMidGameMoneyAcceptanceVer1.xsd")]
public partial class MidGameMoneyAcceptanceMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EndOfferingMidGameMoneyAcceptanceReply", typeof(EndOfferingMidGameMoneyAcceptanceReply))]
    [System.Xml.Serialization.XmlElementAttribute("EndOfferingMidGameMoneyAcceptanceSend", typeof(EndOfferingMidGameMoneyAcceptanceSend))]
    [System.Xml.Serialization.XmlElementAttribute("OfferingMidGameMoneyAcceptanceResponseReply", typeof(OfferingMidGameMoneyAcceptanceResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("OfferingMidGameMoneyAcceptanceResponseSend", typeof(OfferingMidGameMoneyAcceptanceResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestOfferingMidGameMoneyAcceptanceReply", typeof(RequestOfferingMidGameMoneyAcceptanceReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestOfferingMidGameMoneyAcceptanceSend", typeof(RequestOfferingMidGameMoneyAcceptanceSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XNetworkManagementVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XNetworkManagementVer1.xsd", IsNullable=false)]
public partial class NetworkManagement {
    
    private Version versionField;
    
    private NetworkManagementMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public NetworkManagementMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NetworkManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNetworkManagementVer1.xsd")]
public partial class NetworkManagementMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddIpv4RoutingTableEntryReply", typeof(AddIpv4RoutingTableEntryReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddIpv4RoutingTableEntrySend", typeof(AddIpv4RoutingTableEntrySend))]
    [System.Xml.Serialization.XmlElementAttribute("GetNicInformationReply", typeof(GetNicInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetNicInformationSend", typeof(GetNicInformationSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XNICInformationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XNICInformationVer1.xsd", IsNullable=false)]
public partial class NICInformation {
    
    private Version versionField;
    
    private NICInformationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public NICInformationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NICInformation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNICInformationVer1.xsd")]
public partial class NICInformationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetIPAddressForHostConnectionReply", typeof(GetIPAddressForHostConnectionReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetIPAddressForHostConnectionSend", typeof(GetIPAddressForHostConnectionSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPrioritizedIPListReply", typeof(GetPrioritizedIPListReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPrioritizedIPListSend", typeof(GetPrioritizedIPListSend))]
    [System.Xml.Serialization.XmlElementAttribute("NetworkSettingsChangedReply", typeof(NetworkSettingsChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("NetworkSettingsChangedSend", typeof(NetworkSettingsChangedSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XNonTransactionalCritDataReadVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd", IsNullable=false)]
public partial class NonTransactionalCritDataRead {
    
    private Version versionField;
    
    private NonTransactionalCritDataReadMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public NonTransactionalCritDataReadMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.NonTransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XNonTransactionalCritDataReadVer1.xsd")]
public partial class NonTransactionalCritDataReadMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataReply", typeof(ReadCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataSend", typeof(ReadCritDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XParcelCommVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XParcelCommVer1.xsd", IsNullable=false)]
public partial class ParcelComm {
    
    private Version versionField;
    
    private ParcelCommMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ParcelCommMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ParcelComm {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XParcelCommVer1.xsd")]
public partial class ParcelCommMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ParcelCallRxReply", typeof(ParcelCallRxReply))]
    [System.Xml.Serialization.XmlElementAttribute("ParcelCallRxSend", typeof(ParcelCallRxSend))]
    [System.Xml.Serialization.XmlElementAttribute("ParcelCallTxReply", typeof(ParcelCallTxReply))]
    [System.Xml.Serialization.XmlElementAttribute("ParcelCallTxSend", typeof(ParcelCallTxSend))]
    [System.Xml.Serialization.XmlElementAttribute("TransParcelCallRxReply", typeof(TransParcelCallRxReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransParcelCallRxSend", typeof(TransParcelCallRxSend))]
    [System.Xml.Serialization.XmlElementAttribute("TransParcelCallTxReply", typeof(TransParcelCallTxReply))]
    [System.Xml.Serialization.XmlElementAttribute("TransParcelCallTxSend", typeof(TransParcelCallTxSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PayvarStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPayvarStoreVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPayvarStoreVer1.xsd", IsNullable=false)]
public partial class PayvarStore : KeyValueStore {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PerformCashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPerformCashoutVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPerformCashoutVer1.xsd", IsNullable=false)]
public partial class PerformCashout {
    
    private Version versionField;
    
    private PerformCashoutMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PerformCashoutMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PerformCashout {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPerformCashoutVer1.xsd")]
public partial class PerformCashoutMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PerformCashoutRequestReply", typeof(PerformCashoutRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("PerformCashoutRequestSend", typeof(PerformCashoutRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("PerformCashoutResponseReply", typeof(PerformCashoutResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("PerformCashoutResponseSend", typeof(PerformCashoutResponseSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPIDSessionTrackingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd", IsNullable=false)]
public partial class PIDSessionTracking {
    
    private Version versionField;
    
    private PIDSessionTrackingMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PIDSessionTrackingMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PIDSessionTracking {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPIDSessionTrackingVer1.xsd")]
public partial class PIDSessionTrackingMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetSessionDataReply", typeof(GetSessionDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSessionDataSend", typeof(GetSessionDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("SessionTrackingStatusChangedReply", typeof(SessionTrackingStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("SessionTrackingStatusChangedSend", typeof(SessionTrackingStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("StartTrackingReply", typeof(StartTrackingReply))]
    [System.Xml.Serialization.XmlElementAttribute("StartTrackingSend", typeof(StartTrackingSend))]
    [System.Xml.Serialization.XmlElementAttribute("StopTrackingReply", typeof(StopTrackingReply))]
    [System.Xml.Serialization.XmlElementAttribute("StopTrackingSend", typeof(StopTrackingSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerCardServicesVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPlayerCardServicesVer1.xsd", IsNullable=false)]
public partial class PlayerCardServices {
    
    private Version versionField;
    
    private PlayerCardServicesMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PlayerCardServicesMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerCardServices {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerCardServicesVer1.xsd")]
public partial class PlayerCardServicesMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CardInsertedReply", typeof(CardInsertedReply))]
    [System.Xml.Serialization.XmlElementAttribute("CardInsertedSend", typeof(CardInsertedSend))]
    [System.Xml.Serialization.XmlElementAttribute("CardRemovedReply", typeof(CardRemovedReply))]
    [System.Xml.Serialization.XmlElementAttribute("CardRemovedSend", typeof(CardRemovedSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetCardAcceptanceStatusReply", typeof(SetCardAcceptanceStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetCardAcceptanceStatusSend", typeof(SetCardAcceptanceStatusSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerControlContextMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerControlContextMonitoringVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPlayerControlContextMonitoringVer1.xsd", IsNullable=false)]
public partial class PlayerControlContextMonitoring {
    
    private Version versionField;
    
    private PlayerControlContextMonitoringMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PlayerControlContextMonitoringMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerControlContextMonitoring {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerControlContextMonitoringVer1.xsd")]
public partial class PlayerControlContextMonitoringMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PlayerControlContextStateUpdateReply", typeof(PlayerControlContextStateUpdateReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerControlContextStateUpdateSend", typeof(PlayerControlContextStateUpdateSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerInformationDisplayVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd", IsNullable=false)]
public partial class PlayerInformationDisplay {
    
    private Version versionField;
    
    private PlayerInformationDisplayMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PlayerInformationDisplayMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerInformationDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerInformationDisplayVer1.xsd")]
public partial class PlayerInformationDisplayMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivationStatusChangedReply", typeof(ActivationStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivationStatusChangedSend", typeof(ActivationStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GameInformationScreenEnteredReply", typeof(GameInformationScreenEnteredReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameInformationScreenEnteredSend", typeof(GameInformationScreenEnteredSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPidConfigurationReply", typeof(GetPidConfigurationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPidConfigurationSend", typeof(GetPidConfigurationSend))]
    [System.Xml.Serialization.XmlElementAttribute("PidConfigurationChangedReply", typeof(PidConfigurationChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("PidConfigurationChangedSend", typeof(PidConfigurationChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("SessionInformationScreenEnteredReply", typeof(SessionInformationScreenEnteredReply))]
    [System.Xml.Serialization.XmlElementAttribute("SessionInformationScreenEnteredSend", typeof(SessionInformationScreenEnteredSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerSessionParametersVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd", IsNullable=false)]
public partial class PlayerSessionParameters {
    
    private Version versionField;
    
    private PlayerSessionParametersMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PlayerSessionParametersMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSessionParameters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionParametersVer1.xsd")]
public partial class PlayerSessionParametersMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CurrentResetParametersChangedReply", typeof(CurrentResetParametersChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("CurrentResetParametersChangedSend", typeof(CurrentResetParametersChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPlayerSessionParameterResetEnabledReply", typeof(GetConfigDataPlayerSessionParameterResetEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataPlayerSessionParameterResetEnabledSend", typeof(GetConfigDataPlayerSessionParameterResetEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("ParametersResetReply", typeof(ParametersResetReply))]
    [System.Xml.Serialization.XmlElementAttribute("ParametersResetSend", typeof(ParametersResetSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryCurrentResetParametersReply", typeof(QueryCurrentResetParametersReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryCurrentResetParametersSend", typeof(QueryCurrentResetParametersSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerSessionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPlayerSessionVer1.xsd", IsNullable=false)]
public partial class PlayerSession {
    
    private Version versionField;
    
    private PlayerSessionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PlayerSessionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerSession {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerSessionVer1.xsd")]
public partial class PlayerSessionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSessionTimerDisplayEnabledReply", typeof(GetConfigDataSessionTimerDisplayEnabledReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSessionTimerDisplayEnabledSend", typeof(GetConfigDataSessionTimerDisplayEnabledSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerSessionStatusChangedReply", typeof(PlayerSessionStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerSessionStatusChangedSend", typeof(PlayerSessionStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPlayerSessionStatusReply", typeof(QueryPlayerSessionStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPlayerSessionStatusSend", typeof(QueryPlayerSessionStatusSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XPlayerTippingVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XPlayerTippingVer1.xsd", IsNullable=false)]
public partial class PlayerTipping {
    
    private Version versionField;
    
    private PlayerTippingMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public PlayerTippingMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.PlayerTipping {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XPlayerTippingVer1.xsd")]
public partial class PlayerTippingMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetPropertiesReply", typeof(GetPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPropertiesSend", typeof(GetPropertiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("TippingRequestReply", typeof(TippingRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("TippingRequestSend", typeof(TippingRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("TippingResponseReply", typeof(TippingResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("TippingResponseSend", typeof(TippingResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdatePropertiesReply", typeof(UpdatePropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdatePropertiesSend", typeof(UpdatePropertiesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XProgressiveDataVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XProgressiveDataVer1.xsd", IsNullable=false)]
public partial class ProgressiveData {
    
    private Version versionField;
    
    private ProgressiveDataMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ProgressiveDataMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ProgressiveData {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XProgressiveDataVer1.xsd")]
public partial class ProgressiveDataMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetEnabledPayvarBasedProgressiveValuesReply", typeof(GetEnabledPayvarBasedProgressiveValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnabledPayvarBasedProgressiveValuesSend", typeof(GetEnabledPayvarBasedProgressiveValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnabledThemeBasedProgressiveValuesReply", typeof(GetEnabledThemeBasedProgressiveValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetEnabledThemeBasedProgressiveValuesSend", typeof(GetEnabledThemeBasedProgressiveValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarBasedProgressiveValuesReply", typeof(GetPayvarBasedProgressiveValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarBasedProgressiveValuesSend", typeof(GetPayvarBasedProgressiveValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeBasedProgressiveValuesReply", typeof(GetThemeBasedProgressiveValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeBasedProgressiveValuesSend", typeof(GetThemeBasedProgressiveValuesSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryEnabledPayvarBasedProgressiveSettingsReply", typeof(QueryEnabledPayvarBasedProgressiveSettingsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryEnabledPayvarBasedProgressiveSettingsSend", typeof(QueryEnabledPayvarBasedProgressiveSettingsSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryEnabledThemeBasedProgressiveSettingsReply", typeof(QueryEnabledThemeBasedProgressiveSettingsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryEnabledThemeBasedProgressiveSettingsSend", typeof(QueryEnabledThemeBasedProgressiveSettingsSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPayvarBasedProgressiveSettingsReply", typeof(QueryPayvarBasedProgressiveSettingsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPayvarBasedProgressiveSettingsSend", typeof(QueryPayvarBasedProgressiveSettingsSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryThemeBasedProgressiveSettingsReply", typeof(QueryThemeBasedProgressiveSettingsReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryThemeBasedProgressiveSettingsSend", typeof(QueryThemeBasedProgressiveSettingsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XRandomNumberGenerationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd", IsNullable=false)]
public partial class RandomNumberGeneration {
    
    private Version versionField;
    
    private RandomNumberGenerationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public RandomNumberGenerationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RandomNumberGeneration {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRandomNumberGenerationVer1.xsd")]
public partial class RandomNumberGenerationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetListLimitedRandomNumbersReply", typeof(GetListLimitedRandomNumbersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetListLimitedRandomNumbersSend", typeof(GetListLimitedRandomNumbersSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetRandomNumbersReply", typeof(GetRandomNumbersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetRandomNumbersSend", typeof(GetRandomNumbersSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGameDataInspectionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd", IsNullable=false)]
public partial class ReportGameDataInspection {
    
    private Version versionField;
    
    private ReportGameDataInspectionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ReportGameDataInspectionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGameDataInspection {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGameDataInspectionVer1.xsd")]
public partial class ReportGameDataInspectionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetHtmlInspectionReportReply", typeof(GetHtmlInspectionReportReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetHtmlInspectionReportSend", typeof(GetHtmlInspectionReportSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetInspectionReportReply", typeof(GetInspectionReportReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetInspectionReportSend", typeof(GetInspectionReportSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetInspectionReportTypeReply", typeof(GetInspectionReportTypeReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetInspectionReportTypeSend", typeof(GetInspectionReportTypeSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetMinimumPlayableCreditBalanceReply", typeof(GetMinimumPlayableCreditBalanceReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetMinimumPlayableCreditBalanceSend", typeof(GetMinimumPlayableCreditBalanceSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGamePerformance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XReportGamePerformanceVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XReportGamePerformanceVer1.xsd", IsNullable=false)]
public partial class ReportGamePerformance {
    
    private Version versionField;
    
    private ReportGamePerformanceMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ReportGamePerformanceMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ReportGamePerformance {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XReportGamePerformanceVer1.xsd")]
public partial class ReportGamePerformanceMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetPerformanceReportReply", typeof(GetPerformanceReportReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPerformanceReportSend", typeof(GetPerformanceReportSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ResponsibleGamingSessionDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XResponsibleGamingSessionDisplayVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XResponsibleGamingSessionDisplayVer1.xsd", IsNullable=false)]
public partial class ResponsibleGamingSessionDisplay {
    
    private Version versionField;
    
    private ResponsibleGamingSessionDisplayMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ResponsibleGamingSessionDisplayMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ResponsibleGamingSessionDisplay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XResponsibleGamingSessionDisplayVer1.xsd")]
public partial class ResponsibleGamingSessionDisplayMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RequestDisplaySessionInfoReply", typeof(RequestDisplaySessionInfoReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestDisplaySessionInfoSend", typeof(RequestDisplaySessionInfoSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XRetrieveGameLevelAwardsVer1.xsd", IsNullable=false)]
public partial class RetrieveGameLevelAwards {
    
    private Version versionField;
    
    private RetrieveGameLevelAwardsMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public RetrieveGameLevelAwardsMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RetrieveGameLevelAwards {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRetrieveGameLevelAwardsVer1.xsd")]
public partial class RetrieveGameLevelAwardsMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetGameLevelAwardValuesReply", typeof(GetGameLevelAwardValuesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetGameLevelAwardValuesSend", typeof(GetGameLevelAwardValuesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XRuntimeGameEventsVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd", IsNullable=false)]
public partial class RuntimeGameEvents {
    
    private Version versionField;
    
    private RuntimeGameEventsMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public RuntimeGameEventsMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.RuntimeGameEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XRuntimeGameEventsVer1.xsd")]
public partial class RuntimeGameEventsMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GameBetMeterKeysUpdateReply", typeof(GameBetMeterKeysUpdateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameBetMeterKeysUpdateSend", typeof(GameBetMeterKeysUpdateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GameBetMeterUpdateReply", typeof(GameBetMeterUpdateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameBetMeterUpdateSend", typeof(GameBetMeterUpdateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GameSelectionStatusUpdateReply", typeof(GameSelectionStatusUpdateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GameSelectionStatusUpdateSend", typeof(GameSelectionStatusUpdateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetRuntimeGameEventsConfigurationReply", typeof(GetRuntimeGameEventsConfigurationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetRuntimeGameEventsConfigurationSend", typeof(GetRuntimeGameEventsConfigurationSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerChoiceUpdateReply", typeof(PlayerChoiceUpdateReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerChoiceUpdateSend", typeof(PlayerChoiceUpdateSend))]
    [System.Xml.Serialization.XmlElementAttribute("WaitingForGenericInputStatusUpdateReply", typeof(WaitingForGenericInputStatusUpdateReply))]
    [System.Xml.Serialization.XmlElementAttribute("WaitingForGenericInputStatusUpdateSend", typeof(WaitingForGenericInputStatusUpdateSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSelectionManagementVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XSelectionManagementVer1.xsd", IsNullable=false)]
public partial class SelectionManagement {
    
    private Version versionField;
    
    private SelectionManagementMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public SelectionManagementMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SelectionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSelectionManagementVer1.xsd")]
public partial class SelectionManagementMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AppRequestedReply", typeof(AppRequestedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppRequestedSend", typeof(AppRequestedSend))]
    [System.Xml.Serialization.XmlElementAttribute("AppStateChangedReply", typeof(AppStateChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AppStateChangedSend", typeof(AppStateChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("AvailableAppsChangedReply", typeof(AvailableAppsChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("AvailableAppsChangedSend", typeof(AvailableAppsChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("ChooserRequestedReply", typeof(ChooserRequestedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ChooserRequestedSend", typeof(ChooserRequestedSend))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayShellReply", typeof(DisplayShellReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayShellSend", typeof(DisplayShellSend))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayStateChangedReply", typeof(DisplayStateChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayStateChangedSend", typeof(DisplayStateChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayThemeReply", typeof(DisplayThemeReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayThemeSend", typeof(DisplayThemeSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppStateReply", typeof(GetAppStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAppStateSend", typeof(GetAppStateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableAppsReply", typeof(GetAvailableAppsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetAvailableAppsSend", typeof(GetAvailableAppsSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultAppReply", typeof(GetDefaultAppReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetDefaultAppSend", typeof(GetDefaultAppSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetGamePropertiesReply", typeof(GetGamePropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetGamePropertiesSend", typeof(GetGamePropertiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedAppReply", typeof(GetSelectedAppReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectedAppSend", typeof(GetSelectedAppSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemePerformanceMetersReply", typeof(GetThemePerformanceMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemePerformanceMetersSend", typeof(GetThemePerformanceMetersSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetChooserOfferableReply", typeof(SetChooserOfferableReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetChooserOfferableSend", typeof(SetChooserOfferableSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSessionManagementVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XSessionManagementVer1.xsd", IsNullable=false)]
public partial class SessionManagement {
    
    private Version versionField;
    
    private SessionManagementMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public SessionManagementMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SessionManagement {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSessionManagementVer1.xsd")]
public partial class SessionManagementMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CreateSessionReply", typeof(CreateSessionReply))]
    [System.Xml.Serialization.XmlElementAttribute("CreateSessionSend", typeof(CreateSessionSend))]
    [System.Xml.Serialization.XmlElementAttribute("DestroySessionReply", typeof(DestroySessionReply))]
    [System.Xml.Serialization.XmlElementAttribute("DestroySessionSend", typeof(DestroySessionSend))]
    [System.Xml.Serialization.XmlElementAttribute("LaunchSessionReply", typeof(LaunchSessionReply))]
    [System.Xml.Serialization.XmlElementAttribute("LaunchSessionSend", typeof(LaunchSessionSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSetupValidationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XSetupValidationVer1.xsd", IsNullable=false)]
public partial class SetupValidation {
    
    private Version versionField;
    
    private SetupValidationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public SetupValidationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SetupValidation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSetupValidationVer1.xsd")]
public partial class SetupValidationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ValidateThemeSetupReply", typeof(ValidateThemeSetupReply))]
    [System.Xml.Serialization.XmlElementAttribute("ValidateThemeSetupSend", typeof(ValidateThemeSetupSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XShellActivationVer1.xsd", IsNullable=false)]
public partial class ShellActivation {
    
    private Version versionField;
    
    private ShellActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ShellActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellActivationVer1.xsd")]
public partial class ShellActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateShellContextReply", typeof(ActivateShellContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateShellContextSend", typeof(ActivateShellContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateShellContextReply", typeof(InactivateShellContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateShellContextSend", typeof(InactivateShellContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewShellContextReply", typeof(NewShellContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewShellContextSend", typeof(NewShellContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellApiControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XShellApiControlVer1.xsd", IsNullable=false)]
public partial class ShellApiControl {
    
    private Version versionField;
    
    private ShellApiControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ShellApiControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellApiControlVer1.xsd")]
public partial class ShellApiControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetShellApiVersionsReply", typeof(GetShellApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetShellApiVersionsSend", typeof(GetShellApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetShellApiVersionsReply", typeof(SetShellApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetShellApiVersionsSend", typeof(SetShellApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellHistoryControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XShellHistoryControlVer1.xsd", IsNullable=false)]
public partial class ShellHistoryControl {
    
    private Version versionField;
    
    private ShellHistoryControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ShellHistoryControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryControlVer1.xsd")]
public partial class ShellHistoryControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BindCoplayerSessionToHistoryReply", typeof(BindCoplayerSessionToHistoryReply))]
    [System.Xml.Serialization.XmlElementAttribute("BindCoplayerSessionToHistorySend", typeof(BindCoplayerSessionToHistorySend))]
    [System.Xml.Serialization.XmlElementAttribute("GetHistoryContextReply", typeof(GetHistoryContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetHistoryContextSend", typeof(GetHistoryContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataReply", typeof(ReadCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataSend", typeof(ReadCritDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellHistoryStoreVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XShellHistoryStoreVer1.xsd", IsNullable=false)]
public partial class ShellHistoryStore {
    
    private Version versionField;
    
    private ShellHistoryStoreMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ShellHistoryStoreMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellHistoryStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellHistoryStoreVer1.xsd")]
public partial class ShellHistoryStoreMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetShellHistoryWritePermittedReply", typeof(GetShellHistoryWritePermittedReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetShellHistoryWritePermittedSend", typeof(GetShellHistoryWritePermittedSend))]
    [System.Xml.Serialization.XmlElementAttribute("LogEndGameCycleReply", typeof(LogEndGameCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("LogEndGameCycleSend", typeof(LogEndGameCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataReply", typeof(ReadCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataSend", typeof(ReadCritDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveCritDataReply", typeof(RemoveCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveCritDataSend", typeof(RemoveCritDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("ShellHistoryWritePermittedReply", typeof(ShellHistoryWritePermittedReply))]
    [System.Xml.Serialization.XmlElementAttribute("ShellHistoryWritePermittedSend", typeof(ShellHistoryWritePermittedSend))]
    [System.Xml.Serialization.XmlElementAttribute("WriteCritDataReply", typeof(WriteCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("WriteCritDataSend", typeof(WriteCritDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellStoreVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XShellStoreVer1.xsd", IsNullable=false)]
public partial class ShellStore : KeyValueStore {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShellThemeControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XShellThemeControlVer1.xsd", IsNullable=false)]
public partial class ShellThemeControl {
    
    private Version versionField;
    
    private ShellThemeControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ShellThemeControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShellThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShellThemeControlVer1.xsd")]
public partial class ShellThemeControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetSelectableThemesReply", typeof(GetSelectableThemesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectableThemesSend", typeof(GetSelectableThemesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeInformationReply", typeof(GetThemeInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeInformationSend", typeof(GetThemeInformationSend))]
    [System.Xml.Serialization.XmlElementAttribute("SwitchThemeReply", typeof(SwitchThemeReply))]
    [System.Xml.Serialization.XmlElementAttribute("SwitchThemeSend", typeof(SwitchThemeSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XShowDemoVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XShowDemoVer1.xsd", IsNullable=false)]
public partial class ShowDemo {
    
    private Version versionField;
    
    private ShowDemoMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ShowDemoMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ShowDemo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XShowDemoVer1.xsd")]
public partial class ShowDemoMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AddMoneyReply", typeof(AddMoneyReply))]
    [System.Xml.Serialization.XmlElementAttribute("AddMoneySend", typeof(AddMoneySend))]
    [System.Xml.Serialization.XmlElementAttribute("GetShowDemoPropertiesReply", typeof(GetShowDemoPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetShowDemoPropertiesSend", typeof(GetShowDemoPropertiesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd", IsNullable=false)]
public partial class SportsBettingGamingCycle {
    
    private Version versionField;
    
    private SportsBettingGamingCycleMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public SportsBettingGamingCycleMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SportsBettingGamingCycle {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSportsBettingGamingCycleVer1.xsd")]
public partial class SportsBettingGamingCycleMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CommitSportsBetReserveReply", typeof(CommitSportsBetReserveReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitSportsBetReserveSend", typeof(CommitSportsBetReserveSend))]
    [System.Xml.Serialization.XmlElementAttribute("CommitSportsBettingGamingCycleReply", typeof(CommitSportsBettingGamingCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("CommitSportsBettingGamingCycleSend", typeof(CommitSportsBettingGamingCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("EndSportsBettingGamingCycleReply", typeof(EndSportsBettingGamingCycleReply))]
    [System.Xml.Serialization.XmlElementAttribute("EndSportsBettingGamingCycleSend", typeof(EndSportsBettingGamingCycleSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSportsBettingGamingCycleStateReply", typeof(GetSportsBettingGamingCycleStateReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSportsBettingGamingCycleStateSend", typeof(GetSportsBettingGamingCycleStateSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSportsBettingPropertiesReply", typeof(GetSportsBettingPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSportsBettingPropertiesSend", typeof(GetSportsBettingPropertiesSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSportsBettingReserveReply", typeof(GetSportsBettingReserveReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSportsBettingReserveSend", typeof(GetSportsBettingReserveSend))]
    [System.Xml.Serialization.XmlElementAttribute("ReserveSportsBetReply", typeof(ReserveSportsBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReserveSportsBetSend", typeof(ReserveSportsBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateSportsBettingPropertiesReply", typeof(UpdateSportsBettingPropertiesReply))]
    [System.Xml.Serialization.XmlElementAttribute("UpdateSportsBettingPropertiesSend", typeof(UpdateSportsBettingPropertiesSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSystemActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XSystemActivationVer1.xsd", IsNullable=false)]
public partial class SystemActivation {
    
    private Version versionField;
    
    private SystemActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public SystemActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemActivationVer1.xsd")]
public partial class SystemActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateSystemContextReply", typeof(ActivateSystemContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateSystemContextSend", typeof(ActivateSystemContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateSystemContextReply", typeof(InactivateSystemContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateSystemContextSend", typeof(InactivateSystemContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewSystemContextReply", typeof(NewSystemContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewSystemContextSend", typeof(NewSystemContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XSystemApiControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XSystemApiControlVer1.xsd", IsNullable=false)]
public partial class SystemApiControl {
    
    private Version versionField;
    
    private SystemApiControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public SystemApiControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.SystemApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XSystemApiControlVer1.xsd")]
public partial class SystemApiControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetSystemApiVersionsReply", typeof(GetSystemApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSystemApiVersionsSend", typeof(GetSystemApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetSystemApiVersionsReply", typeof(SetSystemApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetSystemApiVersionsSend", typeof(SetSystemApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XThemeActivationVer1.xsd", IsNullable=false)]
public partial class ThemeActivation {
    
    private Version versionField;
    
    private ThemeActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ThemeActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeActivationVer1.xsd")]
public partial class ThemeActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateThemeContextReply", typeof(ActivateThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateThemeContextSend", typeof(ActivateThemeContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateThemeContextReply", typeof(InactivateThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateThemeContextSend", typeof(InactivateThemeContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewThemeContextReply", typeof(NewThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewThemeContextSend", typeof(NewThemeContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("SwitchThemeContextReply", typeof(SwitchThemeContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("SwitchThemeContextSend", typeof(SwitchThemeContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeApiControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XThemeApiControlVer1.xsd", IsNullable=false)]
public partial class ThemeApiControl {
    
    private Version versionField;
    
    private ThemeApiControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ThemeApiControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeApiControlVer1.xsd")]
public partial class ThemeApiControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetThemeApiVersionsReply", typeof(GetThemeApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetThemeApiVersionsSend", typeof(GetThemeApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetThemeApiVersionsReply", typeof(SetThemeApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetThemeApiVersionsSend", typeof(SetThemeApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XThemeControlVer1.xsd", IsNullable=false)]
public partial class ThemeControl {
    
    private Version versionField;
    
    private ThemeControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ThemeControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeControlVer1.xsd")]
public partial class ThemeControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarInfoReply", typeof(GetPayvarInfoReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetPayvarInfoSend", typeof(GetPayvarInfoSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectableThemesReply", typeof(GetSelectableThemesReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetSelectableThemesSend", typeof(GetSelectableThemesSend))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeSwitchCancelledReply", typeof(ThemeSwitchCancelledReply))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeSwitchCancelledSend", typeof(ThemeSwitchCancelledSend))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeSwitchRequestReply", typeof(ThemeSwitchRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("ThemeSwitchRequestSend", typeof(ThemeSwitchRequestSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemedHandpay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemedHandpayVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XThemedHandpayVer1.xsd", IsNullable=false)]
public partial class ThemedHandpay {
    
    private Version versionField;
    
    private ThemedHandpayMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ThemedHandpayMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemedHandpay {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemedHandpayVer1.xsd")]
public partial class ThemedHandpayMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("HandpayLockupStatusChangedReply", typeof(HandpayLockupStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("HandpayLockupStatusChangedSend", typeof(HandpayLockupStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryHandpayLockupStatusReply", typeof(QueryHandpayLockupStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryHandpayLockupStatusSend", typeof(QueryHandpayLockupStatusSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeDisplayEventsVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd", IsNullable=false)]
public partial class ThemeDisplayEvents {
    
    private Version versionField;
    
    private ThemeDisplayEventsMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public ThemeDisplayEventsMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeDisplayEvents {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XThemeDisplayEventsVer1.xsd")]
public partial class ThemeDisplayEventsMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DisplayedThemeChangedReply", typeof(DisplayedThemeChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayedThemeChangedSend", typeof(DisplayedThemeChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryDisplayedThemeReply", typeof(QueryDisplayedThemeReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryDisplayedThemeSend", typeof(QueryDisplayedThemeSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.ThemeStore {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XThemeStoreVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XThemeStoreVer1.xsd", IsNullable=false)]
public partial class ThemeStore : KeyValueStore {
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTicketPrintControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTicketPrintControlVer1.xsd", IsNullable=false)]
public partial class TicketPrintControl {
    
    private Version versionField;
    
    private TicketPrintControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TicketPrintControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TicketPrintControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTicketPrintControlVer1.xsd")]
public partial class TicketPrintControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AbortTicketPrintReply", typeof(AbortTicketPrintReply))]
    [System.Xml.Serialization.XmlElementAttribute("AbortTicketPrintSend", typeof(AbortTicketPrintSend))]
    [System.Xml.Serialization.XmlElementAttribute("NotificationRegistrationReply", typeof(NotificationRegistrationReply))]
    [System.Xml.Serialization.XmlElementAttribute("NotificationRegistrationSend", typeof(NotificationRegistrationSend))]
    [System.Xml.Serialization.XmlElementAttribute("PrintTicketReply", typeof(PrintTicketReply))]
    [System.Xml.Serialization.XmlElementAttribute("PrintTicketSend", typeof(PrintTicketSend))]
    [System.Xml.Serialization.XmlElementAttribute("PrinterEnabledStatusChangedReply", typeof(PrinterEnabledStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("PrinterEnabledStatusChangedSend", typeof(PrinterEnabledStatusChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPrintingSupportReply", typeof(QueryPrintingSupportReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryPrintingSupportSend", typeof(QueryPrintingSupportSend))]
    [System.Xml.Serialization.XmlElementAttribute("QueryTicketStatusReply", typeof(QueryTicketStatusReply))]
    [System.Xml.Serialization.XmlElementAttribute("QueryTicketStatusSend", typeof(QueryTicketStatusSend))]
    [System.Xml.Serialization.XmlElementAttribute("TicketStatusChangedReply", typeof(TicketStatusChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("TicketStatusChangedSend", typeof(TicketStatusChangedSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTiltControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTiltControlVer1.xsd", IsNullable=false)]
public partial class TiltControl {
    
    private Version versionField;
    
    private TiltControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TiltControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TiltControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTiltControlVer1.xsd")]
public partial class TiltControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RequestClearTiltReply", typeof(RequestClearTiltReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestClearTiltSend", typeof(RequestClearTiltSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestTiltReply", typeof(RequestTiltReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestTiltSend", typeof(RequestTiltSend))]
    [System.Xml.Serialization.XmlElementAttribute("TiltClearedByAttendantReply", typeof(TiltClearedByAttendantReply))]
    [System.Xml.Serialization.XmlElementAttribute("TiltClearedByAttendantSend", typeof(TiltClearedByAttendantSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTournamentMetersVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTournamentMetersVer1.xsd", IsNullable=false)]
public partial class TournamentMeters {
    
    private Version versionField;
    
    private TournamentMetersMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TournamentMetersMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentMeters {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentMetersVer1.xsd")]
public partial class TournamentMetersMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetTournamentPlayerMetersReply", typeof(GetTournamentPlayerMetersReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetTournamentPlayerMetersSend", typeof(GetTournamentPlayerMetersSend))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCommittedCreditsChangedReply", typeof(TournamentCommittedCreditsChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCommittedCreditsChangedSend", typeof(TournamentCommittedCreditsChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCreditsBetReply", typeof(TournamentCreditsBetReply))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCreditsBetSend", typeof(TournamentCreditsBetSend))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCreditsSetReply", typeof(TournamentCreditsSetReply))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCreditsSetSend", typeof(TournamentCreditsSetSend))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCreditsWonReply", typeof(TournamentCreditsWonReply))]
    [System.Xml.Serialization.XmlElementAttribute("TournamentCreditsWonSend", typeof(TournamentCreditsWonSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTournamentSessionControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTournamentSessionControlVer1.xsd", IsNullable=false)]
public partial class TournamentSessionControl {
    
    private Version versionField;
    
    private TournamentSessionControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TournamentSessionControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TournamentSessionControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTournamentSessionControlVer1.xsd")]
public partial class TournamentSessionControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FinishSessionReply", typeof(FinishSessionReply))]
    [System.Xml.Serialization.XmlElementAttribute("FinishSessionSend", typeof(FinishSessionSend))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSessionInitiatorReply", typeof(GetConfigDataSessionInitiatorReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigDataSessionInitiatorSend", typeof(GetConfigDataSessionInitiatorSend))]
    [System.Xml.Serialization.XmlElementAttribute("QuerySessionInformationReply", typeof(QuerySessionInformationReply))]
    [System.Xml.Serialization.XmlElementAttribute("QuerySessionInformationSend", typeof(QuerySessionInformationSend))]
    [System.Xml.Serialization.XmlElementAttribute("ResetSessionRequestReply", typeof(ResetSessionRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("ResetSessionRequestSend", typeof(ResetSessionRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("SessionCompleteReply", typeof(SessionCompleteReply))]
    [System.Xml.Serialization.XmlElementAttribute("SessionCompleteSend", typeof(SessionCompleteSend))]
    [System.Xml.Serialization.XmlElementAttribute("SessionConfigurationChangedReply", typeof(SessionConfigurationChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("SessionConfigurationChangedSend", typeof(SessionConfigurationChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("SessionResetReply", typeof(SessionResetReply))]
    [System.Xml.Serialization.XmlElementAttribute("SessionResetSend", typeof(SessionResetSend))]
    [System.Xml.Serialization.XmlElementAttribute("SessionStartReply", typeof(SessionStartReply))]
    [System.Xml.Serialization.XmlElementAttribute("SessionStartSend", typeof(SessionStartSend))]
    [System.Xml.Serialization.XmlElementAttribute("StartSessionRequestReply", typeof(StartSessionRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("StartSessionRequestSend", typeof(StartSessionRequestSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTransactionalCritDataReadVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTransactionalCritDataReadVer1.xsd", IsNullable=false)]
public partial class TransactionalCritDataRead {
    
    private Version versionField;
    
    private TransactionalCritDataReadMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TransactionalCritDataReadMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataRead {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTransactionalCritDataReadVer1.xsd")]
public partial class TransactionalCritDataReadMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataReply", typeof(ReadCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("ReadCritDataSend", typeof(ReadCritDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTransactionalCritDataWriteVer1.xsd", IsNullable=false)]
public partial class TransactionalCritDataWrite {
    
    private Version versionField;
    
    private TransactionalCritDataWriteMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TransactionalCritDataWriteMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TransactionalCritDataWrite {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTransactionalCritDataWriteVer1.xsd")]
public partial class TransactionalCritDataWriteMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("RemoveCritDataReply", typeof(RemoveCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveCritDataSend", typeof(RemoveCritDataSend))]
    [System.Xml.Serialization.XmlElementAttribute("WriteCritDataReply", typeof(WriteCritDataReply))]
    [System.Xml.Serialization.XmlElementAttribute("WriteCritDataSend", typeof(WriteCritDataSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTsmActivationVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTsmActivationVer1.xsd", IsNullable=false)]
public partial class TsmActivation {
    
    private Version versionField;
    
    private TsmActivationMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TsmActivationMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmActivation {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmActivationVer1.xsd")]
public partial class TsmActivationMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivateTsmContextReply", typeof(ActivateTsmContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("ActivateTsmContextSend", typeof(ActivateTsmContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateTsmContextReply", typeof(InactivateTsmContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("InactivateTsmContextSend", typeof(InactivateTsmContextSend))]
    [System.Xml.Serialization.XmlElementAttribute("NewTsmContextReply", typeof(NewTsmContextReply))]
    [System.Xml.Serialization.XmlElementAttribute("NewTsmContextSend", typeof(NewTsmContextSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XTsmApiControlVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XTsmApiControlVer1.xsd", IsNullable=false)]
public partial class TsmApiControl {
    
    private Version versionField;
    
    private TsmApiControlMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public TsmApiControlMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.TsmApiControl {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XTsmApiControlVer1.xsd")]
public partial class TsmApiControlMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetTsmApiVersionsReply", typeof(GetTsmApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("GetTsmApiVersionsSend", typeof(GetTsmApiVersionsSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetTsmApiVersionsReply", typeof(SetTsmApiVersionsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetTsmApiVersionsSend", typeof(SetTsmApiVersionsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XVKBingoVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XVKBingoVer1.xsd", IsNullable=false)]
public partial class VKBingo {
    
    private Version versionField;
    
    private VKBingoMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public VKBingoMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VKBingo {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVKBingoVer1.xsd")]
public partial class VKBingoMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DisplayStateChangedReply", typeof(DisplayStateChangedReply))]
    [System.Xml.Serialization.XmlElementAttribute("DisplayStateChangedSend", typeof(DisplayStateChangedSend))]
    [System.Xml.Serialization.XmlElementAttribute("GamePlayEndMeteringResponseReply", typeof(GamePlayEndMeteringResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("GamePlayEndMeteringResponseSend", typeof(GamePlayEndMeteringResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("LockOutResponseReply", typeof(LockOutResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("LockOutResponseSend", typeof(LockOutResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlacePurchaseReply", typeof(PlacePurchaseReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlacePurchaseSend", typeof(PlacePurchaseSend))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerCashoutRequestReply", typeof(PlayerCashoutRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerCashoutRequestSend", typeof(PlayerCashoutRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestGamePlayEndMeteringReply", typeof(RequestGamePlayEndMeteringReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestGamePlayEndMeteringSend", typeof(RequestGamePlayEndMeteringSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestLockOutReply", typeof(RequestLockOutReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestLockOutSend", typeof(RequestLockOutSend))]
    [System.Xml.Serialization.XmlElementAttribute("RequestUnLockReply", typeof(RequestUnLockReply))]
    [System.Xml.Serialization.XmlElementAttribute("RequestUnLockSend", typeof(RequestUnLockSend))]
    [System.Xml.Serialization.XmlElementAttribute("UnLockResponseReply", typeof(UnLockResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("UnLockResponseSend", typeof(UnLockResponseSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XVoucherRedemptionVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XVoucherRedemptionVer1.xsd", IsNullable=false)]
public partial class VoucherRedemption {
    
    private Version versionField;
    
    private VoucherRedemptionMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public VoucherRedemptionMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.VoucherRedemption {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XVoucherRedemptionVer1.xsd")]
public partial class VoucherRedemptionMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AbortVoucherRedemptionReply", typeof(AbortVoucherRedemptionReply))]
    [System.Xml.Serialization.XmlElementAttribute("AbortVoucherRedemptionSend", typeof(AbortVoucherRedemptionSend))]
    [System.Xml.Serialization.XmlElementAttribute("SetVoucherRedemptionRegistrationsReply", typeof(SetVoucherRedemptionRegistrationsReply))]
    [System.Xml.Serialization.XmlElementAttribute("SetVoucherRedemptionRegistrationsSend", typeof(SetVoucherRedemptionRegistrationsSend))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherRedemptionRequestReply", typeof(VoucherRedemptionRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherRedemptionRequestSend", typeof(VoucherRedemptionRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherRedemptionResponseReply", typeof(VoucherRedemptionResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherRedemptionResponseSend", typeof(VoucherRedemptionResponseSend))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherReviewRequestReply", typeof(VoucherReviewRequestReply))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherReviewRequestSend", typeof(VoucherReviewRequestSend))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherReviewResponseReply", typeof(VoucherReviewResponseReply))]
    [System.Xml.Serialization.XmlElementAttribute("VoucherReviewResponseSend", typeof(VoucherReviewResponseSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.WinMismatch {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="F2XWinMismatchVer1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="F2XWinMismatchVer1.xsd", IsNullable=false)]
public partial class WinMismatch {
    
    private Version versionField;
    
    private WinMismatchMessage messageField;
    
    /// <remarks/>
    public Version Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
    
    /// <remarks/>
    public WinMismatchMessage Message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Foundation.F2X.Schemas.Internal.WinMismatch {
    using System.Collections.Generic;
    using Types;
    using DiscoveryContextTypes;
    using LocalizationTypes;
    using AppTypes;
    using PropertyTypes;
    using AppDecorationTypes;
    using ExtensionProgressiveControllerTypes;
    using KVSTypes;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="F2XWinMismatchVer1.xsd")]
public partial class WinMismatchMessage {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("VerifyProgressiveAwardsReply", typeof(VerifyProgressiveAwardsReply))]
    [System.Xml.Serialization.XmlElementAttribute("VerifyProgressiveAwardsSend", typeof(VerifyProgressiveAwardsSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}
}