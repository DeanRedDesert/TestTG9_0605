//-----------------------------------------------------------------------
// <copyright file = "ICashoutCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.Cashout;
    using Schemas.Internal.Types;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="Cashout"/> category.
    /// Cashout category of messages. Implements closed-loop cashouts.
    /// Category: 146; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ICashoutCategoryCallbacks
    {
        /// <summary>
        /// Notification sent to the client after a request is accepted and the cashout is processed. This indicates
        /// that the end of a cashout request. This message is sent exactly once, and only if the initial request was
        /// accepted. The corresponding CashoutId expires after this message.
        /// </summary>
        /// <param name="cashoutId">
        /// Unique identifier associated with this cashout request.
        /// </param>
        /// <param name="status">
        /// Indicates the status of the cashout request.
        /// </param>
        /// <param name="requestedAmount">
        /// Amount originally requested to be cashed out. Amount will only be provided if a specific amount was
        /// requested.
        /// </param>
        /// <param name="cashedOutAmount">
        /// The amount cashed out by this request (valid when the status is Completed).
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessStatus(string cashoutId, CashoutStatus status, Amount requestedAmount, Amount cashedOutAmount);

        /// <summary>
        /// Notifies that one or more cashout properties have changed.
        /// </summary>
        /// <param name="properties">
        /// Contains the bank play properties that are changed **ONLY**.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessUpdateProperties(Properties properties);

    }

}

