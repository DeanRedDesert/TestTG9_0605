//-----------------------------------------------------------------------
// <copyright file = "IExtensionProgressiveControllerRuntimeCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using System.Collections.Generic;
    using Schemas.Internal.ExtensionProgressiveControllerRuntime;
    using Schemas.Internal.Types;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="ExtensionProgressiveControllerRuntime"/> category.
    /// Category for supporting a Progressive Controller that is implemented by a system extension. Methods of this
    /// category can be called during normal operation.
    /// Category: 3024; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IExtensionProgressiveControllerRuntimeCategoryCallbacks
    {
        /// <summary>
        /// Request for the extension to validate a potential progressive hit.
        /// </summary>
        /// <param name="payvarId">
        /// Payvar associated with the potential progressive hit(s).
        /// </param>
        /// <param name="denomination">
        /// Denomination being played at the time of the potential hit(s).
        /// </param>
        /// <param name="potentialHits">
        /// Potential hit values.
        /// </param>
        /// <param name="callbackResult">
        /// [Out] The content of the ValidationRequestReply message.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessValidationRequest(PayvarIdentifier payvarId, uint denomination, IEnumerable<PotentialHit> potentialHits, out IEnumerable<string> callbackResult);

        /// <summary>
        /// Event indicating that a WAP handpay has occurred, and must be acknowledged.
        /// </summary>
        /// <param name="controllerId">
        /// Controller id associated with the specific wap win.
        /// </param>
        /// <param name="payvarId">
        /// Payvar being played at the time of the wap win(s).
        /// </param>
        /// <param name="denomination">
        /// Selected denomination at the time of the wap win(s).
        /// </param>
        /// <param name="wapWins">
        /// List of Wap wins.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessWapHandpay(string controllerId, PayvarIdentifier payvarId, uint denomination, IEnumerable<WapWin> wapWins);

    }

}

