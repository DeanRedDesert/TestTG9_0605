//-----------------------------------------------------------------------
// <copyright file = "IPlayerTippingCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.PlayerTipping;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="PlayerTipping"/> category.
    /// PlayerTipping category.  Defines messages between extensions and foundation to satisfy printing of tipping
    /// vouchers.
    /// Category: 3032; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IPlayerTippingCategoryCallbacks
    {
        /// <summary>
        /// Response from the foundation containing the cashout ticket attributes needed for printing.
        /// </summary>
        /// <param name="templateType">
        /// The ticket template type.  Typically will be '9' or 'C'.
        /// </param>
        /// <param name="validationNumber">
        /// Region 'i'. The formatted validation number.
        /// </param>
        /// <param name="address1">
        /// Region '1'. The first line of the address.
        /// </param>
        /// <param name="address2">
        /// Region '2'. The second line of the address.
        /// </param>
        /// <param name="address3">
        /// Region '3'. The third line of the address.
        /// </param>
        /// <param name="ticketTitle">
        /// Region 'j'. Ticket title
        /// </param>
        /// <param name="validationLabel">
        /// Region 'k'.  Validation label.
        /// </param>
        /// <param name="formattedValidationNumber">
        /// Region 'B'.  Formatted validation number.
        /// </param>
        /// <param name="ticketDate">
        /// Region 'C'. Ticket date.
        /// </param>
        /// <param name="ticketTime">
        /// Region 'D'. Ticket time.
        /// </param>
        /// <param name="formattedTicketNumber">
        /// Region 'E'. Formatted ticket number string.
        /// </param>
        /// <param name="formattedMoneyText1">
        /// Region 'F'. Formatted money text string.
        /// </param>
        /// <param name="formattedMoneyText2">
        /// Region 'G'. Formatted money text string.
        /// </param>
        /// <param name="formattedNumericAmount">
        /// Region 'I'. Formatted amount as numeric string.
        /// </param>
        /// <param name="expiration">
        /// Region 'q'. Text indicating when the ticket will expire (e.g. Expires 30 days, Expires mm/dd/yyyy).
        /// </param>
        /// <param name="machineId">
        /// Region 'L'. Machine Id / asset number.
        /// </param>
        /// <param name="formattedValidationNumber2">
        /// Region 'Z'.  Formatted validation number.
        /// </param>
        /// <param name="manualAuthenticationNumber">
        /// Region 'y'.  Formatted manual authentication number.
        /// </param>
        /// <param name="manualAuthentication2DBarcode">
        /// Region 'Y'.  Manual authentication 2D barcode.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessTippingResponse(string templateType, string validationNumber, string address1, string address2, string address3, string ticketTitle, string validationLabel, string formattedValidationNumber, string ticketDate, string ticketTime, string formattedTicketNumber, string formattedMoneyText1, string formattedMoneyText2, string formattedNumericAmount, string expiration, string machineId, string formattedValidationNumber2, string manualAuthenticationNumber, string manualAuthentication2DBarcode);

        /// <summary>
        /// Notifies that one or more of player tipping properties have changed.
        /// </summary>
        /// <param name="content">
        /// Contains the player tipping properties that have changed **ONLY**.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessUpdateProperties(Properties content);

    }

}

