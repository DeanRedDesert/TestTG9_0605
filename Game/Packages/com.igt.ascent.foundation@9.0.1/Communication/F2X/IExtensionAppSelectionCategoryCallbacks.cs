//-----------------------------------------------------------------------
// <copyright file = "IExtensionAppSelectionCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2021 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.AppTypes;
    using Schemas.Internal.ExtensionAppSelection;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="ExtensionAppSelection"/> category.
    /// The category of messages to allow an AppExtension to query available central apps, select different central apps
    /// for play, and to respond to requests to show (in-app) chooser.
    /// Category: 3033; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IExtensionAppSelectionCategoryCallbacks
    {
        /// <summary>
        /// Sent when the Foundation's ability to accept new app selection requests changes.
        /// </summary>
        /// <param name="state">
        /// State of the selected app.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessAppSelectionStateChanged(AppSelectionState state);

        /// <summary>
        /// Notification from the foundation when the available apps have changed.
        /// </summary>
        /// <param name="available">
        /// Apps that were made available.
        /// </param>
        /// <param name="updated">
        /// Apps that were updated.
        /// </param>
        /// <param name="removed">
        /// Apps that were removed.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessAvailableCentralAppsChanged(AppInformationList available, AppInformationList updated, AppIdentifierList removed);

        /// <summary>
        /// Message from the foundation indicating the request has been cancelled.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessCentralAppSelectionCanceled();

        /// <summary>
        /// Message from the foundation indicating the request has been completed.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessCentralAppSelectionComplete();

        /// <summary>
        /// Request to display the in-app chooser function.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessChooserRequested();

    }

}

