//-----------------------------------------------------------------------
// <copyright file = "ILinkControlCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.LinkControl;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="LinkControl"/> category.
    /// Link control category of messages.  Category: 102  Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface ILinkControlCategoryCallbacks
    {
        /// <summary>
        /// Request that the recipient return a list of all API categories and their versions in the order of
        /// preference.
        /// </summary>
        /// <param name="jurisdiction">
        /// Jurisdiction string. The exact values are not enumerated and may change over time.
        /// </param>
        /// <param name="connectToken">
        /// A token provided to the bin so that it may identify itself to the Gaming OS.
        /// </param>
        /// <param name="discoveryContexts">
        /// List of discovery contexts used by the bin to make decisions about the categories to negotiate for. /
        /// Discovery context information.
        /// </param>
        /// <param name="extensionImports">
        /// List of imported/linked extensions.  May be used by the bin to make decisions about the negotiation of
        /// categories and versions. / Imported/linked extension.
        /// </param>
        /// <param name="callbackResult">
        /// [Out] The content of the GetApiVersionsReply message.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessGetApiVersions(string jurisdiction, string connectToken, GetApiVersionsSendDiscoveryContexts discoveryContexts, GetApiVersionsSendExtensionImports extensionImports, out GetApiVersionsReplyContentCategoryVersions callbackResult);

        /// <summary>
        /// Notify the bin that it is not the next bin to be activated.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessPark();

        /// <summary>
        /// Set the API categories and versions the bin is to support.
        /// </summary>
        /// <param name="categoryVersions">
        /// The list of categories and their versions.
        /// </param>
        /// <param name="callbackResult">
        /// [Out] The content of the SetApiVersionsReply message.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessSetApiVersions(SetApiVersionsSendCategoryVersions categoryVersions, out bool callbackResult);

    }

}

