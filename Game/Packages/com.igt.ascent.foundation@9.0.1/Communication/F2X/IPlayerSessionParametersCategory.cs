//-----------------------------------------------------------------------
// <copyright file = "IPlayerSessionParametersCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using System.Collections.Generic;
    using Schemas.Internal.PlayerSessionParameters;

    /// <summary>
    /// PlayerSessionParameters category of messages.  Category: 124  Version: 1. Provides information and events to
    /// handle and syncronize the reseting of specific Player Session Parameters.
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IPlayerSessionParametersCategory
    {
        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  Request to determine if Player Session Parameter
        /// Resetting is enabled.
        /// </summary>
        /// <returns>
        /// The content of the GetConfigDataPlayerSessionParameterResetEnabledReply message.
        /// </returns>
        bool GetConfigDataPlayerSessionParameterResetEnabled();

        /// <summary>
        /// Message sent from the Bin to the Foundation on the FI channel. Notification that the Bin has reset the
        /// specified parameters.
        /// </summary>
        /// <param name="resetParameters">
        /// List of parameters that have been reset by this client.
        /// </param>
        void ParametersReset(IEnumerable<SessionParameterType> resetParameters);

        /// <summary>
        /// Sent from a Bin to the foundation on the FI channel.  Get parameters that should be reset by the requester.
        /// </summary>
        /// <returns>
        /// The content of the QueryCurrentResetParametersReply message.
        /// </returns>
        IEnumerable<SessionParameterType> QueryCurrentResetParameters();

    }

}

