//-----------------------------------------------------------------------
// <copyright file = "IGameCycleBettingCategory.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using System;
    using Schemas.Internal.GameCycleBetting;
    using Schemas.Internal.Types;

    /// <summary>
    /// GameCycleBetting category of messages, containing messages enabling a coplayer to place bets.
    /// Category: 1017; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IGameCycleBettingCategory
    {
        /// <summary>
        /// Message from the client to the foundation requesting an amount be committed to bet.
        /// </summary>
        /// <param name="betAmount">
        /// Amount to be committed or bet.
        /// </param>
        /// <returns>
        /// The content of the CommitBetReply message.
        /// </returns>
        bool CommitBet(Amount betAmount);

        /// <summary>
        /// Message requesting the configuration data for this category. Can only be called during context activation.
        /// </summary>
        /// <returns>
        /// The content of the GetConfigDataReply message.
        /// </returns>
        ConfigData GetConfigData();

        /// <summary>
        /// Message from the client to the foundation requesting a bet be placed during the playing state.
        /// </summary>
        /// <param name="betAmount">
        /// Bet Amount to be placed from the credit meter.
        /// </param>
        /// <returns>
        /// The content of the PlaceBetReply message.
        /// </returns>
        bool PlaceBet(Amount betAmount);

        /// <summary>
        /// Message from the client to the foundation requesting the currently committed amount be placed as a bet.
        /// Must be called during the Enroll Complete state.
        /// </summary>
        /// <param name="isMaxBet">
        /// Flag indicating whether this bet is the max bet.
        /// </param>
        void PlaceStartingBet(bool isMaxBet);

        /// <summary>
        /// Message from the client to the foundation requesting the currently committed bet be uncommitted.
        /// </summary>
        void UncommitBet();

    }

}

