//-----------------------------------------------------------------------
// <copyright file = "IShellActivationCategoryCallbacks.cs" company = "IGT">
//     Copyright (c) 2020 IGT.  All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
// <auto-generated>
//     This code was generated by C3G.
//
//     Changes to this file may cause incorrect behavior
//     and will be lost if the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------

namespace IGT.Game.Core.Communication.Foundation.F2X
{
    using Schemas.Internal.ShellActivation;

    /// <summary>
    /// Interface that handles callbacks from the F2X <see cref="ShellActivation"/> category.
    /// F2X Shell Activation category of messages.
    /// Category: 1010; Major Version: 1
    /// </summary>
    /// <remarks>
    /// All documentation is generated from the XSD schema files.
    /// </remarks>
    public interface IShellActivationCategoryCallbacks
    {
        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to activate a new Shell context.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessActivateShellContext();

        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to inactivate the current Shell context.  After
        /// this message, the bin must be ready to receive a NewShellContext message or receive a GetShellApiVersions
        /// message for re-negotiation.
        /// </summary>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessInactivateShellContext();

        /// <summary>
        /// Message from the Foundation to the Bin on the FI channel to change to a new Shell context.
        /// </summary>
        /// <param name="gameMode">
        /// The game mode of the game shell context activation.
        /// </param>
        /// <param name="securityLevel">
        /// String representation of the security level.
        /// </param>
        /// <returns>
        /// An error message if an error occurs; otherwise, null.
        /// </returns>
        string ProcessNewShellContext(GameMode gameMode, SecurityLevelType securityLevel);

    }

}

