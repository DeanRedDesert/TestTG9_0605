// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.4.0.7
//    <NameSpace>IGT.Game.Core.Registries.Internal.F2X.F2XCdsEcpRegistryVer1</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>Collections</InitializeFields><GenerateUnusedComplexTypes>True</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>True</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>Default</PropNameSpecified><PrivateFieldName>EndWithField</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>True</EnableExternalSchemasCache><EnableDebug>True</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>True</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>True</CleanupCode><EnableXmlSerialization>False</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings>IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1</CustomUsings><AttributesToExlude>System.ComponentModel.DefaultValueAttribute</AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace IGT.Game.Core.Registries.Internal.F2X.F2XCdsEcpRegistryVer1
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1;
    using System.Xml;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Registry for describing the information to allow a theme to support the Cds ECP protocol.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2XCdsEcpRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd", IsNullable=false)]
    public partial class CdsEcpRegistry
    {
        #region Private fields
        private string themeRegistryField;
        private decimal percentageOffsetFromBottomField;
        private List<PermittedBetLevelEntry> permittedBetLevelTableField;
        private List<ProgressiveGameLevelIndexEntry> payvarProgressiveGameLevelIndexTableField;
        #endregion
        
        /// <summary>
        /// CdsEcpRegistry class constructor
        /// </summary>
        public CdsEcpRegistry()
        {
            payvarProgressiveGameLevelIndexTableField = new List<ProgressiveGameLevelIndexEntry>();
            permittedBetLevelTableField = new List<PermittedBetLevelEntry>();
            percentageOffsetFromBottomField = ((decimal)(15.00m));
        }
        
        /// <summary>
        /// Relative path to theme registry to which this Cds ECP information belongs.
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string ThemeRegistry
        {
            get
            {
                return themeRegistryField;
            }
            set
            {
                themeRegistryField = value;
            }
        }
        
        /// <summary>
        /// The percentage offset from the bottom of the main screen at which the UI control will be placed by the host content.
        /// </summary>
        public decimal PercentageOffsetFromBottom
        {
            get
            {
                return percentageOffsetFromBottomField;
            }
            set
            {
                percentageOffsetFromBottomField = value;
            }
        }
        
        /// <summary>
        /// The list of permittable bet levels that associate the current bet with the PrizeSet ID defined in the math file.
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<PermittedBetLevelEntry> PermittedBetLevelTable
        {
            get
            {
                return permittedBetLevelTableField;
            }
            set
            {
                permittedBetLevelTableField = value;
            }
        }
        
        /// <summary>
        /// The list of progressive game level indexes and how they relate to the AwardID and other info defined in the math file.
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<ProgressiveGameLevelIndexEntry> PayvarProgressiveGameLevelIndexTable
        {
            get
            {
                return payvarProgressiveGameLevelIndexTableField;
            }
            set
            {
                payvarProgressiveGameLevelIndexTableField = value;
            }
        }
    }
    
    /// <summary>
    /// An entry in the PermittedBetLevelTable
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd")]
    public partial class PermittedBetLevelEntry
    {
        #region Private fields
        private uint betCreditsField;
        private string betIdField;
        private uint prizeSetIdField;
        #endregion
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public uint BetCredits
        {
            get
            {
                return betCreditsField;
            }
            set
            {
                betCreditsField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string BetId
        {
            get
            {
                return betIdField;
            }
            set
            {
                betIdField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public uint PrizeSetId
        {
            get
            {
                return prizeSetIdField;
            }
            set
            {
                prizeSetIdField = value;
            }
        }
    }
    
    /// <summary>
    /// An entry in the ProgressiveGameLevelIndexTable
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd")]
    public partial class ProgressiveGameLevelIndexEntry
    {
        #region Private fields
        private ushort gameLevelIndexField;
        private uint awardIdField;
        private int ownerIdField;
        private ProgressiveGameLevelIndexEntryType typeField;
        private long resetCreditsField;
        private string metadataField;
        #endregion
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ushort GameLevelIndex
        {
            get
            {
                return gameLevelIndexField;
            }
            set
            {
                gameLevelIndexField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public uint AwardId
        {
            get
            {
                return awardIdField;
            }
            set
            {
                awardIdField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int OwnerId
        {
            get
            {
                return ownerIdField;
            }
            set
            {
                ownerIdField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ProgressiveGameLevelIndexEntryType Type
        {
            get
            {
                return typeField;
            }
            set
            {
                typeField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public long ResetCredits
        {
            get
            {
                return resetCreditsField;
            }
            set
            {
                resetCreditsField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Metadata
        {
            get
            {
                return metadataField;
            }
            set
            {
                metadataField = value;
            }
        }
    }
    
    /// <summary>
    /// The type of the progressive being hit.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [XmlTypeAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd")]
    public enum ProgressiveGameLevelIndexEntryType
    {
        /// <summary>
        /// A Parigressive award is unique to pari-mutuel wagering systems.
        /// </summary>
        PARIGRESSIVE,
        /// <summary>
        /// Progressives awards are funds set aside from each wager that are won when a certain condition or conditions are met.
        /// </summary>
        PROGRESSIVE,
    }
    
    /// <summary>
    /// The list of permittable bet levels that associate the current bet with the PrizeSet ID defined in the math file.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd", IsNullable=true)]
    public partial class PermittedBetLevelTable
    {
        #region Private fields
        private List<PermittedBetLevelEntry> permittedBetLevelEntryField;
        #endregion
        
        /// <summary>
        /// PermittedBetLevelTable class constructor
        /// </summary>
        public PermittedBetLevelTable()
        {
            permittedBetLevelEntryField = new List<PermittedBetLevelEntry>();
        }
        
        [XmlElement("PermittedBetLevelEntry")]
        public List<PermittedBetLevelEntry> PermittedBetLevelEntry
        {
            get
            {
                return permittedBetLevelEntryField;
            }
            set
            {
                permittedBetLevelEntryField = value;
            }
        }
    }
    
    /// <summary>
    /// The list of progressive game level indexes and how they relate to the AwardID and other info defined in the math file.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XCdsEcpRegistryVer1.xsd", IsNullable=true)]
    public partial class PayvarProgressiveGameLevelIndexTable
    {
        #region Private fields
        private List<ProgressiveGameLevelIndexEntry> progressiveGameLevelIndexEntryField;
        #endregion
        
        /// <summary>
        /// PayvarProgressiveGameLevelIndexTable class constructor
        /// </summary>
        public PayvarProgressiveGameLevelIndexTable()
        {
            progressiveGameLevelIndexEntryField = new List<ProgressiveGameLevelIndexEntry>();
        }
        
        [XmlElement("ProgressiveGameLevelIndexEntry")]
        public List<ProgressiveGameLevelIndexEntry> ProgressiveGameLevelIndexEntry
        {
            get
            {
                return progressiveGameLevelIndexEntryField;
            }
            set
            {
                progressiveGameLevelIndexEntryField = value;
            }
        }
    }
}
#pragma warning restore
