// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.4.0.7
//    <NameSpace>IGT.Game.Core.Registries.Internal.F2X.F2XBundleRegistryDescriptorVer1</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>Collections</InitializeFields><GenerateUnusedComplexTypes>True</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>True</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>Default</PropNameSpecified><PrivateFieldName>EndWithField</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>True</EnableExternalSchemasCache><EnableDebug>True</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>True</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>True</CleanupCode><EnableXmlSerialization>False</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings>IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1</CustomUsings><AttributesToExlude>System.ComponentModel.DefaultValueAttribute</AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace IGT.Game.Core.Registries.Internal.F2X.F2XBundleRegistryDescriptorVer1
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1;
    using System.Xml;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Registry for describing a ASGB bundle configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2XBundleRegistryDescriptorVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XBundleRegistryDescriptorVer1.xsd", IsNullable=false)]
    public partial class BundleRegistryDescriptor
    {
        #region Private fields
        private string nameField;
        private ExecutableType executableField;
        private LifteTimeType lifeTimeField;
        private TargetedRemovalType targetedRemovalField;
        private string resourceDirectoryField;
        private string nameKeyField;
        #endregion
        
        /// <summary>
        /// BundleRegistryDescriptor class constructor
        /// </summary>
        public BundleRegistryDescriptor()
        {
            executableField = ExecutableType.NonExecutable;
            lifeTimeField = LifteTimeType.MachineLifetime;
            targetedRemovalField = TargetedRemovalType.PermitTargetedRemoval;
        }
        
        /// <summary>
        /// Non-localized user friendly name or description.
        /// </summary>
        public string Name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
            }
        }
        
        /// <summary>
        /// Specifies the type of the bundle. A bundle registry marked with an "Executable" attribute is required if there are any exe-extensions (system exe-extensions or theme-linked exe-extensions) in the bundle.  If there is an exe-extension in the bundle without the "Executable" attribute being present, then this in a validation error and the bundle will system error in a development build, and be discarded in release builds.  The attribute defaults to "NonExecutable" if the attribute is missing.  (Note that exe-extensions should only be present in Ex-packages.  Also note that an Ex-package is used to contain extensions of many types; often Ex-packages do NOT need to contain exe-extensions.)
        /// </summary>
        public ExecutableType Executable
        {
            get
            {
                return executableField;
            }
            set
            {
                executableField = value;
            }
        }
        
        /// <summary>
        /// This attribute controls the lifetime of the automatic removal of the bundle. The attributes defaults to "MachineLifetime" if the attribute is missing.
        /// </summary>
        public LifteTimeType LifeTime
        {
            get
            {
                return lifeTimeField;
            }
            set
            {
                lifeTimeField = value;
            }
        }
        
        /// <summary>
        /// This attribute controls whether or not the bundle may be targeted and successfully removed via the Operator menu and/or protocols like G2S. The attributes defaults to "PermitTargetedRemoval" if the attribute is missing.
        /// </summary>
        public TargetedRemovalType TargetedRemoval
        {
            get
            {
                return targetedRemovalField;
            }
            set
            {
                targetedRemovalField = value;
            }
        }
        
        /// <summary>
        /// Optional resource directory relative to the package root containing resources and localization tables.
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string ResourceDirectory
        {
            get
            {
                return resourceDirectoryField;
            }
            set
            {
                resourceDirectoryField = value;
            }
        }
        
        /// <summary>
        /// Optional localization key for the user friendly name.
        /// </summary>
        public string NameKey
        {
            get
            {
                return nameKeyField;
            }
            set
            {
                nameKeyField = value;
            }
        }
    }
    
    /// <summary>
    /// Enumeration containing the different types of packages.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [XmlTypeAttribute(Namespace="F2XBundleRegistryDescriptorVer1.xsd")]
    public enum ExecutableType
    {
        /// <summary>
        /// Defines that the bundle contains at least one package containing an exe-extension.
        /// </summary>
        Executable,
        /// <summary>
        /// Defines that the bundle must not contain an exe-extension. In case it does the entire ASGB package is denied for installation.
        /// </summary>
        NonExecutable,
    }
    
    /// <summary>
    /// Enumeration containing the different types of lifetime for automatic removal of the bundle.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [XmlTypeAttribute(Namespace="F2XBundleRegistryDescriptorVer1.xsd")]
    public enum LifteTimeType
    {
        /// <summary>
        /// Defines a bundle that is installable after the Foundation is running.  The bundle is NOT removed when the ASCENT/Foundation is removed/updated.
        /// </summary>
        MachineLifetime,
        /// <summary>
        /// Defines a bundle that is installable after the Foundation is running, and becomes tied to the ASCENT/Foundation package at the time of installation.  The bundle is automatically removed if/when the ASCENT/Foundation is removed/updated. In case the bundle is removed via the DIAG tool and the Ascent Foundat version is not altered, the Foundation will consider this as an unexpected removal and will force a NVRAM clear on startup.
        /// </summary>
        FoundationSticky,
    }
    
    /// <summary>
    /// Enumeration containing the different types of targeted removal.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [XmlTypeAttribute(Namespace="F2XBundleRegistryDescriptorVer1.xsd")]
    public enum TargetedRemovalType
    {
        /// <summary>
        /// Defines a bundle that is installable after the Foundation is running. The bundle may NOT be targeted for removal via the Operator menu or G2S (without a NVRAM clear).
        /// In case the bundle is removed via the DIAG tool and the Ascent Foundat version is not altered, the Foundation will consider this as an unexpected removal and will force a NVRAM clear on startup.
        /// </summary>
        DenyTargetedRemoval,
        /// <summary>
        /// Defines a bundle that is installable after the Foundation is running. The bundle may be removed via the Operator menu, DIAG or G2S (without requiring a NVRAM clear).
        /// </summary>
        PermitTargetedRemoval,
    }
}
#pragma warning restore
