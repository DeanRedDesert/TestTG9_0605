// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.4.0.7
//    <NameSpace>IGT.Game.Core.Registries.Internal.F2X.F2XPayvarGroupRegistryVer1</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>Collections</InitializeFields><GenerateUnusedComplexTypes>True</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>True</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>Default</PropNameSpecified><PrivateFieldName>EndWithField</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>True</EnableExternalSchemasCache><EnableDebug>True</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>True</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>True</CleanupCode><EnableXmlSerialization>False</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings>IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1</CustomUsings><AttributesToExlude>System.ComponentModel.DefaultValueAttribute</AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace IGT.Game.Core.Registries.Internal.F2X.F2XPayvarGroupRegistryVer1
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1;
    using System.Xml;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Game discovery registry for describing one ore more payvar(s) (short for "pay variation").
    /// Contains data related to a payvar template and the initial state of paytable related configuration.
    /// Payvar from a payvar group derives all elements from referenced payvar template and/or overwrites specific vales or each specific payvar in the group.
    /// As payvar template the standard payvar registy is used, where the payvar type is set to payvar group template.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2XPayvarGroupRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd", IsNullable=false)]
    public partial class PayvarGroupRegistry
    {
        #region Private fields
        private string payvarRegistryField;
        private List<Payvar> payvarGroupField;
        #endregion
        
        /// <summary>
        /// PayvarGroupRegistry class constructor
        /// </summary>
        public PayvarGroupRegistry()
        {
            payvarGroupField = new List<Payvar>();
        }
        
        /// <summary>
        /// Relative path to payvar template registry to which this payvar group payvar belongs to. Required.
        /// </summary>
        [XmlElement(DataType="anyURI")]
        public string PayvarRegistry
        {
            get
            {
                return payvarRegistryField;
            }
            set
            {
                payvarRegistryField = value;
            }
        }
        
        /// <summary>
        /// Definition of 1-64 payvars in a payvar group. Required
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<Payvar> PayvarGroup
        {
            get
            {
                return payvarGroupField;
            }
            set
            {
                payvarGroupField = value;
            }
        }
    }
    
    /// <summary>
    /// Definition of one payvar and its overloaded elements from payvar template.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd")]
    public partial class Payvar
    {
        #region Private fields
        private string paytableNameField;
        private TagDataFileType groupTagDataFileField;
        private System.Nullable<decimal> paybackPercentageField;
        private System.Nullable<decimal> minimumPaybackPercentageField;
        private List<decimal> wagerCategoriesField;
        private MaxBetMapping maxBetMappingField;
        #endregion
        
        /// <summary>
        /// Payvar class constructor
        /// </summary>
        public Payvar()
        {
            wagerCategoriesField = new List<decimal>();
        }
        
        /// <summary>
        /// Paytable name used for display purposes as assigned by game designer. Required.
        /// Follows the same rules as the paytable name from the payvar template with an additional "-" followed by a number like -01.
        /// Foundation GameIdentifer is derived from the paytable name. Unique
        /// </summary>
        public string PaytableName
        {
            get
            {
                return paytableNameField;
            }
            set
            {
                paytableNameField = value;
            }
        }
        
        /// <summary>
        /// Paytable group tag. Passed to the game during startup. Opaque to the Foundation
        /// Required.
        /// </summary>
        public TagDataFileType GroupTagDataFile
        {
            get
            {
                return groupTagDataFileField;
            }
            set
            {
                groupTagDataFileField = value;
            }
        }
        
        /// <summary>
        /// This is the theoretical maximum payback percentage (including progressive contributions where applicable).
        /// Optional, if not specified, value is taken from payvar template.
        /// </summary>
        public decimal PaybackPercentage
        {
            get
            {
                if (paybackPercentageField.HasValue)
                {
                    return paybackPercentageField.Value;
                }
                else
                {
                    return default(decimal);
                }
            }
            set
            {
                paybackPercentageField = value;
            }
        }
        
        [XmlIgnore]
        public bool PaybackPercentageSpecified
        {
            get
            {
                return paybackPercentageField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    paybackPercentageField = null;
                }
            }
        }
        
        /// <summary>
        /// This is the theoretical minimum payback percentage.
        /// Optional, if not specified, value is taken from payvar template.
        /// </summary>
        public decimal MinimumPaybackPercentage
        {
            get
            {
                if (minimumPaybackPercentageField.HasValue)
                {
                    return minimumPaybackPercentageField.Value;
                }
                else
                {
                    return default(decimal);
                }
            }
            set
            {
                minimumPaybackPercentageField = value;
            }
        }
        
        [XmlIgnore]
        public bool MinimumPaybackPercentageSpecified
        {
            get
            {
                return minimumPaybackPercentageField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    minimumPaybackPercentageField = null;
                }
            }
        }
        
        /// <summary>
        /// Contains all Wager Category information.
        /// The index is derived from the payvar template by matching the percentage value.
        /// Only percentages are allowed which are defined in the payvar template.
        /// Multiple declations are allowed over more payvar game within a game group.
        /// Required.
        /// </summary>
        [XmlArrayItemAttribute("Percentage", Namespace="F2XRegistryTypesVer1.xsd", IsNullable=false)]
        public List<decimal> WagerCategories
        {
            get
            {
                return wagerCategoriesField;
            }
            set
            {
                wagerCategoriesField = value;
            }
        }
        
        /// <summary>
        /// Max bet mapping in credits. Values need to match with values from payvar template. Required.
        /// Only enumerated pool values list allowed.
        /// </summary>
        public MaxBetMapping MaxBetMapping
        {
            get
            {
                return maxBetMappingField;
            }
            set
            {
                maxBetMappingField = value;
            }
        }
    }
    
    /// <summary>
    /// Redefinition of a max bet value, for payvar group handling.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd")]
    public partial class MaxBetRedefinition
    {
        #region Private fields
        private ulong enumerationField;
        private ulong valueField;
        #endregion
        
        /// <summary>
        /// Enumerated max bet value from the enumarated max bet value pool list
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ulong Enumeration
        {
            get
            {
                return enumerationField;
            }
            set
            {
                enumerationField = value;
            }
        }
        
        [XmlTextAttribute]
        public ulong Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Mapping of maxbet values to a specific maxbet value.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd")]
    public partial class MaxBetMapping
    {
        #region Private fields
        private List<MaxBetRedefinition> enumerationMappingField;
        #endregion
        
        /// <summary>
        /// MaxBetMapping class constructor
        /// </summary>
        public MaxBetMapping()
        {
            enumerationMappingField = new List<MaxBetRedefinition>();
        }
        
        /// <summary>
        /// Mapping for max bet value, form max bet value pool list
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<MaxBetRedefinition> EnumerationMapping
        {
            get
            {
                return enumerationMappingField;
            }
            set
            {
                enumerationMappingField = value;
            }
        }
    }
    
    /// <summary>
    /// Definition of one or more payvar(s) within a payvar group.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd", IsNullable=true)]
    public partial class PayvarGroup
    {
        #region Private fields
        private List<Payvar> payvarField;
        #endregion
        
        /// <summary>
        /// PayvarGroup class constructor
        /// </summary>
        public PayvarGroup()
        {
            payvarField = new List<Payvar>();
        }
        
        /// <summary>
        /// Definition of one payvar within the payvar group.
        /// </summary>
        [XmlElement("Payvar")]
        public List<Payvar> Payvar
        {
            get
            {
                return payvarField;
            }
            set
            {
                payvarField = value;
            }
        }
    }
    
    /// <summary>
    /// Mapping of maxbet values from enumerated max bet value pool list to a specific maxbet value.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XPayvarGroupRegistryVer1.xsd", IsNullable=true)]
    public partial class EnumerationMapping
    {
        #region Private fields
        private List<MaxBetRedefinition> maxBetRedefinitionField;
        #endregion
        
        /// <summary>
        /// EnumerationMapping class constructor
        /// </summary>
        public EnumerationMapping()
        {
            maxBetRedefinitionField = new List<MaxBetRedefinition>();
        }
        
        /// <summary>
        /// Max bet value, form max bet value pool list
        /// </summary>
        [XmlElement("MaxBetRedefinition")]
        public List<MaxBetRedefinition> MaxBetRedefinition
        {
            get
            {
                return maxBetRedefinitionField;
            }
            set
            {
                maxBetRedefinitionField = value;
            }
        }
    }
}
#pragma warning restore
