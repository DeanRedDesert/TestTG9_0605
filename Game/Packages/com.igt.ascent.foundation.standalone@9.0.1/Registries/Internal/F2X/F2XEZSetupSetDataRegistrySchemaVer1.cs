// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.4.0.7
//    <NameSpace>IGT.Game.Core.Registries.Internal.F2X.F2XEZSetupSetDataRegistryVer1</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>Collections</InitializeFields><GenerateUnusedComplexTypes>True</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>True</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>Default</PropNameSpecified><PrivateFieldName>EndWithField</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>True</EnableExternalSchemasCache><EnableDebug>True</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>True</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>True</CleanupCode><EnableXmlSerialization>False</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings>IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1;IGT.Game.Core.Registries.Internal.F2X.F2XBaseExtensionRegistryVer1;IGT.Game.Core.Registries.Internal.F2X.F2XConfigurationExtensionRegistryVer1</CustomUsings><AttributesToExlude>System.ComponentModel.DefaultValueAttribute</AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace IGT.Game.Core.Registries.Internal.F2X.F2XEZSetupSetDataRegistryVer1
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1;
    using IGT.Game.Core.Registries.Internal.F2X.F2XBaseExtensionRegistryVer1;
    using IGT.Game.Core.Registries.Internal.F2X.F2XConfigurationExtensionRegistryVer1;
    using System.Xml;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Registry for providing data associated with EZ setup configuration sets.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=false)]
    public partial class EZSetupSetDataRegistry : BaseExtensionRegistry
    {
        #region Private fields
        private object itemField;
        #endregion
        
        [XmlElement("ConfigExtensionConfiguration", typeof(ConfigExtensionConfiguration))]
        [XmlElement("FoundationConfiguration", typeof(FoundationConfiguration))]
        [XmlElement("LabelConfiguration", typeof(LabelConfiguration))]
        [XmlElement("ThemeConfiguration", typeof(ThemeConfiguration))]
        public object Item
        {
            get
            {
                return itemField;
            }
            set
            {
                itemField = value;
            }
        }
    }
    
    /// <summary>
    /// Config Extension Configuration: for each set we may provide a selection of Configuration Extension options.  Requires the Config Extension Interface Definition for which the data is applied to.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ConfigExtensionConfiguration
    {
        #region Private fields
        private ConfigInterfaceDefinition configInterfaceDefinitionField;
        private List<ConfigExtensionSetInterface> configExtensionSetInterfacesField;
        #endregion
        
        /// <summary>
        /// ConfigExtensionConfiguration class constructor
        /// </summary>
        public ConfigExtensionConfiguration()
        {
            configExtensionSetInterfacesField = new List<ConfigExtensionSetInterface>();
        }
        
        /// <summary>
        /// Element containing the Config Interface Definition to provide values for.
        /// </summary>
        public ConfigInterfaceDefinition ConfigInterfaceDefinition
        {
            get
            {
                return configInterfaceDefinitionField;
            }
            set
            {
                configInterfaceDefinitionField = value;
            }
        }
        
        /// <summary>
        /// Set Interfaces for Config Extension configuration.
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<ConfigExtensionSetInterface> ConfigExtensionSetInterfaces
        {
            get
            {
                return configExtensionSetInterfacesField;
            }
            set
            {
                configExtensionSetInterfacesField = value;
            }
        }
    }
    
    /// <summary>
    /// Type containing the Config Extension Interface to link against.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ConfigInterfaceDefinition
    {
        #region Private fields
        private string interfaceNameField;
        private string interfaceIdentifierField;
        private ExtensionVersion interfaceVersionField;
        #endregion
        
        /// <summary>
        /// Optional element containing a human readable name for the Config Interface Extension.
        /// </summary>
        public string InterfaceName
        {
            get
            {
                return interfaceNameField;
            }
            set
            {
                interfaceNameField = value;
            }
        }
        
        /// <summary>
        /// Element containing the Extension Id of the Config Interface Extension.
        /// </summary>
        public string InterfaceIdentifier
        {
            get
            {
                return interfaceIdentifierField;
            }
            set
            {
                interfaceIdentifierField = value;
            }
        }
        
        /// <summary>
        /// Element containing the version of the Config Interface Extension.
        /// </summary>
        public ExtensionVersion InterfaceVersion
        {
            get
            {
                return interfaceVersionField;
            }
            set
            {
                interfaceVersionField = value;
            }
        }
    }
    
    /// <summary>
    /// Theme Configuration: for each set we may provide a selection of Theme configuration options.  Requires the G2S Theme Identifier which the configuration options will be applied to.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ThemeConfiguration
    {
        #region Private fields
        private List<ThemeSetInterface> themeSetInterfacesField;
        private string g2SThemeIdField;
        #endregion
        
        /// <summary>
        /// ThemeConfiguration class constructor
        /// </summary>
        public ThemeConfiguration()
        {
            themeSetInterfacesField = new List<ThemeSetInterface>();
        }
        
        /// <summary>
        /// Set Interfaces for Theme configuration.
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<ThemeSetInterface> ThemeSetInterfaces
        {
            get
            {
                return themeSetInterfacesField;
            }
            set
            {
                themeSetInterfacesField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string G2SThemeId
        {
            get
            {
                return g2SThemeIdField;
            }
            set
            {
                g2SThemeIdField = value;
            }
        }
    }
    
    /// <summary>
    /// Set Interface type for Theme configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ThemeSetInterface : BaseSetInterface
    {
        #region Private fields
        private List<ThemeSet> themeSetField;
        #endregion
        
        /// <summary>
        /// ThemeSetInterface class constructor
        /// </summary>
        public ThemeSetInterface()
        {
            themeSetField = new List<ThemeSet>();
        }
        
        /// <summary>
        /// Set containing Theme configuration data.
        /// </summary>
        [XmlElement("ThemeSet")]
        public List<ThemeSet> ThemeSet
        {
            get
            {
                return themeSetField;
            }
            set
            {
                themeSetField = value;
            }
        }
    }
    
    /// <summary>
    /// Set type for containing Theme configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ThemeSet : BaseSet
    {
        #region Private fields
        private ThemeSettings themeSettingsField;
        private List<PayvarSettingsPayvar> payvarSettingsField;
        private List<DenomSettingsDenom> denomSettingsField;
        #endregion
        
        /// <summary>
        /// ThemeSet class constructor
        /// </summary>
        public ThemeSet()
        {
            denomSettingsField = new List<DenomSettingsDenom>();
            payvarSettingsField = new List<PayvarSettingsPayvar>();
        }
        
        /// <summary>
        /// Element for Theme-specific settings.
        /// </summary>
        public ThemeSettings ThemeSettings
        {
            get
            {
                return themeSettingsField;
            }
            set
            {
                themeSettingsField = value;
            }
        }
        
        /// <summary>
        /// Element for Payvar-specific settings.
        /// </summary>
        [XmlArrayItemAttribute("Payvar", IsNullable=false)]
        public List<PayvarSettingsPayvar> PayvarSettings
        {
            get
            {
                return payvarSettingsField;
            }
            set
            {
                payvarSettingsField = value;
            }
        }
        
        /// <summary>
        /// Element for Denom-specific settings.
        /// </summary>
        [XmlArrayItemAttribute("Denom", IsNullable=false)]
        public List<DenomSettingsDenom> DenomSettings
        {
            get
            {
                return denomSettingsField;
            }
            set
            {
                denomSettingsField = value;
            }
        }
    }
    
    /// <summary>
    /// Container type for Theme-specific settings (e.g. Theme specific max bet)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ThemeSettings
    {
        #region Private fields
        private string maxBetField;
        #endregion
        
        /// <summary>
        /// Theme-level max bet setting for this theme.
        /// </summary>
        [XmlElement(DataType="integer")]
        public string MaxBet
        {
            get
            {
                return maxBetField;
            }
            set
            {
                maxBetField = value;
            }
        }
    }
    
    /// <summary>
    /// Container for the Payvar specific settings (e.g. Per-payvar max bet)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class PayvarSettingsPayvar
    {
        #region Private fields
        private string maxBetField;
        private string payvarNameField;
        #endregion
        
        /// <summary>
        /// Max bet configuration for this payvar (ignored if payvar-specific max bet is not allowed for this theme).
        /// </summary>
        [XmlElement(DataType="integer")]
        public string MaxBet
        {
            get
            {
                return maxBetField;
            }
            set
            {
                maxBetField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string PayvarName
        {
            get
            {
                return payvarNameField;
            }
            set
            {
                payvarNameField = value;
            }
        }
    }
    
    /// <summary>
    /// Container for the denom-specific settings in this theme (e.g. Per-denom max bet, enabled payvar)
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class DenomSettingsDenom
    {
        #region Private fields
        private string enabledPayvarField;
        private string maxBetField;
        private uint denomField;
        #endregion
        
        /// <summary>
        /// The name of the payvar in this theme to enable at this denom.
        /// </summary>
        public string EnabledPayvar
        {
            get
            {
                return enabledPayvarField;
            }
            set
            {
                enabledPayvarField = value;
            }
        }
        
        /// <summary>
        /// Max bet configuration for this denom.
        /// </summary>
        [XmlElement(DataType="integer")]
        public string MaxBet
        {
            get
            {
                return maxBetField;
            }
            set
            {
                maxBetField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public uint Denom
        {
            get
            {
                return denomField;
            }
            set
            {
                denomField = value;
            }
        }
    }
    
    /// <summary>
    /// Base type representing set data.
    /// </summary>
    [XmlIncludeAttribute(typeof(ConfigExtensionSet))]
    [XmlIncludeAttribute(typeof(ThemeSet))]
    [XmlIncludeAttribute(typeof(FoundationSet))]
    [XmlIncludeAttribute(typeof(LabelSet))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class BaseSet
    {
        #region Private fields
        private string setNameField;
        #endregion
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string SetName
        {
            get
            {
                return setNameField;
            }
            set
            {
                setNameField = value;
            }
        }
    }
    
    /// <summary>
    /// Set type for containing Config Extension configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ConfigExtensionSet : BaseSet
    {
        #region Private fields
        private List<CustomConfigItemsTypeConfigItem> configItemsField;
        #endregion
        
        /// <summary>
        /// ConfigExtensionSet class constructor
        /// </summary>
        public ConfigExtensionSet()
        {
            configItemsField = new List<CustomConfigItemsTypeConfigItem>();
        }
        
        /// <summary>
        /// Collection of config items.
        /// </summary>
        [XmlArrayItemAttribute("ConfigItem", Namespace="F2XRegistryTypesVer1.xsd", IsNullable=false)]
        public List<CustomConfigItemsTypeConfigItem> ConfigItems
        {
            get
            {
                return configItemsField;
            }
            set
            {
                configItemsField = value;
            }
        }
    }
    
    /// <summary>
    /// Set type for containing Foundation configuration such as double up and attract settings.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class FoundationSet : BaseSet
    {
        #region Private fields
        private Attract attractField;
        private DoubleUp doubleUpField;
        #endregion
        
        /// <summary>
        /// Element controlling Attract settings on the EGM.
        /// </summary>
        public Attract Attract
        {
            get
            {
                return attractField;
            }
            set
            {
                attractField = value;
            }
        }
        
        /// <summary>
        /// Element controlling the Double Up settings on the EGM.
        /// </summary>
        public DoubleUp DoubleUp
        {
            get
            {
                return doubleUpField;
            }
            set
            {
                doubleUpField = value;
            }
        }
    }
    
    /// <summary>
    /// Type for controlling Attract settings on the Foundation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class Attract
    {
        #region Private fields
        private System.Nullable<MenuCycleBehavior> menuCycleBehaviorField;
        private string menuTimeField;
        private string gameTimeField;
        #endregion
        
        /// <summary>
        /// Enumeration describing the menu cycling behavior.
        /// </summary>
        public MenuCycleBehavior MenuCycleBehavior
        {
            get
            {
                if (menuCycleBehaviorField.HasValue)
                {
                    return menuCycleBehaviorField.Value;
                }
                else
                {
                    return default(MenuCycleBehavior);
                }
            }
            set
            {
                menuCycleBehaviorField = value;
            }
        }
        
        [XmlIgnore]
        public bool MenuCycleBehaviorSpecified
        {
            get
            {
                return menuCycleBehaviorField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    menuCycleBehaviorField = null;
                }
            }
        }
        
        /// <summary>
        /// Duration in minutes of the Game Selection Menu Attract.  Will be clamped at runtime to the EGM's minimum and maximum time for the jurisdiction.
        /// </summary>
        [XmlElement(DataType="integer")]
        public string MenuTime
        {
            get
            {
                return menuTimeField;
            }
            set
            {
                menuTimeField = value;
            }
        }
        
        /// <summary>
        /// Duration in minutes of the Game Attract.  Will be clamped at runtime to the EGM's minimum and maximum time for the jurisdiction.
        /// </summary>
        [XmlElement(DataType="integer")]
        public string GameTime
        {
            get
            {
                return gameTimeField;
            }
            set
            {
                gameTimeField = value;
            }
        }
    }
    
    /// <summary>
    /// Enumeration describing the Game Selection Attract behavior.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public enum MenuCycleBehavior
    {
        /// <summary>
        /// Cycle enabled themes.
        /// </summary>
        CycleEnabledThemes,
        /// <summary>
        /// Return to the default theme.
        /// </summary>
        ReturnToDefault,
        /// <summary>
        /// Return to the last active theme.
        /// </summary>
        ReturnToLast,
    }
    
    /// <summary>
    /// Type for controlling Double Up settings on the Foundation.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class DoubleUp
    {
        #region Private fields
        private bool enabledField;
        private string maxCyclesField;
        #endregion
        
        /// <summary>
        /// Control whether Double Up is enabled on the EGM.
        /// </summary>
        public bool Enabled
        {
            get
            {
                return enabledField;
            }
            set
            {
                enabledField = value;
            }
        }
        
        /// <summary>
        /// Maximum number of cycles Double Up may occur.
        /// </summary>
        [XmlElement(DataType="integer")]
        public string MaxCycles
        {
            get
            {
                return maxCyclesField;
            }
            set
            {
                maxCyclesField = value;
            }
        }
    }
    
    /// <summary>
    /// Set type for containing Label information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class LabelSet : BaseSet
    {
        #region Private fields
        private List<Label> labelDataField;
        #endregion
        
        /// <summary>
        /// LabelSet class constructor
        /// </summary>
        public LabelSet()
        {
            labelDataField = new List<Label>();
        }
        
        /// <summary>
        /// Element containing a collection of Labels.
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<Label> LabelData
        {
            get
            {
                return labelDataField;
            }
            set
            {
                labelDataField = value;
            }
        }
    }
    
    /// <summary>
    /// Label to use for displaying this set option in the EZ setup menu.  Language attribute states which language this label should be used for.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class Label
    {
        #region Private fields
        private string languageField;
        private string valueField;
        #endregion
        
        /// <summary>
        /// Label class constructor
        /// </summary>
        public Label()
        {
            languageField = "en-US";
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Language
        {
            get
            {
                return languageField;
            }
            set
            {
                languageField = value;
            }
        }
        
        [XmlTextAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Base type representing a single set interface.
    /// </summary>
    [XmlIncludeAttribute(typeof(ConfigExtensionSetInterface))]
    [XmlIncludeAttribute(typeof(ThemeSetInterface))]
    [XmlIncludeAttribute(typeof(FoundationSetInterface))]
    [XmlIncludeAttribute(typeof(LabelSetInterface))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class BaseSetInterface
    {
        #region Private fields
        private string versionField;
        private string hashField;
        #endregion
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Version
        {
            get
            {
                return versionField;
            }
            set
            {
                versionField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Hash
        {
            get
            {
                return hashField;
            }
            set
            {
                hashField = value;
            }
        }
    }
    
    /// <summary>
    /// Set Interface type for Config Extension configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class ConfigExtensionSetInterface : BaseSetInterface
    {
        #region Private fields
        private List<ConfigExtensionSet> configExtensionSetField;
        #endregion
        
        /// <summary>
        /// ConfigExtensionSetInterface class constructor
        /// </summary>
        public ConfigExtensionSetInterface()
        {
            configExtensionSetField = new List<ConfigExtensionSet>();
        }
        
        /// <summary>
        /// Set containing Config Extension configuration.
        /// </summary>
        [XmlElement("ConfigExtensionSet")]
        public List<ConfigExtensionSet> ConfigExtensionSet
        {
            get
            {
                return configExtensionSetField;
            }
            set
            {
                configExtensionSetField = value;
            }
        }
    }
    
    /// <summary>
    /// Set Interface type for Foundation configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class FoundationSetInterface : BaseSetInterface
    {
        #region Private fields
        private List<FoundationSet> foundationSetField;
        #endregion
        
        /// <summary>
        /// FoundationSetInterface class constructor
        /// </summary>
        public FoundationSetInterface()
        {
            foundationSetField = new List<FoundationSet>();
        }
        
        /// <summary>
        /// Set for containing Foundation configuration such as double up and attract settings.
        /// </summary>
        [XmlElement("FoundationSet")]
        public List<FoundationSet> FoundationSet
        {
            get
            {
                return foundationSetField;
            }
            set
            {
                foundationSetField = value;
            }
        }
    }
    
    /// <summary>
    /// Set Interface type for Label configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class LabelSetInterface : BaseSetInterface
    {
        #region Private fields
        private List<LabelSet> labelSetField;
        #endregion
        
        /// <summary>
        /// LabelSetInterface class constructor
        /// </summary>
        public LabelSetInterface()
        {
            labelSetField = new List<LabelSet>();
        }
        
        /// <summary>
        /// Set containing Label information.
        /// </summary>
        [XmlElement("LabelSet")]
        public List<LabelSet> LabelSet
        {
            get
            {
                return labelSetField;
            }
            set
            {
                labelSetField = value;
            }
        }
    }
    
    /// <summary>
    /// Foundation Configuration: for each set we may provide a selection of Foundation configuration options.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class FoundationConfiguration
    {
        #region Private fields
        private List<FoundationSetInterface> foundationSetInterfacesField;
        #endregion
        
        /// <summary>
        /// FoundationConfiguration class constructor
        /// </summary>
        public FoundationConfiguration()
        {
            foundationSetInterfacesField = new List<FoundationSetInterface>();
        }
        
        /// <summary>
        /// Set Interfaces collection for Foundation configuration.
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<FoundationSetInterface> FoundationSetInterfaces
        {
            get
            {
                return foundationSetInterfacesField;
            }
            set
            {
                foundationSetInterfacesField = value;
            }
        }
    }
    
    /// <summary>
    /// Label Configuration: for each set we may provide labels in multiple languages.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    public partial class LabelConfiguration
    {
        #region Private fields
        private List<LabelSetInterface> labelSetInterfacesField;
        #endregion
        
        /// <summary>
        /// LabelConfiguration class constructor
        /// </summary>
        public LabelConfiguration()
        {
            labelSetInterfacesField = new List<LabelSetInterface>();
        }
        
        /// <summary>
        /// Collection of set interfaces for label configuration.
        /// </summary>
        [XmlArrayItemAttribute(IsNullable=false)]
        public List<LabelSetInterface> LabelSetInterfaces
        {
            get
            {
                return labelSetInterfacesField;
            }
            set
            {
                labelSetInterfacesField = value;
            }
        }
    }
    
    /// <summary>
    /// Collection of set interfaces for label configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=true)]
    public partial class LabelSetInterfaces
    {
        #region Private fields
        private List<LabelSetInterface> labelSetInterfaceField;
        #endregion
        
        /// <summary>
        /// LabelSetInterfaces class constructor
        /// </summary>
        public LabelSetInterfaces()
        {
            labelSetInterfaceField = new List<LabelSetInterface>();
        }
        
        /// <summary>
        /// Set Interface for Label Configuration.
        /// </summary>
        [XmlElement("LabelSetInterface")]
        public List<LabelSetInterface> LabelSetInterface
        {
            get
            {
                return labelSetInterfaceField;
            }
            set
            {
                labelSetInterfaceField = value;
            }
        }
    }
    
    /// <summary>
    /// Data type containing a collection of Labels.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=true)]
    public partial class LabelData
    {
        #region Private fields
        private List<Label> labelField;
        #endregion
        
        /// <summary>
        /// LabelData class constructor
        /// </summary>
        public LabelData()
        {
            labelField = new List<Label>();
        }
        
        /// <summary>
        /// Label to use for displaying this set option in the EZ setup menu.
        /// </summary>
        [XmlElement("Label")]
        public List<Label> Label
        {
            get
            {
                return labelField;
            }
            set
            {
                labelField = value;
            }
        }
    }
    
    /// <summary>
    /// Set Interfaces collection type for Foundation configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=true)]
    public partial class FoundationSetInterfaces
    {
        #region Private fields
        private List<FoundationSetInterface> foundationSetInterfaceField;
        #endregion
        
        /// <summary>
        /// FoundationSetInterfaces class constructor
        /// </summary>
        public FoundationSetInterfaces()
        {
            foundationSetInterfaceField = new List<FoundationSetInterface>();
        }
        
        /// <summary>
        /// Set Interface for Foundation configuration.
        /// </summary>
        [XmlElement("FoundationSetInterface")]
        public List<FoundationSetInterface> FoundationSetInterface
        {
            get
            {
                return foundationSetInterfaceField;
            }
            set
            {
                foundationSetInterfaceField = value;
            }
        }
    }
    
    /// <summary>
    /// Set Interfaces collection type for Theme configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=true)]
    public partial class ThemeSetInterfaces
    {
        #region Private fields
        private List<ThemeSetInterface> themeSetInterfaceField;
        #endregion
        
        /// <summary>
        /// ThemeSetInterfaces class constructor
        /// </summary>
        public ThemeSetInterfaces()
        {
            themeSetInterfaceField = new List<ThemeSetInterface>();
        }
        
        /// <summary>
        /// Set Interface for Theme configuration.
        /// </summary>
        [XmlElement("ThemeSetInterface")]
        public List<ThemeSetInterface> ThemeSetInterface
        {
            get
            {
                return themeSetInterfaceField;
            }
            set
            {
                themeSetInterfaceField = value;
            }
        }
    }
    
    /// <summary>
    /// Container type for all payvar settings within this theme.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=true)]
    public partial class PayvarSettings
    {
        #region Private fields
        private List<PayvarSettingsPayvar> payvarField;
        #endregion
        
        /// <summary>
        /// PayvarSettings class constructor
        /// </summary>
        public PayvarSettings()
        {
            payvarField = new List<PayvarSettingsPayvar>();
        }
        
        /// <summary>
        /// Element containing configuration information for a specific Payvar.
        /// </summary>
        [XmlElement("Payvar")]
        public List<PayvarSettingsPayvar> Payvar
        {
            get
            {
                return payvarField;
            }
            set
            {
                payvarField = value;
            }
        }
    }
    
    /// <summary>
    /// Container type for all Denom settings within this theme.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=true)]
    public partial class DenomSettings
    {
        #region Private fields
        private List<DenomSettingsDenom> denomField;
        #endregion
        
        /// <summary>
        /// DenomSettings class constructor
        /// </summary>
        public DenomSettings()
        {
            denomField = new List<DenomSettingsDenom>();
        }
        
        /// <summary>
        /// Element containing configuration information for a specific Denom.
        /// </summary>
        [XmlElement("Denom")]
        public List<DenomSettingsDenom> Denom
        {
            get
            {
                return denomField;
            }
            set
            {
                denomField = value;
            }
        }
    }
    
    /// <summary>
    /// Set Interfaces collection type for Config Extension configuration.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XEZSetupSetDataRegistryVer1.xsd", IsNullable=true)]
    public partial class ConfigExtensionSetInterfaces
    {
        #region Private fields
        private List<ConfigExtensionSetInterface> configExtensionSetInterfaceField;
        #endregion
        
        /// <summary>
        /// ConfigExtensionSetInterfaces class constructor
        /// </summary>
        public ConfigExtensionSetInterfaces()
        {
            configExtensionSetInterfaceField = new List<ConfigExtensionSetInterface>();
        }
        
        /// <summary>
        /// Set Interface for Config Extension configuration.
        /// </summary>
        [XmlElement("ConfigExtensionSetInterface")]
        public List<ConfigExtensionSetInterface> ConfigExtensionSetInterface
        {
            get
            {
                return configExtensionSetInterfaceField;
            }
            set
            {
                configExtensionSetInterfaceField = value;
            }
        }
    }
}
#pragma warning restore
