// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.4.0.7
//    <NameSpace>IGT.Game.Core.Registries.Internal.F2X.F2XMarketRestrictionVer1</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>Collections</InitializeFields><GenerateUnusedComplexTypes>True</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>True</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>Default</PropNameSpecified><PrivateFieldName>EndWithField</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>True</EnableExternalSchemasCache><EnableDebug>True</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>True</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>True</CleanupCode><EnableXmlSerialization>False</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings>IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1;IGT.Game.Core.Registries.Internal.F2X.F2XBaseExtensionRegistryVer1</CustomUsings><AttributesToExlude>System.ComponentModel.DefaultValueAttribute</AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace IGT.Game.Core.Registries.Internal.F2X.F2XMarketRestrictionVer1
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using IGT.Game.Core.Registries.Internal.F2X.F2XRegistryTypesVer1;
    using IGT.Game.Core.Registries.Internal.F2X.F2XBaseExtensionRegistryVer1;
    using System.Xml;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Define the market restrictions to be applied to the Market Configuration Data File (MCDF).  The extension interface definition is used to search associate with MCD Files.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2XMarketRestrictionVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XMarketRestrictionVer1.xsd", IsNullable=false)]
    public partial class MarketRestriction : BaseExtensionRegistry
    {
        #region Private fields
        private List<VersionedRestrictionSectionsVersionedSection> versionedRestrictionSectionsField;
        #endregion
        
        /// <summary>
        /// MarketRestriction class constructor
        /// </summary>
        public MarketRestriction()
        {
            versionedRestrictionSectionsField = new List<VersionedRestrictionSectionsVersionedSection>();
        }
        
        [XmlArrayItemAttribute("VersionedSection", IsNullable=false)]
        public List<VersionedRestrictionSectionsVersionedSection> VersionedRestrictionSections
        {
            get
            {
                return versionedRestrictionSectionsField;
            }
            set
            {
                versionedRestrictionSectionsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2XMarketRestrictionVer1.xsd")]
    public partial class VersionedRestrictionSectionsVersionedSection : VersionedSection
    {
    }
    
    /// <summary>
    /// Contains a list of restriction definitions that must be provided to meet the interface definition's requirements for a specific version
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    public partial class VersionedSection
    {
        #region Private fields
        private object[] payvarRestrictionField;
        private List<DenomRestriction> denomRestrictionField;
        private object[] defaultDenomRestrictionField;
        private string versionField;
        private string interfaceHashField;
        private string sectionHashField;
        #endregion
        
        /// <summary>
        /// VersionedSection class constructor
        /// </summary>
        public VersionedSection()
        {
            denomRestrictionField = new List<DenomRestriction>();
        }
        
        /// <summary>
        /// Defines a market restriction to be applied to payvars.  The payvar properties defined in the market configuration data file(s) are used during evaluation given this restriction definition.  The defined operations must all evaluate 'true' for the result to be 'true'.
        /// </summary>
        [XmlArrayItemAttribute(typeof(AnyOf), IsNullable=false)]
        [XmlArrayItemAttribute("Enable", typeof(bool), IsNullable=false)]
        [XmlArrayItemAttribute(typeof(NoneOf), IsNullable=false)]
        public object[] PayvarRestriction
        {
            get
            {
                return payvarRestrictionField;
            }
            set
            {
                payvarRestrictionField = value;
            }
        }
        
        /// <summary>
        /// Defines a market restriction to be applied to supported denominations of a payvar.  The payvar properties defined in the market configuration data file(s) are used during evaluation given this restriction definition.  The defined operations must all evaluate 'true' for the result to be 'true'.
        /// </summary>
        [XmlElement("DenomRestriction")]
        public List<DenomRestriction> DenomRestriction
        {
            get
            {
                return denomRestrictionField;
            }
            set
            {
                denomRestrictionField = value;
            }
        }
        
        /// <summary>
        /// Defines a market restriction to be applied to supported denominations of a payvar.  The default denomination restriction is applied to all denominations where a denom specific restriction does not exist.  If the DefaultDenominationRestriction is not present, and other DenomRestrictions exist, all denominations without specific restrictions are automatically disabled.  The payvar properties defined in the market configuration data file(s) are used during evaluation given this restriction definition.  The defined operations must all evaluate 'true' for the result to be 'true'.
        /// </summary>
        [XmlArrayItemAttribute(typeof(AnyOf), IsNullable=false)]
        [XmlArrayItemAttribute("Enable", typeof(bool), IsNullable=false)]
        [XmlArrayItemAttribute(typeof(NoneOf), IsNullable=false)]
        public object[] DefaultDenomRestriction
        {
            get
            {
                return defaultDenomRestrictionField;
            }
            set
            {
                defaultDenomRestrictionField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Version
        {
            get
            {
                return versionField;
            }
            set
            {
                versionField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string InterfaceHash
        {
            get
            {
                return interfaceHashField;
            }
            set
            {
                interfaceHashField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string SectionHash
        {
            get
            {
                return sectionHashField;
            }
            set
            {
                sectionHashField = value;
            }
        }
    }
    
    /// <summary>
    /// Match any element in the linked property data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    public partial class AnyOf
    {
        #region Private fields
        private object itemField;
        private string propertyField;
        #endregion
        
        [XmlElement("DecimalRange", typeof(DecimalRange))]
        [XmlElement("StringList", typeof(StringList))]
        public object Item
        {
            get
            {
                return itemField;
            }
            set
            {
                itemField = value;
            }
        }
        
        /// <summary>
        /// A case sensitve named property and the associated data used during market restriction evaluation.
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Property
        {
            get
            {
                return propertyField;
            }
            set
            {
                propertyField = value;
            }
        }
    }
    
    /// <summary>
    /// Inclusive Range of Decimal values
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    public partial class DecimalRange
    {
        #region Private fields
        private decimal minField;
        private decimal maxField;
        #endregion
        
        /// <summary>
        /// Minimum of the range
        /// </summary>
        public decimal Min
        {
            get
            {
                return minField;
            }
            set
            {
                minField = value;
            }
        }
        
        /// <summary>
        /// Maximum of the range
        /// </summary>
        public decimal Max
        {
            get
            {
                return maxField;
            }
            set
            {
                maxField = value;
            }
        }
    }
    
    /// <summary>
    /// Define the restriction elements to be checked against the linked property data
    /// </summary>
    [XmlIncludeAttribute(typeof(DenomRestriction))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XMarketRestrictionVer1.xsd", IsNullable=true)]
    public partial class PayvarRestriction
    {
        #region Private fields
        private List<object> itemsField;
        #endregion
        
        /// <summary>
        /// PayvarRestriction class constructor
        /// </summary>
        public PayvarRestriction()
        {
            itemsField = new List<object>();
        }
        
        [XmlElement("AnyOf", typeof(AnyOf))]
        [XmlElement("Enable", typeof(bool))]
        [XmlElement("NoneOf", typeof(NoneOf))]
        public List<object> Items
        {
            get
            {
                return itemsField;
            }
            set
            {
                itemsField = value;
            }
        }
    }
    
    /// <summary>
    /// Match no element in the linked property data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    public partial class NoneOf
    {
        #region Private fields
        private object itemField;
        private string propertyField;
        #endregion
        
        [XmlElement("DecimalRange", typeof(DecimalRange))]
        [XmlElement("StringList", typeof(StringList))]
        public object Item
        {
            get
            {
                return itemField;
            }
            set
            {
                itemField = value;
            }
        }
        
        /// <summary>
        /// A case sensitve named property and the associated data used during market restriction evaluation.
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Property
        {
            get
            {
                return propertyField;
            }
            set
            {
                propertyField = value;
            }
        }
    }
    
    /// <summary>
    /// List of strings
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XMarketRestrictionVer1.xsd", IsNullable=true)]
    public partial class StringList
    {
        #region Private fields
        private List<string> stringField;
        #endregion
        
        /// <summary>
        /// StringList class constructor
        /// </summary>
        public StringList()
        {
            stringField = new List<string>();
        }
        
        /// <summary>
        /// A case sensitive string element.
        /// </summary>
        [XmlElement("String")]
        public List<string> String
        {
            get
            {
                return stringField;
            }
            set
            {
                stringField = value;
            }
        }
    }
    
    /// <summary>
    /// Define the restriction elements to be checked against the linked property data for the purposes of restricting a payvar's denomination.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    public partial class DenomRestriction : PayvarRestriction
    {
        #region Private fields
        private uint denomField;
        #endregion
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public uint Denom
        {
            get
            {
                return denomField;
            }
            set
            {
                denomField = value;
            }
        }
    }
    
    /// <summary>
    /// Versioned sections
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2XMarketRestrictionVer1.xsd")]
    [XmlRootAttribute(Namespace="F2XMarketRestrictionVer1.xsd", IsNullable=true)]
    public partial class VersionedRestrictionSections
    {
        #region Private fields
        private List<VersionedRestrictionSectionsVersionedSection> versionedSectionField;
        #endregion
        
        /// <summary>
        /// VersionedRestrictionSections class constructor
        /// </summary>
        public VersionedRestrictionSections()
        {
            versionedSectionField = new List<VersionedRestrictionSectionsVersionedSection>();
        }
        
        [XmlElement("VersionedSection")]
        public List<VersionedRestrictionSectionsVersionedSection> VersionedSection
        {
            get
            {
                return versionedSectionField;
            }
            set
            {
                versionedSectionField = value;
            }
        }
    }
}
#pragma warning restore
