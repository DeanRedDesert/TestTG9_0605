// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code++. Version 4.4.0.7
//    <NameSpace>IGT.Game.Core.Registries.Internal.F2L.F2LRegistryTypeVer2</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><DataMemberNameArg>OnlyIfDifferent</DataMemberNameArg><DataMemberOnXmlIgnore>False</DataMemberOnXmlIgnore><CodeBaseTag>Net35</CodeBaseTag><InitializeFields>Collections</InitializeFields><GenerateUnusedComplexTypes>True</GenerateUnusedComplexTypes><GenerateUnusedSimpleTypes>True</GenerateUnusedSimpleTypes><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableLazyLoading>False</EnableLazyLoading><VirtualProp>False</VirtualProp><PascalCase>False</PascalCase><AutomaticProperties>False</AutomaticProperties><PropNameSpecified>Default</PropNameSpecified><PrivateFieldName>EndWithField</PrivateFieldName><PrivateFieldNamePrefix></PrivateFieldNamePrefix><EnableRestriction>False</EnableRestriction><RestrictionMaxLenght>False</RestrictionMaxLenght><RestrictionRegEx>False</RestrictionRegEx><RestrictionRange>False</RestrictionRange><ValidateProperty>False</ValidateProperty><ClassNamePrefix></ClassNamePrefix><ClassLevel>Public</ClassLevel><PartialClass>True</PartialClass><ClassesInSeparateFiles>False</ClassesInSeparateFiles><ClassesInSeparateFilesDir></ClassesInSeparateFilesDir><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><EnableAppInfoSettings>False</EnableAppInfoSettings><EnableExternalSchemasCache>True</EnableExternalSchemasCache><EnableDebug>True</EnableDebug><EnableWarn>False</EnableWarn><ExcludeImportedTypes>True</ExcludeImportedTypes><ExpandNesteadAttributeGroup>False</ExpandNesteadAttributeGroup><CleanupCode>True</CleanupCode><EnableXmlSerialization>False</EnableXmlSerialization><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><EnableEncoding>False</EnableEncoding><EnableXMLIndent>False</EnableXMLIndent><IndentChar>Indent2Space</IndentChar><NewLineAttr>False</NewLineAttr><OmitXML>False</OmitXML><Encoder>UTF8</Encoder><Serializer>XmlSerializer</Serializer><sspNullable>False</sspNullable><sspString>False</sspString><sspCollection>False</sspCollection><sspComplexType>False</sspComplexType><sspSimpleType>False</sspSimpleType><sspEnumType>False</sspEnumType><XmlSerializerEvent>False</XmlSerializerEvent><BaseClassName>EntityBase</BaseClassName><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><CustomUsings></CustomUsings><AttributesToExlude>System.ComponentModel.DefaultValueAttribute</AttributesToExlude>
//  </auto-generated>
// ------------------------------------------------------------------------------
#pragma warning disable
namespace IGT.Game.Core.Registries.Internal.F2L.F2LRegistryTypeVer2
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Xml;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Amount data type used in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class AmountType
    {
        #region Private fields
        private System.Nullable<long> minField;
        private System.Nullable<long> maxField;
        private long valueField;
        #endregion
        
        /// <summary>
        /// Minimum inclusive value
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public long Min
        {
            get
            {
                if (minField.HasValue)
                {
                    return minField.Value;
                }
                else
                {
                    return default(long);
                }
            }
            set
            {
                minField = value;
            }
        }
        
        [XmlIgnore]
        public bool MinSpecified
        {
            get
            {
                return minField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    minField = null;
                }
            }
        }
        
        /// <summary>
        /// Maximum inclusive value
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public long Max
        {
            get
            {
                if (maxField.HasValue)
                {
                    return maxField.Value;
                }
                else
                {
                    return default(long);
                }
            }
            set
            {
                maxField = value;
            }
        }
        
        [XmlIgnore]
        public bool MaxSpecified
        {
            get
            {
                return maxField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    maxField = null;
                }
            }
        }
        
        [XmlTextAttribute]
        public long Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Enumeration data type used in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class EnumerationType
    {
        #region Private fields
        private List<EnumerationTypeEnumeration> enumerationField;
        #endregion
        
        /// <summary>
        /// EnumerationType class constructor
        /// </summary>
        public EnumerationType()
        {
            enumerationField = new List<EnumerationTypeEnumeration>();
        }
        
        [XmlElement("Enumeration")]
        public List<EnumerationTypeEnumeration> Enumeration
        {
            get
            {
                return enumerationField;
            }
            set
            {
                enumerationField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class EnumerationTypeEnumeration
    {
        #region Private fields
        private string valueField;
        #endregion
        
        [XmlTextAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Flag list data type used in configuration. Contains subset of the elements defined in EnumReferenceList
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class FlagListType
    {
        #region Private fields
        private List<FlagListTypeElement> elementField;
        private string enumReferenceListField;
        #endregion
        
        /// <summary>
        /// FlagListType class constructor
        /// </summary>
        public FlagListType()
        {
            elementField = new List<FlagListTypeElement>();
        }
        
        [XmlElement("Element")]
        public List<FlagListTypeElement> Element
        {
            get
            {
                return elementField;
            }
            set
            {
                elementField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string EnumReferenceList
        {
            get
            {
                return enumReferenceListField;
            }
            set
            {
                enumReferenceListField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class FlagListTypeElement
    {
        #region Private fields
        private string valueField;
        #endregion
        
        [XmlTextAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Float data type used in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class FloatType
    {
        #region Private fields
        private System.Nullable<float> minField;
        private System.Nullable<float> maxField;
        private float valueField;
        #endregion
        
        /// <summary>
        /// Minimum inclusive value
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public float Min
        {
            get
            {
                if (minField.HasValue)
                {
                    return minField.Value;
                }
                else
                {
                    return default(float);
                }
            }
            set
            {
                minField = value;
            }
        }
        
        [XmlIgnore]
        public bool MinSpecified
        {
            get
            {
                return minField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    minField = null;
                }
            }
        }
        
        /// <summary>
        /// Maximum inclusive value
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public float Max
        {
            get
            {
                if (maxField.HasValue)
                {
                    return maxField.Value;
                }
                else
                {
                    return default(float);
                }
            }
            set
            {
                maxField = value;
            }
        }
        
        [XmlIgnore]
        public bool MaxSpecified
        {
            get
            {
                return maxField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    maxField = null;
                }
            }
        }
        
        [XmlTextAttribute]
        public float Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Int64 data type used in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class Int64Type
    {
        #region Private fields
        private System.Nullable<long> minField;
        private System.Nullable<long> maxField;
        private long valueField;
        #endregion
        
        /// <summary>
        /// Minimum inclusive value
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public long Min
        {
            get
            {
                if (minField.HasValue)
                {
                    return minField.Value;
                }
                else
                {
                    return default(long);
                }
            }
            set
            {
                minField = value;
            }
        }
        
        [XmlIgnore]
        public bool MinSpecified
        {
            get
            {
                return minField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    minField = null;
                }
            }
        }
        
        /// <summary>
        /// Maximum inclusive value
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public long Max
        {
            get
            {
                if (maxField.HasValue)
                {
                    return maxField.Value;
                }
                else
                {
                    return default(long);
                }
            }
            set
            {
                maxField = value;
            }
        }
        
        [XmlIgnore]
        public bool MaxSpecified
        {
            get
            {
                return maxField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    maxField = null;
                }
            }
        }
        
        [XmlTextAttribute]
        public long Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Item data type used in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class ItemType
    {
        #region Private fields
        private string enumReferenceListField;
        private string valueField;
        #endregion
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string EnumReferenceList
        {
            get
            {
                return enumReferenceListField;
            }
            set
            {
                enumReferenceListField = value;
            }
        }
        
        [XmlTextAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// String data type used in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class StringType
    {
        #region Private fields
        private int? minLenField;
        private int? maxLenField;
        private string valueField;
        #endregion
        
        /// <summary>
        /// Minimum length of the string
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int MinLen
        {
            get
            {
                if (minLenField.HasValue)
                {
                    return minLenField.Value;
                }
                else
                {
                    return default(int);
                }
            }
            set
            {
                minLenField = value;
            }
        }
        
        [XmlIgnore]
        public bool MinLenSpecified
        {
            get
            {
                return minLenField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    minLenField = null;
                }
            }
        }
        
        /// <summary>
        /// Maximum length of the string
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public int MaxLen
        {
            get
            {
                if (maxLenField.HasValue)
                {
                    return maxLenField.Value;
                }
                else
                {
                    return default(int);
                }
            }
            set
            {
                maxLenField = value;
            }
        }
        
        [XmlIgnore]
        public bool MaxLenSpecified
        {
            get
            {
                return maxLenField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    maxLenField = null;
                }
            }
        }
        
        [XmlTextAttribute]
        public string Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Custom configuration items data type used in configuration
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class CustomConfigItemsType
    {
        #region Private fields
        private List<CustomConfigItemsTypeConfigItem> configItemField;
        private List<CustomConfigItemsTypeConfigMenuSection> configMenuSectionsField;
        #endregion
        
        /// <summary>
        /// CustomConfigItemsType class constructor
        /// </summary>
        public CustomConfigItemsType()
        {
            configMenuSectionsField = new List<CustomConfigItemsTypeConfigMenuSection>();
            configItemField = new List<CustomConfigItemsTypeConfigItem>();
        }
        
        [XmlElement("ConfigItem")]
        public List<CustomConfigItemsTypeConfigItem> ConfigItem
        {
            get
            {
                return configItemField;
            }
            set
            {
                configItemField = value;
            }
        }
        
        /// <summary>
        /// Optionally defines sub-lists of config items to display in different sections of the Custom Config Menu Page and in the FloorManager UI.
        /// </summary>
        [XmlArrayItemAttribute("ConfigMenuSection", IsNullable=false)]
        public List<CustomConfigItemsTypeConfigMenuSection> ConfigMenuSections
        {
            get
            {
                return configMenuSectionsField;
            }
            set
            {
                configMenuSectionsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class CustomConfigItemsTypeConfigItem
    {
        #region Private fields
        private string nameField;
        private bool? persistentField;
        private CustomConfigItemsTypeConfigItemData dataField;
        private CustomConfigItemsTypeConfigItemModifiability modifiabilityField;
        #endregion
        
        public string Name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
            }
        }
        
        /// <summary>
        /// If true, the config item information will persist over a safe storage clear (master reset).
        /// </summary>
        public bool Persistent
        {
            get
            {
                if (persistentField.HasValue)
                {
                    return persistentField.Value;
                }
                else
                {
                    return default(bool);
                }
            }
            set
            {
                persistentField = value;
            }
        }
        
        [XmlIgnore]
        public bool PersistentSpecified
        {
            get
            {
                return persistentField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    persistentField = null;
                }
            }
        }
        
        public CustomConfigItemsTypeConfigItemData Data
        {
            get
            {
                return dataField;
            }
            set
            {
                dataField = value;
            }
        }
        
        /// <summary>
        /// Optionally declares that this config item should be exposed to the Custom Config Menu Page and to FloorManager.
        /// </summary>
        public CustomConfigItemsTypeConfigItemModifiability Modifiability
        {
            get
            {
                return modifiabilityField;
            }
            set
            {
                modifiabilityField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class CustomConfigItemsTypeConfigItemData
    {
        #region Private fields
        private object itemField;
        #endregion
        
        [XmlElement("AmountData", typeof(AmountType))]
        [XmlElement("BooleanData", typeof(bool))]
        [XmlElement("EnumerationData", typeof(EnumerationType))]
        [XmlElement("FlagListData", typeof(FlagListType))]
        [XmlElement("FloatData", typeof(FloatType))]
        [XmlElement("Int64Data", typeof(Int64Type))]
        [XmlElement("ItemData", typeof(ItemType))]
        [XmlElement("StringData", typeof(StringType))]
        public object Item
        {
            get
            {
                return itemField;
            }
            set
            {
                itemField = value;
            }
        }
    }
    
    /// <summary>
    /// Optionally declares that this config item should be exposed to the Custom Config Menu Page and to FloorManager.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class CustomConfigItemsTypeConfigItemModifiability
    {
        #region Private fields
        private string descriptionField;
        private bool canModLocalField;
        private bool canModRemoteField;
        private string sectionNameField;
        private System.Nullable<uint> orderInSectionField;
        #endregion
        
        /// <summary>
        /// xlocalization entry name for a description string to display to the operator for the config item's usage.
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Description
        {
            get
            {
                return descriptionField;
            }
            set
            {
                descriptionField = value;
            }
        }
        
        /// <summary>
        /// Flag indicating whether an operator can change this config item locally on the Custom Config Menu Page.  Setting to false will cause this item to be "read only."
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool CanModLocal
        {
            get
            {
                return canModLocalField;
            }
            set
            {
                canModLocalField = value;
            }
        }
        
        /// <summary>
        /// Flag indicating whether an operator can change this config item on FloorManager.  Setting to false will cause this item to be "read only."
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public bool CanModRemote
        {
            get
            {
                return canModRemoteField;
            }
            set
            {
                canModRemoteField = value;
            }
        }
        
        /// <summary>
        /// Optionally declares the OrderIdentifier of the section that this config item should display in.  Use if ConfigMenuSections are in use.
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string SectionName
        {
            get
            {
                return sectionNameField;
            }
            set
            {
                sectionNameField = value;
            }
        }
        
        /// <summary>
        /// Optionally declares the order that this config item should appear in its section where lower values appear higher on the menu page.  If left unassigned, this value appears after other entries in the order they are defined in the registry.
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public uint OrderInSection
        {
            get
            {
                if (orderInSectionField.HasValue)
                {
                    return orderInSectionField.Value;
                }
                else
                {
                    return default(uint);
                }
            }
            set
            {
                orderInSectionField = value;
            }
        }
        
        [XmlIgnore]
        public bool OrderInSectionSpecified
        {
            get
            {
                return orderInSectionField.HasValue;
            }
            set
            {
                if (value==false)
                {
                    orderInSectionField = null;
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class CustomConfigItemsTypeConfigMenuSection
    {
        #region Private fields
        private string descriptionField;
        private string nameIdentifierField;
        #endregion
        
        /// <summary>
        /// xlocalization entry name for a description string to display to the operator for the menu section.
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Description
        {
            get
            {
                return descriptionField;
            }
            set
            {
                descriptionField = value;
            }
        }
        
        /// <summary>
        /// A unique key that the section can be referred to via the Modifiability values of ConfigItems.  This is not the string displayed to the operator.
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string NameIdentifier
        {
            get
            {
                return nameIdentifierField;
            }
            set
            {
                nameIdentifierField = value;
            }
        }
    }
    
    /// <summary>
    /// This type will organize the properties
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class PropertiesType
    {
        #region Private fields
        private List<PropertiesTypeSection> sectionField;
        #endregion
        
        /// <summary>
        /// PropertiesType class constructor
        /// </summary>
        public PropertiesType()
        {
            sectionField = new List<PropertiesTypeSection>();
        }
        
        [XmlElement("Section")]
        public List<PropertiesTypeSection> Section
        {
            get
            {
                return sectionField;
            }
            set
            {
                sectionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class PropertiesTypeSection
    {
        #region Private fields
        private List<PropertiesTypeSectionProperty> propertyField;
        private string nameField;
        #endregion
        
        /// <summary>
        /// PropertiesTypeSection class constructor
        /// </summary>
        public PropertiesTypeSection()
        {
            propertyField = new List<PropertiesTypeSectionProperty>();
        }
        
        [XmlElement("Property")]
        public List<PropertiesTypeSectionProperty> Property
        {
            get
            {
                return propertyField;
            }
            set
            {
                propertyField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string Name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class PropertiesTypeSectionProperty
    {
        #region Private fields
        private string nameField;
        private string valueField;
        #endregion
        
        public string Name
        {
            get
            {
                return nameField;
            }
            set
            {
                nameField = value;
            }
        }
        
        public string Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    /// <summary>
    /// This type will organize max bet value that comes from a range and max bet value that comes from a list. It can accomodate multiple maxbet values to represent denom specific maxbets.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(Namespace="F2LRegistryTypeVer2.xsd")]
    [XmlRootAttribute(Namespace="F2LRegistryTypeVer2.xsd", IsNullable=true)]
    public partial class MaxBetType
    {
        #region Private fields
        private MaxBetTypeValuePool valuePoolField;
        private List<MaxBetTypeValue> valueField;
        #endregion
        
        /// <summary>
        /// MaxBetType class constructor
        /// </summary>
        public MaxBetType()
        {
            valueField = new List<MaxBetTypeValue>();
        }
        
        public MaxBetTypeValuePool ValuePool
        {
            get
            {
                return valuePoolField;
            }
            set
            {
                valuePoolField = value;
            }
        }
        
        [XmlElement("Value")]
        public List<MaxBetTypeValue> Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class MaxBetTypeValuePool
    {
        #region Private fields
        private object itemField;
        #endregion
        
        [XmlElement("List", typeof(MaxBetTypeValuePoolList))]
        [XmlElement("Range", typeof(MaxBetTypeValuePoolRange))]
        public object Item
        {
            get
            {
                return itemField;
            }
            set
            {
                itemField = value;
            }
        }
    }
    
    /// <summary>
    /// The enumerated list of values that may be chosen by the Operator.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class MaxBetTypeValuePoolList
    {
        #region Private fields
        private List<ulong> enumerationField;
        #endregion
        
        /// <summary>
        /// MaxBetTypeValuePoolList class constructor
        /// </summary>
        public MaxBetTypeValuePoolList()
        {
            enumerationField = new List<ulong>();
        }
        
        /// <summary>
        /// Enumerated list of max bets.
        /// </summary>
        [XmlElement("Enumeration")]
        public List<ulong> Enumeration
        {
            get
            {
                return enumerationField;
            }
            set
            {
                enumerationField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class MaxBetTypeValuePoolRange
    {
        #region Private fields
        private ulong minField;
        private ulong maxField;
        #endregion
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ulong Min
        {
            get
            {
                return minField;
            }
            set
            {
                minField = value;
            }
        }
        
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public ulong Max
        {
            get
            {
                return maxField;
            }
            set
            {
                maxField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "4.4.0.7")]
    [Serializable]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlTypeAttribute(AnonymousType=true, Namespace="F2LRegistryTypeVer2.xsd")]
    public partial class MaxBetTypeValue
    {
        #region Private fields
        private uint denomField;
        private ulong valueField;
        #endregion
        
        /// <summary>
        /// MaxBetTypeValue class constructor
        /// </summary>
        public MaxBetTypeValue()
        {
            denomField = ((uint)(0));
        }
        
        /// <summary>
        /// Defined when when the value is denom specific
        /// </summary>
        [XmlAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public uint Denom
        {
            get
            {
                return denomField;
            }
            set
            {
                denomField = value;
            }
        }
        
        [XmlTextAttribute]
        public ulong Value
        {
            get
            {
                return valueField;
            }
            set
            {
                valueField = value;
            }
        }
    }
}
#pragma warning restore
