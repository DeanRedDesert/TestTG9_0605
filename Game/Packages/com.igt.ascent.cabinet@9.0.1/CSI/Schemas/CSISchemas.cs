//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma warning disable 1591
using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=4.8.3928.0.
// 


namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class CsiBankSynchronization {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BankSynchronizationInfoRequest", typeof(BankSynchronizationInfoRequest))]
    [System.Xml.Serialization.XmlElementAttribute("BankSynchronizationInfoResponse", typeof(BankSynchronizationInfoResponse))]
    [System.Xml.Serialization.XmlElementAttribute("MessageRegistrationRequest", typeof(MessageRegistrationRequest1))]
    [System.Xml.Serialization.XmlElementAttribute("MessageRegistrationResponse", typeof(MessageRegistrationResponse1))]
    [System.Xml.Serialization.XmlElementAttribute("ReceivedSynchronizationPayload", typeof(ReceivedSynchronizationPayload))]
    [System.Xml.Serialization.XmlElementAttribute("SendSynchronizationPayload", typeof(SendSynchronizationPayload))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class BankSynchronizationInfoRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public partial class MessageRegistrationResponse {
    
    private MessageRegistrationErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    /// <remarks/>
    public MessageRegistrationErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public enum MessageRegistrationErrorCode {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    FeatureDisabled,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public partial class MessageRegistrationRequest {
    
    private MessageRegistrationAction actionField;
    
    private MessageRegistrationType messageTypeField;
    
    /// <remarks/>
    public MessageRegistrationAction Action {
        get {
            return this.actionField;
        }
        set {
            this.actionField = value;
        }
    }
    
    /// <remarks/>
    public MessageRegistrationType MessageType {
        get {
            return this.messageTypeField;
        }
        set {
            this.messageTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public enum MessageRegistrationAction {
    
    /// <remarks/>
    REGISTER,
    
    /// <remarks/>
    UNREGISTER,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public enum MessageRegistrationType {
    
    /// <remarks/>
    CONTROLLER,
    
    /// <remarks/>
    FOUNDATION,
    
    /// <remarks/>
    GAME,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public partial class SynchronizationPayloadData {
    
    private ulong payloadSizeField;
    
    private string payloadDataField;
    
    /// <remarks/>
    public ulong PayloadSize {
        get {
            return this.payloadSizeField;
        }
        set {
            this.payloadSizeField = value;
        }
    }
    
    /// <remarks/>
    public string PayloadData {
        get {
            return this.payloadDataField;
        }
        set {
            this.payloadDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public partial class SynchronizationInformationData {
    
    private long timeFrameField;
    
    private TimeFramePrecisionLevel timeFramePrecisionField;
    
    private uint positionInBankField;
    
    private uint totalBankPositionsField;
    
    /// <remarks/>
    public long TimeFrame {
        get {
            return this.timeFrameField;
        }
        set {
            this.timeFrameField = value;
        }
    }
    
    /// <remarks/>
    public TimeFramePrecisionLevel TimeFramePrecision {
        get {
            return this.timeFramePrecisionField;
        }
        set {
            this.timeFramePrecisionField = value;
        }
    }
    
    /// <remarks/>
    public uint PositionInBank {
        get {
            return this.positionInBankField;
        }
        set {
            this.positionInBankField = value;
        }
    }
    
    /// <remarks/>
    public uint TotalBankPositions {
        get {
            return this.totalBankPositionsField;
        }
        set {
            this.totalBankPositionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public enum TimeFramePrecisionLevel {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Low,
    
    /// <remarks/>
    High,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class BankSynchronizationInfoResponse {
    
    private SynchronizationInfoError synchronizationInfoErrorField;
    
    private SynchronizationInformationData synchronizationInfoField;
    
    /// <remarks/>
    public SynchronizationInfoError SynchronizationInfoError {
        get {
            return this.synchronizationInfoErrorField;
        }
        set {
            this.synchronizationInfoErrorField = value;
        }
    }
    
    /// <remarks/>
    public SynchronizationInformationData SynchronizationInfo {
        get {
            return this.synchronizationInfoField;
        }
        set {
            this.synchronizationInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class SynchronizationInfoError {
    
    private BankSynchronizationInfoErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    /// <remarks/>
    public BankSynchronizationInfoErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiBankSynchronizationV1.xsd")]
public enum BankSynchronizationInfoErrorCode {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    FeatureDisabled,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("MessageRegistrationRequest", Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class MessageRegistrationRequest1 : MessageRegistrationRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("MessageRegistrationResponse", Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class MessageRegistrationResponse1 : MessageRegistrationResponse {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class ReceivedSynchronizationPayload {
    
    private SynchronizationPayloadData receivedPayloadField;
    
    /// <remarks/>
    public SynchronizationPayloadData ReceivedPayload {
        get {
            return this.receivedPayloadField;
        }
        set {
            this.receivedPayloadField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiBankSynchronizationV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiBankSynchronizationV1.xsd", IsNullable=false)]
public partial class SendSynchronizationPayload {
    
    private SynchronizationPayloadData sendPayloadField;
    
    private MessageRegistrationType destinationField;
    
    /// <remarks/>
    public SynchronizationPayloadData SendPayload {
        get {
            return this.sendPayloadField;
        }
        set {
            this.sendPayloadField = value;
        }
    }
    
    /// <remarks/>
    public MessageRegistrationType Destination {
        get {
            return this.destinationField;
        }
        set {
            this.destinationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class CsiButton {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ButtonEvent", typeof(ButtonEvent))]
    [System.Xml.Serialization.XmlElementAttribute("ConfigurationRequest", typeof(ConfigurationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ConfigurationResponse", typeof(ConfigurationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("DownloadImageSetRequest", typeof(DownloadImageSetRequest))]
    [System.Xml.Serialization.XmlElementAttribute("DownloadImageSetResponse", typeof(DownloadImageSetResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetLampStateRequest", typeof(GetLampStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetLampStateResponse", typeof(GetLampStateResponse))]
    [System.Xml.Serialization.XmlElementAttribute("PlayAnimationRequest", typeof(PlayAnimationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("PlayAnimationResponse", typeof(PlayAnimationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveImageSetRequest", typeof(RemoveImageSetRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RemoveImageSetResponse", typeof(RemoveImageSetResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetAllPixelsRequest", typeof(SetAllPixelsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetAllPixelsResponse", typeof(SetAllPixelsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetLampStateRequest", typeof(SetLampStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetLampStateResponse", typeof(SetLampStateResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class ButtonEvent {
    
    private ButtonState buttonField;
    
    private ulong timestampField;
    
    private bool timestampFieldSpecified;
    
    /// <remarks/>
    public ButtonState Button {
        get {
            return this.buttonField;
        }
        set {
            this.buttonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ulong timestamp {
        get {
            return this.timestampField;
        }
        set {
            this.timestampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool timestampSpecified {
        get {
            return this.timestampFieldSpecified;
        }
        set {
            this.timestampFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public partial class ButtonState {
    
    private ButtonId buttonIdField;
    
    private bool pressedField;
    
    private bool isDiagnosticField;
    
    private List<ButtonFunction> buttonFunctionsField = new List<ButtonFunction>();
    
    /// <remarks/>
    public ButtonId ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
    
    /// <remarks/>
    public bool Pressed {
        get {
            return this.pressedField;
        }
        set {
            this.pressedField = value;
        }
    }
    
    /// <remarks/>
    public bool IsDiagnostic {
        get {
            return this.isDiagnosticField;
        }
        set {
            this.isDiagnosticField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ButtonFunctions")]
    public List<ButtonFunction>  ButtonFunctions {
        get {
            return this.buttonFunctionsField;
        }
        set {
            this.buttonFunctionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public partial class ButtonId {
    
    private string deviceIdField;
    
    private byte valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTextAttribute()]
    public byte Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public enum ButtonFunction {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    NoFunction,
    
    /// <remarks/>
    Accept,
    
    /// <remarks/>
    AutoPlay,
    
    /// <remarks/>
    BetOne,
    
    /// <remarks/>
    BetPerLine1,
    
    /// <remarks/>
    BetPerLine2,
    
    /// <remarks/>
    BetPerLine3,
    
    /// <remarks/>
    BetPerLine4,
    
    /// <remarks/>
    BetPerLine5,
    
    /// <remarks/>
    BetPlus,
    
    /// <remarks/>
    BetMinus,
    
    /// <remarks/>
    Black,
    
    /// <remarks/>
    CashOut,
    
    /// <remarks/>
    HandleSwitch,
    
    /// <remarks/>
    Gamble,
    
    /// <remarks/>
    GameRules,
    
    /// <remarks/>
    Info,
    
    /// <remarks/>
    MaxBet,
    
    /// <remarks/>
    MoreGames,
    
    /// <remarks/>
    Red,
    
    /// <remarks/>
    Reject,
    
    /// <remarks/>
    RepeatBet,
    
    /// <remarks/>
    SelectLines1,
    
    /// <remarks/>
    SelectLines2,
    
    /// <remarks/>
    SelectLines3,
    
    /// <remarks/>
    SelectLines4,
    
    /// <remarks/>
    SelectLines5,
    
    /// <remarks/>
    Service,
    
    /// <remarks/>
    ShowGaff,
    
    /// <remarks/>
    Start,
    
    /// <remarks/>
    TakeWin,
    
    /// <remarks/>
    TournamentMenu,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class ConfigurationRequest {
    
    private string deviceIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class ConfigurationResponse {
    
    private ButtonResponse buttonResponseField;
    
    private List<ConfigurationResponseData> dataField = new List<ConfigurationResponseData>();
    
    /// <remarks/>
    public ButtonResponse ButtonResponse {
        get {
            return this.buttonResponseField;
        }
        set {
            this.buttonResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Data")]
    public List<ConfigurationResponseData>  Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class ButtonResponse {
    
    private ButtonErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public ButtonResponse() {
        this.errorCodeField = ButtonErrorCode.NONE;
    }
    
    /// <remarks/>
    public ButtonErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public enum ButtonErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    CONNECTION_LOST,
    
    /// <remarks/>
    SET_ALL_LAMPS_FAILED,
    
    /// <remarks/>
    INVALID_SET_LAMP_STATE_REQUEST,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    PERIPHERAL_STATUS_ERROR,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
public partial class ConfigurationResponseData {
    
    private PanelLocation panelLocationField;
    
    private PanelType panelTypeField;
    
    private uint panelIDField;
    
    private bool panelIDFieldSpecified;
    
    private string deviceIdField;
    
    private ConfigurationResponseDataButtons buttonsField;
    
    /// <remarks/>
    public PanelLocation PanelLocation {
        get {
            return this.panelLocationField;
        }
        set {
            this.panelLocationField = value;
        }
    }
    
    /// <remarks/>
    public PanelType PanelType {
        get {
            return this.panelTypeField;
        }
        set {
            this.panelTypeField = value;
        }
    }
    
    /// <remarks/>
    public uint PanelID {
        get {
            return this.panelIDField;
        }
        set {
            this.panelIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PanelIDSpecified {
        get {
            return this.panelIDFieldSpecified;
        }
        set {
            this.panelIDFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public ConfigurationResponseDataButtons Buttons {
        get {
            return this.buttonsField;
        }
        set {
            this.buttonsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public enum PanelLocation {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    Main,
    
    /// <remarks/>
    Secondary,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public enum PanelType {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    Static,
    
    /// <remarks/>
    Dynamic,
    
    /// <remarks/>
    StaticDynamic,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
public partial class ConfigurationResponseDataButtons {
    
    private List<Button> buttonField = new List<Button>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Button")]
    public List<Button>  Button {
        get {
            return this.buttonField;
        }
        set {
            this.buttonField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public partial class Button {
    
    private ButtonId buttonIdField;
    
    private bool dynamicField;
    
    private byte hardwareButtonIdField;
    
    private bool hardwareButtonIdFieldSpecified;
    
    private List<ButtonFunction> buttonFunctionsField = new List<ButtonFunction>();
    
    /// <remarks/>
    public ButtonId ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
    
    /// <remarks/>
    public bool Dynamic {
        get {
            return this.dynamicField;
        }
        set {
            this.dynamicField = value;
        }
    }
    
    /// <remarks/>
    public byte HardwareButtonId {
        get {
            return this.hardwareButtonIdField;
        }
        set {
            this.hardwareButtonIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HardwareButtonIdSpecified {
        get {
            return this.hardwareButtonIdFieldSpecified;
        }
        set {
            this.hardwareButtonIdFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ButtonFunctions")]
    public List<ButtonFunction>  ButtonFunctions {
        get {
            return this.buttonFunctionsField;
        }
        set {
            this.buttonFunctionsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class DownloadImageSetRequest {
    
    private string deviceIdField;
    
    private string filenameField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public string Filename {
        get {
            return this.filenameField;
        }
        set {
            this.filenameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class DownloadImageSetResponse {
    
    private ButtonResponse buttonResponseField;
    
    private string deviceIdField;
    
    private ushort imageSetIdField;
    
    private bool imageSetIdFieldSpecified;
    
    /// <remarks/>
    public ButtonResponse ButtonResponse {
        get {
            return this.buttonResponseField;
        }
        set {
            this.buttonResponseField = value;
        }
    }
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort ImageSetId {
        get {
            return this.imageSetIdField;
        }
        set {
            this.imageSetIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ImageSetIdSpecified {
        get {
            return this.imageSetIdFieldSpecified;
        }
        set {
            this.imageSetIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class GetLampStateRequest {
    
    private List<ButtonId> buttonIdField = new List<ButtonId>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ButtonId")]
    public List<ButtonId>  ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class GetLampStateResponse {
    
    private ButtonResponse buttonResponseField;
    
    private LampStates lampsField;
    
    /// <remarks/>
    public ButtonResponse ButtonResponse {
        get {
            return this.buttonResponseField;
        }
        set {
            this.buttonResponseField = value;
        }
    }
    
    /// <remarks/>
    public LampStates Lamps {
        get {
            return this.lampsField;
        }
        set {
            this.lampsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public partial class LampStates {
    
    private List<LampState> lampField = new List<LampState>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Lamp")]
    public List<LampState>  Lamp {
        get {
            return this.lampField;
        }
        set {
            this.lampField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiButtonV1.xsd")]
public partial class LampState {
    
    private ButtonId buttonIdField;
    
    private bool stateField;
    
    /// <remarks/>
    public ButtonId ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
    
    /// <remarks/>
    public bool State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class PlayAnimationRequest {
    
    private ButtonId buttonIdField;
    
    private ushort imageSetIdField;
    
    private ushort animationIdField;
    
    private ushort frameDelayField;
    
    private bool repeatField;
    
    private bool transitionModeField;
    
    /// <remarks/>
    public ButtonId ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort ImageSetId {
        get {
            return this.imageSetIdField;
        }
        set {
            this.imageSetIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort AnimationId {
        get {
            return this.animationIdField;
        }
        set {
            this.animationIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort FrameDelay {
        get {
            return this.frameDelayField;
        }
        set {
            this.frameDelayField = value;
        }
    }
    
    /// <remarks/>
    public bool Repeat {
        get {
            return this.repeatField;
        }
        set {
            this.repeatField = value;
        }
    }
    
    /// <remarks/>
    public bool TransitionMode {
        get {
            return this.transitionModeField;
        }
        set {
            this.transitionModeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class PlayAnimationResponse {
    
    private ButtonResponse buttonResponseField;
    
    private ButtonId buttonIdField;
    
    /// <remarks/>
    public ButtonResponse ButtonResponse {
        get {
            return this.buttonResponseField;
        }
        set {
            this.buttonResponseField = value;
        }
    }
    
    /// <remarks/>
    public ButtonId ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class RemoveImageSetRequest {
    
    private string deviceIdField;
    
    private ushort imageSetIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort ImageSetId {
        get {
            return this.imageSetIdField;
        }
        set {
            this.imageSetIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class RemoveImageSetResponse {
    
    private ButtonResponse buttonResponseField;
    
    private string deviceIdField;
    
    private ushort imageSetIdField;
    
    private bool imageSetIdFieldSpecified;
    
    /// <remarks/>
    public ButtonResponse ButtonResponse {
        get {
            return this.buttonResponseField;
        }
        set {
            this.buttonResponseField = value;
        }
    }
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort ImageSetId {
        get {
            return this.imageSetIdField;
        }
        set {
            this.imageSetIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ImageSetIdSpecified {
        get {
            return this.imageSetIdFieldSpecified;
        }
        set {
            this.imageSetIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class SetAllPixelsRequest {
    
    private ButtonId buttonIdField;
    
    private bool pixelStateField;
    
    /// <remarks/>
    public ButtonId ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
    
    /// <remarks/>
    public bool PixelState {
        get {
            return this.pixelStateField;
        }
        set {
            this.pixelStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class SetAllPixelsResponse {
    
    private ButtonResponse buttonResponseField;
    
    private ButtonId buttonIdField;
    
    /// <remarks/>
    public ButtonResponse ButtonResponse {
        get {
            return this.buttonResponseField;
        }
        set {
            this.buttonResponseField = value;
        }
    }
    
    /// <remarks/>
    public ButtonId ButtonId {
        get {
            return this.buttonIdField;
        }
        set {
            this.buttonIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class SetLampStateRequest {
    
    private LampStates lampsField;
    
    /// <remarks/>
    public LampStates Lamps {
        get {
            return this.lampsField;
        }
        set {
            this.lampsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiButtonV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiButtonV1.xsd", IsNullable=false)]
public partial class SetLampStateResponse {
    
    private ButtonResponse buttonResponseField;
    
    private LampStates previousLampStatesField;
    
    /// <remarks/>
    public ButtonResponse ButtonResponse {
        get {
            return this.buttonResponseField;
        }
        set {
            this.buttonResponseField = value;
        }
    }
    
    /// <remarks/>
    public LampStates PreviousLampStates {
        get {
            return this.previousLampStatesField;
        }
        set {
            this.previousLampStatesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class CsiCabinet {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ActivityStatusEvent", typeof(ActivityStatusEvent))]
    [System.Xml.Serialization.XmlElementAttribute("ActivityStatusRequest", typeof(ActivityStatusRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ActivityStatusResponse", typeof(ActivityStatusResponse))]
    [System.Xml.Serialization.XmlElementAttribute("AttractAestheticConfigurationChangedEvent", typeof(AttractAestheticConfiguration))]
    [System.Xml.Serialization.XmlElementAttribute("AttractAestheticConfigurationRequest", typeof(AttractAestheticConfigurationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("AttractAestheticConfigurationResponse", typeof(AttractAestheticConfigurationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("CabinetEvent", typeof(CabinetEvent))]
    [System.Xml.Serialization.XmlElementAttribute("CabinetEventRegistrationRequest", typeof(CabinetEventRegistrationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("CabinetEventRegistrationResponse", typeof(CabinetEventRegistrationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetCreditDisplayTypeRequest", typeof(GetCreditDisplayTypeRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetCreditDisplayTypeResponse", typeof(GetCreditDisplayTypeResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetCreditDisplayTypeRequest", typeof(SetCreditDisplayTypeRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetCreditDisplayTypeResponse", typeof(SetCreditDisplayTypeResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class ActivityStatusEvent {
    
    private bool newGameField;
    
    private uint attractIntervalField;
    
    private uint inactivityDelayField;
    
    private bool gameAttractsEnabledField;
    
    private bool activeField;
    
    /// <remarks/>
    public bool NewGame {
        get {
            return this.newGameField;
        }
        set {
            this.newGameField = value;
        }
    }
    
    /// <remarks/>
    public uint AttractInterval {
        get {
            return this.attractIntervalField;
        }
        set {
            this.attractIntervalField = value;
        }
    }
    
    /// <remarks/>
    public uint InactivityDelay {
        get {
            return this.inactivityDelayField;
        }
        set {
            this.inactivityDelayField = value;
        }
    }
    
    /// <remarks/>
    public bool GameAttractsEnabled {
        get {
            return this.gameAttractsEnabledField;
        }
        set {
            this.gameAttractsEnabledField = value;
        }
    }
    
    /// <remarks/>
    public bool Active {
        get {
            return this.activeField;
        }
        set {
            this.activeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class ActivityStatusRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class ActivityStatusResponse {
    
    private CabinetResponse cabinetResponseField;
    
    private ActivityStatusResponseData dataField;
    
    /// <remarks/>
    public CabinetResponse CabinetResponse {
        get {
            return this.cabinetResponseField;
        }
        set {
            this.cabinetResponseField = value;
        }
    }
    
    /// <remarks/>
    public ActivityStatusResponseData Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class CabinetResponse {
    
    private CabinetErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public CabinetResponse() {
        this.errorCodeField = CabinetErrorCode.NONE;
    }
    
    /// <remarks/>
    public CabinetErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
public enum CabinetErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    SET_DISPLAY_TYPE_FAILED,
    
    /// <remarks/>
    CONNECTION_ALREADY_REGISTERED,
    
    /// <remarks/>
    CLIENT_TYPE_NOT_SUPPORTED,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
public partial class ActivityStatusResponseData {
    
    private bool newGameField;
    
    private uint attractIntervalField;
    
    private uint inactivityDelayField;
    
    private bool gameAttractsEnabledField;
    
    private bool activeField;
    
    /// <remarks/>
    public bool NewGame {
        get {
            return this.newGameField;
        }
        set {
            this.newGameField = value;
        }
    }
    
    /// <remarks/>
    public uint AttractInterval {
        get {
            return this.attractIntervalField;
        }
        set {
            this.attractIntervalField = value;
        }
    }
    
    /// <remarks/>
    public uint InactivityDelay {
        get {
            return this.inactivityDelayField;
        }
        set {
            this.inactivityDelayField = value;
        }
    }
    
    /// <remarks/>
    public bool GameAttractsEnabled {
        get {
            return this.gameAttractsEnabledField;
        }
        set {
            this.gameAttractsEnabledField = value;
        }
    }
    
    /// <remarks/>
    public bool Active {
        get {
            return this.activeField;
        }
        set {
            this.activeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("AttractAestheticConfigurationChangedEvent", Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class AttractAestheticConfiguration {
    
    private uint gameAttractPlaylistGroupField;
    
    private GameAttractStyle gameAttractStyleField;
    
    /// <remarks/>
    public uint GameAttractPlaylistGroup {
        get {
            return this.gameAttractPlaylistGroupField;
        }
        set {
            this.gameAttractPlaylistGroupField = value;
        }
    }
    
    /// <remarks/>
    public GameAttractStyle GameAttractStyle {
        get {
            return this.gameAttractStyleField;
        }
        set {
            this.gameAttractStyleField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
public enum GameAttractStyle {
    
    /// <remarks/>
    Subtle,
    
    /// <remarks/>
    Intermediate,
    
    /// <remarks/>
    Exciting,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class AttractAestheticConfigurationRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class AttractAestheticConfigurationResponse {
    
    private CabinetResponse cabinetResponseField;
    
    private AttractAestheticConfiguration dataField;
    
    /// <remarks/>
    public CabinetResponse CabinetResponse {
        get {
            return this.cabinetResponseField;
        }
        set {
            this.cabinetResponseField = value;
        }
    }
    
    /// <remarks/>
    public AttractAestheticConfiguration Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class CabinetEvent {
    
    private string eventField;
    
    private CabinetEventData dataField;
    
    /// <remarks/>
    public string Event {
        get {
            return this.eventField;
        }
        set {
            this.eventField = value;
        }
    }
    
    /// <remarks/>
    public CabinetEventData Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
public partial class CabinetEventData {
    
    private List<string> valueField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Value")]
    public List<string>  Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class CabinetEventRegistrationRequest {
    
    private CabinetEventRegistrationAction cabinetEventRegistrationActionField;
    
    /// <remarks/>
    public CabinetEventRegistrationAction CabinetEventRegistrationAction {
        get {
            return this.cabinetEventRegistrationActionField;
        }
        set {
            this.cabinetEventRegistrationActionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public enum CabinetEventRegistrationAction {
    
    /// <remarks/>
    Register,
    
    /// <remarks/>
    Unregister,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class CabinetEventRegistrationResponse {
    
    private CabinetResponse cabinetResponseField;
    
    /// <remarks/>
    public CabinetResponse CabinetResponse {
        get {
            return this.cabinetResponseField;
        }
        set {
            this.cabinetResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class GetCreditDisplayTypeRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class GetCreditDisplayTypeResponse {
    
    private CabinetResponse cabinetResponseField;
    
    private CreditDisplayType creditDisplayTypeField;
    
    /// <remarks/>
    public CabinetResponse CabinetResponse {
        get {
            return this.cabinetResponseField;
        }
        set {
            this.cabinetResponseField = value;
        }
    }
    
    /// <remarks/>
    public CreditDisplayType CreditDisplayType {
        get {
            return this.creditDisplayTypeField;
        }
        set {
            this.creditDisplayTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiCabinetV1.xsd")]
public enum CreditDisplayType {
    
    /// <remarks/>
    NOT_SET,
    
    /// <remarks/>
    CREDIT,
    
    /// <remarks/>
    CURRENCY,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class SetCreditDisplayTypeRequest {
    
    private CreditDisplayType creditDisplayTypeField;
    
    /// <remarks/>
    public CreditDisplayType CreditDisplayType {
        get {
            return this.creditDisplayTypeField;
        }
        set {
            this.creditDisplayTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiCabinetV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiCabinetV1.xsd", IsNullable=false)]
public partial class SetCreditDisplayTypeResponse {
    
    private CabinetResponse cabinetResponseField;
    
    /// <remarks/>
    public CabinetResponse CabinetResponse {
        get {
            return this.cabinetResponseField;
        }
        set {
            this.cabinetResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiConnectV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiConnectV1.xsd", IsNullable=false)]
public partial class CsiConnect {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("InitializeCsiRequest", typeof(CsiConnectInitializeCsiRequest))]
    [System.Xml.Serialization.XmlElementAttribute("InitializeCsiResponse", typeof(CsiConnectInitializeCsiResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ShutdownSend", typeof(CsiConnectShutdownSend))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiConnectV1.xsd")]
public partial class CsiConnectInitializeCsiRequest {
    
    private CsiConnectInitializeCsiRequestCategories categoriesField;
    
    private ClientConnection clientInfoField;
    
    /// <remarks/>
    public CsiConnectInitializeCsiRequestCategories Categories {
        get {
            return this.categoriesField;
        }
        set {
            this.categoriesField = value;
        }
    }
    
    /// <remarks/>
    public ClientConnection ClientInfo {
        get {
            return this.clientInfoField;
        }
        set {
            this.clientInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiConnectV1.xsd")]
public partial class CsiConnectInitializeCsiRequestCategories {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion>  CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiConnectV1.xsd")]
public partial class CategoryVersion {
    
    private Category categoryField;
    
    private ushort majorVersionField;
    
    private ushort minorVersionField;
    
    /// <remarks/>
    public Category Category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    public ushort MajorVersion {
        get {
            return this.majorVersionField;
        }
        set {
            this.majorVersionField = value;
        }
    }
    
    /// <remarks/>
    public ushort MinorVersion {
        get {
            return this.minorVersionField;
        }
        set {
            this.minorVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTypesV1.xsd")]
public enum Category {
    
    /// <remarks/>
    CsiButton,
    
    /// <remarks/>
    CsiCabinet,
    
    /// <remarks/>
    CsiLight,
    
    /// <remarks/>
    CsiResource,
    
    /// <remarks/>
    CsiSound,
    
    /// <remarks/>
    CsiWindow,
    
    /// <remarks/>
    CsiReel,
    
    /// <remarks/>
    CsiSolenoid,
    
    /// <remarks/>
    CsiStreamingLight,
    
    /// <remarks/>
    CsiBankSynchronization,
    
    /// <remarks/>
    CsiTouchScreen,
    
    /// <remarks/>
    CsiReadiness,
    
    /// <remarks/>
    CsiMonitor,
    
    /// <remarks/>
    CsiVideoTopper,
    
    /// <remarks/>
    CsiHaptic,
    
    /// <remarks/>
    CsiDepthCamera,
    
    /// <remarks/>
    CsiPresentationSpeed,
    
    /// <remarks/>
    CsiPortal,
    
    /// <remarks/>
    CsiMechanicalBell,
    
    /// <remarks/>
    CsiService,
    
    /// <remarks/>
    CsiEmulatedCashoutService,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiConnectV1.xsd")]
public partial class ClientConnection {
    
    private ClientType clientTypeField;
    
    private string tokenField;
    
    /// <remarks/>
    public ClientType ClientType {
        get {
            return this.clientTypeField;
        }
        set {
            this.clientTypeField = value;
        }
    }
    
    /// <remarks/>
    public string Token {
        get {
            return this.tokenField;
        }
        set {
            this.tokenField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiConnectV1.xsd")]
public enum ClientType {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    SystemPrompt,
    
    /// <remarks/>
    Tilt,
    
    /// <remarks/>
    Portal,
    
    /// <remarks/>
    AttendantMenu,
    
    /// <remarks/>
    SyncSation,
    
    /// <remarks/>
    SystemExtension,
    
    /// <remarks/>
    MainMenu,
    
    /// <remarks/>
    Game,
    
    /// <remarks/>
    DeviceEmulator,
    
    /// <remarks/>
    Debug,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiConnectV1.xsd")]
public partial class CsiConnectInitializeCsiResponse {
    
    private ConnectResponse connectResponseField;
    
    private CsiConnectInitializeCsiResponseCategories categoriesField;
    
    /// <remarks/>
    public ConnectResponse ConnectResponse {
        get {
            return this.connectResponseField;
        }
        set {
            this.connectResponseField = value;
        }
    }
    
    /// <remarks/>
    public CsiConnectInitializeCsiResponseCategories Categories {
        get {
            return this.categoriesField;
        }
        set {
            this.categoriesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiConnectV1.xsd")]
public partial class ConnectResponse {
    
    private ConnectErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public ConnectResponse() {
        this.errorCodeField = ConnectErrorCode.NONE;
    }
    
    /// <remarks/>
    public ConnectErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiConnectV1.xsd")]
public enum ConnectErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    TOKEN_ALREADY_IN_USE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiConnectV1.xsd")]
public partial class CsiConnectInitializeCsiResponseCategories {
    
    private List<CategoryVersion> categoryVersionField = new List<CategoryVersion>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CategoryVersion")]
    public List<CategoryVersion>  CategoryVersion {
        get {
            return this.categoryVersionField;
        }
        set {
            this.categoryVersionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiConnectV1.xsd")]
public partial class CsiConnectShutdownSend {
    
    private string shutdownDescriptionField;
    
    /// <remarks/>
    public string ShutdownDescription {
        get {
            return this.shutdownDescriptionField;
        }
        set {
            this.shutdownDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class CsiDepthCamera {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DepthCameraDeviceEvent", typeof(DepthCameraDeviceEvent))]
    [System.Xml.Serialization.XmlElementAttribute("GetDepthCameraDeviceStatusRequest", typeof(GetDepthCameraDeviceStatusRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetDepthCameraDeviceStatusResponse", typeof(GetDepthCameraDeviceStatusResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetDepthCameraDevicesRequest", typeof(GetDepthCameraDevicesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetDepthCameraDevicesResponse", typeof(GetDepthCameraDevicesResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class DepthCameraDeviceEvent {
    
    private string deviceIdField;
    
    private string descriptionField;
    
    private Severity severityField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public Severity Severity {
        get {
            return this.severityField;
        }
        set {
            this.severityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public enum Severity {
    
    /// <remarks/>
    Info,
    
    /// <remarks/>
    Low,
    
    /// <remarks/>
    High,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class GetDepthCameraDeviceStatusRequest {
    
    private string deviceIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class GetDepthCameraDeviceStatusResponse {
    
    private DepthCameraResponse depthCameraResponseField;
    
    private DepthCameraDeviceStatusResponse depthCameraDeviceStatusResponseField;
    
    /// <remarks/>
    public DepthCameraResponse DepthCameraResponse {
        get {
            return this.depthCameraResponseField;
        }
        set {
            this.depthCameraResponseField = value;
        }
    }
    
    /// <remarks/>
    public DepthCameraDeviceStatusResponse DepthCameraDeviceStatusResponse {
        get {
            return this.depthCameraDeviceStatusResponseField;
        }
        set {
            this.depthCameraDeviceStatusResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class DepthCameraResponse {
    
    private DepthCameraErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public DepthCameraResponse() {
        this.errorCodeField = DepthCameraErrorCode.NONE;
    }
    
    /// <remarks/>
    public DepthCameraErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public enum DepthCameraErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    COMMUNICATION_FAILURE,
    
    /// <remarks/>
    UNKNOWN_DEVICE_ID,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public partial class DepthCameraDeviceStatusResponse {
    
    private string deviceIdField;
    
    private DepthCameraDeviceStatus depthCameraDeviceStatusField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public DepthCameraDeviceStatus DepthCameraDeviceStatus {
        get {
            return this.depthCameraDeviceStatusField;
        }
        set {
            this.depthCameraDeviceStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public enum DepthCameraDeviceStatus {
    
    /// <remarks/>
    OK,
    
    /// <remarks/>
    Failure,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class GetDepthCameraDevicesRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class GetDepthCameraDevicesResponse {
    
    private DepthCameraResponse depthCameraResponseField;
    
    private List<DepthCameraDevice> depthCameraDevicesField = new List<DepthCameraDevice>();
    
    /// <remarks/>
    public DepthCameraResponse DepthCameraResponse {
        get {
            return this.depthCameraResponseField;
        }
        set {
            this.depthCameraResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<DepthCameraDevice>  DepthCameraDevices {
        get {
            return this.depthCameraDevicesField;
        }
        set {
            this.depthCameraDevicesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public partial class DepthCameraDevice {
    
    private CameraTechType depthCameraTypeField;
    
    private DepthCameraDeviceIndex depthCameraDeviceIndexField;
    
    private DepthCameraModel depthCameraModelField;
    
    private string depthCameraUsbLocationPathField;
    
    private string depthCameraDeviceIdField;
    
    /// <remarks/>
    public CameraTechType DepthCameraType {
        get {
            return this.depthCameraTypeField;
        }
        set {
            this.depthCameraTypeField = value;
        }
    }
    
    /// <remarks/>
    public DepthCameraDeviceIndex DepthCameraDeviceIndex {
        get {
            return this.depthCameraDeviceIndexField;
        }
        set {
            this.depthCameraDeviceIndexField = value;
        }
    }
    
    /// <remarks/>
    public DepthCameraModel DepthCameraModel {
        get {
            return this.depthCameraModelField;
        }
        set {
            this.depthCameraModelField = value;
        }
    }
    
    /// <remarks/>
    public string DepthCameraUsbLocationPath {
        get {
            return this.depthCameraUsbLocationPathField;
        }
        set {
            this.depthCameraUsbLocationPathField = value;
        }
    }
    
    /// <remarks/>
    public string DepthCameraDeviceId {
        get {
            return this.depthCameraDeviceIdField;
        }
        set {
            this.depthCameraDeviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public enum CameraTechType {
    
    /// <remarks/>
    TimeOfFlight,
    
    /// <remarks/>
    StructuredLight,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public enum DepthCameraDeviceIndex {
    
    /// <remarks/>
    First,
    
    /// <remarks/>
    Second,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDepthCameraV1.xsd")]
public enum DepthCameraModel {
    
    /// <remarks/>
    PMDPicoFlex,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiDepthCameraV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiDepthCameraV1.xsd", IsNullable=false)]
public partial class DepthCameraDevices {
    
    private List<DepthCameraDevice> depthCameraDeviceField = new List<DepthCameraDevice>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DepthCameraDevice")]
    public List<DepthCameraDevice>  DepthCameraDevice {
        get {
            return this.depthCameraDeviceField;
        }
        set {
            this.depthCameraDeviceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class CsiEmulatedCashoutService {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CultureChangedEvent", typeof(CultureChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("HideEmulatedCashoutServiceEvent", typeof(HideEmulatedCashoutServiceEvent))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterAsEmulatedCashoutServiceWindowRequest", typeof(RegisterAsEmulatedCashoutServiceWindowRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterAsEmulatedCashoutServiceWindowResponse", typeof(RegisterAsEmulatedCashoutServiceWindowResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetEmulatedCashoutServiceVisibleRequest", typeof(SetEmulatedCashoutServiceVisibleRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetEmulatedCashoutServiceVisibleResponse", typeof(SetEmulatedCashoutServiceVisibleResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ShowEmulatedCashoutServiceEvent", typeof(ShowEmulatedCashoutServiceEvent))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class CultureChangedEvent {
    
    private string cultureField;
    
    /// <remarks/>
    public string Culture {
        get {
            return this.cultureField;
        }
        set {
            this.cultureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class HideEmulatedCashoutServiceEvent {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class RegisterAsEmulatedCashoutServiceWindowRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class RegisterAsEmulatedCashoutServiceWindowResponse {
    
    private EmulatedCashoutServiceResponse emulatedCashoutServiceResponseField;
    
    /// <remarks/>
    public EmulatedCashoutServiceResponse EmulatedCashoutServiceResponse {
        get {
            return this.emulatedCashoutServiceResponseField;
        }
        set {
            this.emulatedCashoutServiceResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class EmulatedCashoutServiceResponse {
    
    private EmulatedCashoutServiceErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public EmulatedCashoutServiceResponse() {
        this.errorCodeField = EmulatedCashoutServiceErrorCode.NONE;
    }
    
    /// <remarks/>
    public EmulatedCashoutServiceErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd")]
public enum EmulatedCashoutServiceErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    WINDOW_ALREADY_REGISTERED,
    
    /// <remarks/>
    OPERATION_FAILED,
    
    /// <remarks/>
    HOST_OPERATION_CALLED_BY_CLIENT,
    
    /// <remarks/>
    CLIENT_OPERATION_CALLED_BY_HOST,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class SetEmulatedCashoutServiceVisibleRequest {
    
    private bool visibleField;
    
    /// <remarks/>
    public bool Visible {
        get {
            return this.visibleField;
        }
        set {
            this.visibleField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class SetEmulatedCashoutServiceVisibleResponse {
    
    private EmulatedCashoutServiceResponse emulatedCashoutServiceResponseField;
    
    /// <remarks/>
    public EmulatedCashoutServiceResponse EmulatedCashoutServiceResponse {
        get {
            return this.emulatedCashoutServiceResponseField;
        }
        set {
            this.emulatedCashoutServiceResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiEmulatedCashoutServiceV1.xsd", IsNullable=false)]
public partial class ShowEmulatedCashoutServiceEvent {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class CsiHaptic {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetHapticDeviceStatusRequest", typeof(GetHapticDeviceStatusRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetHapticDeviceStatusResponse", typeof(GetHapticDeviceStatusResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetHapticDevicesRequest", typeof(GetHapticDevicesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetHapticDevicesResponse", typeof(GetHapticDevicesResponse))]
    [System.Xml.Serialization.XmlElementAttribute("HapticDeviceEvent", typeof(HapticDeviceEvent))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class GetHapticDeviceStatusRequest {
    
    private string deviceIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class GetHapticDeviceStatusResponse {
    
    private HapticResponse hapticResponseField;
    
    private HapticDeviceStatusResponse hapticDeviceStatusResponseField;
    
    /// <remarks/>
    public HapticResponse HapticResponse {
        get {
            return this.hapticResponseField;
        }
        set {
            this.hapticResponseField = value;
        }
    }
    
    /// <remarks/>
    public HapticDeviceStatusResponse HapticDeviceStatusResponse {
        get {
            return this.hapticDeviceStatusResponseField;
        }
        set {
            this.hapticDeviceStatusResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class HapticResponse {
    
    private HapticErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public HapticResponse() {
        this.errorCodeField = HapticErrorCode.NONE;
    }
    
    /// <remarks/>
    public HapticErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
public enum HapticErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    COMMUNICATION_FAILURE,
    
    /// <remarks/>
    UNKNOWN_DEVICE_ID,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
public partial class HapticDeviceStatusResponse {
    
    private string deviceIdField;
    
    private HapticDeviceStatus hapticDeviceStatusField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public HapticDeviceStatus HapticDeviceStatus {
        get {
            return this.hapticDeviceStatusField;
        }
        set {
            this.hapticDeviceStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
public enum HapticDeviceStatus {
    
    /// <remarks/>
    OK,
    
    /// <remarks/>
    Failure,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class GetHapticDevicesRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class GetHapticDevicesResponse {
    
    private HapticResponse hapticResponseField;
    
    private List<HapticDevice> hapticDevicesField = new List<HapticDevice>();
    
    /// <remarks/>
    public HapticResponse HapticResponse {
        get {
            return this.hapticResponseField;
        }
        set {
            this.hapticResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<HapticDevice>  HapticDevices {
        get {
            return this.hapticDevicesField;
        }
        set {
            this.hapticDevicesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
public partial class HapticDevice {
    
    private string deviceIdField;
    
    private HapticDeviceType hapticDeviceTypeField;
    
    private HapticDeviceLocation hapticDeviceLocationField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public HapticDeviceType HapticDeviceType {
        get {
            return this.hapticDeviceTypeField;
        }
        set {
            this.hapticDeviceTypeField = value;
        }
    }
    
    /// <remarks/>
    public HapticDeviceLocation HapticDeviceLocation {
        get {
            return this.hapticDeviceLocationField;
        }
        set {
            this.hapticDeviceLocationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
public enum HapticDeviceType {
    
    /// <remarks/>
    Ultrasonic,
    
    /// <remarks/>
    Vibration,
    
    /// <remarks/>
    Mechanical,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
public enum HapticDeviceLocation {
    
    /// <remarks/>
    MainMonitorTop,
    
    /// <remarks/>
    MainMonitorBottom,
    
    /// <remarks/>
    MainMonitorLeft,
    
    /// <remarks/>
    MainMonitorRight,
    
    /// <remarks/>
    MainMonitorTouchscreen,
    
    /// <remarks/>
    DPP,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class HapticDeviceEvent {
    
    private string deviceIdField;
    
    private string descriptionField;
    
    private HapticDeviceEventSeverityLevel hapticDeviceEventSeverityField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public HapticDeviceEventSeverityLevel HapticDeviceEventSeverity {
        get {
            return this.hapticDeviceEventSeverityField;
        }
        set {
            this.hapticDeviceEventSeverityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiHapticV1.xsd")]
public enum HapticDeviceEventSeverityLevel {
    
    /// <remarks/>
    Info,
    
    /// <remarks/>
    Low,
    
    /// <remarks/>
    High,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiHapticV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiHapticV1.xsd", IsNullable=false)]
public partial class HapticDevices {
    
    private List<HapticDevice> hapticDeviceField = new List<HapticDevice>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("HapticDevice")]
    public List<HapticDevice>  HapticDevice {
        get {
            return this.hapticDeviceField;
        }
        set {
            this.hapticDeviceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class CsiLight {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BitwiseControlRequest", typeof(BitwiseControlRequest))]
    [System.Xml.Serialization.XmlElementAttribute("BitwiseControlResponse", typeof(BitwiseControlResponse))]
    [System.Xml.Serialization.XmlElementAttribute("CandleStateChangeEvent", typeof(CandleStateChangeEvent))]
    [System.Xml.Serialization.XmlElementAttribute("CandleStateChangeRegistrationRequest", typeof(CandleStateChangeRegistrationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("CandleStateChangeRegistrationResponse", typeof(CandleStateChangeRegistrationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("CandleStateRequest", typeof(CandleStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("CandleStateResponse", typeof(CandleStateResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetLightDevicesRequest", typeof(GetLightDevicesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetLightDevicesResponse", typeof(GetLightDevicesResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SequenceRunningRequest", typeof(SequenceRunningRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SequenceRunningResponse", typeof(SequenceRunningResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetColorRequest", typeof(SetColorRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetColorResponse", typeof(SetColorResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetIntensityRequest", typeof(SetIntensityRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetIntensityResponse", typeof(SetIntensityResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetRequireDeviceRequest", typeof(SetRequireDeviceRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetRequireDeviceResponse", typeof(SetRequireDeviceResponse))]
    [System.Xml.Serialization.XmlElementAttribute("StartSequenceRequest", typeof(StartSequenceRequest))]
    [System.Xml.Serialization.XmlElementAttribute("StartSequenceResponse", typeof(StartSequenceResponse))]
    [System.Xml.Serialization.XmlElementAttribute("TurnOffRequest", typeof(TurnOffRequest))]
    [System.Xml.Serialization.XmlElementAttribute("TurnOffResponse", typeof(TurnOffResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class BitwiseControlRequest {
    
    private ushort startLightField;
    
    private byte bitControlField;
    
    private byte[] lightDataField;
    
    private string featureIdField;
    
    private byte groupField;
    
    /// <remarks/>
    public ushort StartLight {
        get {
            return this.startLightField;
        }
        set {
            this.startLightField = value;
        }
    }
    
    /// <remarks/>
    public byte BitControl {
        get {
            return this.bitControlField;
        }
        set {
            this.bitControlField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] LightData {
        get {
            return this.lightDataField;
        }
        set {
            this.lightDataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class BitwiseControlResponse {
    
    private LightResponse lightResponseField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class LightResponse {
    
    private LightErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public LightResponse() {
        this.errorCodeField = LightErrorCode.NONE;
    }
    
    /// <remarks/>
    public LightErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiLightV1.xsd")]
public enum LightErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    INVALID_FEATURE_ID,
    
    /// <remarks/>
    INVALID_GROUP,
    
    /// <remarks/>
    INVALID_LIGHT_EXCEPTION,
    
    /// <remarks/>
    INVALID_RANGE_EXCEPTION,
    
    /// <remarks/>
    INVALID_BIT_CONTROL,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    UNKNOWN_DRIVER_ERROR,
    
    /// <remarks/>
    CLIENT_ALREADY_REGISTERED,
    
    /// <remarks/>
    CLIENT_NOT_REGISTERED,
    
    /// <remarks/>
    INVALID_CANDLE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class CandleStateChangeEvent {
    
    private Candle candleField;
    
    private bool illuminatedField;
    
    /// <remarks/>
    public Candle Candle {
        get {
            return this.candleField;
        }
        set {
            this.candleField = value;
        }
    }
    
    /// <remarks/>
    public bool Illuminated {
        get {
            return this.illuminatedField;
        }
        set {
            this.illuminatedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiLightV1.xsd")]
public enum Candle {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Candle1,
    
    /// <remarks/>
    Candle2,
    
    /// <remarks/>
    Candle3,
    
    /// <remarks/>
    Candle4,
    
    /// <remarks/>
    All,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class CandleStateChangeRegistrationRequest {
    
    private Candle candleField;
    
    private RegistrationAction registrationActionField;
    
    /// <remarks/>
    public Candle Candle {
        get {
            return this.candleField;
        }
        set {
            this.candleField = value;
        }
    }
    
    /// <remarks/>
    public RegistrationAction RegistrationAction {
        get {
            return this.registrationActionField;
        }
        set {
            this.registrationActionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public enum RegistrationAction {
    
    /// <remarks/>
    Register,
    
    /// <remarks/>
    Unregister,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class CandleStateChangeRegistrationResponse {
    
    private LightResponse lightResponseField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class CandleStateRequest {
    
    private Candle candleField;
    
    /// <remarks/>
    public Candle Candle {
        get {
            return this.candleField;
        }
        set {
            this.candleField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class CandleStateResponse {
    
    private LightResponse lightResponseField;
    
    private Candle candleField;
    
    private bool illuminatedField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
    
    /// <remarks/>
    public Candle Candle {
        get {
            return this.candleField;
        }
        set {
            this.candleField = value;
        }
    }
    
    /// <remarks/>
    public bool Illuminated {
        get {
            return this.illuminatedField;
        }
        set {
            this.illuminatedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class GetLightDevicesRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class GetLightDevicesResponse {
    
    private LightResponse lightResponseField;
    
    private GetLightDevicesResponseFeatures featuresField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
    
    /// <remarks/>
    public GetLightDevicesResponseFeatures Features {
        get {
            return this.featuresField;
        }
        set {
            this.featuresField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class GetLightDevicesResponseFeatures {
    
    private List<FeatureData> featureField = new List<FeatureData>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Feature")]
    public List<FeatureData>  Feature {
        get {
            return this.featureField;
        }
        set {
            this.featureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiLightV1.xsd")]
public partial class FeatureData {
    
    private List<FeatureDataGroup> groupField = new List<FeatureDataGroup>();
    
    private string featureIdField;
    
    private LightType lightTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Group")]
    public List<FeatureDataGroup>  Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public LightType LightType {
        get {
            return this.lightTypeField;
        }
        set {
            this.lightTypeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class FeatureDataGroup {
    
    private object itemField;
    
    private byte numberOfLightsField;
    
    private bool hasRGBField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LightBar", typeof(FeatureDataGroupLightBar))]
    [System.Xml.Serialization.XmlElementAttribute("LightBezel", typeof(FeatureDataGroupLightBezel))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte NumberOfLights {
        get {
            return this.numberOfLightsField;
        }
        set {
            this.numberOfLightsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool HasRGB {
        get {
            return this.hasRGBField;
        }
        set {
            this.hasRGBField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class FeatureDataGroupLightBar {
    
    private List<uint> numberOfLightsField = new List<uint>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("NumberOfLights")]
    public List<uint>  NumberOfLights {
        get {
            return this.numberOfLightsField;
        }
        set {
            this.numberOfLightsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class FeatureDataGroupLightBezel {
    
    private uint lightsOnTopField;
    
    private uint lightsOnBottomField;
    
    private uint lightsOnLeftField;
    
    private uint lightsOnRightField;
    
    /// <remarks/>
    public uint LightsOnTop {
        get {
            return this.lightsOnTopField;
        }
        set {
            this.lightsOnTopField = value;
        }
    }
    
    /// <remarks/>
    public uint LightsOnBottom {
        get {
            return this.lightsOnBottomField;
        }
        set {
            this.lightsOnBottomField = value;
        }
    }
    
    /// <remarks/>
    public uint LightsOnLeft {
        get {
            return this.lightsOnLeftField;
        }
        set {
            this.lightsOnLeftField = value;
        }
    }
    
    /// <remarks/>
    public uint LightsOnRight {
        get {
            return this.lightsOnRightField;
        }
        set {
            this.lightsOnRightField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiLightV1.xsd")]
public enum LightType {
    
    /// <remarks/>
    BonusGameLights,
    
    /// <remarks/>
    LightBezel,
    
    /// <remarks/>
    LightBar,
    
    /// <remarks/>
    ReelBackLights,
    
    /// <remarks/>
    CandleLights,
    
    /// <remarks/>
    AccentLights,
    
    /// <remarks/>
    CardReaderBezel,
    
    /// <remarks/>
    TopperLightRing,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SequenceRunningRequest {
    
    private uint sequenceNumberField;
    
    private string featureIdField;
    
    private byte groupField;
    
    /// <remarks/>
    public uint SequenceNumber {
        get {
            return this.sequenceNumberField;
        }
        set {
            this.sequenceNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SequenceRunningResponse {
    
    private LightResponse lightResponseField;
    
    private bool runningField;
    
    private bool runningFieldSpecified;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool Running {
        get {
            return this.runningField;
        }
        set {
            this.runningField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool RunningSpecified {
        get {
            return this.runningFieldSpecified;
        }
        set {
            this.runningFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SetColorRequest {
    
    private object itemField;
    
    private string featureIdField;
    
    private byte groupField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Consecutive", typeof(SetColorRequestConsecutive))]
    [System.Xml.Serialization.XmlElementAttribute("Random", typeof(SetColorRequestRandom))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class SetColorRequestConsecutive {
    
    private ushort startingLightField;
    
    private string colorField;
    
    /// <remarks/>
    public ushort StartingLight {
        get {
            return this.startingLightField;
        }
        set {
            this.startingLightField = value;
        }
    }
    
    /// <remarks/>
    public string Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class SetColorRequestRandom {
    
    private List<SetColorRequestRandomLight> lightField = new List<SetColorRequestRandomLight>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Light")]
    public List<SetColorRequestRandomLight>  Light {
        get {
            return this.lightField;
        }
        set {
            this.lightField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class SetColorRequestRandomLight {
    
    private ushort lightIdField;
    
    private ushort colorField;
    
    /// <remarks/>
    public ushort LightId {
        get {
            return this.lightIdField;
        }
        set {
            this.lightIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SetColorResponse {
    
    private LightResponse lightResponseField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SetIntensityRequest {
    
    private object itemField;
    
    private string featureIdField;
    
    private byte groupField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Consecutive", typeof(SetIntensityRequestConsecutive))]
    [System.Xml.Serialization.XmlElementAttribute("Random", typeof(SetIntensityRequestRandom))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class SetIntensityRequestConsecutive {
    
    private ushort startingLightField;
    
    private string intensityField;
    
    /// <remarks/>
    public ushort StartingLight {
        get {
            return this.startingLightField;
        }
        set {
            this.startingLightField = value;
        }
    }
    
    /// <remarks/>
    public string Intensity {
        get {
            return this.intensityField;
        }
        set {
            this.intensityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class SetIntensityRequestRandom {
    
    private List<SetIntensityRequestRandomLight> lightField = new List<SetIntensityRequestRandomLight>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Light")]
    public List<SetIntensityRequestRandomLight>  Light {
        get {
            return this.lightField;
        }
        set {
            this.lightField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
public partial class SetIntensityRequestRandomLight {
    
    private ushort lightIdField;
    
    private byte intensityField;
    
    /// <remarks/>
    public ushort LightId {
        get {
            return this.lightIdField;
        }
        set {
            this.lightIdField = value;
        }
    }
    
    /// <remarks/>
    public byte Intensity {
        get {
            return this.intensityField;
        }
        set {
            this.intensityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SetIntensityResponse {
    
    private LightResponse lightResponseField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SetRequireDeviceRequest {
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class SetRequireDeviceResponse {
    
    private LightResponse lightResponseField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class StartSequenceRequest {
    
    private uint sequenceField;
    
    private byte transitionModeField;
    
    private byte[] parametersField;
    
    private string featureIdField;
    
    private byte groupField;
    
    /// <remarks/>
    public uint Sequence {
        get {
            return this.sequenceField;
        }
        set {
            this.sequenceField = value;
        }
    }
    
    /// <remarks/>
    public byte TransitionMode {
        get {
            return this.transitionModeField;
        }
        set {
            this.transitionModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] Parameters {
        get {
            return this.parametersField;
        }
        set {
            this.parametersField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class StartSequenceResponse {
    
    private LightResponse lightResponseField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class TurnOffRequest {
    
    private byte transitionModeField;
    
    private string featureIdField;
    
    private byte groupField;
    
    /// <remarks/>
    public byte TransitionMode {
        get {
            return this.transitionModeField;
        }
        set {
            this.transitionModeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiLightV1.xsd", IsNullable=false)]
public partial class TurnOffResponse {
    
    private LightResponse lightResponseField;
    
    /// <remarks/>
    public LightResponse LightResponse {
        get {
            return this.lightResponseField;
        }
        set {
            this.lightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMechanicalBellV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMechanicalBellV1.xsd", IsNullable=false)]
public partial class CsiMechanicalBell {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("MechanicalBellRingRequest", typeof(MechanicalBellRingRequest))]
    [System.Xml.Serialization.XmlElementAttribute("MechanicalBellRingResponse", typeof(MechanicalBellRingResponse))]
    [System.Xml.Serialization.XmlElementAttribute("MechanicalBellStopRequest", typeof(MechanicalBellStopRequest))]
    [System.Xml.Serialization.XmlElementAttribute("MechanicalBellStopResponse", typeof(MechanicalBellStopResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMechanicalBellV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMechanicalBellV1.xsd", IsNullable=false)]
public partial class MechanicalBellRingRequest {
    
    private uint countField;
    
    private uint ringDurationMillisecondsField;
    
    private uint pauseDurationMillisecondsField;
    
    private string featureIdField;
    
    /// <remarks/>
    public uint Count {
        get {
            return this.countField;
        }
        set {
            this.countField = value;
        }
    }
    
    /// <remarks/>
    public uint RingDurationMilliseconds {
        get {
            return this.ringDurationMillisecondsField;
        }
        set {
            this.ringDurationMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    public uint PauseDurationMilliseconds {
        get {
            return this.pauseDurationMillisecondsField;
        }
        set {
            this.pauseDurationMillisecondsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMechanicalBellV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMechanicalBellV1.xsd", IsNullable=false)]
public partial class MechanicalBellRingResponse {
    
    private MechanicalBellResponse mechanicalBellResponseField;
    
    /// <remarks/>
    public MechanicalBellResponse MechanicalBellResponse {
        get {
            return this.mechanicalBellResponseField;
        }
        set {
            this.mechanicalBellResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMechanicalBellV1.xsd")]
public partial class MechanicalBellResponse {
    
    private MechanicalBellErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public MechanicalBellResponse() {
        this.errorCodeField = MechanicalBellErrorCode.NONE;
    }
    
    /// <remarks/>
    public MechanicalBellErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMechanicalBellV1.xsd")]
public enum MechanicalBellErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    UNKNOWN_DRIVER_ERROR,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    TOO_MANY_PENDING_RING_REQUESTS,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMechanicalBellV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMechanicalBellV1.xsd", IsNullable=false)]
public partial class MechanicalBellStopRequest {
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMechanicalBellV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMechanicalBellV1.xsd", IsNullable=false)]
public partial class MechanicalBellStopResponse {
    
    private MechanicalBellResponse mechanicalBellResponseField;
    
    /// <remarks/>
    public MechanicalBellResponse MechanicalBellResponse {
        get {
            return this.mechanicalBellResponseField;
        }
        set {
            this.mechanicalBellResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMessageV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMessageV1.xsd", IsNullable=false)]
public partial class Csi {
    
    private System.Xml.XmlElement csiBodyField;
    
    private Category categoryField;
    
    private MessageType messageTypeField;
    
    private ulong messageIdField;
    
    /// <remarks/>
    public System.Xml.XmlElement CsiBody {
        get {
            return this.csiBodyField;
        }
        set {
            this.csiBodyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public Category Category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public MessageType MessageType {
        get {
            return this.messageTypeField;
        }
        set {
            this.messageTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ulong MessageId {
        get {
            return this.messageIdField;
        }
        set {
            this.messageIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMessageV1.xsd")]
public enum MessageType {
    
    /// <remarks/>
    Event,
    
    /// <remarks/>
    Request,
    
    /// <remarks/>
    Response,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class CsiMonitor {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DisableStereoscopyRequest", typeof(DisableStereoscopyRequest))]
    [System.Xml.Serialization.XmlElementAttribute("DisableStereoscopyResponse", typeof(DisableStereoscopyResponse))]
    [System.Xml.Serialization.XmlElementAttribute("EnableStereoscopyRequest", typeof(EnableStereoscopyRequest))]
    [System.Xml.Serialization.XmlElementAttribute("EnableStereoscopyResponse", typeof(EnableStereoscopyResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigurationRequest", typeof(GetConfigurationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetConfigurationResponse", typeof(GetConfigurationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetCurrentColorProfileRequest", typeof(GetCurrentColorProfileRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetCurrentColorProfileResponse", typeof(GetCurrentColorProfileResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetPreferredUIDisplayRequest", typeof(GetPreferredUIDisplayRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetPreferredUIDisplayResponse", typeof(GetPreferredUIDisplayResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetStereoscopyStateRequest", typeof(GetStereoscopyStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetStereoscopyStateResponse", typeof(GetStereoscopyStateResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetColorProfileRequest", typeof(SetColorProfileRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetColorProfileResponse", typeof(SetColorProfileResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetTransmissiveSupportRequest", typeof(SetTransmissiveSupportRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetTransmissiveSupportResponse", typeof(SetTransmissiveSupportResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class DisableStereoscopyRequest {
    
    private string deviceIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class DisableStereoscopyResponse {
    
    private MonitorResponse monitorResponseField;
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class MonitorResponse {
    
    private MonitorErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public MonitorResponse() {
        this.errorCodeField = MonitorErrorCode.NONE;
    }
    
    /// <remarks/>
    public MonitorErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum MonitorErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    INVALID_MONITOR_ID,
    
    /// <remarks/>
    COLOR_PROFILE_NOT_SUPPORTED,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    OPERATION_FAILED,
    
    /// <remarks/>
    MONITOR_IS_NOT_STEREOSCOPIC,
    
    /// <remarks/>
    MONITOR_IS_NOT_TRANSMISSIVE,
    
    /// <remarks/>
    INCORRECT_ASPECT_RATIO,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class EnableStereoscopyRequest {
    
    private string deviceIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class EnableStereoscopyResponse {
    
    private MonitorResponse monitorResponseField;
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetConfigurationRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetConfigurationResponse {
    
    private MonitorResponse monitorResponseField;
    
    private DesktopRectangle desktopField;
    
    private List<Monitor> monitorConfigurationField = new List<Monitor>();
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
    
    /// <remarks/>
    public DesktopRectangle Desktop {
        get {
            return this.desktopField;
        }
        set {
            this.desktopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<Monitor>  MonitorConfiguration {
        get {
            return this.monitorConfigurationField;
        }
        set {
            this.monitorConfigurationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public partial class DesktopRectangle {
    
    private int xField;
    
    private int yField;
    
    private int wField;
    
    private int hField;
    
    /// <remarks/>
    public int x {
        get {
            return this.xField;
        }
        set {
            this.xField = value;
        }
    }
    
    /// <remarks/>
    public int y {
        get {
            return this.yField;
        }
        set {
            this.yField = value;
        }
    }
    
    /// <remarks/>
    public int w {
        get {
            return this.wField;
        }
        set {
            this.wField = value;
        }
    }
    
    /// <remarks/>
    public int h {
        get {
            return this.hField;
        }
        set {
            this.hField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public partial class Monitor {
    
    private string deviceIdField;
    
    private MonitorRole roleField;
    
    private MonitorStyle styleField;
    
    private MonitorAspect aspectField;
    
    private MonitorModel modelField;
    
    private DesktopRectangle desktopCoordinatesField;
    
    private float virtualXField;
    
    private float virtualYField;
    
    private List<LayerOffset> additionalLayersField = new List<LayerOffset>();
    
    private int colorProfileIdField;
    
    private List<ColorProfile> availableColorProfilesField = new List<ColorProfile>();
    
    private StereoscopicSettings stereoscopicSettingsField;
    
    private Gpu parentGpuField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public MonitorRole Role {
        get {
            return this.roleField;
        }
        set {
            this.roleField = value;
        }
    }
    
    /// <remarks/>
    public MonitorStyle Style {
        get {
            return this.styleField;
        }
        set {
            this.styleField = value;
        }
    }
    
    /// <remarks/>
    public MonitorAspect Aspect {
        get {
            return this.aspectField;
        }
        set {
            this.aspectField = value;
        }
    }
    
    /// <remarks/>
    public MonitorModel Model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    public DesktopRectangle DesktopCoordinates {
        get {
            return this.desktopCoordinatesField;
        }
        set {
            this.desktopCoordinatesField = value;
        }
    }
    
    /// <remarks/>
    public float VirtualX {
        get {
            return this.virtualXField;
        }
        set {
            this.virtualXField = value;
        }
    }
    
    /// <remarks/>
    public float VirtualY {
        get {
            return this.virtualYField;
        }
        set {
            this.virtualYField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<LayerOffset>  AdditionalLayers {
        get {
            return this.additionalLayersField;
        }
        set {
            this.additionalLayersField = value;
        }
    }
    
    /// <remarks/>
    public int ColorProfileId {
        get {
            return this.colorProfileIdField;
        }
        set {
            this.colorProfileIdField = value;
        }
    }
    
    /// <remarks/>
    public List<ColorProfile>  AvailableColorProfiles {
        get {
            return this.availableColorProfilesField;
        }
        set {
            this.availableColorProfilesField = value;
        }
    }
    
    /// <remarks/>
    public StereoscopicSettings StereoscopicSettings {
        get {
            return this.stereoscopicSettingsField;
        }
        set {
            this.stereoscopicSettingsField = value;
        }
    }
    
    /// <remarks/>
    public Gpu ParentGpu {
        get {
            return this.parentGpuField;
        }
        set {
            this.parentGpuField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum MonitorRole {
    
    /// <remarks/>
    Main,
    
    /// <remarks/>
    Top,
    
    /// <remarks/>
    BellyGlass,
    
    /// <remarks/>
    ButtonPanel,
    
    /// <remarks/>
    Topper,
    
    /// <remarks/>
    VideoWall,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum MonitorStyle {
    
    /// <remarks/>
    Normal,
    
    /// <remarks/>
    RoundTop,
    
    /// <remarks/>
    PureDepth,
    
    /// <remarks/>
    ExtendedTouchscreen,
    
    /// <remarks/>
    Stereoscopic,
    
    /// <remarks/>
    Transmissive,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum MonitorAspect {
    
    /// <remarks/>
    Standard,
    
    /// <remarks/>
    Widescreen,
    
    /// <remarks/>
    Ultrawide,
    
    /// <remarks/>
    Portrait,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public partial class MonitorModel {
    
    private string manufacturerField;
    
    private string modelField;
    
    private string versionField;
    
    /// <remarks/>
    public string Manufacturer {
        get {
            return this.manufacturerField;
        }
        set {
            this.manufacturerField = value;
        }
    }
    
    /// <remarks/>
    public string Model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    public string Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public partial class LayerOffset {
    
    private int offsetXField;
    
    private int offsetYField;
    
    /// <remarks/>
    public int OffsetX {
        get {
            return this.offsetXField;
        }
        set {
            this.offsetXField = value;
        }
    }
    
    /// <remarks/>
    public int OffsetY {
        get {
            return this.offsetYField;
        }
        set {
            this.offsetYField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum ColorProfile {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Custom,
    
    /// <remarks/>
    ColorMatch,
    
    /// <remarks/>
    Calibrated,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDisplayTypesV1.xsd")]
public partial class StereoscopicSettings {
    
    private StereoscopicTechnology technologyField;
    
    private StereoscopicFormat formatField;
    
    private List<StereoscopicFrame> framesField = new List<StereoscopicFrame>();
    
    private string descriptionField;
    
    public StereoscopicSettings() {
        this.technologyField = StereoscopicTechnology.UNSUPPORTED;
        this.formatField = StereoscopicFormat.SIDE_BY_SIDE_VERTICAL;
    }
    
    /// <remarks/>
    public StereoscopicTechnology Technology {
        get {
            return this.technologyField;
        }
        set {
            this.technologyField = value;
        }
    }
    
    /// <remarks/>
    public StereoscopicFormat Format {
        get {
            return this.formatField;
        }
        set {
            this.formatField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Frames")]
    public List<StereoscopicFrame>  Frames {
        get {
            return this.framesField;
        }
        set {
            this.framesField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDisplayTypesV1.xsd")]
public enum StereoscopicTechnology {
    
    /// <remarks/>
    UNSUPPORTED,
    
    /// <remarks/>
    AUTOSTEREOSCOPY,
    
    /// <remarks/>
    HOLOGRAPHY,
    
    /// <remarks/>
    VOLUMETRIC,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDisplayTypesV1.xsd")]
public enum StereoscopicFormat {
    
    /// <remarks/>
    SIDE_BY_SIDE_VERTICAL,
    
    /// <remarks/>
    SIDE_BY_SIDE_HORIZONTAL,
    
    /// <remarks/>
    FRAME_PACKING,
    
    /// <remarks/>
    INTERLACED,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDisplayTypesV1.xsd")]
public partial class StereoscopicFrame {
    
    private StereoscopicFrameType typeField;
    
    private int xField;
    
    private int yField;
    
    private int widthField;
    
    private int heightField;
    
    public StereoscopicFrame() {
        this.typeField = StereoscopicFrameType.UNUSED;
    }
    
    /// <remarks/>
    public StereoscopicFrameType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public int X {
        get {
            return this.xField;
        }
        set {
            this.xField = value;
        }
    }
    
    /// <remarks/>
    public int Y {
        get {
            return this.yField;
        }
        set {
            this.yField = value;
        }
    }
    
    /// <remarks/>
    public int Width {
        get {
            return this.widthField;
        }
        set {
            this.widthField = value;
        }
    }
    
    /// <remarks/>
    public int Height {
        get {
            return this.heightField;
        }
        set {
            this.heightField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiDisplayTypesV1.xsd")]
public enum StereoscopicFrameType {
    
    /// <remarks/>
    UNUSED,
    
    /// <remarks/>
    LEFT,
    
    /// <remarks/>
    RIGHT,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public partial class Gpu {
    
    private GpuVendor vendorField;
    
    private ulong uniqueIdentifierField;
    
    private uint vendorIdentifierField;
    
    private uint deviceIdentifierField;
    
    private uint subSystemIdentifierField;
    
    private uint revisionIdentifierField;
    
    private bool primaryAdapterField;
    
    /// <remarks/>
    public GpuVendor Vendor {
        get {
            return this.vendorField;
        }
        set {
            this.vendorField = value;
        }
    }
    
    /// <remarks/>
    public ulong UniqueIdentifier {
        get {
            return this.uniqueIdentifierField;
        }
        set {
            this.uniqueIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public uint VendorIdentifier {
        get {
            return this.vendorIdentifierField;
        }
        set {
            this.vendorIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public uint DeviceIdentifier {
        get {
            return this.deviceIdentifierField;
        }
        set {
            this.deviceIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public uint SubSystemIdentifier {
        get {
            return this.subSystemIdentifierField;
        }
        set {
            this.subSystemIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public uint RevisionIdentifier {
        get {
            return this.revisionIdentifierField;
        }
        set {
            this.revisionIdentifierField = value;
        }
    }
    
    /// <remarks/>
    public bool PrimaryAdapter {
        get {
            return this.primaryAdapterField;
        }
        set {
            this.primaryAdapterField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum GpuVendor {
    
    /// <remarks/>
    AMD,
    
    /// <remarks/>
    Intel,
    
    /// <remarks/>
    nVidia,
    
    /// <remarks/>
    Unknown,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetCurrentColorProfileRequest {
    
    private string deviceIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetCurrentColorProfileResponse {
    
    private MonitorResponse monitorResponseField;
    
    private string deviceIdField;
    
    private ColorProfile colorProfileField;
    
    private string profilePathField;
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public ColorProfile ColorProfile {
        get {
            return this.colorProfileField;
        }
        set {
            this.colorProfileField = value;
        }
    }
    
    /// <remarks/>
    public string ProfilePath {
        get {
            return this.profilePathField;
        }
        set {
            this.profilePathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetPreferredUIDisplayRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetPreferredUIDisplayResponse {
    
    private MonitorRole roleField;
    
    private MonitorResponse monitorResponseField;
    
    /// <remarks/>
    public MonitorRole Role {
        get {
            return this.roleField;
        }
        set {
            this.roleField = value;
        }
    }
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetStereoscopyStateRequest {
    
    private string deviceIdField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class GetStereoscopyStateResponse {
    
    private string deviceIdField;
    
    private StereoscopyState stateField;
    
    private MonitorResponse monitorResponseField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public StereoscopyState State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum StereoscopyState {
    
    /// <remarks/>
    DISABLED,
    
    /// <remarks/>
    ENABLED,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class SetColorProfileRequest {
    
    private string deviceIdField;
    
    private ColorProfile colorProfileField;
    
    private string profilePathField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public ColorProfile ColorProfile {
        get {
            return this.colorProfileField;
        }
        set {
            this.colorProfileField = value;
        }
    }
    
    /// <remarks/>
    public string ProfilePath {
        get {
            return this.profilePathField;
        }
        set {
            this.profilePathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class SetColorProfileResponse {
    
    private MonitorResponse monitorResponseField;
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class SetTransmissiveSupportRequest {
    
    private string deviceIdField;
    
    private TransmissiveSupport supportField;
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public TransmissiveSupport Support {
        get {
            return this.supportField;
        }
        set {
            this.supportField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiMonitorV1.xsd")]
public enum TransmissiveSupport {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Widescreen,
    
    /// <remarks/>
    Portrait,
    
    /// <remarks/>
    WidescreenAndPortrait,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class SetTransmissiveSupportResponse {
    
    private MonitorResponse monitorResponseField;
    
    /// <remarks/>
    public MonitorResponse MonitorResponse {
        get {
            return this.monitorResponseField;
        }
        set {
            this.monitorResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiMonitorV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiMonitorV1.xsd", IsNullable=false)]
public partial class MonitorConfiguration {
    
    private List<Monitor> monitorField = new List<Monitor>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Monitor")]
    public List<Monitor>  Monitor {
        get {
            return this.monitorField;
        }
        set {
            this.monitorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class CsiPortal {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ConfigureVisibilityGroupRequest", typeof(ConfigureVisibilityGroupRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ConfigureVisibilityGroupResponse", typeof(ConfigureVisibilityGroupResponse))]
    [System.Xml.Serialization.XmlElementAttribute("CreatePortalRequest", typeof(CreatePortalRequest))]
    [System.Xml.Serialization.XmlElementAttribute("CreatePortalResponse", typeof(CreatePortalResponse))]
    [System.Xml.Serialization.XmlElementAttribute("DestroyPortalRequest", typeof(DestroyPortalRequest))]
    [System.Xml.Serialization.XmlElementAttribute("DestroyPortalResponse", typeof(DestroyPortalResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ExecuteContentRequest", typeof(ExecuteContentRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ExecuteContentResponse", typeof(ExecuteContentResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetContentStateRequest", typeof(GetContentStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetContentStateResponse", typeof(GetContentStateResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetEMDIConfigRequest", typeof(GetEMDIConfigRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetEMDIConfigResponse", typeof(GetEMDIConfigResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetPortalIdByNameRequest", typeof(GetPortalIdByNameRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetPortalIdByNameResponse", typeof(GetPortalIdByNameResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetVisibilityStateRequest", typeof(GetVisibilityStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetVisibilityStateResponse", typeof(GetVisibilityStateResponse))]
    [System.Xml.Serialization.XmlElementAttribute("HidePortalRequest", typeof(HidePortalRequest))]
    [System.Xml.Serialization.XmlElementAttribute("HidePortalResponse", typeof(HidePortalResponse))]
    [System.Xml.Serialization.XmlElementAttribute("LoadContentRequest", typeof(LoadContentRequest))]
    [System.Xml.Serialization.XmlElementAttribute("LoadContentResponse", typeof(LoadContentResponse))]
    [System.Xml.Serialization.XmlElementAttribute("PortalActionNotifyEvent", typeof(PortalActionNotifyEvent))]
    [System.Xml.Serialization.XmlElementAttribute("PortalInfoRequest", typeof(PortalInfoRequest))]
    [System.Xml.Serialization.XmlElementAttribute("PortalInfoResponse", typeof(PortalInfoResponse))]
    [System.Xml.Serialization.XmlElementAttribute("PortalListRequest", typeof(PortalListRequest))]
    [System.Xml.Serialization.XmlElementAttribute("PortalListResponse", typeof(PortalListResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ReleaseContentRequest", typeof(ReleaseContentRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ReleaseContentResponse", typeof(ReleaseContentResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ShowPortalRequest", typeof(ShowPortalRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ShowPortalResponse", typeof(ShowPortalResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ConfigureVisibilityGroupRequest {
    
    private string portalClassField;
    
    private string visibilityGroupNameField;
    
    private List<string> portalIdsField = new List<string>();
    
    /// <remarks/>
    public string PortalClass {
        get {
            return this.portalClassField;
        }
        set {
            this.portalClassField = value;
        }
    }
    
    /// <remarks/>
    public string VisibilityGroupName {
        get {
            return this.visibilityGroupNameField;
        }
        set {
            this.visibilityGroupNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PortalIds")]
    public List<string>  PortalIds {
        get {
            return this.portalIdsField;
        }
        set {
            this.portalIdsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ConfigureVisibilityGroupResponse {
    
    private PortalResponse portalResponseField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class PortalResponse {
    
    private PortalErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    /// <remarks/>
    public PortalErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public partial class PortalErrorCode {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ConfigureVisibilityGroupErrorCode", typeof(ConfigureVisibilityGroupErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("CreatePortalErrorCode", typeof(CreatePortalErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("DestroyPortalErrorCode", typeof(DestroyPortalErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("ExecuteContentErrorCode", typeof(ExecuteContentErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("GetContentStateErrorCode", typeof(GetContentStateErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("GetEMDIConfigErrorCode", typeof(GetEMDIConfigErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("GetPortalIdByNameErrorCode", typeof(GetPortalIdByNameErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("GetVisibilityStateErrorCode", typeof(GetVisibilityStateErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("HidePortalErrorCode", typeof(HidePortalErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("LoadContentErrorCode", typeof(LoadContentErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("PortalInfoErrorCode", typeof(PortalInfoErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("PortalListErrorCode", typeof(PortalListErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("ReleaseContentErrorCode", typeof(ReleaseContentErrorCode))]
    [System.Xml.Serialization.XmlElementAttribute("ShowPortalErrorCode", typeof(ShowPortalErrorCode))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum ConfigureVisibilityGroupErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
    
    /// <remarks/>
    TOO_MANY_PORTALS,
    
    /// <remarks/>
    INVALID_GROUP_NAME,
    
    /// <remarks/>
    PORTALS_NOT_ALL_SAME_CLASS,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum CreatePortalErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    PORTAL_EXISTS,
    
    /// <remarks/>
    PORTAL_OUT_OF_BOUNDS,
    
    /// <remarks/>
    INVALID_PRIORITY,
    
    /// <remarks/>
    INVALID_MONITOR,
    
    /// <remarks/>
    INVALID_PORTAL_NAME,
    
    /// <remarks/>
    INVALID_PORTAL_CLASS,
    
    /// <remarks/>
    INVALID_DEFAULT_EMDI_TOKEN,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum DestroyPortalErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
    
    /// <remarks/>
    CANNOT_DESTROY_PORTAL,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum ExecuteContentErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
    
    /// <remarks/>
    CONTENT_NOT_LOADED,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum GetContentStateErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum GetEMDIConfigErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum GetPortalIdByNameErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_NAME,
    
    /// <remarks/>
    INVALID_PORTAL_CLASS,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum GetVisibilityStateErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum HidePortalErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
    
    /// <remarks/>
    CANNOT_HIDE_PORTAL,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum LoadContentErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
    
    /// <remarks/>
    MALFORMED_URL,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum PortalInfoErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum PortalListErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_CLASS,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum ReleaseContentErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
    
    /// <remarks/>
    CONTENT_NOT_LOADED,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public enum ShowPortalErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    OTHER_ERROR,
    
    /// <remarks/>
    INVALID_PORTAL_ID,
    
    /// <remarks/>
    CANNOT_SHOW_PORTAL,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class CreatePortalRequest {
    
    private PortalInfo portalConfigField;
    
    private string portalClassField;
    
    /// <remarks/>
    public PortalInfo PortalConfig {
        get {
            return this.portalConfigField;
        }
        set {
            this.portalConfigField = value;
        }
    }
    
    /// <remarks/>
    public string PortalClass {
        get {
            return this.portalClassField;
        }
        set {
            this.portalClassField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public partial class PortalInfo {
    
    private string portalIdField;
    
    private string nameField;
    
    private uint priorityField;
    
    private PortalScreen screenField;
    
    private PortalType typeField;
    
    private PortalPosition positionField;
    
    private PortalBounds boundsField;
    
    private PortalSize textureSizeField;
    
    private PortalExtents extentsField;
    
    private long defaultEMDIAccessTokenField;
    
    private GroupName soundGroupField;
    
    private bool touchSupportedField;
    
    private bool audioSupportedField;
    
    private uint configGroupField;
    
    private int mediaDisplayIdField;
    
    private bool mediaDisplayIdFieldSpecified;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
    
    /// <remarks/>
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public uint Priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    public PortalScreen Screen {
        get {
            return this.screenField;
        }
        set {
            this.screenField = value;
        }
    }
    
    /// <remarks/>
    public PortalType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public PortalPosition Position {
        get {
            return this.positionField;
        }
        set {
            this.positionField = value;
        }
    }
    
    /// <remarks/>
    public PortalBounds Bounds {
        get {
            return this.boundsField;
        }
        set {
            this.boundsField = value;
        }
    }
    
    /// <remarks/>
    public PortalSize TextureSize {
        get {
            return this.textureSizeField;
        }
        set {
            this.textureSizeField = value;
        }
    }
    
    /// <remarks/>
    public PortalExtents Extents {
        get {
            return this.extentsField;
        }
        set {
            this.extentsField = value;
        }
    }
    
    /// <remarks/>
    public long DefaultEMDIAccessToken {
        get {
            return this.defaultEMDIAccessTokenField;
        }
        set {
            this.defaultEMDIAccessTokenField = value;
        }
    }
    
    /// <remarks/>
    public GroupName SoundGroup {
        get {
            return this.soundGroupField;
        }
        set {
            this.soundGroupField = value;
        }
    }
    
    /// <remarks/>
    public bool TouchSupported {
        get {
            return this.touchSupportedField;
        }
        set {
            this.touchSupportedField = value;
        }
    }
    
    /// <remarks/>
    public bool AudioSupported {
        get {
            return this.audioSupportedField;
        }
        set {
            this.audioSupportedField = value;
        }
    }
    
    /// <remarks/>
    public uint ConfigGroup {
        get {
            return this.configGroupField;
        }
        set {
            this.configGroupField = value;
        }
    }
    
    /// <remarks/>
    public int MediaDisplayId {
        get {
            return this.mediaDisplayIdField;
        }
        set {
            this.mediaDisplayIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MediaDisplayIdSpecified {
        get {
            return this.mediaDisplayIdFieldSpecified;
        }
        set {
            this.mediaDisplayIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public enum PortalScreen {
    
    /// <remarks/>
    INVALID_SCREEN,
    
    /// <remarks/>
    PRIMARY,
    
    /// <remarks/>
    SECONDARY,
    
    /// <remarks/>
    TOPPER,
    
    /// <remarks/>
    DPP,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public enum PortalType {
    
    /// <remarks/>
    INVALID_TYPE,
    
    /// <remarks/>
    SCALE,
    
    /// <remarks/>
    OVERLAY,
    
    /// <remarks/>
    MODAL,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public enum PortalPosition {
    
    /// <remarks/>
    INVALID_PORTAL_POSITION,
    
    /// <remarks/>
    LEFT,
    
    /// <remarks/>
    RIGHT,
    
    /// <remarks/>
    BOTTOM,
    
    /// <remarks/>
    TOP,
    
    /// <remarks/>
    FLOAT,
    
    /// <remarks/>
    FULL,
    
    /// <remarks/>
    CENTER,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public partial class PortalBounds {
    
    private PortalLocation locationField;
    
    private PortalSize sizeField;
    
    /// <remarks/>
    public PortalLocation Location {
        get {
            return this.locationField;
        }
        set {
            this.locationField = value;
        }
    }
    
    /// <remarks/>
    public PortalSize Size {
        get {
            return this.sizeField;
        }
        set {
            this.sizeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public partial class PortalLocation {
    
    private ushort xField;
    
    private ushort yField;
    
    /// <remarks/>
    public ushort X {
        get {
            return this.xField;
        }
        set {
            this.xField = value;
        }
    }
    
    /// <remarks/>
    public ushort Y {
        get {
            return this.yField;
        }
        set {
            this.yField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public partial class PortalSize {
    
    private ushort widthField;
    
    private ushort heightField;
    
    /// <remarks/>
    public ushort Width {
        get {
            return this.widthField;
        }
        set {
            this.widthField = value;
        }
    }
    
    /// <remarks/>
    public ushort Height {
        get {
            return this.heightField;
        }
        set {
            this.heightField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public partial class PortalExtents {
    
    private PortalSize minField;
    
    private PortalSize maxField;
    
    /// <remarks/>
    public PortalSize Min {
        get {
            return this.minField;
        }
        set {
            this.minField = value;
        }
    }
    
    /// <remarks/>
    public PortalSize Max {
        get {
            return this.maxField;
        }
        set {
            this.maxField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundGroupsV1.xsd")]
public enum GroupName {
    
    /// <remarks/>
    ALARMS,
    
    /// <remarks/>
    TILTS,
    
    /// <remarks/>
    SYSTEM,
    
    /// <remarks/>
    VOCAL,
    
    /// <remarks/>
    FEEDBACK,
    
    /// <remarks/>
    GAME_SPECIAL,
    
    /// <remarks/>
    GAME_SOUNDS,
    
    /// <remarks/>
    ATTRACTS,
    
    /// <remarks/>
    GAME_PRESET_VOLUME_SOUNDS,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class CreatePortalResponse {
    
    private PortalResponse portalResponseField;
    
    private string portalIdField;
    
    private long defaultEMDIAccessTokenField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
    
    /// <remarks/>
    public long DefaultEMDIAccessToken {
        get {
            return this.defaultEMDIAccessTokenField;
        }
        set {
            this.defaultEMDIAccessTokenField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class DestroyPortalRequest {
    
    private string portalIdField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class DestroyPortalResponse {
    
    private PortalResponse portalResponseField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ExecuteContentRequest {
    
    private string portalIdField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ExecuteContentResponse {
    
    private PortalResponse portalResponseField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetContentStateRequest {
    
    private string portalIdField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetContentStateResponse {
    
    private PortalResponse portalResponseField;
    
    private PortalContentState contentStateField;
    
    public GetContentStateResponse() {
        this.contentStateField = PortalContentState.INVALID_PORTAL_CONTENT_STATE;
    }
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
    
    /// <remarks/>
    public PortalContentState ContentState {
        get {
            return this.contentStateField;
        }
        set {
            this.contentStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public enum PortalContentState {
    
    /// <remarks/>
    INVALID_PORTAL_CONTENT_STATE,
    
    /// <remarks/>
    RELEASED,
    
    /// <remarks/>
    LOADED,
    
    /// <remarks/>
    PENDING,
    
    /// <remarks/>
    EXECUTING,
    
    /// <remarks/>
    ERROR,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetEMDIConfigRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetEMDIConfigResponse {
    
    private PortalResponse portalResponseField;
    
    private ushort xMLSocketEMDIPortField;
    
    private ushort websocketEMDIPortField;
    
    public GetEMDIConfigResponse() {
        this.xMLSocketEMDIPortField = ((ushort)(0));
        this.websocketEMDIPortField = ((ushort)(0));
    }
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
    
    /// <remarks/>
    public ushort XMLSocketEMDIPort {
        get {
            return this.xMLSocketEMDIPortField;
        }
        set {
            this.xMLSocketEMDIPortField = value;
        }
    }
    
    /// <remarks/>
    public ushort WebsocketEMDIPort {
        get {
            return this.websocketEMDIPortField;
        }
        set {
            this.websocketEMDIPortField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetPortalIdByNameRequest {
    
    private string portalClassField;
    
    private string portalNameField;
    
    /// <remarks/>
    public string PortalClass {
        get {
            return this.portalClassField;
        }
        set {
            this.portalClassField = value;
        }
    }
    
    /// <remarks/>
    public string PortalName {
        get {
            return this.portalNameField;
        }
        set {
            this.portalNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetPortalIdByNameResponse {
    
    private PortalResponse portalResponseField;
    
    private string portalIdField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetVisibilityStateRequest {
    
    private string portalIdField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class GetVisibilityStateResponse {
    
    private PortalResponse portalResponseField;
    
    private PortalVisibilityState visibilityStateField;
    
    public GetVisibilityStateResponse() {
        this.visibilityStateField = PortalVisibilityState.INVALID_PORTAL_VISIBILITY_STATE;
    }
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
    
    /// <remarks/>
    public PortalVisibilityState VisibilityState {
        get {
            return this.visibilityStateField;
        }
        set {
            this.visibilityStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public enum PortalVisibilityState {
    
    /// <remarks/>
    INVALID_PORTAL_VISIBILITY_STATE,
    
    /// <remarks/>
    HIDDEN,
    
    /// <remarks/>
    SHOWN,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class HidePortalRequest {
    
    private string portalIdField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class HidePortalResponse {
    
    private PortalResponse portalResponseField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class LoadContentRequest {
    
    private string portalIdField;
    
    private string contentURLField;
    
    private string requestorNameField;
    
    private bool startAfterLoadField;
    
    private long eMDIAccessTokenField;
    
    private bool authorizeDefaultEMDICapabilitiesField;
    
    private long portalContentTokenField;
    
    private long portalContentIdField;
    
    private bool portalContentIdFieldSpecified;
    
    public LoadContentRequest() {
        this.portalContentTokenField = ((long)(0));
    }
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
    
    /// <remarks/>
    public string ContentURL {
        get {
            return this.contentURLField;
        }
        set {
            this.contentURLField = value;
        }
    }
    
    /// <remarks/>
    public string RequestorName {
        get {
            return this.requestorNameField;
        }
        set {
            this.requestorNameField = value;
        }
    }
    
    /// <remarks/>
    public bool StartAfterLoad {
        get {
            return this.startAfterLoadField;
        }
        set {
            this.startAfterLoadField = value;
        }
    }
    
    /// <remarks/>
    public long EMDIAccessToken {
        get {
            return this.eMDIAccessTokenField;
        }
        set {
            this.eMDIAccessTokenField = value;
        }
    }
    
    /// <remarks/>
    public bool AuthorizeDefaultEMDICapabilities {
        get {
            return this.authorizeDefaultEMDICapabilitiesField;
        }
        set {
            this.authorizeDefaultEMDICapabilitiesField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(typeof(long), "0")]
    public long PortalContentToken {
        get {
            return this.portalContentTokenField;
        }
        set {
            this.portalContentTokenField = value;
        }
    }
    
    /// <remarks/>
    public long PortalContentId {
        get {
            return this.portalContentIdField;
        }
        set {
            this.portalContentIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PortalContentIdSpecified {
        get {
            return this.portalContentIdFieldSpecified;
        }
        set {
            this.portalContentIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class LoadContentResponse {
    
    private PortalResponse portalResponseField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class PortalActionNotifyEvent {
    
    private string portalIdField;
    
    private PortalAction actionField;
    
    private PortalActionResult resultField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
    
    /// <remarks/>
    public PortalAction Action {
        get {
            return this.actionField;
        }
        set {
            this.actionField = value;
        }
    }
    
    /// <remarks/>
    public PortalActionResult Result {
        get {
            return this.resultField;
        }
        set {
            this.resultField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public enum PortalAction {
    
    /// <remarks/>
    INVALID_PORTAL_ACTION,
    
    /// <remarks/>
    PORTAL_CREATED,
    
    /// <remarks/>
    PORTAL_DESTROYED,
    
    /// <remarks/>
    LOAD_CONTENT,
    
    /// <remarks/>
    EXECUTE_CONTENT,
    
    /// <remarks/>
    RELEASE_CONTENT,
    
    /// <remarks/>
    CONTENT_ERROR,
    
    /// <remarks/>
    SHOW_PORTAL,
    
    /// <remarks/>
    HIDE_PORTAL,
    
    /// <remarks/>
    EMDI_SOCKET_OPENED,
    
    /// <remarks/>
    EMDI_SOCKET_CLOSED,
    
    /// <remarks/>
    EMDI_SOCKET_ERROR,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public enum PortalActionResult {
    
    /// <remarks/>
    INVALID_PORTAL_ACTION_RESULT,
    
    /// <remarks/>
    SUCCESS,
    
    /// <remarks/>
    FAILED,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class PortalInfoRequest {
    
    private string portalIdField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class PortalInfoResponse {
    
    private PortalResponse portalResponseField;
    
    private PortalInfo portalInfoField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
    
    /// <remarks/>
    public PortalInfo PortalInfo {
        get {
            return this.portalInfoField;
        }
        set {
            this.portalInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class PortalListRequest {
    
    private string portalClassField;
    
    /// <remarks/>
    public string PortalClass {
        get {
            return this.portalClassField;
        }
        set {
            this.portalClassField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class PortalListResponse {
    
    private PortalResponse portalResponseField;
    
    private PortalIdList portalIdsField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
    
    /// <remarks/>
    public PortalIdList PortalIds {
        get {
            return this.portalIdsField;
        }
        set {
            this.portalIdsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPortalV1.xsd")]
public partial class PortalIdList {
    
    private List<string> portalIdField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PortalId")]
    public List<string>  PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ReleaseContentRequest {
    
    private string portalIdField;
    
    private string requestorNameField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
    
    /// <remarks/>
    public string RequestorName {
        get {
            return this.requestorNameField;
        }
        set {
            this.requestorNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ReleaseContentResponse {
    
    private PortalResponse portalResponseField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ShowPortalRequest {
    
    private string portalIdField;
    
    /// <remarks/>
    public string PortalId {
        get {
            return this.portalIdField;
        }
        set {
            this.portalIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPortalV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPortalV1.xsd", IsNullable=false)]
public partial class ShowPortalResponse {
    
    private PortalResponse portalResponseField;
    
    /// <remarks/>
    public PortalResponse PortalResponse {
        get {
            return this.portalResponseField;
        }
        set {
            this.portalResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPresentationSpeedV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPresentationSpeedV1.xsd", IsNullable=false)]
public partial class CsiPresentationSpeed {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetPresentationSpeedRequest", typeof(GetPresentationSpeedRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetPresentationSpeedResponse", typeof(GetPresentationSpeedResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetPresentationSpeedRequest", typeof(SetPresentationSpeedRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetPresentationSpeedResponse", typeof(SetPresentationSpeedResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPresentationSpeedV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPresentationSpeedV1.xsd", IsNullable=false)]
public partial class GetPresentationSpeedRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPresentationSpeedV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPresentationSpeedV1.xsd", IsNullable=false)]
public partial class GetPresentationSpeedResponse {
    
    private PresentationSpeedResponse presentationSpeedResponseField;
    
    private uint defaultPresentationSpeedField;
    
    private bool defaultPresentationSpeedFieldSpecified;
    
    private uint presentationSpeedField;
    
    private bool presentationSpeedFieldSpecified;
    
    /// <remarks/>
    public PresentationSpeedResponse PresentationSpeedResponse {
        get {
            return this.presentationSpeedResponseField;
        }
        set {
            this.presentationSpeedResponseField = value;
        }
    }
    
    /// <remarks/>
    public uint DefaultPresentationSpeed {
        get {
            return this.defaultPresentationSpeedField;
        }
        set {
            this.defaultPresentationSpeedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultPresentationSpeedSpecified {
        get {
            return this.defaultPresentationSpeedFieldSpecified;
        }
        set {
            this.defaultPresentationSpeedFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public uint PresentationSpeed {
        get {
            return this.presentationSpeedField;
        }
        set {
            this.presentationSpeedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PresentationSpeedSpecified {
        get {
            return this.presentationSpeedFieldSpecified;
        }
        set {
            this.presentationSpeedFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPresentationSpeedV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPresentationSpeedV1.xsd", IsNullable=false)]
public partial class PresentationSpeedResponse {
    
    private PresentationSpeedErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public PresentationSpeedResponse() {
        this.errorCodeField = PresentationSpeedErrorCode.NONE;
    }
    
    /// <remarks/>
    public PresentationSpeedErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiPresentationSpeedV1.xsd")]
public enum PresentationSpeedErrorCode {
    
    /// <remarks/>
    NONE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPresentationSpeedV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPresentationSpeedV1.xsd", IsNullable=false)]
public partial class SetPresentationSpeedRequest {
    
    private uint presentationSpeedField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint PresentationSpeed {
        get {
            return this.presentationSpeedField;
        }
        set {
            this.presentationSpeedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiPresentationSpeedV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiPresentationSpeedV1.xsd", IsNullable=false)]
public partial class SetPresentationSpeedResponse {
    
    private PresentationSpeedResponse presentationSpeedResponseField;
    
    /// <remarks/>
    public PresentationSpeedResponse PresentationSpeedResponse {
        get {
            return this.presentationSpeedResponseField;
        }
        set {
            this.presentationSpeedResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class CsiReadiness {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GetReadyStateRequest", typeof(GetReadyStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetReadyStateResponse", typeof(GetReadyStateResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ReadyStateNotificationEvent", typeof(ReadyStateNotificationEvent))]
    [System.Xml.Serialization.XmlElementAttribute("ReadyStateSubscriptionRequest", typeof(ReadyStateSubscriptionRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ReadyStateSubscriptionResponse", typeof(ReadyStateSubscriptionResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetReadyStateRequest", typeof(SetReadyStateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetReadyStateResponse", typeof(SetReadyStateResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class GetReadyStateRequest {
    
    private Priority clientPriorityField;
    
    private string clientIdentifierField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public Priority ClientPriority {
        get {
            return this.clientPriorityField;
        }
        set {
            this.clientPriorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ClientIdentifier {
        get {
            return this.clientIdentifierField;
        }
        set {
            this.clientIdentifierField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTypesV1.xsd")]
public enum Priority {
    
    /// <remarks/>
    DebugDisplay,
    
    /// <remarks/>
    SystemPrompt,
    
    /// <remarks/>
    Doors,
    
    /// <remarks/>
    TicketPrompt,
    
    /// <remarks/>
    Tilt,
    
    /// <remarks/>
    BillInAd,
    
    /// <remarks/>
    Portal,
    
    /// <remarks/>
    AttendantMenu,
    
    /// <remarks/>
    FeaturePortal,
    
    /// <remarks/>
    PlayerPrompt,
    
    /// <remarks/>
    SyncSation,
    
    /// <remarks/>
    SystemExtension,
    
    /// <remarks/>
    MainMenu,
    
    /// <remarks/>
    GamePortal,
    
    /// <remarks/>
    Game,
    
    /// <remarks/>
    GlassPortal,
    
    /// <remarks/>
    SystemTopGlass,
    
    /// <remarks/>
    DeviceEmulator,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class GetReadyStateResponse {
    
    private ReadinessResponse readinessResponseField;
    
    private List<ReadyStateResponse> readyStateResponseField = new List<ReadyStateResponse>();
    
    /// <remarks/>
    public ReadinessResponse ReadinessResponse {
        get {
            return this.readinessResponseField;
        }
        set {
            this.readinessResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReadyStateResponse")]
    public List<ReadyStateResponse>  ReadyStateResponse {
        get {
            return this.readyStateResponseField;
        }
        set {
            this.readyStateResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class ReadinessResponse {
    
    private ReadinessErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public ReadinessResponse() {
        this.errorCodeField = ReadinessErrorCode.NONE;
    }
    
    /// <remarks/>
    public ReadinessErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReadinessV1.xsd")]
public enum ReadinessErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    UNKNOWN_CLIENT_IDENTIFIER,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReadinessV1.xsd")]
public partial class ReadyStateResponse {
    
    private Priority clientPriorityField;
    
    private string clientIdentifierField;
    
    private ReadyState readyStateField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public Priority ClientPriority {
        get {
            return this.clientPriorityField;
        }
        set {
            this.clientPriorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string ClientIdentifier {
        get {
            return this.clientIdentifierField;
        }
        set {
            this.clientIdentifierField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ReadyState ReadyState {
        get {
            return this.readyStateField;
        }
        set {
            this.readyStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReadinessV1.xsd")]
public enum ReadyState {
    
    /// <remarks/>
    NotReadyForDisplay,
    
    /// <remarks/>
    ReadyForDisplay,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class ReadyStateNotificationEvent {
    
    private ReadyStateResponse readyStateResponseField;
    
    /// <remarks/>
    public ReadyStateResponse ReadyStateResponse {
        get {
            return this.readyStateResponseField;
        }
        set {
            this.readyStateResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class ReadyStateSubscriptionRequest {
    
    private Priority clientPriorityField;
    
    private SubscriptionStatus subscriptionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public Priority ClientPriority {
        get {
            return this.clientPriorityField;
        }
        set {
            this.clientPriorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public SubscriptionStatus Subscription {
        get {
            return this.subscriptionField;
        }
        set {
            this.subscriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReadinessV1.xsd")]
public enum SubscriptionStatus {
    
    /// <remarks/>
    Unsubscribe,
    
    /// <remarks/>
    Subscribe,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class ReadyStateSubscriptionResponse {
    
    private ReadinessResponse readinessResponseField;
    
    /// <remarks/>
    public ReadinessResponse ReadinessResponse {
        get {
            return this.readinessResponseField;
        }
        set {
            this.readinessResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class SetReadyStateRequest {
    
    private ReadyState readyStateField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ReadyState ReadyState {
        get {
            return this.readyStateField;
        }
        set {
            this.readyStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReadinessV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReadinessV1.xsd", IsNullable=false)]
public partial class SetReadyStateResponse {
    
    private ReadinessResponse readinessResponseField;
    
    /// <remarks/>
    public ReadinessResponse ReadinessResponse {
        get {
            return this.readinessResponseField;
        }
        set {
            this.readinessResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class CsiReel {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ApplyAttributesRequest", typeof(ApplyAttributesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ApplyAttributesResponse", typeof(ApplyAttributesResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ChangeSpeedRequest", typeof(ChangeSpeedRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ChangeSpeedResponse", typeof(MulipleReelResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ClearStatusRegistrationRequest", typeof(ClearStatusRegistrationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ClearStatusRegistrationResponse", typeof(ClearStatusRegistrationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetReelDevicesRequest", typeof(GetReelDevicesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetReelDevicesResponse", typeof(GetReelDevicesResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ReelStatusChangedEvent", typeof(ReelStatusEvent))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterStatusRequest", typeof(RegisterStatusRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterStatusResponse", typeof(RegisterStatusResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetRecoveryRequest", typeof(SetRecoveryRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetRecoveryResponse", typeof(SetRecoveryResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetRequireDeviceRequest", typeof(SetRequireDeviceRequest1))]
    [System.Xml.Serialization.XmlElementAttribute("SetRequireDeviceResponse", typeof(SetRequireDeviceResponse1))]
    [System.Xml.Serialization.XmlElementAttribute("SetStopOrderRequest", typeof(SetStopOrderRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetStopOrderResponse", typeof(SetStopOrderResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetSynchronousStopRequest", typeof(SetSynchronousStopRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetSynchronousStopResponse", typeof(SetSynchronousStopResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetToPositionRequest", typeof(SetToPositionRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetToPositionResponse", typeof(SetToPositionResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SpinRequest", typeof(SpinRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SpinResponse", typeof(SpinResponse))]
    [System.Xml.Serialization.XmlElementAttribute("StopRequest", typeof(StopRequest))]
    [System.Xml.Serialization.XmlElementAttribute("StopResponse", typeof(StopResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SynchronousSpinRequest", typeof(SynchronousSpinRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SynchronousSpinResponse", typeof(SynchronousSpinResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SynchronousStopRequest", typeof(SynchronousStopRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SynchronousStopResponse", typeof(SynchronousStopResponse))]
    [System.Xml.Serialization.XmlElementAttribute("UnregisterStatusRequest", typeof(UnregisterStatusRequest))]
    [System.Xml.Serialization.XmlElementAttribute("UnregisterStatusResponse", typeof(UnregisterStatusResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class ApplyAttributesRequest {
    
    private List<ApplyAttributesRequestReel> reelsField = new List<ApplyAttributesRequestReel>();
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<ApplyAttributesRequestReel>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class ApplyAttributesRequestReel {
    
    private byte numberField;
    
    private bool cockField;
    
    private bool cockFieldSpecified;
    
    private bool bounceField;
    
    private bool bounceFieldSpecified;
    
    private Shake shakeField;
    
    private bool shakeFieldSpecified;
    
    private Hover hoverField;
    
    private bool hoverFieldSpecified;
    
    private HoverLimits hoverLimitsField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public bool Cock {
        get {
            return this.cockField;
        }
        set {
            this.cockField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CockSpecified {
        get {
            return this.cockFieldSpecified;
        }
        set {
            this.cockFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool Bounce {
        get {
            return this.bounceField;
        }
        set {
            this.bounceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BounceSpecified {
        get {
            return this.bounceFieldSpecified;
        }
        set {
            this.bounceFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Shake Shake {
        get {
            return this.shakeField;
        }
        set {
            this.shakeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShakeSpecified {
        get {
            return this.shakeFieldSpecified;
        }
        set {
            this.shakeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Hover Hover {
        get {
            return this.hoverField;
        }
        set {
            this.hoverField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HoverSpecified {
        get {
            return this.hoverFieldSpecified;
        }
        set {
            this.hoverFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public HoverLimits HoverLimits {
        get {
            return this.hoverLimitsField;
        }
        set {
            this.hoverLimitsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public enum Shake {
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Low,
    
    /// <remarks/>
    Medium,
    
    /// <remarks/>
    High,
    
    /// <remarks/>
    Max,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public enum Hover {
    
    /// <remarks/>
    Off,
    
    /// <remarks/>
    Custom,
    
    /// <remarks/>
    Top,
    
    /// <remarks/>
    Center,
    
    /// <remarks/>
    Bottom,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public partial class HoverLimits {
    
    private byte lowerLimitField;
    
    private byte upperLimitField;
    
    /// <remarks/>
    public byte LowerLimit {
        get {
            return this.lowerLimitField;
        }
        set {
            this.lowerLimitField = value;
        }
    }
    
    /// <remarks/>
    public byte UpperLimit {
        get {
            return this.upperLimitField;
        }
        set {
            this.upperLimitField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class ApplyAttributesResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class ReelResponse {
    
    private ReelErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public ReelResponse() {
        this.errorCodeField = ReelErrorCode.NONE;
    }
    
    /// <remarks/>
    public ReelErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public enum ReelErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    INVALID_FEATURE_ID,
    
    /// <remarks/>
    INVALID_REEL,
    
    /// <remarks/>
    DUPLICATE_REEL,
    
    /// <remarks/>
    SET_BOUNCE_FAILED,
    
    /// <remarks/>
    SET_COCK_FAILED,
    
    /// <remarks/>
    SET_DECELERATION_FAILED,
    
    /// <remarks/>
    SET_DIRECTION_FAILED,
    
    /// <remarks/>
    SET_DURATION_FAILED,
    
    /// <remarks/>
    SET_RECOVERY_FAILED,
    
    /// <remarks/>
    SET_SHAKE_FAILED,
    
    /// <remarks/>
    SET_SPEED_FAILED,
    
    /// <remarks/>
    SET_STOP_FAILED,
    
    /// <remarks/>
    START_SPIN_FAILED,
    
    /// <remarks/>
    STOP_SPIN_FAILED,
    
    /// <remarks/>
    SYNCH_SPIN_FAILED,
    
    /// <remarks/>
    UNKNOWN_DRIVER_ERROR,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    SET_HOVER_FAILED,
    
    /// <remarks/>
    REEL_DEVICE_TILTED,
    
    /// <remarks/>
    APPLY_ATTRIBUTES_FAILED,
    
    /// <remarks/>
    SET_TO_POSITION_FAILED,
    
    /// <remarks/>
    CHANGE_SPEED_FAILED,
    
    /// <remarks/>
    REQUEST_NOT_SUPPORTED_BY_DEVICE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class ChangeSpeedRequest {
    
    private List<ChangeReelSpeed> reelsField = new List<ChangeReelSpeed>();
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<ChangeReelSpeed>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public partial class ChangeReelSpeed {
    
    private byte numberField;
    
    private byte speedIndexField;
    
    private ushort periodField;
    
    private Direction directionField;
    
    private bool immediateField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public byte SpeedIndex {
        get {
            return this.speedIndexField;
        }
        set {
            this.speedIndexField = value;
        }
    }
    
    /// <remarks/>
    public ushort Period {
        get {
            return this.periodField;
        }
        set {
            this.periodField = value;
        }
    }
    
    /// <remarks/>
    public Direction Direction {
        get {
            return this.directionField;
        }
        set {
            this.directionField = value;
        }
    }
    
    /// <remarks/>
    public bool Immediate {
        get {
            return this.immediateField;
        }
        set {
            this.immediateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public enum Direction {
    
    /// <remarks/>
    Shortest,
    
    /// <remarks/>
    Ascending,
    
    /// <remarks/>
    Descending,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("ChangeSpeedResponse", Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class MulipleReelResponse {
    
    private List<ReelRequestError> reelRequestErrorField = new List<ReelRequestError>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ReelRequestError")]
    public List<ReelRequestError>  ReelRequestError {
        get {
            return this.reelRequestErrorField;
        }
        set {
            this.reelRequestErrorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public partial class ReelRequestError {
    
    private byte numberField;
    
    private ReelErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public ReelRequestError() {
        this.errorCodeField = ReelErrorCode.NONE;
    }
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public ReelErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class ClearStatusRegistrationRequest {
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class ClearStatusRegistrationResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class GetReelDevicesRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class GetReelDevicesResponse {
    
    private ReelResponse reelResponseField;
    
    private GetReelDevicesResponseFeatures featuresField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
    
    /// <remarks/>
    public GetReelDevicesResponseFeatures Features {
        get {
            return this.featuresField;
        }
        set {
            this.featuresField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class GetReelDevicesResponseFeatures {
    
    private List<FeatureData1> featureField = new List<FeatureData1>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Feature")]
    public List<FeatureData1>  Feature {
        get {
            return this.featureField;
        }
        set {
            this.featureField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="FeatureData", Namespace="CsiReelV1.xsd")]
public partial class FeatureData1 {
    
    private List<FeatureDataReel> reelsField = new List<FeatureDataReel>();
    
    private List<AccelerationDecelerationTime> accelerationDecelerationTimesField = new List<AccelerationDecelerationTime>();
    
    private string featureIdField;
    
    private ReelType reelTypeField;
    
    private ushort[] speedsField;
    
    private ushort[] decelerationsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<FeatureDataReel>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Times", IsNullable=false)]
    public List<AccelerationDecelerationTime>  AccelerationDecelerationTimes {
        get {
            return this.accelerationDecelerationTimesField;
        }
        set {
            this.accelerationDecelerationTimesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ReelType ReelType {
        get {
            return this.reelTypeField;
        }
        set {
            this.reelTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort[] Speeds {
        get {
            return this.speedsField;
        }
        set {
            this.speedsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort[] Decelerations {
        get {
            return this.decelerationsField;
        }
        set {
            this.decelerationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class FeatureDataReel {
    
    private byte numberField;
    
    private byte stopsField;
    
    private byte maxSeekTimeField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public byte Stops {
        get {
            return this.stopsField;
        }
        set {
            this.stopsField = value;
        }
    }
    
    /// <remarks/>
    public byte MaxSeekTime {
        get {
            return this.maxSeekTimeField;
        }
        set {
            this.maxSeekTimeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public partial class AccelerationDecelerationTime {
    
    private ushort accelerationTimeToNextSpeedField;
    
    private ushort decelerationTimeToPreviousSpeedField;
    
    /// <remarks/>
    public ushort AccelerationTimeToNextSpeed {
        get {
            return this.accelerationTimeToNextSpeedField;
        }
        set {
            this.accelerationTimeToNextSpeedField = value;
        }
    }
    
    /// <remarks/>
    public ushort DecelerationTimeToPreviousSpeed {
        get {
            return this.decelerationTimeToPreviousSpeedField;
        }
        set {
            this.decelerationTimeToPreviousSpeedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public enum ReelType {
    
    /// <remarks/>
    GamePlayReels,
    
    /// <remarks/>
    BonusReels,
    
    /// <remarks/>
    Dice,
    
    /// <remarks/>
    Wheel,
    
    /// <remarks/>
    Prism,
    
    /// <remarks/>
    LinearSlider,
    
    /// <remarks/>
    Sphere,
    
    /// <remarks/>
    Pointer,
    
    /// <remarks/>
    Unknown,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("ReelStatusChangedEvent", Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class ReelStatusEvent {
    
    private string featureIdField;
    
    private byte numberField;
    
    private ReelStatus reelStatusField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ReelStatus ReelStatus {
        get {
            return this.reelStatusField;
        }
        set {
            this.reelStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiReelV1.xsd")]
public enum ReelStatus {
    
    /// <remarks/>
    Accelerating,
    
    /// <remarks/>
    ConstantSpeed,
    
    /// <remarks/>
    Decelerating,
    
    /// <remarks/>
    Stopped,
    
    /// <remarks/>
    MovingIrregularly,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class RegisterStatusRequest {
    
    private List<ReelStatusEvent> statusSubscriptionField = new List<ReelStatusEvent>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StatusSubscription")]
    public List<ReelStatusEvent>  StatusSubscription {
        get {
            return this.statusSubscriptionField;
        }
        set {
            this.statusSubscriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class RegisterStatusResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetRecoveryRequest {
    
    private bool ascendingField;
    
    private Direction directionField;
    
    private string featureIdField;
    
    /// <remarks/>
    public bool Ascending {
        get {
            return this.ascendingField;
        }
        set {
            this.ascendingField = value;
        }
    }
    
    /// <remarks/>
    public Direction Direction {
        get {
            return this.directionField;
        }
        set {
            this.directionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetRecoveryResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("SetRequireDeviceRequest", Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetRequireDeviceRequest1 {
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("SetRequireDeviceResponse", Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetRequireDeviceResponse1 {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetStopOrderRequest {
    
    private string reelsField;
    
    private string featureIdField;
    
    /// <remarks/>
    public string Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetStopOrderResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetSynchronousStopRequest {
    
    private List<SetSynchronousStopRequestReel> reelsField = new List<SetSynchronousStopRequestReel>();
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<SetSynchronousStopRequestReel>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class SetSynchronousStopRequestReel {
    
    private byte numberField;
    
    private byte stopField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public byte Stop {
        get {
            return this.stopField;
        }
        set {
            this.stopField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetSynchronousStopResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetToPositionRequest {
    
    private List<SetToPositionRequestReel> reelsField = new List<SetToPositionRequestReel>();
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<SetToPositionRequestReel>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class SetToPositionRequestReel {
    
    private byte numberField;
    
    private byte stopField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public byte Stop {
        get {
            return this.stopField;
        }
        set {
            this.stopField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SetToPositionResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SpinRequest {
    
    private List<SpinRequestReel> reelsField = new List<SpinRequestReel>();
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<SpinRequestReel>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class SpinRequestReel {
    
    private byte numberField;
    
    private byte decelerationField;
    
    private byte speedField;
    
    private Direction directionField;
    
    private ushort durationField;
    
    private byte stopField;
    
    private bool cockField;
    
    private bool cockFieldSpecified;
    
    private bool bounceField;
    
    private bool bounceFieldSpecified;
    
    private Shake shakeField;
    
    private bool shakeFieldSpecified;
    
    private Hover hoverField;
    
    private bool hoverFieldSpecified;
    
    private HoverLimits hoverLimitsField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public byte Deceleration {
        get {
            return this.decelerationField;
        }
        set {
            this.decelerationField = value;
        }
    }
    
    /// <remarks/>
    public byte Speed {
        get {
            return this.speedField;
        }
        set {
            this.speedField = value;
        }
    }
    
    /// <remarks/>
    public Direction Direction {
        get {
            return this.directionField;
        }
        set {
            this.directionField = value;
        }
    }
    
    /// <remarks/>
    public ushort Duration {
        get {
            return this.durationField;
        }
        set {
            this.durationField = value;
        }
    }
    
    /// <remarks/>
    public byte Stop {
        get {
            return this.stopField;
        }
        set {
            this.stopField = value;
        }
    }
    
    /// <remarks/>
    public bool Cock {
        get {
            return this.cockField;
        }
        set {
            this.cockField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CockSpecified {
        get {
            return this.cockFieldSpecified;
        }
        set {
            this.cockFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool Bounce {
        get {
            return this.bounceField;
        }
        set {
            this.bounceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BounceSpecified {
        get {
            return this.bounceFieldSpecified;
        }
        set {
            this.bounceFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Shake Shake {
        get {
            return this.shakeField;
        }
        set {
            this.shakeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShakeSpecified {
        get {
            return this.shakeFieldSpecified;
        }
        set {
            this.shakeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Hover Hover {
        get {
            return this.hoverField;
        }
        set {
            this.hoverField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HoverSpecified {
        get {
            return this.hoverFieldSpecified;
        }
        set {
            this.hoverFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public HoverLimits HoverLimits {
        get {
            return this.hoverLimitsField;
        }
        set {
            this.hoverLimitsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SpinResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class StopRequest {
    
    private List<StopRequestReel> reelsField = new List<StopRequestReel>();
    
    private string featureIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<StopRequestReel>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class StopRequestReel {
    
    private byte numberField;
    
    private byte stopField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public byte Stop {
        get {
            return this.stopField;
        }
        set {
            this.stopField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class StopResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SynchronousSpinRequest {
    
    private ushort speedIndexField;
    
    private List<SynchronousSpinRequestReel> reelsField = new List<SynchronousSpinRequestReel>();
    
    private string featureIdField;
    
    /// <remarks/>
    public ushort SpeedIndex {
        get {
            return this.speedIndexField;
        }
        set {
            this.speedIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Reel", IsNullable=false)]
    public List<SynchronousSpinRequestReel>  Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
public partial class SynchronousSpinRequestReel {
    
    private byte numberField;
    
    private Direction directionField;
    
    private ushort durationField;
    
    private byte stopField;
    
    private bool cockField;
    
    private bool cockFieldSpecified;
    
    private bool bounceField;
    
    private bool bounceFieldSpecified;
    
    private Shake shakeField;
    
    private bool shakeFieldSpecified;
    
    private Hover hoverField;
    
    private bool hoverFieldSpecified;
    
    private HoverLimits hoverLimitsField;
    
    /// <remarks/>
    public byte Number {
        get {
            return this.numberField;
        }
        set {
            this.numberField = value;
        }
    }
    
    /// <remarks/>
    public Direction Direction {
        get {
            return this.directionField;
        }
        set {
            this.directionField = value;
        }
    }
    
    /// <remarks/>
    public ushort Duration {
        get {
            return this.durationField;
        }
        set {
            this.durationField = value;
        }
    }
    
    /// <remarks/>
    public byte Stop {
        get {
            return this.stopField;
        }
        set {
            this.stopField = value;
        }
    }
    
    /// <remarks/>
    public bool Cock {
        get {
            return this.cockField;
        }
        set {
            this.cockField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool CockSpecified {
        get {
            return this.cockFieldSpecified;
        }
        set {
            this.cockFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool Bounce {
        get {
            return this.bounceField;
        }
        set {
            this.bounceField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BounceSpecified {
        get {
            return this.bounceFieldSpecified;
        }
        set {
            this.bounceFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Shake Shake {
        get {
            return this.shakeField;
        }
        set {
            this.shakeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ShakeSpecified {
        get {
            return this.shakeFieldSpecified;
        }
        set {
            this.shakeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Hover Hover {
        get {
            return this.hoverField;
        }
        set {
            this.hoverField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool HoverSpecified {
        get {
            return this.hoverFieldSpecified;
        }
        set {
            this.hoverFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public HoverLimits HoverLimits {
        get {
            return this.hoverLimitsField;
        }
        set {
            this.hoverLimitsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SynchronousSpinResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SynchronousStopRequest {
    
    private string reelsField;
    
    private string featureIdField;
    
    /// <remarks/>
    public string Reels {
        get {
            return this.reelsField;
        }
        set {
            this.reelsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FeatureId {
        get {
            return this.featureIdField;
        }
        set {
            this.featureIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class SynchronousStopResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class UnregisterStatusRequest {
    
    private List<ReelStatusEvent> statusSubscriptionField = new List<ReelStatusEvent>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StatusSubscription")]
    public List<ReelStatusEvent>  StatusSubscription {
        get {
            return this.statusSubscriptionField;
        }
        set {
            this.statusSubscriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiReelV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiReelV1.xsd", IsNullable=false)]
public partial class UnregisterStatusResponse {
    
    private ReelResponse reelResponseField;
    
    /// <remarks/>
    public ReelResponse ReelResponse {
        get {
            return this.reelResponseField;
        }
        set {
            this.reelResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class CsiResource {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AcquireDeviceRequest", typeof(AcquireDeviceRequest))]
    [System.Xml.Serialization.XmlElementAttribute("AcquireDeviceResponse", typeof(AcquireDeviceResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ConnectedDevicesRequest", typeof(ConnectedDevicesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ConnectedDevicesResponse", typeof(ConnectedDevicesResponse))]
    [System.Xml.Serialization.XmlElementAttribute("DeviceAcquiredEvent", typeof(DeviceAcquiredEvent))]
    [System.Xml.Serialization.XmlElementAttribute("DeviceConnectedEvent", typeof(DeviceConnectedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("DeviceReleasedEvent", typeof(DeviceReleasedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("DeviceRemovedEvent", typeof(DeviceRemovedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("EventRegistrationRequest", typeof(EventRegistrationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("EventRegistrationResponse", typeof(EventRegistrationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ReleaseDeviceRequest", typeof(ReleaseDeviceRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ReleaseDeviceResponse", typeof(ReleaseDeviceResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class AcquireDeviceRequest {
    
    private Priority priorityTypeField;
    
    private List<uint> groupListField = new List<uint>();
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    public Priority PriorityType {
        get {
            return this.priorityTypeField;
        }
        set {
            this.priorityTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GroupId", IsNullable=false)]
    public List<uint>  GroupList {
        get {
            return this.groupListField;
        }
        set {
            this.groupListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
public enum DeviceType {
    
    /// <remarks/>
    ButtonPanel,
    
    /// <remarks/>
    Sound,
    
    /// <remarks/>
    Light,
    
    /// <remarks/>
    Reel,
    
    /// <remarks/>
    StreamingLight,
    
    /// <remarks/>
    TouchScreen,
    
    /// <remarks/>
    Monitor,
    
    /// <remarks/>
    VideoTopper,
    
    /// <remarks/>
    Haptic,
    
    /// <remarks/>
    DepthCamera,
    
    /// <remarks/>
    Portal,
    
    /// <remarks/>
    EyeTracking,
    
    /// <remarks/>
    MechanicalBell,
    
    /// <remarks/>
    VolumeMixer,
    
    /// <remarks/>
    EmulatedCashoutServerHost,
    
    /// <remarks/>
    EmulatedCashoutServerClient,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class AcquireDeviceResponse {
    
    private ResourceResponse resourceResponseField;
    
    private bool acquiredField;
    
    private bool acquiredFieldSpecified;
    
    private DeviceNotAcquired reasonField;
    
    private bool reasonFieldSpecified;
    
    private List<GroupResponse> groupResponseField = new List<GroupResponse>();
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    public ResourceResponse ResourceResponse {
        get {
            return this.resourceResponseField;
        }
        set {
            this.resourceResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool Acquired {
        get {
            return this.acquiredField;
        }
        set {
            this.acquiredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AcquiredSpecified {
        get {
            return this.acquiredFieldSpecified;
        }
        set {
            this.acquiredFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public DeviceNotAcquired Reason {
        get {
            return this.reasonField;
        }
        set {
            this.reasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool ReasonSpecified {
        get {
            return this.reasonFieldSpecified;
        }
        set {
            this.reasonFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<GroupResponse>  GroupResponse {
        get {
            return this.groupResponseField;
        }
        set {
            this.groupResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class ResourceResponse {
    
    private ResourceErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public ResourceResponse() {
        this.errorCodeField = ResourceErrorCode.NONE;
    }
    
    /// <remarks/>
    public ResourceErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
public enum ResourceErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    CONNECTION_LOST,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    PERIPHERAL_STATUS_ERROR,
    
    /// <remarks/>
    EVENT_REGISTRATION_NOT_SUPPORTED,
    
    /// <remarks/>
    INVALID_RESOURCE_REQUEST,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
public enum DeviceNotAcquired {
    
    /// <remarks/>
    DeviceDisconnected,
    
    /// <remarks/>
    InQueue,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
public partial class GroupResponse {
    
    private uint groupIdField;
    
    private GroupAcquiredStatus acquisitionStatusField;
    
    /// <remarks/>
    public uint GroupId {
        get {
            return this.groupIdField;
        }
        set {
            this.groupIdField = value;
        }
    }
    
    /// <remarks/>
    public GroupAcquiredStatus AcquisitionStatus {
        get {
            return this.acquisitionStatusField;
        }
        set {
            this.acquisitionStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
public enum GroupAcquiredStatus {
    
    /// <remarks/>
    InQueue,
    
    /// <remarks/>
    Acquired,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class ConnectedDevicesRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class ConnectedDevicesResponse {
    
    private ResourceResponse resourceResponseField;
    
    private List<ConnectedDevicesResponseDevice> deviceField = new List<ConnectedDevicesResponseDevice>();
    
    /// <remarks/>
    public ResourceResponse ResourceResponse {
        get {
            return this.resourceResponseField;
        }
        set {
            this.resourceResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Device")]
    public List<ConnectedDevicesResponseDevice>  Device {
        get {
            return this.deviceField;
        }
        set {
            this.deviceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
public partial class ConnectedDevicesResponseDevice {
    
    private List<uint> groupListField = new List<uint>();
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GroupId", IsNullable=false)]
    public List<uint>  GroupList {
        get {
            return this.groupListField;
        }
        set {
            this.groupListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class DeviceAcquiredEvent {
    
    private List<uint> groupListField = new List<uint>();
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GroupId", IsNullable=false)]
    public List<uint>  GroupList {
        get {
            return this.groupListField;
        }
        set {
            this.groupListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class DeviceConnectedEvent {
    
    private List<uint> groupListField = new List<uint>();
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GroupId", IsNullable=false)]
    public List<uint>  GroupList {
        get {
            return this.groupListField;
        }
        set {
            this.groupListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class DeviceReleasedEvent {
    
    private List<uint> groupListField = new List<uint>();
    
    private DeviceNotAcquired reasonField;
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GroupId", IsNullable=false)]
    public List<uint>  GroupList {
        get {
            return this.groupListField;
        }
        set {
            this.groupListField = value;
        }
    }
    
    /// <remarks/>
    public DeviceNotAcquired Reason {
        get {
            return this.reasonField;
        }
        set {
            this.reasonField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class DeviceRemovedEvent {
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class EventRegistrationRequest {
    
    private EventRegistrationAction actionField;
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    public EventRegistrationAction Action {
        get {
            return this.actionField;
        }
        set {
            this.actionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiResourceV1.xsd")]
public enum EventRegistrationAction {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    REGISTER,
    
    /// <remarks/>
    UNREGISTER,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class EventRegistrationResponse {
    
    private ResourceResponse resourceResponseField;
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    public ResourceResponse ResourceResponse {
        get {
            return this.resourceResponseField;
        }
        set {
            this.resourceResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class ReleaseDeviceRequest {
    
    private List<uint> groupListField = new List<uint>();
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("GroupId", IsNullable=false)]
    public List<uint>  GroupList {
        get {
            return this.groupListField;
        }
        set {
            this.groupListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiResourceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiResourceV1.xsd", IsNullable=false)]
public partial class ReleaseDeviceResponse {
    
    private ResourceResponse resourceResponseField;
    
    private DeviceType deviceTypeField;
    
    private string deviceIdField;
    
    /// <remarks/>
    public ResourceResponse ResourceResponse {
        get {
            return this.resourceResponseField;
        }
        set {
            this.resourceResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DeviceType DeviceType {
        get {
            return this.deviceTypeField;
        }
        set {
            this.deviceTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class CsiService {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CallAttendantChangedEvent", typeof(CallAttendantChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("CashOutRequest", typeof(CashOutRequest))]
    [System.Xml.Serialization.XmlElementAttribute("EmulatedServiceButtonEnabledConfigItemChangedEvent", typeof(EmulatedServiceButtonEnabledConfigItemChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("GetCallAttendantRequest", typeof(GetCallAttendantRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetCallAttendantResponse", typeof(GetCallAttendantResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerServiceRequest", typeof(GetPlayerServiceRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetPlayerServiceResponse", typeof(GetPlayerServiceResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetPromptPlayerOnCashoutConfigItemValueRequest", typeof(GetPromptPlayerOnCashoutConfigItemValueRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetPromptPlayerOnCashoutConfigItemValueResponse", typeof(GetPromptPlayerOnCashoutConfigItemValueResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest", typeof(GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse", typeof(GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse))]
    [System.Xml.Serialization.XmlElementAttribute("PlayerServiceRequestChangedEvent", typeof(PlayerServiceRequestChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("PromptPlayerOnCashoutConfigItemChangedEvent", typeof(PromptPlayerOnCashoutConfigItemChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForCallAttendantChangedEventsRequest", typeof(RegisterForCallAttendantChangedEventsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForCallAttendantChangedEventsResponse", typeof(RegisterForCallAttendantChangedEventsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest", typeof(RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse", typeof(RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForPlayerServiceRequestChangedEventsRequest", typeof(RegisterForPlayerServiceRequestChangedEventsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForPlayerServiceRequestChangedEventsResponse", typeof(RegisterForPlayerServiceRequestChangedEventsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest", typeof(RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse", typeof(RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ServiceRequest", typeof(ServiceRequest))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class CallAttendantChangedEvent {
    
    private bool callAttendantField;
    
    /// <remarks/>
    public bool CallAttendant {
        get {
            return this.callAttendantField;
        }
        set {
            this.callAttendantField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class CashOutRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class EmulatedServiceButtonEnabledConfigItemChangedEvent {
    
    private bool enabledField;
    
    /// <remarks/>
    public bool Enabled {
        get {
            return this.enabledField;
        }
        set {
            this.enabledField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetCallAttendantRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetCallAttendantResponse {
    
    private ServiceResponse serviceResponseField;
    
    private bool stateField;
    
    private bool stateFieldSpecified;
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StateSpecified {
        get {
            return this.stateFieldSpecified;
        }
        set {
            this.stateFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class ServiceResponse {
    
    private ServiceErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public ServiceResponse() {
        this.errorCodeField = ServiceErrorCode.NONE;
    }
    
    /// <remarks/>
    public ServiceErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
public enum ServiceErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    CLIENT_ALREADY_REGISTERED,
    
    /// <remarks/>
    CLIENT_NOT_REGISTERED,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetPlayerServiceRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetPlayerServiceResponse {
    
    private ServiceResponse serviceResponseField;
    
    private bool stateField;
    
    private bool stateFieldSpecified;
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool State {
        get {
            return this.stateField;
        }
        set {
            this.stateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool StateSpecified {
        get {
            return this.stateFieldSpecified;
        }
        set {
            this.stateFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetPromptPlayerOnCashoutConfigItemValueRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetPromptPlayerOnCashoutConfigItemValueResponse {
    
    private ServiceResponse serviceResponseField;
    
    private bool promptField;
    
    private bool promptFieldSpecified;
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool Prompt {
        get {
            return this.promptField;
        }
        set {
            this.promptField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PromptSpecified {
        get {
            return this.promptFieldSpecified;
        }
        set {
            this.promptFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse {
    
    private ServiceResponse serviceResponseField;
    
    private List<EmulatableButton> emulatableButtonField = new List<EmulatableButton>();
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EmulatableButton")]
    public List<EmulatableButton>  EmulatableButton {
        get {
            return this.emulatableButtonField;
        }
        set {
            this.emulatableButtonField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public enum EmulatableButton {
    
    /// <remarks/>
    Cashout,
    
    /// <remarks/>
    Service,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class PlayerServiceRequestChangedEvent {
    
    private bool playerServiceRequestedField;
    
    /// <remarks/>
    public bool PlayerServiceRequested {
        get {
            return this.playerServiceRequestedField;
        }
        set {
            this.playerServiceRequestedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class PromptPlayerOnCashoutConfigItemChangedEvent {
    
    private bool promptField;
    
    /// <remarks/>
    public bool Prompt {
        get {
            return this.promptField;
        }
        set {
            this.promptField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForCallAttendantChangedEventsRequest {
    
    private RegistrationAction1 registrationActionField;
    
    /// <remarks/>
    public RegistrationAction1 RegistrationAction {
        get {
            return this.registrationActionField;
        }
        set {
            this.registrationActionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("RegistrationAction", Namespace="CsiServiceV1.xsd", IsNullable=false)]
public enum RegistrationAction1 {
    
    /// <remarks/>
    Register,
    
    /// <remarks/>
    Unregister,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForCallAttendantChangedEventsResponse {
    
    private ServiceResponse serviceResponseField;
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest {
    
    private RegistrationAction1 registrationActionField;
    
    /// <remarks/>
    public RegistrationAction1 RegistrationAction {
        get {
            return this.registrationActionField;
        }
        set {
            this.registrationActionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse {
    
    private ServiceResponse serviceResponseField;
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForPlayerServiceRequestChangedEventsRequest {
    
    private RegistrationAction1 registrationActionField;
    
    /// <remarks/>
    public RegistrationAction1 RegistrationAction {
        get {
            return this.registrationActionField;
        }
        set {
            this.registrationActionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForPlayerServiceRequestChangedEventsResponse {
    
    private ServiceResponse serviceResponseField;
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest {
    
    private RegistrationAction1 registrationActionField;
    
    /// <remarks/>
    public RegistrationAction1 RegistrationAction {
        get {
            return this.registrationActionField;
        }
        set {
            this.registrationActionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse {
    
    private ServiceResponse serviceResponseField;
    
    /// <remarks/>
    public ServiceResponse ServiceResponse {
        get {
            return this.serviceResponseField;
        }
        set {
            this.serviceResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiServiceV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiServiceV1.xsd", IsNullable=false)]
public partial class ServiceRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSnifferV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSnifferV1.xsd", IsNullable=false)]
public partial class CsiSniffer {
    
    private System.Xml.XmlElement csiBodyField;
    
    private uint socketNumberField;
    
    private uint clientTypeField;
    
    private string timeStampField;
    
    private MessageSource messageSourceField;
    
    /// <remarks/>
    public System.Xml.XmlElement CsiBody {
        get {
            return this.csiBodyField;
        }
        set {
            this.csiBodyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint SocketNumber {
        get {
            return this.socketNumberField;
        }
        set {
            this.socketNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint ClientType {
        get {
            return this.clientTypeField;
        }
        set {
            this.clientTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string TimeStamp {
        get {
            return this.timeStampField;
        }
        set {
            this.timeStampField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public MessageSource MessageSource {
        get {
            return this.messageSourceField;
        }
        set {
            this.messageSourceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSnifferV1.xsd")]
public enum MessageSource {
    
    /// <remarks/>
    Unknown,
    
    /// <remarks/>
    Client,
    
    /// <remarks/>
    Host,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSolenoidV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSolenoidV1.xsd", IsNullable=false)]
public partial class CsiSolenoid {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SolenoidRequest", typeof(SolenoidRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SolenoidResponse", typeof(SolenoidResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSolenoidV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSolenoidV1.xsd", IsNullable=false)]
public partial class SolenoidRequest {
    
    private SolenoidActionType solenoidActionTypeField;
    
    private bool solenoidActionStateField;
    
    /// <remarks/>
    public SolenoidActionType SolenoidActionType {
        get {
            return this.solenoidActionTypeField;
        }
        set {
            this.solenoidActionTypeField = value;
        }
    }
    
    /// <remarks/>
    public bool SolenoidActionState {
        get {
            return this.solenoidActionStateField;
        }
        set {
            this.solenoidActionStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSolenoidV1.xsd")]
public enum SolenoidActionType {
    
    /// <remarks/>
    Lock,
    
    /// <remarks/>
    Click,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSolenoidV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSolenoidV1.xsd", IsNullable=false)]
public partial class SolenoidResponse {
    
    private SolenoidErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public SolenoidResponse() {
        this.errorCodeField = SolenoidErrorCode.NONE;
    }
    
    /// <remarks/>
    public SolenoidErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSolenoidV1.xsd")]
public enum SolenoidErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    UNKNOWN_DRIVER_ERROR,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class CsiSound {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("ChairEnablePowerRequest", typeof(ChairEnablePowerRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ChairEnablePowerResponse", typeof(ChairEnablePowerResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ChairPoweredRequest", typeof(ChairPoweredRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ChairPoweredResponse", typeof(ChairPoweredResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetAudioEndpointsRequest", typeof(GetAudioEndpointsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetAudioEndpointsResponse", typeof(GetAudioEndpointsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("HeadphoneJackChangedEvent", typeof(HeadphoneJackChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("MuteClientsRequest", typeof(MuteClientsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("MuteClientsResponse", typeof(MuteClientsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetDefaultAudioEndpointRequest", typeof(SetDefaultAudioEndpointRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetDefaultAudioEndpointResponse", typeof(SetDefaultAudioEndpointResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetVolumePlayerLevelRequest", typeof(SetVolumePlayerLevelRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetVolumePlayerLevelResponse", typeof(SetVolumePlayerLevelResponse))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeAllGroupsRequest", typeof(VolumeAllGroupsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeAllGroupsResponse", typeof(VolumeAllGroupsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeChangedEvent", typeof(VolumeChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeMuteAllStatusChangedEvent", typeof(VolumeMuteAllStatusChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeMuteAllStatusRequest", typeof(VolumeMuteAllStatusRequest))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeMuteAllStatusResponse", typeof(VolumeMuteAllStatusResponse))]
    [System.Xml.Serialization.XmlElementAttribute("VolumePlayerLevelChangedEvent", typeof(VolumePlayerLevelChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("VolumePlayerLevelRequest", typeof(VolumePlayerLevelRequest))]
    [System.Xml.Serialization.XmlElementAttribute("VolumePlayerLevelResponse", typeof(VolumePlayerLevelResponse))]
    [System.Xml.Serialization.XmlElementAttribute("VolumePlayerSelectableChangedEvent", typeof(VolumePlayerSelectableChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("VolumePlayerSelectableRequest", typeof(VolumePlayerSelectableRequest))]
    [System.Xml.Serialization.XmlElementAttribute("VolumePlayerSelectableResponse", typeof(VolumePlayerSelectableResponse))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeRequest", typeof(VolumeRequest))]
    [System.Xml.Serialization.XmlElementAttribute("VolumeResponse", typeof(VolumeResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class ChairEnablePowerRequest {
    
    private bool enablePowerField;
    
    /// <remarks/>
    public bool EnablePower {
        get {
            return this.enablePowerField;
        }
        set {
            this.enablePowerField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class ChairEnablePowerResponse {
    
    private SoundResponse soundResponseField;
    
    private bool successField;
    
    private bool successFieldSpecified;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool Success {
        get {
            return this.successField;
        }
        set {
            this.successField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SuccessSpecified {
        get {
            return this.successFieldSpecified;
        }
        set {
            this.successFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class SoundResponse {
    
    private SoundErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public SoundResponse() {
        this.errorCodeField = SoundErrorCode.NONE;
    }
    
    /// <remarks/>
    public SoundErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
public enum SoundErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    CHAIR_NOT_INSTALLED,
    
    /// <remarks/>
    CHAIR_COMMUNICATION_FAILURE,
    
    /// <remarks/>
    VOLUME_ERROR,
    
    /// <remarks/>
    CSI_SCHEMA_VERSION_MISMATCH,
    
    /// <remarks/>
    WASAPI_FAILURE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class ChairPoweredRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class ChairPoweredResponse {
    
    private SoundResponse soundResponseField;
    
    private bool poweredField;
    
    private bool poweredFieldSpecified;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool Powered {
        get {
            return this.poweredField;
        }
        set {
            this.poweredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PoweredSpecified {
        get {
            return this.poweredFieldSpecified;
        }
        set {
            this.poweredFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class GetAudioEndpointsRequest {
    
    private bool unusedField;
    
    private bool unusedFieldSpecified;
    
    /// <remarks/>
    public bool Unused {
        get {
            return this.unusedField;
        }
        set {
            this.unusedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool UnusedSpecified {
        get {
            return this.unusedFieldSpecified;
        }
        set {
            this.unusedFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class GetAudioEndpointsResponse {
    
    private SoundResponse soundResponseField;
    
    private EndpointList endpointsField;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public EndpointList Endpoints {
        get {
            return this.endpointsField;
        }
        set {
            this.endpointsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
public partial class EndpointList {
    
    private List<string> endpointField = new List<string>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Endpoint")]
    public List<string>  Endpoint {
        get {
            return this.endpointField;
        }
        set {
            this.endpointField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class HeadphoneJackChangedEvent {
    
    private HeadphoneJackState headphoneJackStateField;
    
    /// <remarks/>
    public HeadphoneJackState HeadphoneJackState {
        get {
            return this.headphoneJackStateField;
        }
        set {
            this.headphoneJackStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
public enum HeadphoneJackState {
    
    /// <remarks/>
    Inserted,
    
    /// <remarks/>
    Removed,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class MuteClientsRequest {
    
    private List<PriorityMuteState> priorityMuteStateField = new List<PriorityMuteState>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PriorityMuteState")]
    public List<PriorityMuteState>  PriorityMuteState {
        get {
            return this.priorityMuteStateField;
        }
        set {
            this.priorityMuteStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
public partial class PriorityMuteState {
    
    private Priority priorityTypeField;
    
    private bool mutedField;
    
    /// <remarks/>
    public Priority PriorityType {
        get {
            return this.priorityTypeField;
        }
        set {
            this.priorityTypeField = value;
        }
    }
    
    /// <remarks/>
    public bool Muted {
        get {
            return this.mutedField;
        }
        set {
            this.mutedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class MuteClientsResponse {
    
    private SoundResponse soundResponseField;
    
    private List<PriorityMuteState> priorityMuteStateField = new List<PriorityMuteState>();
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("PriorityMuteState")]
    public List<PriorityMuteState>  PriorityMuteState {
        get {
            return this.priorityMuteStateField;
        }
        set {
            this.priorityMuteStateField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class SetDefaultAudioEndpointRequest {
    
    private string endpointField;
    
    /// <remarks/>
    public string Endpoint {
        get {
            return this.endpointField;
        }
        set {
            this.endpointField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class SetDefaultAudioEndpointResponse {
    
    private SoundResponse soundResponseField;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class SetVolumePlayerLevelRequest {
    
    private float volumePlayerLevelField;
    
    private bool playerMuteSelectedField;
    
    private bool playerMuteSelectedFieldSpecified;
    
    /// <remarks/>
    public float VolumePlayerLevel {
        get {
            return this.volumePlayerLevelField;
        }
        set {
            this.volumePlayerLevelField = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerMuteSelected {
        get {
            return this.playerMuteSelectedField;
        }
        set {
            this.playerMuteSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayerMuteSelectedSpecified {
        get {
            return this.playerMuteSelectedFieldSpecified;
        }
        set {
            this.playerMuteSelectedFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class SetVolumePlayerLevelResponse {
    
    private SoundResponse soundResponseField;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeAllGroupsRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeAllGroupsResponse {
    
    private SoundResponse soundResponseField;
    
    private Volumes volumesField;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public Volumes Volumes {
        get {
            return this.volumesField;
        }
        set {
            this.volumesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
public partial class Volumes {
    
    private List<GroupVolumeSetting> groupVolumeField = new List<GroupVolumeSetting>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("GroupVolume")]
    public List<GroupVolumeSetting>  GroupVolume {
        get {
            return this.groupVolumeField;
        }
        set {
            this.groupVolumeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
public partial class GroupVolumeSetting {
    
    private uint volumeLevelField;
    
    private GroupName soundGroupField;
    
    /// <remarks/>
    public uint VolumeLevel {
        get {
            return this.volumeLevelField;
        }
        set {
            this.volumeLevelField = value;
        }
    }
    
    /// <remarks/>
    public GroupName SoundGroup {
        get {
            return this.soundGroupField;
        }
        set {
            this.soundGroupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeChangedEvent {
    
    private GroupVolumeSetting groupVolumeField;
    
    /// <remarks/>
    public GroupVolumeSetting GroupVolume {
        get {
            return this.groupVolumeField;
        }
        set {
            this.groupVolumeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeMuteAllStatusChangedEvent {
    
    private bool muteAllField;
    
    /// <remarks/>
    public bool MuteAll {
        get {
            return this.muteAllField;
        }
        set {
            this.muteAllField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeMuteAllStatusRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeMuteAllStatusResponse {
    
    private SoundResponse soundResponseField;
    
    private bool muteAllField;
    
    private bool muteAllFieldSpecified;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool MuteAll {
        get {
            return this.muteAllField;
        }
        set {
            this.muteAllField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MuteAllSpecified {
        get {
            return this.muteAllFieldSpecified;
        }
        set {
            this.muteAllFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumePlayerLevelChangedEvent {
    
    private float volumePlayerLevelField;
    
    /// <remarks/>
    public float VolumePlayerLevel {
        get {
            return this.volumePlayerLevelField;
        }
        set {
            this.volumePlayerLevelField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumePlayerLevelRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumePlayerLevelResponse {
    
    private SoundResponse soundResponseField;
    
    private float volumePlayerLevelField;
    
    private bool volumePlayerLevelFieldSpecified;
    
    private bool playerMuteSelectedField;
    
    private bool playerMuteSelectedFieldSpecified;
    
    private float defaultVolumePlayerLevelField;
    
    private bool defaultVolumePlayerLevelFieldSpecified;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public float VolumePlayerLevel {
        get {
            return this.volumePlayerLevelField;
        }
        set {
            this.volumePlayerLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool VolumePlayerLevelSpecified {
        get {
            return this.volumePlayerLevelFieldSpecified;
        }
        set {
            this.volumePlayerLevelFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerMuteSelected {
        get {
            return this.playerMuteSelectedField;
        }
        set {
            this.playerMuteSelectedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayerMuteSelectedSpecified {
        get {
            return this.playerMuteSelectedFieldSpecified;
        }
        set {
            this.playerMuteSelectedFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public float DefaultVolumePlayerLevel {
        get {
            return this.defaultVolumePlayerLevelField;
        }
        set {
            this.defaultVolumePlayerLevelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool DefaultVolumePlayerLevelSpecified {
        get {
            return this.defaultVolumePlayerLevelFieldSpecified;
        }
        set {
            this.defaultVolumePlayerLevelFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumePlayerSelectableChangedEvent {
    
    private bool volumePlayerSelectableField;
    
    private bool playerMuteSelectableField;
    
    private bool playerMuteSelectableFieldSpecified;
    
    /// <remarks/>
    public bool VolumePlayerSelectable {
        get {
            return this.volumePlayerSelectableField;
        }
        set {
            this.volumePlayerSelectableField = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerMuteSelectable {
        get {
            return this.playerMuteSelectableField;
        }
        set {
            this.playerMuteSelectableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayerMuteSelectableSpecified {
        get {
            return this.playerMuteSelectableFieldSpecified;
        }
        set {
            this.playerMuteSelectableFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumePlayerSelectableRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumePlayerSelectableResponse {
    
    private SoundResponse soundResponseField;
    
    private bool playerSelectableField;
    
    private bool playerSelectableFieldSpecified;
    
    private bool playerMuteSelectableField;
    
    private bool playerMuteSelectableFieldSpecified;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerSelectable {
        get {
            return this.playerSelectableField;
        }
        set {
            this.playerSelectableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayerSelectableSpecified {
        get {
            return this.playerSelectableFieldSpecified;
        }
        set {
            this.playerSelectableFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool PlayerMuteSelectable {
        get {
            return this.playerMuteSelectableField;
        }
        set {
            this.playerMuteSelectableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayerMuteSelectableSpecified {
        get {
            return this.playerMuteSelectableFieldSpecified;
        }
        set {
            this.playerMuteSelectableFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeRequest {
    
    private GroupName soundGroupField;
    
    /// <remarks/>
    public GroupName SoundGroup {
        get {
            return this.soundGroupField;
        }
        set {
            this.soundGroupField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiSoundV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiSoundV1.xsd", IsNullable=false)]
public partial class VolumeResponse {
    
    private SoundResponse soundResponseField;
    
    private GroupVolumeSetting groupVolumeField;
    
    /// <remarks/>
    public SoundResponse SoundResponse {
        get {
            return this.soundResponseField;
        }
        set {
            this.soundResponseField = value;
        }
    }
    
    /// <remarks/>
    public GroupVolumeSetting GroupVolume {
        get {
            return this.groupVolumeField;
        }
        set {
            this.groupVolumeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class CsiStreamingLight {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BreakLoopRequest", typeof(BreakLoopRequest))]
    [System.Xml.Serialization.XmlElementAttribute("BreakLoopResponse", typeof(BreakLoopResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ClearSymbolHighlightsRequest", typeof(ClearSymbolHighlightsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ClearSymbolHighlightsResponse", typeof(ClearSymbolHighlightsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetLightDevicesRequest", typeof(GetLightDevicesRequest1))]
    [System.Xml.Serialization.XmlElementAttribute("GetLightDevicesResponse", typeof(GetLightDevicesResponse1))]
    [System.Xml.Serialization.XmlElementAttribute("GetLightIntensityRequest", typeof(GetLightIntensityRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetLightIntensityResponse", typeof(GetLightIntensityResponse))]
    [System.Xml.Serialization.XmlElementAttribute("NotificationEvent", typeof(NotificationEvent))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnabledSymbolHighlightFeaturesRequest", typeof(SetEnabledSymbolHighlightFeaturesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetEnabledSymbolHighlightFeaturesResponse", typeof(SetEnabledSymbolHighlightFeaturesResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetLightIntensityRequest", typeof(SetLightIntensityRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetLightIntensityResponse", typeof(SetLightIntensityResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetSymbolHighlightsRequest", typeof(SetSymbolHighlightsRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetSymbolHighlightsResponse", typeof(SetSymbolHighlightsResponse))]
    [System.Xml.Serialization.XmlElementAttribute("StartLightSequenceRequest", typeof(StartLightSequenceRequest))]
    [System.Xml.Serialization.XmlElementAttribute("StartLightSequenceResponse", typeof(StartLightSequenceResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class BreakLoopRequest {
    
    private string interfaceNameField;
    
    private ushort groupNumberField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort GroupNumber {
        get {
            return this.groupNumberField;
        }
        set {
            this.groupNumberField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class BreakLoopResponse {
    
    private StreamingLightResponse streamingLightResponseField;
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public partial class StreamingLightResponse {
    
    private StreamingLightErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public StreamingLightResponse() {
        this.errorCodeField = StreamingLightErrorCode.NONE;
    }
    
    /// <remarks/>
    public StreamingLightErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public enum StreamingLightErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    UNKNOWN_DRIVER_ERROR,
    
    /// <remarks/>
    INVALID_FEATURE_ID,
    
    /// <remarks/>
    INVALID_LIGHT_GROUP,
    
    /// <remarks/>
    FILE_NOT_FOUND,
    
    /// <remarks/>
    INVALID_SEQUENCE,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    QUEUE_EMPTY,
    
    /// <remarks/>
    SEQUENCE_COMPLETE,
    
    /// <remarks/>
    DEVICE_IN_TILT_STATE,
    
    /// <remarks/>
    QUEUE_FULL,
    
    /// <remarks/>
    INVALID_FRAME,
    
    /// <remarks/>
    INVALID_COMMAND,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class ClearSymbolHighlightsRequest {
    
    private List<SymbolTrackingData> symbolTrackingDataListField = new List<SymbolTrackingData>();
    
    private List<SymbolHotPositionData> symbolHotPositionDataListField = new List<SymbolHotPositionData>();
    
    private string interfaceNameField;
    
    private ushort groupNumberField;
    
    private bool groupNumberFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<SymbolTrackingData>  SymbolTrackingDataList {
        get {
            return this.symbolTrackingDataListField;
        }
        set {
            this.symbolTrackingDataListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("SymbolHotPositionDataData", IsNullable=false)]
    public List<SymbolHotPositionData>  SymbolHotPositionDataList {
        get {
            return this.symbolHotPositionDataListField;
        }
        set {
            this.symbolHotPositionDataListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort GroupNumber {
        get {
            return this.groupNumberField;
        }
        set {
            this.groupNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GroupNumberSpecified {
        get {
            return this.groupNumberFieldSpecified;
        }
        set {
            this.groupNumberFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public partial class SymbolTrackingData {
    
    private byte reelIndexField;
    
    private byte reelStopField;
    
    private byte rowIndexField;
    
    private ushort colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte ReelIndex {
        get {
            return this.reelIndexField;
        }
        set {
            this.reelIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte ReelStop {
        get {
            return this.reelStopField;
        }
        set {
            this.reelStopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte RowIndex {
        get {
            return this.rowIndexField;
        }
        set {
            this.rowIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public partial class SymbolHotPositionData {
    
    private byte reelIndexField;
    
    private byte reelStopField;
    
    private byte windowStopIndexField;
    
    private ushort colorField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte ReelIndex {
        get {
            return this.reelIndexField;
        }
        set {
            this.reelIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte ReelStop {
        get {
            return this.reelStopField;
        }
        set {
            this.reelStopField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte WindowStopIndex {
        get {
            return this.windowStopIndexField;
        }
        set {
            this.windowStopIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort Color {
        get {
            return this.colorField;
        }
        set {
            this.colorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class ClearSymbolHighlightsResponse {
    
    private StreamingLightResponse streamingLightResponseField;
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="GetLightDevicesRequest", Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("GetLightDevicesRequest", Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class GetLightDevicesRequest1 {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute("GetLightDevicesResponse", Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class GetLightDevicesResponse1 {
    
    private StreamingLightResponse streamingLightResponseField;
    
    private List<StreamingLightFeatureData> streamingLightFeaturesField = new List<StreamingLightFeatureData>();
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StreamingLightFeatures")]
    public List<StreamingLightFeatureData>  StreamingLightFeatures {
        get {
            return this.streamingLightFeaturesField;
        }
        set {
            this.streamingLightFeaturesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public partial class StreamingLightFeatureData {
    
    private List<StreamingLightGroup> groupField = new List<StreamingLightGroup>();
    
    private string interfaceNameField;
    
    private LightType1 lightTypeField;
    
    private int totalLightCountField;
    
    private bool adjustableIntensityField;
    
    private bool symbolHighlightsSupportedField;
    
    private bool symbolHighlightsSupportedFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Group")]
    public List<StreamingLightGroup>  Group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public LightType1 LightType {
        get {
            return this.lightTypeField;
        }
        set {
            this.lightTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public int TotalLightCount {
        get {
            return this.totalLightCountField;
        }
        set {
            this.totalLightCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool AdjustableIntensity {
        get {
            return this.adjustableIntensityField;
        }
        set {
            this.adjustableIntensityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool SymbolHighlightsSupported {
        get {
            return this.symbolHighlightsSupportedField;
        }
        set {
            this.symbolHighlightsSupportedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SymbolHighlightsSupportedSpecified {
        get {
            return this.symbolHighlightsSupportedFieldSpecified;
        }
        set {
            this.symbolHighlightsSupportedFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public partial class StreamingLightGroup {
    
    private ushort numberOfLightsField;
    
    private bool lightsWorkingFeedbackSupportedField;
    
    private bool canShowGameOutcomeField;
    
    private bool realTimeFrameControlSupportedField;
    
    private ushort numberOfFramesSupportedField;
    
    private bool symbolHighlightsSupportedField;
    
    private bool symbolHighlightsSupportedFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort NumberOfLights {
        get {
            return this.numberOfLightsField;
        }
        set {
            this.numberOfLightsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool LightsWorkingFeedbackSupported {
        get {
            return this.lightsWorkingFeedbackSupportedField;
        }
        set {
            this.lightsWorkingFeedbackSupportedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool CanShowGameOutcome {
        get {
            return this.canShowGameOutcomeField;
        }
        set {
            this.canShowGameOutcomeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool RealTimeFrameControlSupported {
        get {
            return this.realTimeFrameControlSupportedField;
        }
        set {
            this.realTimeFrameControlSupportedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort NumberOfFramesSupported {
        get {
            return this.numberOfFramesSupportedField;
        }
        set {
            this.numberOfFramesSupportedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public bool SymbolHighlightsSupported {
        get {
            return this.symbolHighlightsSupportedField;
        }
        set {
            this.symbolHighlightsSupportedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SymbolHighlightsSupportedSpecified {
        get {
            return this.symbolHighlightsSupportedFieldSpecified;
        }
        set {
            this.symbolHighlightsSupportedFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="LightType", Namespace="CsiStreamingLightV1.xsd")]
public enum LightType1 {
    
    /// <remarks/>
    BonusGameLights,
    
    /// <remarks/>
    LightBezel,
    
    /// <remarks/>
    LightBars,
    
    /// <remarks/>
    ReelBackLights,
    
    /// <remarks/>
    Candle,
    
    /// <remarks/>
    AccentLights,
    
    /// <remarks/>
    CardReaderBezel,
    
    /// <remarks/>
    TopperLightRing,
    
    /// <remarks/>
    ReelDividerLights,
    
    /// <remarks/>
    ReelHighlights,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class GetLightIntensityRequest {
    
    private string interfaceNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class GetLightIntensityResponse {
    
    private StreamingLightResponse streamingLightResponseField;
    
    private string interfaceNameField;
    
    private byte intensityField;
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Intensity {
        get {
            return this.intensityField;
        }
        set {
            this.intensityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class NotificationEvent {
    
    private string interfaceNameField;
    
    private ushort groupIdField;
    
    private StreamingLightErrorCode notificationField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort GroupId {
        get {
            return this.groupIdField;
        }
        set {
            this.groupIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public StreamingLightErrorCode Notification {
        get {
            return this.notificationField;
        }
        set {
            this.notificationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class SetEnabledSymbolHighlightFeaturesRequest {
    
    private List<SymbolHighlightFeatureTypes> enabledSymbolHighlightFeaturesField = new List<SymbolHighlightFeatureTypes>();
    
    private string interfaceNameField;
    
    private ushort groupNumberField;
    
    private bool groupNumberFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("SymbolHighlightFeatureType", IsNullable=false)]
    public List<SymbolHighlightFeatureTypes>  EnabledSymbolHighlightFeatures {
        get {
            return this.enabledSymbolHighlightFeaturesField;
        }
        set {
            this.enabledSymbolHighlightFeaturesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort GroupNumber {
        get {
            return this.groupNumberField;
        }
        set {
            this.groupNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GroupNumberSpecified {
        get {
            return this.groupNumberFieldSpecified;
        }
        set {
            this.groupNumberFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public enum SymbolHighlightFeatureTypes {
    
    /// <remarks/>
    SymbolTracking,
    
    /// <remarks/>
    HotPosition,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class SetEnabledSymbolHighlightFeaturesResponse {
    
    private StreamingLightResponse streamingLightResponseField;
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class SetLightIntensityRequest {
    
    private string interfaceNameField;
    
    private byte intensityField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public byte Intensity {
        get {
            return this.intensityField;
        }
        set {
            this.intensityField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class SetLightIntensityResponse {
    
    private StreamingLightResponse streamingLightResponseField;
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class SetSymbolHighlightsRequest {
    
    private List<SymbolTrackingData> symbolTrackingDataListField = new List<SymbolTrackingData>();
    
    private List<SymbolHotPositionData> symbolHotPositionDataListField = new List<SymbolHotPositionData>();
    
    private string interfaceNameField;
    
    private ushort groupNumberField;
    
    private bool groupNumberFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<SymbolTrackingData>  SymbolTrackingDataList {
        get {
            return this.symbolTrackingDataListField;
        }
        set {
            this.symbolTrackingDataListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("SymbolHotPositionDataData", IsNullable=false)]
    public List<SymbolHotPositionData>  SymbolHotPositionDataList {
        get {
            return this.symbolHotPositionDataListField;
        }
        set {
            this.symbolHotPositionDataListField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort GroupNumber {
        get {
            return this.groupNumberField;
        }
        set {
            this.groupNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool GroupNumberSpecified {
        get {
            return this.groupNumberFieldSpecified;
        }
        set {
            this.groupNumberFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class SetSymbolHighlightsResponse {
    
    private StreamingLightResponse streamingLightResponseField;
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class StartLightSequenceRequest {
    
    private object itemField;
    
    private string interfaceNameField;
    
    private ushort groupNumberField;
    
    private PlayMode playModeField;
    
    public StartLightSequenceRequest() {
        this.playModeField = PlayMode.Restart;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("FrameData", typeof(StreamingLightFrameData))]
    [System.Xml.Serialization.XmlElementAttribute("SequenceData", typeof(StreamingLightSequenceData))]
    [System.Xml.Serialization.XmlElementAttribute("SequenceFile", typeof(string))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string InterfaceName {
        get {
            return this.interfaceNameField;
        }
        set {
            this.interfaceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public ushort GroupNumber {
        get {
            return this.groupNumberField;
        }
        set {
            this.groupNumberField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    [System.ComponentModel.DefaultValueAttribute(PlayMode.Restart)]
    public PlayMode PlayMode {
        get {
            return this.playModeField;
        }
        set {
            this.playModeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public partial class StreamingLightFrameData {
    
    private string frameNameField;
    
    private uint frameCountField;
    
    private byte[] frameDataField;
    
    private uint frameDataSizeField;
    
    /// <remarks/>
    public string FrameName {
        get {
            return this.frameNameField;
        }
        set {
            this.frameNameField = value;
        }
    }
    
    /// <remarks/>
    public uint FrameCount {
        get {
            return this.frameCountField;
        }
        set {
            this.frameCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] FrameData {
        get {
            return this.frameDataField;
        }
        set {
            this.frameDataField = value;
        }
    }
    
    /// <remarks/>
    public uint FrameDataSize {
        get {
            return this.frameDataSizeField;
        }
        set {
            this.frameDataSizeField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public partial class StreamingLightSequenceData {
    
    private string sequenceNameField;
    
    private byte[] sequenceDataField;
    
    /// <remarks/>
    public string SequenceName {
        get {
            return this.sequenceNameField;
        }
        set {
            this.sequenceNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
    public byte[] SequenceData {
        get {
            return this.sequenceDataField;
        }
        set {
            this.sequenceDataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiStreamingLightV1.xsd")]
public enum PlayMode {
    
    /// <remarks/>
    Restart,
    
    /// <remarks/>
    Continue,
    
    /// <remarks/>
    Queue,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiStreamingLightV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiStreamingLightV1.xsd", IsNullable=false)]
public partial class StartLightSequenceResponse {
    
    private StreamingLightResponse streamingLightResponseField;
    
    /// <remarks/>
    public StreamingLightResponse StreamingLightResponse {
        get {
            return this.streamingLightResponseField;
        }
        set {
            this.streamingLightResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class CsiTouchScreen {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("DPPDigitizerDebounceIntervalResponse", typeof(DPPDigitizerDebounceIntervalResponse))]
    [System.Xml.Serialization.XmlElementAttribute("DigitizerDebounceIntervalResponse", typeof(DigitizerDebounceIntervalResponse))]
    [System.Xml.Serialization.XmlElementAttribute("GetTouchScreenInfoRequest", typeof(GetTouchScreenInfoRequest))]
    [System.Xml.Serialization.XmlElementAttribute("GetTouchScreenInfoResponse", typeof(GetTouchScreenInfoResponse))]
    [System.Xml.Serialization.XmlElementAttribute("RequestMinimumDigitizerDebounceIntervalForDPP", typeof(RequestMinimumDigitizerDebounceIntervalForDPP))]
    [System.Xml.Serialization.XmlElementAttribute("ResetDigitizerDebounceIntervalForDPP", typeof(ResetDigitizerDebounceIntervalForDPP))]
    [System.Xml.Serialization.XmlElementAttribute("ResetDigitizerDebounceIntervalRequest", typeof(ResetDigitizerDebounceIntervalRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetDigitizerExclusiveModeRequest", typeof(SetDigitizerExclusiveModeRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SetDigitizerExclusiveModeResponse", typeof(SetDigitizerExclusiveModeResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SetDigitizerToMinimumDebounceIntervalRequest", typeof(SetDigitizerToMinimumDebounceIntervalRequest))]
    [System.Xml.Serialization.XmlElementAttribute("TouchCalibrationCompleteEvent", typeof(TouchCalibrationCompleteEvent))]
    [System.Xml.Serialization.XmlElementAttribute("TouchDisplayTargetEvent", typeof(TouchDisplayTargetEvent))]
    [System.Xml.Serialization.XmlElementAttribute("TouchScreenConnectionChangedEvent", typeof(TouchScreenConnectionChangedEvent))]
    [System.Xml.Serialization.XmlElementAttribute("TouchScreenInfoEvent", typeof(TouchScreenInfoEvent))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class DPPDigitizerDebounceIntervalResponse {
    
    private TouchScreenResponse touchScreenResponseField;
    
    private DigitizerInterval digitizerIntervalField;
    
    /// <remarks/>
    public TouchScreenResponse TouchScreenResponse {
        get {
            return this.touchScreenResponseField;
        }
        set {
            this.touchScreenResponseField = value;
        }
    }
    
    /// <remarks/>
    public DigitizerInterval DigitizerInterval {
        get {
            return this.digitizerIntervalField;
        }
        set {
            this.digitizerIntervalField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class TouchScreenResponse {
    
    private TouchScreenErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public TouchScreenResponse() {
        this.errorCodeField = TouchScreenErrorCode.NONE;
    }
    
    /// <remarks/>
    public TouchScreenErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
public enum TouchScreenErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    REQUEST_PROHIBITED_IN_THIS_JURISDICTION,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class DigitizerInterval {
    
    private ushort intervalField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ushort interval {
        get {
            return this.intervalField;
        }
        set {
            this.intervalField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class DigitizerDebounceIntervalResponse {
    
    private TouchScreenResponse touchScreenResponseField;
    
    private List<SpecificDigitizerInterval> digitizerIntervalsField = new List<SpecificDigitizerInterval>();
    
    /// <remarks/>
    public TouchScreenResponse TouchScreenResponse {
        get {
            return this.touchScreenResponseField;
        }
        set {
            this.touchScreenResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("Interval", IsNullable=false)]
    public List<SpecificDigitizerInterval>  DigitizerIntervals {
        get {
            return this.digitizerIntervalsField;
        }
        set {
            this.digitizerIntervalsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
public partial class SpecificDigitizerInterval {
    
    private ushort intervalField;
    
    private DigitizerRole digitizerRoleField;
    
    /// <remarks/>
    public ushort Interval {
        get {
            return this.intervalField;
        }
        set {
            this.intervalField = value;
        }
    }
    
    /// <remarks/>
    public DigitizerRole DigitizerRole {
        get {
            return this.digitizerRoleField;
        }
        set {
            this.digitizerRoleField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
public enum DigitizerRole {
    
    /// <remarks/>
    All,
    
    /// <remarks/>
    Main,
    
    /// <remarks/>
    Top,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Belly Glass")]
    BellyGlass,
    
    /// <remarks/>
    [System.Xml.Serialization.XmlEnumAttribute("Button Panel")]
    ButtonPanel,
    
    /// <remarks/>
    Topper,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class GetTouchScreenInfoRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class GetTouchScreenInfoResponse {
    
    private TouchScreenResponse touchScreenResponseField;
    
    private List<TouchScreenInfo> touchScreensField = new List<TouchScreenInfo>();
    
    /// <remarks/>
    public TouchScreenResponse TouchScreenResponse {
        get {
            return this.touchScreenResponseField;
        }
        set {
            this.touchScreenResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<TouchScreenInfo>  TouchScreens {
        get {
            return this.touchScreensField;
        }
        set {
            this.touchScreensField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
public partial class TouchScreenInfo {
    
    private uint driverSubClassField;
    
    private ushort driverField;
    
    private uint deviceIdField;
    
    private ushort displayField;
    
    /// <remarks/>
    public uint driverSubClass {
        get {
            return this.driverSubClassField;
        }
        set {
            this.driverSubClassField = value;
        }
    }
    
    /// <remarks/>
    public ushort driver {
        get {
            return this.driverField;
        }
        set {
            this.driverField = value;
        }
    }
    
    /// <remarks/>
    public uint deviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort display {
        get {
            return this.displayField;
        }
        set {
            this.displayField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class RequestMinimumDigitizerDebounceIntervalForDPP {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class ResetDigitizerDebounceIntervalForDPP {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class ResetDigitizerDebounceIntervalRequest {
    
    private DigitizerRole digitizerField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DigitizerRole digitizer {
        get {
            return this.digitizerField;
        }
        set {
            this.digitizerField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class SetDigitizerExclusiveModeRequest {
    
    private DigitizerExclusiveMode instanceField;
    
    /// <remarks/>
    public DigitizerExclusiveMode Instance {
        get {
            return this.instanceField;
        }
        set {
            this.instanceField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
public partial class DigitizerExclusiveMode {
    
    private DigitizerRole digitizerRoleField;
    
    private bool exclusiveModeRequestedField;
    
    /// <remarks/>
    public DigitizerRole DigitizerRole {
        get {
            return this.digitizerRoleField;
        }
        set {
            this.digitizerRoleField = value;
        }
    }
    
    /// <remarks/>
    public bool ExclusiveModeRequested {
        get {
            return this.exclusiveModeRequestedField;
        }
        set {
            this.exclusiveModeRequestedField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class SetDigitizerExclusiveModeResponse {
    
    private List<DigitizerExclusiveMode> instanceField = new List<DigitizerExclusiveMode>();
    
    private TouchScreenResponse touchScreenResponseField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Instance")]
    public List<DigitizerExclusiveMode>  Instance {
        get {
            return this.instanceField;
        }
        set {
            this.instanceField = value;
        }
    }
    
    /// <remarks/>
    public TouchScreenResponse TouchScreenResponse {
        get {
            return this.touchScreenResponseField;
        }
        set {
            this.touchScreenResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class SetDigitizerToMinimumDebounceIntervalRequest {
    
    private DigitizerRole digitizerField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public DigitizerRole digitizer {
        get {
            return this.digitizerField;
        }
        set {
            this.digitizerField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class TouchCalibrationCompleteEvent {
    
    private ushort displayField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ushort display {
        get {
            return this.displayField;
        }
        set {
            this.displayField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class TouchDisplayTargetEvent {
    
    private float xField;
    
    private float yField;
    
    private ushort displayField;
    
    private bool offscreenField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public float x {
        get {
            return this.xField;
        }
        set {
            this.xField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public float y {
        get {
            return this.yField;
        }
        set {
            this.yField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ushort display {
        get {
            return this.displayField;
        }
        set {
            this.displayField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public bool offscreen {
        get {
            return this.offscreenField;
        }
        set {
            this.offscreenField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class TouchScreenConnectionChangedEvent {
    
    private uint deviceIdField;
    
    private ushort driverField;
    
    private ushort driverSubClassField;
    
    private ConnectionStatus connectionStatusField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public uint deviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ushort driver {
        get {
            return this.driverField;
        }
        set {
            this.driverField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ushort driverSubClass {
        get {
            return this.driverSubClassField;
        }
        set {
            this.driverSubClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public ConnectionStatus connectionStatus {
        get {
            return this.connectionStatusField;
        }
        set {
            this.connectionStatusField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiTouchScreenV1.xsd")]
public enum ConnectionStatus {
    
    /// <remarks/>
    Invalid,
    
    /// <remarks/>
    Connected,
    
    /// <remarks/>
    Disconnected,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class TouchScreenInfoEvent {
    
    private List<TouchScreenInfo> touchScreensField = new List<TouchScreenInfo>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
    public List<TouchScreenInfo>  TouchScreens {
        get {
            return this.touchScreensField;
        }
        set {
            this.touchScreensField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiTouchScreenV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiTouchScreenV1.xsd", IsNullable=false)]
public partial class TouchScreens {
    
    private List<TouchScreenInfo> touchScreenInfoField = new List<TouchScreenInfo>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TouchScreenInfo")]
    public List<TouchScreenInfo>  TouchScreenInfo {
        get {
            return this.touchScreenInfoField;
        }
        set {
            this.touchScreenInfoField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class CsiVideoTopper {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("CacheContentRequest", typeof(CacheContentRequest))]
    [System.Xml.Serialization.XmlElementAttribute("CacheContentResponse", typeof(CacheContentResponse))]
    [System.Xml.Serialization.XmlElementAttribute("DeviceCapabilitiesRequest", typeof(DeviceCapabilitiesRequest))]
    [System.Xml.Serialization.XmlElementAttribute("DeviceCapabilitiesResponse", typeof(DeviceCapabilitiesResponse))]
    [System.Xml.Serialization.XmlElementAttribute("PlayContentRequest", typeof(PlayContentRequest))]
    [System.Xml.Serialization.XmlElementAttribute("PlayContentResponse", typeof(PlayContentResponse))]
    [System.Xml.Serialization.XmlElementAttribute("StopContentRequest", typeof(StopContentRequest))]
    [System.Xml.Serialization.XmlElementAttribute("StopContentResponse", typeof(StopContentResponse))]
    [System.Xml.Serialization.XmlElementAttribute("VideoTopperContentEvent", typeof(VideoTopperContentEvent))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class CacheContentRequest {
    
    private string contentPathField;
    
    /// <remarks/>
    public string ContentPath {
        get {
            return this.contentPathField;
        }
        set {
            this.contentPathField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class CacheContentResponse {
    
    private VideoTopperResponse videoTopperResponseField;
    
    /// <remarks/>
    public VideoTopperResponse VideoTopperResponse {
        get {
            return this.videoTopperResponseField;
        }
        set {
            this.videoTopperResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class VideoTopperResponse {
    
    private VideoTopperErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public VideoTopperResponse() {
        this.errorCodeField = VideoTopperErrorCode.NONE;
    }
    
    /// <remarks/>
    public VideoTopperErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiVideoTopperV1.xsd")]
public enum VideoTopperErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    CONTENT_PATH_DOES_NOT_EXIST,
    
    /// <remarks/>
    CONTENT_KEY_DOES_NOT_EXIST,
    
    /// <remarks/>
    CLIENT_DOES_NOT_OWN_RESOURCE,
    
    /// <remarks/>
    VIDEO_TOPPER_DRIVER_ERROR,
    
    /// <remarks/>
    OTHER_ERROR,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class DeviceCapabilitiesRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class DeviceCapabilitiesResponse {
    
    private VideoTopperResponse videoTopperResponseField;
    
    private DeviceCapabilitiesResponseVideoTopperResolution videoTopperResolutionField;
    
    private List<DeviceCapabilitiesResponseSupportedMedia> supportedMediaField = new List<DeviceCapabilitiesResponseSupportedMedia>();
    
    private VideoTopperPortalSupport supportsPortalsField;
    
    public DeviceCapabilitiesResponse() {
        this.supportsPortalsField = VideoTopperPortalSupport.VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN;
    }
    
    /// <remarks/>
    public VideoTopperResponse VideoTopperResponse {
        get {
            return this.videoTopperResponseField;
        }
        set {
            this.videoTopperResponseField = value;
        }
    }
    
    /// <remarks/>
    public DeviceCapabilitiesResponseVideoTopperResolution VideoTopperResolution {
        get {
            return this.videoTopperResolutionField;
        }
        set {
            this.videoTopperResolutionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("SupportedMedia")]
    public List<DeviceCapabilitiesResponseSupportedMedia>  SupportedMedia {
        get {
            return this.supportedMediaField;
        }
        set {
            this.supportedMediaField = value;
        }
    }
    
    /// <remarks/>
    [System.ComponentModel.DefaultValueAttribute(VideoTopperPortalSupport.VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN)]
    public VideoTopperPortalSupport SupportsPortals {
        get {
            return this.supportsPortalsField;
        }
        set {
            this.supportsPortalsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
public partial class DeviceCapabilitiesResponseVideoTopperResolution {
    
    private uint widthField;
    
    private uint heightField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint Width {
        get {
            return this.widthField;
        }
        set {
            this.widthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public uint Height {
        get {
            return this.heightField;
        }
        set {
            this.heightField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
public partial class DeviceCapabilitiesResponseSupportedMedia {
    
    private string mimeTypeField;
    
    private string fileExtensionField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string MimeType {
        get {
            return this.mimeTypeField;
        }
        set {
            this.mimeTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
    public string FileExtension {
        get {
            return this.fileExtensionField;
        }
        set {
            this.fileExtensionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiVideoTopperV1.xsd")]
public enum VideoTopperPortalSupport {
    
    /// <remarks/>
    VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN,
    
    /// <remarks/>
    VIDEO_TOPPER_PORTALS_SUPPORTED,
    
    /// <remarks/>
    VIDEO_TOPPER_PORTALS_UNSUPPORTED,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class PlayContentRequest {
    
    private string contentPathField;
    
    private uint seekTimeField;
    
    private bool loopVideoField;
    
    private uint imageDurationField;
    
    private uint playCountField;
    
    private bool playCountFieldSpecified;
    
    public PlayContentRequest() {
        this.seekTimeField = ((uint)(0));
        this.loopVideoField = false;
        this.imageDurationField = ((uint)(15));
    }
    
    /// <remarks/>
    public string ContentPath {
        get {
            return this.contentPathField;
        }
        set {
            this.contentPathField = value;
        }
    }
    
    /// <remarks/>
    public uint SeekTime {
        get {
            return this.seekTimeField;
        }
        set {
            this.seekTimeField = value;
        }
    }
    
    /// <remarks/>
    public bool LoopVideo {
        get {
            return this.loopVideoField;
        }
        set {
            this.loopVideoField = value;
        }
    }
    
    /// <remarks/>
    public uint ImageDuration {
        get {
            return this.imageDurationField;
        }
        set {
            this.imageDurationField = value;
        }
    }
    
    /// <remarks/>
    public uint PlayCount {
        get {
            return this.playCountField;
        }
        set {
            this.playCountField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool PlayCountSpecified {
        get {
            return this.playCountFieldSpecified;
        }
        set {
            this.playCountFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class PlayContentResponse {
    
    private VideoTopperResponse videoTopperResponseField;
    
    private string contentKeyField;
    
    /// <remarks/>
    public VideoTopperResponse VideoTopperResponse {
        get {
            return this.videoTopperResponseField;
        }
        set {
            this.videoTopperResponseField = value;
        }
    }
    
    /// <remarks/>
    public string ContentKey {
        get {
            return this.contentKeyField;
        }
        set {
            this.contentKeyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class StopContentRequest {
    
    private string contentKeyField;
    
    /// <remarks/>
    public string ContentKey {
        get {
            return this.contentKeyField;
        }
        set {
            this.contentKeyField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class StopContentResponse {
    
    private VideoTopperResponse videoTopperResponseField;
    
    /// <remarks/>
    public VideoTopperResponse VideoTopperResponse {
        get {
            return this.videoTopperResponseField;
        }
        set {
            this.videoTopperResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiVideoTopperV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiVideoTopperV1.xsd", IsNullable=false)]
public partial class VideoTopperContentEvent {
    
    private ContentEvent eventField;
    
    private string contentKeyField;
    
    private string eventMessageField;
    
    /// <remarks/>
    public ContentEvent Event {
        get {
            return this.eventField;
        }
        set {
            this.eventField = value;
        }
    }
    
    /// <remarks/>
    public string ContentKey {
        get {
            return this.contentKeyField;
        }
        set {
            this.contentKeyField = value;
        }
    }
    
    /// <remarks/>
    public string EventMessage {
        get {
            return this.eventMessageField;
        }
        set {
            this.eventMessageField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiVideoTopperV1.xsd")]
public enum ContentEvent {
    
    /// <remarks/>
    CONTENT_STARTED,
    
    /// <remarks/>
    CONTENT_STOPPED,
    
    /// <remarks/>
    CONTENT_ERROR,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class CsiWindow {
    
    private object itemField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AnimateRequest", typeof(AnimateRequest))]
    [System.Xml.Serialization.XmlElementAttribute("AnimateResponse", typeof(AnimateResponse))]
    [System.Xml.Serialization.XmlElementAttribute("ChangeZOrderRequest", typeof(ChangeZOrderRequest))]
    [System.Xml.Serialization.XmlElementAttribute("ChangeZOrderResponse", typeof(ChangeZOrderResponse))]
    [System.Xml.Serialization.XmlElementAttribute("CreatedRequest", typeof(CreatedRequest))]
    [System.Xml.Serialization.XmlElementAttribute("CreatedResponse", typeof(CreatedResponse))]
    [System.Xml.Serialization.XmlElementAttribute("DestroyedRequest", typeof(DestroyedRequest))]
    [System.Xml.Serialization.XmlElementAttribute("DestroyedResponse", typeof(DestroyedResponse))]
    [System.Xml.Serialization.XmlElementAttribute("MonitorConfigurationRequest", typeof(MonitorConfigurationRequest))]
    [System.Xml.Serialization.XmlElementAttribute("MonitorConfigurationResponse", typeof(MonitorConfigurationResponse))]
    [System.Xml.Serialization.XmlElementAttribute("MultiWindowRepositionRequest", typeof(MultiWindowRepositionRequest))]
    [System.Xml.Serialization.XmlElementAttribute("MultiWindowRepositionResponse", typeof(MultiWindowRepositionResponse))]
    [System.Xml.Serialization.XmlElementAttribute("MultiWindowSizeRequest", typeof(MultiWindowSizeRequest))]
    [System.Xml.Serialization.XmlElementAttribute("MultiWindowSizeResponse", typeof(MultiWindowSizeResponse))]
    [System.Xml.Serialization.XmlElementAttribute("RepositionRequest", typeof(RepositionRequest))]
    [System.Xml.Serialization.XmlElementAttribute("RepositionResponse", typeof(RepositionResponse))]
    [System.Xml.Serialization.XmlElementAttribute("SizeRequest", typeof(SizeRequest))]
    [System.Xml.Serialization.XmlElementAttribute("SizeResponse", typeof(SizeResponse))]
    public object Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class AnimateRequest {
    
    private uint durationField;
    
    private List<Animation> animationsField = new List<Animation>();
    
    /// <remarks/>
    public uint Duration {
        get {
            return this.durationField;
        }
        set {
            this.durationField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Animations")]
    public List<Animation>  Animations {
        get {
            return this.animationsField;
        }
        set {
            this.animationsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public partial class Animation {
    
    private ulong windowIdField;
    
    private List<AnimationViewport> animationViewportsField = new List<AnimationViewport>();
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("AnimationViewports")]
    public List<AnimationViewport>  AnimationViewports {
        get {
            return this.animationViewportsField;
        }
        set {
            this.animationViewportsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public partial class AnimationViewport {
    
    private ushort viewportIdField;
    
    private ushort layerIndexField;
    
    private VirtualRectangle startField;
    
    private VirtualRectangle endField;
    
    /// <remarks/>
    public ushort ViewportId {
        get {
            return this.viewportIdField;
        }
        set {
            this.viewportIdField = value;
        }
    }
    
    /// <remarks/>
    public ushort LayerIndex {
        get {
            return this.layerIndexField;
        }
        set {
            this.layerIndexField = value;
        }
    }
    
    /// <remarks/>
    public VirtualRectangle Start {
        get {
            return this.startField;
        }
        set {
            this.startField = value;
        }
    }
    
    /// <remarks/>
    public VirtualRectangle End {
        get {
            return this.endField;
        }
        set {
            this.endField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public partial class VirtualRectangle {
    
    private float xField;
    
    private float yField;
    
    private float wField;
    
    private float hField;
    
    /// <remarks/>
    public float x {
        get {
            return this.xField;
        }
        set {
            this.xField = value;
        }
    }
    
    /// <remarks/>
    public float y {
        get {
            return this.yField;
        }
        set {
            this.yField = value;
        }
    }
    
    /// <remarks/>
    public float w {
        get {
            return this.wField;
        }
        set {
            this.wField = value;
        }
    }
    
    /// <remarks/>
    public float h {
        get {
            return this.hField;
        }
        set {
            this.hField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class AnimateResponse {
    
    private WindowResponse windowResponseField;
    
    /// <remarks/>
    public WindowResponse WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class WindowResponse {
    
    private WindowErrorCode errorCodeField;
    
    private string errorDescriptionField;
    
    public WindowResponse() {
        this.errorCodeField = WindowErrorCode.NONE;
    }
    
    /// <remarks/>
    public WindowErrorCode ErrorCode {
        get {
            return this.errorCodeField;
        }
        set {
            this.errorCodeField = value;
        }
    }
    
    /// <remarks/>
    public string ErrorDescription {
        get {
            return this.errorDescriptionField;
        }
        set {
            this.errorDescriptionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public enum WindowErrorCode {
    
    /// <remarks/>
    NONE,
    
    /// <remarks/>
    UNKNOWN_WINDOW,
    
    /// <remarks/>
    INVALID_WINDOW,
    
    /// <remarks/>
    INVALID_WINDOW_LOCATION,
    
    /// <remarks/>
    INVALID_VIEWPORT_LOCATION,
    
    /// <remarks/>
    INVALID_ANIMATION,
    
    /// <remarks/>
    UNSUPPORTED_REQUEST,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class ChangeZOrderRequest {
    
    private ulong windowIdField;
    
    private ChangeZOrderRequestAbsolutePosition absolutePositionField;
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    public ChangeZOrderRequestAbsolutePosition AbsolutePosition {
        get {
            return this.absolutePositionField;
        }
        set {
            this.absolutePositionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
public enum ChangeZOrderRequestAbsolutePosition {
    
    /// <remarks/>
    Front,
    
    /// <remarks/>
    Back,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class ChangeZOrderResponse {
    
    private WindowResponse windowResponseField;
    
    private ulong windowIdField;
    
    private bool windowIdFieldSpecified;
    
    /// <remarks/>
    public WindowResponse WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WindowIdSpecified {
        get {
            return this.windowIdFieldSpecified;
        }
        set {
            this.windowIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class CreatedRequest {
    
    private bool flagsField;
    
    private bool multitouchSupportedField;
    
    private bool multitouchSupportedFieldSpecified;
    
    private bool simulateMouseEventsOnDppField;
    
    private bool simulateMouseEventsOnDppFieldSpecified;
    
    private Priority priorityTypeField;
    
    private List<long> windowHandleField = new List<long>();
    
    /// <remarks/>
    public bool Flags {
        get {
            return this.flagsField;
        }
        set {
            this.flagsField = value;
        }
    }
    
    /// <remarks/>
    public bool MultitouchSupported {
        get {
            return this.multitouchSupportedField;
        }
        set {
            this.multitouchSupportedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool MultitouchSupportedSpecified {
        get {
            return this.multitouchSupportedFieldSpecified;
        }
        set {
            this.multitouchSupportedFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public bool SimulateMouseEventsOnDpp {
        get {
            return this.simulateMouseEventsOnDppField;
        }
        set {
            this.simulateMouseEventsOnDppField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SimulateMouseEventsOnDppSpecified {
        get {
            return this.simulateMouseEventsOnDppFieldSpecified;
        }
        set {
            this.simulateMouseEventsOnDppFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public Priority PriorityType {
        get {
            return this.priorityTypeField;
        }
        set {
            this.priorityTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WindowHandle")]
    public List<long>  WindowHandle {
        get {
            return this.windowHandleField;
        }
        set {
            this.windowHandleField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class CreatedResponse {
    
    private WindowResponse windowResponseField;
    
    private ulong windowIdField;
    
    private bool windowIdFieldSpecified;
    
    /// <remarks/>
    public WindowResponse WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WindowIdSpecified {
        get {
            return this.windowIdFieldSpecified;
        }
        set {
            this.windowIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class DestroyedRequest {
    
    private ulong windowIdField;
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class DestroyedResponse {
    
    private WindowResponse windowResponseField;
    
    private ulong windowIdField;
    
    private bool windowIdFieldSpecified;
    
    /// <remarks/>
    public WindowResponse WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WindowIdSpecified {
        get {
            return this.windowIdFieldSpecified;
        }
        set {
            this.windowIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class MonitorConfigurationRequest {
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class MonitorConfigurationResponse {
    
    private WindowResponse windowResponseField;
    
    private MonitorConfigurationResponseData dataField;
    
    /// <remarks/>
    public WindowResponse WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    public MonitorConfigurationResponseData Data {
        get {
            return this.dataField;
        }
        set {
            this.dataField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
public partial class MonitorConfigurationResponseData {
    
    private DesktopRectangle1 desktopField;
    
    private MonitorConfiguration1 monitorConfigurationField;
    
    /// <remarks/>
    public DesktopRectangle1 Desktop {
        get {
            return this.desktopField;
        }
        set {
            this.desktopField = value;
        }
    }
    
    /// <remarks/>
    public MonitorConfiguration1 MonitorConfiguration {
        get {
            return this.monitorConfigurationField;
        }
        set {
            this.monitorConfigurationField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="DesktopRectangle", Namespace="CsiWindowV1.xsd")]
public partial class DesktopRectangle1 {
    
    private int xField;
    
    private int yField;
    
    private int wField;
    
    private int hField;
    
    /// <remarks/>
    public int x {
        get {
            return this.xField;
        }
        set {
            this.xField = value;
        }
    }
    
    /// <remarks/>
    public int y {
        get {
            return this.yField;
        }
        set {
            this.yField = value;
        }
    }
    
    /// <remarks/>
    public int w {
        get {
            return this.wField;
        }
        set {
            this.wField = value;
        }
    }
    
    /// <remarks/>
    public int h {
        get {
            return this.hField;
        }
        set {
            this.hField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="MonitorConfiguration", Namespace="CsiWindowV1.xsd")]
public partial class MonitorConfiguration1 {
    
    private List<MonitorConfigurationMonitor> monitorField = new List<MonitorConfigurationMonitor>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Monitor")]
    public List<MonitorConfigurationMonitor>  Monitor {
        get {
            return this.monitorField;
        }
        set {
            this.monitorField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
public partial class MonitorConfigurationMonitor {
    
    private ushort identifierField;
    
    private MonitorRole1 roleField;
    
    private MonitorStyle1 styleField;
    
    private MonitorAspect1 aspectField;
    
    private MonitorConfigurationMonitorModel modelField;
    
    private DesktopRectangle1 desktopCoordinatesField;
    
    private float virtualXField;
    
    private float virtualYField;
    
    private MonitorConfigurationMonitorAdditionalLayers additionalLayersField;
    
    /// <remarks/>
    public ushort Identifier {
        get {
            return this.identifierField;
        }
        set {
            this.identifierField = value;
        }
    }
    
    /// <remarks/>
    public MonitorRole1 Role {
        get {
            return this.roleField;
        }
        set {
            this.roleField = value;
        }
    }
    
    /// <remarks/>
    public MonitorStyle1 Style {
        get {
            return this.styleField;
        }
        set {
            this.styleField = value;
        }
    }
    
    /// <remarks/>
    public MonitorAspect1 Aspect {
        get {
            return this.aspectField;
        }
        set {
            this.aspectField = value;
        }
    }
    
    /// <remarks/>
    public MonitorConfigurationMonitorModel Model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    public DesktopRectangle1 DesktopCoordinates {
        get {
            return this.desktopCoordinatesField;
        }
        set {
            this.desktopCoordinatesField = value;
        }
    }
    
    /// <remarks/>
    public float VirtualX {
        get {
            return this.virtualXField;
        }
        set {
            this.virtualXField = value;
        }
    }
    
    /// <remarks/>
    public float VirtualY {
        get {
            return this.virtualYField;
        }
        set {
            this.virtualYField = value;
        }
    }
    
    /// <remarks/>
    public MonitorConfigurationMonitorAdditionalLayers AdditionalLayers {
        get {
            return this.additionalLayersField;
        }
        set {
            this.additionalLayersField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="MonitorRole", Namespace="CsiWindowV1.xsd")]
public enum MonitorRole1 {
    
    /// <remarks/>
    Main,
    
    /// <remarks/>
    Top,
    
    /// <remarks/>
    BellyGlass,
    
    /// <remarks/>
    ButtonPanel,
    
    /// <remarks/>
    Topper,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="MonitorStyle", Namespace="CsiWindowV1.xsd")]
public enum MonitorStyle1 {
    
    /// <remarks/>
    Normal,
    
    /// <remarks/>
    RoundTop,
    
    /// <remarks/>
    PureDepth,
    
    /// <remarks/>
    ExtendedTouchscreen,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(TypeName="MonitorAspect", Namespace="CsiWindowV1.xsd")]
public enum MonitorAspect1 {
    
    /// <remarks/>
    Standard,
    
    /// <remarks/>
    Widescreen,
    
    /// <remarks/>
    Narrow,
    
    /// <remarks/>
    Ultrawide,
    
    /// <remarks/>
    Portrait,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
public partial class MonitorConfigurationMonitorModel {
    
    private string manufacturerField;
    
    private string modelField;
    
    private string versionField;
    
    /// <remarks/>
    public string Manufacturer {
        get {
            return this.manufacturerField;
        }
        set {
            this.manufacturerField = value;
        }
    }
    
    /// <remarks/>
    public string Model {
        get {
            return this.modelField;
        }
        set {
            this.modelField = value;
        }
    }
    
    /// <remarks/>
    public string Version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
public partial class MonitorConfigurationMonitorAdditionalLayers {
    
    private List<int> offsetXField = new List<int>();
    
    private List<int> offsetYField = new List<int>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("OffsetX")]
    public List<int>  OffsetX {
        get {
            return this.offsetXField;
        }
        set {
            this.offsetXField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("OffsetY")]
    public List<int>  OffsetY {
        get {
            return this.offsetYField;
        }
        set {
            this.offsetYField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class MultiWindowRepositionRequest {
    
    private List<Window> windowsField = new List<Window>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Windows")]
    public List<Window>  Windows {
        get {
            return this.windowsField;
        }
        set {
            this.windowsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public partial class Window {
    
    private ulong windowIdField;
    
    private WindowType typeField;
    
    private bool statusField;
    
    private DesktopRectangle1 viewportExtentsField;
    
    private ViewportList viewportsField;
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    public WindowType Type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public bool Status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    public DesktopRectangle1 ViewportExtents {
        get {
            return this.viewportExtentsField;
        }
        set {
            this.viewportExtentsField = value;
        }
    }
    
    /// <remarks/>
    public ViewportList Viewports {
        get {
            return this.viewportsField;
        }
        set {
            this.viewportsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public enum WindowType {
    
    /// <remarks/>
    Dockable,
    
    /// <remarks/>
    Dialog,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public partial class ViewportList {
    
    private List<Viewport> viewportField = new List<Viewport>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Viewport")]
    public List<Viewport>  Viewport {
        get {
            return this.viewportField;
        }
        set {
            this.viewportField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public partial class Viewport {
    
    private ushort viewportIdField;
    
    private DockType dockField;
    
    private uint dockPriorityField;
    
    private VirtualRectangle requestedViewportCoordinatesField;
    
    private VirtualRectangle adjustedViewportCoordinatesField;
    
    private DesktopRectangle1 adjustedViewportRectangleField;
    
    private DesktopRectangle1 requestedViewportRectangleField;
    
    private ushort layerIndexField;
    
    private bool layerIndexFieldSpecified;
    
    private StereoscopicFrameList stereoscopicFramesField;
    
    /// <remarks/>
    public ushort ViewportId {
        get {
            return this.viewportIdField;
        }
        set {
            this.viewportIdField = value;
        }
    }
    
    /// <remarks/>
    public DockType Dock {
        get {
            return this.dockField;
        }
        set {
            this.dockField = value;
        }
    }
    
    /// <remarks/>
    public uint DockPriority {
        get {
            return this.dockPriorityField;
        }
        set {
            this.dockPriorityField = value;
        }
    }
    
    /// <remarks/>
    public VirtualRectangle RequestedViewportCoordinates {
        get {
            return this.requestedViewportCoordinatesField;
        }
        set {
            this.requestedViewportCoordinatesField = value;
        }
    }
    
    /// <remarks/>
    public VirtualRectangle AdjustedViewportCoordinates {
        get {
            return this.adjustedViewportCoordinatesField;
        }
        set {
            this.adjustedViewportCoordinatesField = value;
        }
    }
    
    /// <remarks/>
    public DesktopRectangle1 AdjustedViewportRectangle {
        get {
            return this.adjustedViewportRectangleField;
        }
        set {
            this.adjustedViewportRectangleField = value;
        }
    }
    
    /// <remarks/>
    public DesktopRectangle1 RequestedViewportRectangle {
        get {
            return this.requestedViewportRectangleField;
        }
        set {
            this.requestedViewportRectangleField = value;
        }
    }
    
    /// <remarks/>
    public ushort LayerIndex {
        get {
            return this.layerIndexField;
        }
        set {
            this.layerIndexField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool LayerIndexSpecified {
        get {
            return this.layerIndexFieldSpecified;
        }
        set {
            this.layerIndexFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    public StereoscopicFrameList StereoscopicFrames {
        get {
            return this.stereoscopicFramesField;
        }
        set {
            this.stereoscopicFramesField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public enum DockType {
    
    /// <remarks/>
    Left,
    
    /// <remarks/>
    Top,
    
    /// <remarks/>
    Right,
    
    /// <remarks/>
    Bottom,
    
    /// <remarks/>
    LeftTop,
    
    /// <remarks/>
    RightTop,
    
    /// <remarks/>
    LeftBottom,
    
    /// <remarks/>
    RightBottom,
    
    /// <remarks/>
    Overlay,
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="CsiWindowV1.xsd")]
public partial class StereoscopicFrameList {
    
    private List<StereoscopicFrame> stereoscopicFrameField = new List<StereoscopicFrame>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("StereoscopicFrame")]
    public List<StereoscopicFrame>  StereoscopicFrame {
        get {
            return this.stereoscopicFrameField;
        }
        set {
            this.stereoscopicFrameField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class MultiWindowRepositionResponse {
    
    private List<WindowResponse> windowResponseField = new List<WindowResponse>();
    
    private List<ulong> windowIdField = new List<ulong>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WindowResponse")]
    public List<WindowResponse>  WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WindowId")]
    public List<ulong>  WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class MultiWindowSizeRequest {
    
    private List<Window> windowsField = new List<Window>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Windows")]
    public List<Window>  Windows {
        get {
            return this.windowsField;
        }
        set {
            this.windowsField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class MultiWindowSizeResponse {
    
    private List<WindowResponse> windowResponseField = new List<WindowResponse>();
    
    private List<ulong> windowIdField = new List<ulong>();
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WindowResponse")]
    public List<WindowResponse>  WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("WindowId")]
    public List<ulong>  WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class RepositionRequest {
    
    private Window windowField;
    
    /// <remarks/>
    public Window Window {
        get {
            return this.windowField;
        }
        set {
            this.windowField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class RepositionResponse {
    
    private WindowResponse windowResponseField;
    
    private ulong windowIdField;
    
    private bool windowIdFieldSpecified;
    
    /// <remarks/>
    public WindowResponse WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WindowIdSpecified {
        get {
            return this.windowIdFieldSpecified;
        }
        set {
            this.windowIdFieldSpecified = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class SizeRequest {
    
    private Window windowField;
    
    /// <remarks/>
    public Window Window {
        get {
            return this.windowField;
        }
        set {
            this.windowField = value;
        }
    }
}

}

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal { 
    using System.Collections.Generic;
    using System.Xml.Serialization;

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="CsiWindowV1.xsd")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="CsiWindowV1.xsd", IsNullable=false)]
public partial class SizeResponse {
    
    private WindowResponse windowResponseField;
    
    private ulong windowIdField;
    
    private bool windowIdFieldSpecified;
    
    /// <remarks/>
    public WindowResponse WindowResponse {
        get {
            return this.windowResponseField;
        }
        set {
            this.windowResponseField = value;
        }
    }
    
    /// <remarks/>
    public ulong WindowId {
        get {
            return this.windowIdField;
        }
        set {
            this.windowIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool WindowIdSpecified {
        get {
            return this.windowIdFieldSpecified;
        }
        set {
            this.windowIdFieldSpecified = value;
        }
    }
}
}
#pragma warning restore 1591