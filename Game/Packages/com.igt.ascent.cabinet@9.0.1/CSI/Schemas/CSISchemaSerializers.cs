// <auto-generated>
//   This file was generated by GenerateSerializers.py.
//   Changes to this file may cause incorrect behavior and will be lost if the file is regenerated.
// </auto-generated>

#pragma warning disable

#if _DYNAMIC_XMLSERIALIZER_COMPILATION

[assembly:System.Security.AllowPartiallyTrustedCallers()]

[assembly:System.Security.SecurityTransparent()]

[assembly:System.Security.SecurityRules(System.Security.SecurityRuleSet.Level1)]

#endif

namespace IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Serializers {



    public class XmlSerializationWriter1 : System.Xml.Serialization.XmlSerializationWriter {



        public void Write531_CsiButton(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiButton", @"CsiButtonV1.xsd");

                return;

            }

            TopLevelElement();

            Write29_CsiButton(@"CsiButton", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton)o), false, false);

        }



        public void Write532_CsiCabinet(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiCabinet", @"CsiCabinetV1.xsd");

                return;

            }

            TopLevelElement();

            Write50_CsiCabinet(@"CsiCabinet", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet)o), false, false);

        }



        public void Write533_CsiLight(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiLight", @"CsiLightV1.xsd");

                return;

            }

            TopLevelElement();

            Write88_CsiLight(@"CsiLight", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight)o), false, false);

        }



        public void Write534_CsiResource(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiResource", @"CsiResourceV1.xsd");

                return;

            }

            TopLevelElement();

            Write110_CsiResource(@"CsiResource", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource)o), false, false);

        }



        public void Write535_CsiSound(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiSound", @"CsiSoundV1.xsd");

                return;

            }

            TopLevelElement();

            Write146_CsiSound(@"CsiSound", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound)o), false, false);

        }



        public void Write536_CsiWindow(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiWindow", @"CsiWindowV1.xsd");

                return;

            }

            TopLevelElement();

            Write188_CsiWindow(@"CsiWindow", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow)o), false, false);

        }



        public void Write537_CsiReel(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiReel", @"CsiReelV1.xsd");

                return;

            }

            TopLevelElement();

            Write240_CsiReel(@"CsiReel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel)o), false, false);

        }



        public void Write538_CsiSolenoid(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiSolenoid", @"CsiSolenoidV1.xsd");

                return;

            }

            TopLevelElement();

            Write245_CsiSolenoid(@"CsiSolenoid", @"CsiSolenoidV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid)o), false, false);

        }



        public void Write539_CsiStreamingLight(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiStreamingLight", @"CsiStreamingLightV1.xsd");

                return;

            }

            TopLevelElement();

            Write274_CsiStreamingLight(@"CsiStreamingLight", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight)o), false, false);

        }



        public void Write540_CsiBankSynchronization(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiBankSynchronization", @"CsiBankSynchronizationV1.xsd");

                return;

            }

            TopLevelElement();

            Write291_CsiBankSynchronization(@"CsiBankSynchronization", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization)o), false, false);

        }



        public void Write541_CsiTouchScreen(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiTouchScreen", @"CsiTouchScreenV1.xsd");

                return;

            }

            TopLevelElement();

            Write314_CsiTouchScreen(@"CsiTouchScreen", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen)o), false, false);

        }



        public void Write542_CsiReadiness(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiReadiness", @"CsiReadinessV1.xsd");

                return;

            }

            TopLevelElement();

            Write327_CsiReadiness(@"CsiReadiness", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness)o), false, false);

        }



        public void Write543_CsiMonitor(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiMonitor", @"CsiMonitorV1.xsd");

                return;

            }

            TopLevelElement();

            Write361_CsiMonitor(@"CsiMonitor", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor)o), false, false);

        }



        public void Write544_CsiVideoTopper(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiVideoTopper", @"CsiVideoTopperV1.xsd");

                return;

            }

            TopLevelElement();

            Write377_CsiVideoTopper(@"CsiVideoTopper", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper)o), false, false);

        }



        public void Write545_CsiHaptic(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiHaptic", @"CsiHapticV1.xsd");

                return;

            }

            TopLevelElement();

            Write391_CsiHaptic(@"CsiHaptic", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic)o), false, false);

        }



        public void Write546_CsiDepthCamera(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiDepthCamera", @"CsiDepthCameraV1.xsd");

                return;

            }

            TopLevelElement();

            Write406_CsiDepthCamera(@"CsiDepthCamera", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera)o), false, false);

        }



        public void Write547_CsiPresentationSpeed(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiPresentationSpeed", @"CsiPresentationSpeedV1.xsd");

                return;

            }

            TopLevelElement();

            Write413_CsiPresentationSpeed(@"CsiPresentationSpeed", @"CsiPresentationSpeedV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed)o), false, false);

        }



        public void Write548_CsiPortal(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiPortal", @"CsiPortalV1.xsd");

                return;

            }

            TopLevelElement();

            Write472_CsiPortal(@"CsiPortal", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal)o), false, false);

        }



        public void Write549_CsiMechanicalBell(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiMechanicalBell", @"CsiMechanicalBellV1.xsd");

                return;

            }

            TopLevelElement();

            Write479_CsiMechanicalBell(@"CsiMechanicalBell", @"CsiMechanicalBellV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell)o), false, false);

        }



        public void Write550_CsiService(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiService", @"CsiServiceV1.xsd");

                return;

            }

            TopLevelElement();

            Write506_CsiService(@"CsiService", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService)o), false, false);

        }



        public void Write551_CsiEmulatedCashoutService(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiEmulatedCashoutService", @"CsiEmulatedCashoutServiceV1.xsd");

                return;

            }

            TopLevelElement();

            Write516_CsiEmulatedCashoutService(@"CsiEmulatedCashoutService", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService)o), false, false);

        }



        public void Write552_CsiConnect(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"CsiConnect", @"CsiConnectV1.xsd");

                return;

            }

            TopLevelElement();

            Write528_CsiConnect(@"CsiConnect", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect)o), false, false);

        }



        public void Write553_Csi(object o) {

            WriteStartDocument();

            if (o == null) {

                WriteEmptyTag(@"Csi", @"CsiMessageV1.xsd");

                return;

            }

            TopLevelElement();

            Write530_Csi(@"Csi", @"CsiMessageV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi)o), false, false);

        }



        void Write530_Csi(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMessageV1.xsd");

            WriteAttribute(@"Category", @"CsiMessageV1.xsd", Write517_Category(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category)o.@Category)));

            WriteAttribute(@"MessageType", @"CsiMessageV1.xsd", Write529_MessageType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType)o.@MessageType)));

            WriteAttribute(@"MessageId", @"CsiMessageV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@MessageId)));

            if ((((global::System.Xml.XmlElement)o.@CsiBody)) is System.Xml.XmlNode || ((global::System.Xml.XmlElement)o.@CsiBody) == null) {

                WriteElementLiteral((System.Xml.XmlNode)((global::System.Xml.XmlElement)o.@CsiBody), @"CsiBody", @"CsiMessageV1.xsd", false, false);

            }

            else {

                throw CreateInvalidAnyTypeException(((global::System.Xml.XmlElement)o.@CsiBody));

            }

            WriteEndElement(o);

        }



        string Write529_MessageType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType.@Event: s = @"Event"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType.@Request: s = @"Request"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType.@Response: s = @"Response"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType");

            }

            return s;

        }



        string Write517_Category(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiButton: s = @"CsiButton"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiCabinet: s = @"CsiCabinet"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiLight: s = @"CsiLight"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiResource: s = @"CsiResource"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiSound: s = @"CsiSound"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiWindow: s = @"CsiWindow"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiReel: s = @"CsiReel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiSolenoid: s = @"CsiSolenoid"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiStreamingLight: s = @"CsiStreamingLight"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiBankSynchronization: s = @"CsiBankSynchronization"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiTouchScreen: s = @"CsiTouchScreen"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiReadiness: s = @"CsiReadiness"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiMonitor: s = @"CsiMonitor"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiVideoTopper: s = @"CsiVideoTopper"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiHaptic: s = @"CsiHaptic"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiDepthCamera: s = @"CsiDepthCamera"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiPresentationSpeed: s = @"CsiPresentationSpeed"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiPortal: s = @"CsiPortal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiMechanicalBell: s = @"CsiMechanicalBell"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiService: s = @"CsiService"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiEmulatedCashoutService: s = @"CsiEmulatedCashoutService"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category");

            }

            return s;

        }



        void Write528_CsiConnect(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiConnectV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectShutdownSend) {

                    Write527_CsiConnectShutdownSend(@"ShutdownSend", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectShutdownSend)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponse) {

                    Write526_Item(@"InitializeCsiResponse", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequest) {

                    Write522_CsiConnectInitializeCsiRequest(@"InitializeCsiRequest", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write522_CsiConnectInitializeCsiRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiConnectV1.xsd");

            Write519_Item(@"Categories", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequestCategories)o.@Categories), false, false);

            Write521_ClientConnection(@"ClientInfo", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClientConnection)o.@ClientInfo), false, false);

            WriteEndElement(o);

        }



        void Write521_ClientConnection(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClientConnection o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClientConnection)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ClientConnection", @"CsiConnectV1.xsd");

            WriteElementString(@"ClientType", @"CsiConnectV1.xsd", Write520_ClientType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType)o.@ClientType)));

            WriteElementString(@"Token", @"CsiConnectV1.xsd", ((global::System.String)o.@Token));

            WriteEndElement(o);

        }



        string Write520_ClientType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Unknown: s = @"Unknown"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@SystemPrompt: s = @"SystemPrompt"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Tilt: s = @"Tilt"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Portal: s = @"Portal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@AttendantMenu: s = @"AttendantMenu"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@SyncSation: s = @"SyncSation"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@SystemExtension: s = @"SystemExtension"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@MainMenu: s = @"MainMenu"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Game: s = @"Game"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@DeviceEmulator: s = @"DeviceEmulator"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Debug: s = @"Debug"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType");

            }

            return s;

        }



        void Write519_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequestCategories o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequestCategories)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiConnectV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion>)o.@CategoryVersion;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write518_CategoryVersion(@"CategoryVersion", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write518_CategoryVersion(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CategoryVersion", @"CsiConnectV1.xsd");

            WriteElementString(@"Category", @"CsiConnectV1.xsd", Write517_Category(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category)o.@Category)));

            WriteElementStringRaw(@"MajorVersion", @"CsiConnectV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@MajorVersion)));

            WriteElementStringRaw(@"MinorVersion", @"CsiConnectV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@MinorVersion)));

            WriteEndElement(o);

        }



        void Write526_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiConnectV1.xsd");

            Write524_ConnectResponse(@"ConnectResponse", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectResponse)o.@ConnectResponse), false, false);

            Write525_Item(@"Categories", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponseCategories)o.@Categories), false, false);

            WriteEndElement(o);

        }



        void Write525_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponseCategories o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponseCategories)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiConnectV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion>)o.@CategoryVersion;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write518_CategoryVersion(@"CategoryVersion", @"CsiConnectV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write524_ConnectResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ConnectResponse", @"CsiConnectV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiConnectV1.xsd", Write523_ConnectErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiConnectV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write523_ConnectErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode.@TOKEN_ALREADY_IN_USE: s = @"TOKEN_ALREADY_IN_USE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode");

            }

            return s;

        }



        void Write527_CsiConnectShutdownSend(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectShutdownSend o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectShutdownSend)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiConnectV1.xsd");

            WriteElementString(@"ShutdownDescription", @"CsiConnectV1.xsd", ((global::System.String)o.@ShutdownDescription));

            WriteEndElement(o);

        }



        void Write516_CsiEmulatedCashoutService(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiEmulatedCashoutService", @"CsiEmulatedCashoutServiceV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleRequest) {

                    Write513_Item(@"SetEmulatedCashoutServiceVisibleRequest", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleResponse) {

                    Write514_Item(@"SetEmulatedCashoutServiceVisibleResponse", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowEmulatedCashoutServiceEvent) {

                    Write515_Item(@"ShowEmulatedCashoutServiceEvent", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowEmulatedCashoutServiceEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowResponse) {

                    Write512_Item(@"RegisterAsEmulatedCashoutServiceWindowResponse", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CultureChangedEvent) {

                    Write507_CultureChangedEvent(@"CultureChangedEvent", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CultureChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HideEmulatedCashoutServiceEvent) {

                    Write508_Item(@"HideEmulatedCashoutServiceEvent", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HideEmulatedCashoutServiceEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowRequest) {

                    Write509_Item(@"RegisterAsEmulatedCashoutServiceWindowRequest", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write509_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"RegisterAsEmulatedCashoutServiceWindowRequest", @"CsiEmulatedCashoutServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write508_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HideEmulatedCashoutServiceEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HideEmulatedCashoutServiceEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"HideEmulatedCashoutServiceEvent", @"CsiEmulatedCashoutServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write507_CultureChangedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CultureChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CultureChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiEmulatedCashoutServiceV1.xsd");

            WriteElementString(@"Culture", @"CsiEmulatedCashoutServiceV1.xsd", ((global::System.String)o.@Culture));

            WriteEndElement(o);

        }



        void Write512_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiEmulatedCashoutServiceV1.xsd");

            Write511_EmulatedCashoutServiceResponse(@"EmulatedCashoutServiceResponse", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceResponse)o.@EmulatedCashoutServiceResponse), false, false);

            WriteEndElement(o);

        }



        void Write511_EmulatedCashoutServiceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiEmulatedCashoutServiceV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiEmulatedCashoutServiceV1.xsd", Write510_Item(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiEmulatedCashoutServiceV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write510_Item(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@WINDOW_ALREADY_REGISTERED: s = @"WINDOW_ALREADY_REGISTERED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@OPERATION_FAILED: s = @"OPERATION_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@HOST_OPERATION_CALLED_BY_CLIENT: s = @"HOST_OPERATION_CALLED_BY_CLIENT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@CLIENT_OPERATION_CALLED_BY_HOST: s = @"CLIENT_OPERATION_CALLED_BY_HOST"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode");

            }

            return s;

        }



        void Write515_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowEmulatedCashoutServiceEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowEmulatedCashoutServiceEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ShowEmulatedCashoutServiceEvent", @"CsiEmulatedCashoutServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write514_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiEmulatedCashoutServiceV1.xsd");

            Write511_EmulatedCashoutServiceResponse(@"EmulatedCashoutServiceResponse", @"CsiEmulatedCashoutServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceResponse)o.@EmulatedCashoutServiceResponse), false, false);

            WriteEndElement(o);

        }



        void Write513_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiEmulatedCashoutServiceV1.xsd");

            WriteElementStringRaw(@"Visible", @"CsiEmulatedCashoutServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Visible)));

            WriteEndElement(o);

        }



        void Write506_CsiService(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiService", @"CsiServiceV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsResponse) {

                    Write498_Item(@"RegisterForCallAttendantChangedEventsResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest) {

                    Write499_Item(@"RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsRequest) {

                    Write497_Item(@"RegisterForCallAttendantChangedEventsRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayerServiceRequestChangedEvent) {

                    Write494_Item(@"PlayerServiceRequestChangedEvent", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayerServiceRequestChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PromptPlayerOnCashoutConfigItemChangedEvent) {

                    Write495_Item(@"PromptPlayerOnCashoutConfigItemChangedEvent", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PromptPlayerOnCashoutConfigItemChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse) {

                    Write500_Item(@"RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse) {

                    Write504_Item(@"RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceRequest) {

                    Write505_ServiceRequest(@"ServiceRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest) {

                    Write503_Item(@"RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsRequest) {

                    Write501_Item(@"RegisterForPlayerServiceRequestChangedEventsRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsResponse) {

                    Write502_Item(@"RegisterForPlayerServiceRequestChangedEventsResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantRequest) {

                    Write483_GetCallAttendantRequest(@"GetCallAttendantRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantResponse) {

                    Write486_GetCallAttendantResponse(@"GetCallAttendantResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedServiceButtonEnabledConfigItemChangedEvent) {

                    Write482_Item(@"EmulatedServiceButtonEnabledConfigItemChangedEvent", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedServiceButtonEnabledConfigItemChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CallAttendantChangedEvent) {

                    Write480_CallAttendantChangedEvent(@"CallAttendantChangedEvent", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CallAttendantChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CashOutRequest) {

                    Write481_CashOutRequest(@"CashOutRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CashOutRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceRequest) {

                    Write487_GetPlayerServiceRequest(@"GetPlayerServiceRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest) {

                    Write491_Item(@"GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse) {

                    Write493_Item(@"GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueResponse) {

                    Write490_Item(@"GetPromptPlayerOnCashoutConfigItemValueResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceResponse) {

                    Write488_GetPlayerServiceResponse(@"GetPlayerServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueRequest) {

                    Write489_Item(@"GetPromptPlayerOnCashoutConfigItemValueRequest", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write489_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetPromptPlayerOnCashoutConfigItemValueRequest", @"CsiServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write488_GetPlayerServiceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            if (o.@StateSpecified) {

                WriteElementStringRaw(@"State", @"CsiServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@State)));

            }

            WriteEndElement(o);

        }



        void Write485_ServiceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiServiceV1.xsd", Write484_ServiceErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiServiceV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write484_ServiceErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode.@CLIENT_ALREADY_REGISTERED: s = @"CLIENT_ALREADY_REGISTERED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode.@CLIENT_NOT_REGISTERED: s = @"CLIENT_NOT_REGISTERED"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode");

            }

            return s;

        }



        void Write490_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            if (o.@PromptSpecified) {

                WriteElementStringRaw(@"Prompt", @"CsiServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Prompt)));

            }

            WriteEndElement(o);

        }



        void Write493_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton>)o.@EmulatableButton;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"EmulatableButton", @"CsiServiceV1.xsd", Write492_EmulatableButton(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        string Write492_EmulatableButton(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton.@Cashout: s = @"Cashout"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton.@Service: s = @"Service"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton");

            }

            return s;

        }



        void Write491_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest", @"CsiServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write487_GetPlayerServiceRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetPlayerServiceRequest", @"CsiServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write481_CashOutRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CashOutRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CashOutRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CashOutRequest", @"CsiServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write480_CallAttendantChangedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CallAttendantChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CallAttendantChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementStringRaw(@"CallAttendant", @"CsiServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@CallAttendant)));

            WriteEndElement(o);

        }



        void Write482_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedServiceButtonEnabledConfigItemChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedServiceButtonEnabledConfigItemChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementStringRaw(@"Enabled", @"CsiServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Enabled)));

            WriteEndElement(o);

        }



        void Write486_GetCallAttendantResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            if (o.@StateSpecified) {

                WriteElementStringRaw(@"State", @"CsiServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@State)));

            }

            WriteEndElement(o);

        }



        void Write483_GetCallAttendantRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetCallAttendantRequest", @"CsiServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write502_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            WriteEndElement(o);

        }



        void Write501_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementString(@"RegistrationAction", @"CsiServiceV1.xsd", Write496_RegistrationAction1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1)o.@RegistrationAction)));

            WriteEndElement(o);

        }



        string Write496_RegistrationAction1(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1 v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1.@Register: s = @"Register"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1.@Unregister: s = @"Unregister"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1");

            }

            return s;

        }



        void Write503_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementString(@"RegistrationAction", @"CsiServiceV1.xsd", Write496_RegistrationAction1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1)o.@RegistrationAction)));

            WriteEndElement(o);

        }



        void Write505_ServiceRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ServiceRequest", @"CsiServiceV1.xsd");

            WriteEndElement(o);

        }



        void Write504_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            WriteEndElement(o);

        }



        void Write500_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            WriteEndElement(o);

        }



        void Write495_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PromptPlayerOnCashoutConfigItemChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PromptPlayerOnCashoutConfigItemChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementStringRaw(@"Prompt", @"CsiServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Prompt)));

            WriteEndElement(o);

        }



        void Write494_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayerServiceRequestChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayerServiceRequestChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementStringRaw(@"PlayerServiceRequested", @"CsiServiceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PlayerServiceRequested)));

            WriteEndElement(o);

        }



        void Write497_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementString(@"RegistrationAction", @"CsiServiceV1.xsd", Write496_RegistrationAction1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1)o.@RegistrationAction)));

            WriteEndElement(o);

        }



        void Write499_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            WriteElementString(@"RegistrationAction", @"CsiServiceV1.xsd", Write496_RegistrationAction1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1)o.@RegistrationAction)));

            WriteEndElement(o);

        }



        void Write498_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiServiceV1.xsd");

            Write485_ServiceResponse(@"ServiceResponse", @"CsiServiceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse)o.@ServiceResponse), false, false);

            WriteEndElement(o);

        }



        void Write479_CsiMechanicalBell(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiMechanicalBell", @"CsiMechanicalBellV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopRequest) {

                    Write477_MechanicalBellStopRequest(@"MechanicalBellStopRequest", @"CsiMechanicalBellV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopResponse) {

                    Write478_MechanicalBellStopResponse(@"MechanicalBellStopResponse", @"CsiMechanicalBellV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingRequest) {

                    Write473_MechanicalBellRingRequest(@"MechanicalBellRingRequest", @"CsiMechanicalBellV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingResponse) {

                    Write476_MechanicalBellRingResponse(@"MechanicalBellRingResponse", @"CsiMechanicalBellV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write476_MechanicalBellRingResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMechanicalBellV1.xsd");

            Write475_MechanicalBellResponse(@"MechanicalBellResponse", @"CsiMechanicalBellV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellResponse)o.@MechanicalBellResponse), false, false);

            WriteEndElement(o);

        }



        void Write475_MechanicalBellResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"MechanicalBellResponse", @"CsiMechanicalBellV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiMechanicalBellV1.xsd", Write474_MechanicalBellErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiMechanicalBellV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write474_MechanicalBellErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@UNKNOWN_DRIVER_ERROR: s = @"UNKNOWN_DRIVER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@TOO_MANY_PENDING_RING_REQUESTS: s = @"TOO_MANY_PENDING_RING_REQUESTS"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode");

            }

            return s;

        }



        void Write473_MechanicalBellRingRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMechanicalBellV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiMechanicalBellV1.xsd", ((global::System.String)o.@FeatureId));

            WriteElementStringRaw(@"Count", @"CsiMechanicalBellV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Count)));

            WriteElementStringRaw(@"RingDurationMilliseconds", @"CsiMechanicalBellV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@RingDurationMilliseconds)));

            WriteElementStringRaw(@"PauseDurationMilliseconds", @"CsiMechanicalBellV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@PauseDurationMilliseconds)));

            WriteEndElement(o);

        }



        void Write478_MechanicalBellStopResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMechanicalBellV1.xsd");

            Write475_MechanicalBellResponse(@"MechanicalBellResponse", @"CsiMechanicalBellV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellResponse)o.@MechanicalBellResponse), false, false);

            WriteEndElement(o);

        }



        void Write477_MechanicalBellStopRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMechanicalBellV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiMechanicalBellV1.xsd", ((global::System.String)o.@FeatureId));

            WriteEndElement(o);

        }



        void Write472_CsiPortal(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiPortal", @"CsiPortalV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentResponse) {

                    Write459_LoadContentResponse(@"LoadContentResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionNotifyEvent) {

                    Write462_PortalActionNotifyEvent(@"PortalActionNotifyEvent", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionNotifyEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoRequest) {

                    Write463_PortalInfoRequest(@"PortalInfoRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentRequest) {

                    Write458_LoadContentRequest(@"LoadContentRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateResponse) {

                    Write455_GetVisibilityStateResponse(@"GetVisibilityStateResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalRequest) {

                    Write456_HidePortalRequest(@"HidePortalRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalResponse) {

                    Write457_HidePortalResponse(@"HidePortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentResponse) {

                    Write469_ReleaseContentResponse(@"ReleaseContentResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalRequest) {

                    Write470_ShowPortalRequest(@"ShowPortalRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalResponse) {

                    Write471_ShowPortalResponse(@"ShowPortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentRequest) {

                    Write468_ReleaseContentRequest(@"ReleaseContentRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoResponse) {

                    Write464_PortalInfoResponse(@"PortalInfoResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListRequest) {

                    Write465_PortalListRequest(@"PortalListRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListResponse) {

                    Write467_PortalListResponse(@"PortalListResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateRequest) {

                    Write453_GetVisibilityStateRequest(@"GetVisibilityStateRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalRequest) {

                    Write442_DestroyPortalRequest(@"DestroyPortalRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalResponse) {

                    Write443_DestroyPortalResponse(@"DestroyPortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentRequest) {

                    Write444_ExecuteContentRequest(@"ExecuteContentRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalResponse) {

                    Write441_CreatePortalResponse(@"CreatePortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupRequest) {

                    Write414_Item(@"ConfigureVisibilityGroupRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupResponse) {

                    Write431_Item(@"ConfigureVisibilityGroupResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalRequest) {

                    Write440_CreatePortalRequest(@"CreatePortalRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigResponse) {

                    Write450_GetEMDIConfigResponse(@"GetEMDIConfigResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameRequest) {

                    Write451_GetPortalIdByNameRequest(@"GetPortalIdByNameRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameResponse) {

                    Write452_GetPortalIdByNameResponse(@"GetPortalIdByNameResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigRequest) {

                    Write449_GetEMDIConfigRequest(@"GetEMDIConfigRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentResponse) {

                    Write445_ExecuteContentResponse(@"ExecuteContentResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateRequest) {

                    Write446_GetContentStateRequest(@"GetContentStateRequest", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateResponse) {

                    Write448_GetContentStateResponse(@"GetContentStateResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write448_GetContentStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteElementString(@"ContentState", @"CsiPortalV1.xsd", Write447_PortalContentState(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState)o.@ContentState)));

            WriteEndElement(o);

        }



        string Write447_PortalContentState(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@INVALID_PORTAL_CONTENT_STATE: s = @"INVALID_PORTAL_CONTENT_STATE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@RELEASED: s = @"RELEASED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@LOADED: s = @"LOADED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@PENDING: s = @"PENDING"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@EXECUTING: s = @"EXECUTING"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@ERROR: s = @"ERROR"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState");

            }

            return s;

        }



        void Write430_PortalResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write429_PortalErrorCode(@"ErrorCode", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalErrorCode)o.@ErrorCode), false, false);

            WriteElementString(@"ErrorDescription", @"CsiPortalV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        void Write429_PortalErrorCode(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalErrorCode o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalErrorCode)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PortalErrorCode", @"CsiPortalV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode) {

                    WriteElementString(@"LoadContentErrorCode", @"CsiPortalV1.xsd", Write424_LoadContentErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode) {

                    WriteElementString(@"HidePortalErrorCode", @"CsiPortalV1.xsd", Write423_HidePortalErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode) {

                    WriteElementString(@"GetVisibilityStateErrorCode", @"CsiPortalV1.xsd", Write422_GetVisibilityStateErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode) {

                    WriteElementString(@"PortalInfoErrorCode", @"CsiPortalV1.xsd", Write425_PortalInfoErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode) {

                    WriteElementString(@"ShowPortalErrorCode", @"CsiPortalV1.xsd", Write428_ShowPortalErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode) {

                    WriteElementString(@"ReleaseContentErrorCode", @"CsiPortalV1.xsd", Write427_ReleaseContentErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode) {

                    WriteElementString(@"PortalListErrorCode", @"CsiPortalV1.xsd", Write426_PortalListErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode) {

                    WriteElementString(@"DestroyPortalErrorCode", @"CsiPortalV1.xsd", Write417_DestroyPortalErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode) {

                    WriteElementString(@"CreatePortalErrorCode", @"CsiPortalV1.xsd", Write416_CreatePortalErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode) {

                    WriteElementString(@"ConfigureVisibilityGroupErrorCode", @"CsiPortalV1.xsd", Write415_Item(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode) {

                    WriteElementString(@"ExecuteContentErrorCode", @"CsiPortalV1.xsd", Write418_ExecuteContentErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode) {

                    WriteElementString(@"GetPortalIdByNameErrorCode", @"CsiPortalV1.xsd", Write421_GetPortalIdByNameErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode) {

                    WriteElementString(@"GetEMDIConfigErrorCode", @"CsiPortalV1.xsd", Write420_GetEMDIConfigErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode)o.@Item)));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode) {

                    WriteElementString(@"GetContentStateErrorCode", @"CsiPortalV1.xsd", Write419_GetContentStateErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode)o.@Item)));

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        string Write419_GetContentStateErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode");

            }

            return s;

        }



        string Write420_GetEMDIConfigErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode");

            }

            return s;

        }



        string Write421_GetPortalIdByNameErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@INVALID_PORTAL_NAME: s = @"INVALID_PORTAL_NAME"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@INVALID_PORTAL_CLASS: s = @"INVALID_PORTAL_CLASS"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode");

            }

            return s;

        }



        string Write418_ExecuteContentErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@CONTENT_NOT_LOADED: s = @"CONTENT_NOT_LOADED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode");

            }

            return s;

        }



        string Write415_Item(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@TOO_MANY_PORTALS: s = @"TOO_MANY_PORTALS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@INVALID_GROUP_NAME: s = @"INVALID_GROUP_NAME"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@PORTALS_NOT_ALL_SAME_CLASS: s = @"PORTALS_NOT_ALL_SAME_CLASS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode");

            }

            return s;

        }



        string Write416_CreatePortalErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@PORTAL_EXISTS: s = @"PORTAL_EXISTS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@PORTAL_OUT_OF_BOUNDS: s = @"PORTAL_OUT_OF_BOUNDS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_PRIORITY: s = @"INVALID_PRIORITY"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_MONITOR: s = @"INVALID_MONITOR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_PORTAL_NAME: s = @"INVALID_PORTAL_NAME"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_PORTAL_CLASS: s = @"INVALID_PORTAL_CLASS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_DEFAULT_EMDI_TOKEN: s = @"INVALID_DEFAULT_EMDI_TOKEN"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode");

            }

            return s;

        }



        string Write417_DestroyPortalErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@CANNOT_DESTROY_PORTAL: s = @"CANNOT_DESTROY_PORTAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode");

            }

            return s;

        }



        string Write426_PortalListErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode.@INVALID_PORTAL_CLASS: s = @"INVALID_PORTAL_CLASS"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode");

            }

            return s;

        }



        string Write427_ReleaseContentErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@CONTENT_NOT_LOADED: s = @"CONTENT_NOT_LOADED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode");

            }

            return s;

        }



        string Write428_ShowPortalErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@CANNOT_SHOW_PORTAL: s = @"CANNOT_SHOW_PORTAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode");

            }

            return s;

        }



        string Write425_PortalInfoErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode");

            }

            return s;

        }



        string Write422_GetVisibilityStateErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode");

            }

            return s;

        }



        string Write423_HidePortalErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@CANNOT_HIDE_PORTAL: s = @"CANNOT_HIDE_PORTAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode");

            }

            return s;

        }



        string Write424_LoadContentErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@INVALID_PORTAL_ID: s = @"INVALID_PORTAL_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@MALFORMED_URL: s = @"MALFORMED_URL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode");

            }

            return s;

        }



        void Write446_GetContentStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write445_ExecuteContentResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteEndElement(o);

        }



        void Write449_GetEMDIConfigRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetEMDIConfigRequest", @"CsiPortalV1.xsd");

            WriteEndElement(o);

        }



        void Write452_GetPortalIdByNameResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write451_GetPortalIdByNameRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalClass", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalClass));

            WriteElementString(@"PortalName", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalName));

            WriteEndElement(o);

        }



        void Write450_GetEMDIConfigResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteElementStringRaw(@"XMLSocketEMDIPort", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@XMLSocketEMDIPort)));

            WriteElementStringRaw(@"WebsocketEMDIPort", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@WebsocketEMDIPort)));

            WriteEndElement(o);

        }



        void Write440_CreatePortalRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write439_PortalInfo(@"PortalConfig", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfo)o.@PortalConfig), false, false);

            WriteElementString(@"PortalClass", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalClass));

            WriteEndElement(o);

        }



        void Write439_PortalInfo(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfo o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfo)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PortalInfo", @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteElementString(@"Name", @"CsiPortalV1.xsd", ((global::System.String)o.@Name));

            WriteElementStringRaw(@"Priority", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Priority)));

            WriteElementString(@"Screen", @"CsiPortalV1.xsd", Write432_PortalScreen(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen)o.@Screen)));

            WriteElementString(@"Type", @"CsiPortalV1.xsd", Write433_PortalType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType)o.@Type)));

            WriteElementString(@"Position", @"CsiPortalV1.xsd", Write434_PortalPosition(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition)o.@Position)));

            Write437_PortalBounds(@"Bounds", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalBounds)o.@Bounds), false, false);

            Write436_PortalSize(@"TextureSize", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize)o.@TextureSize), false, false);

            Write438_PortalExtents(@"Extents", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalExtents)o.@Extents), false, false);

            WriteElementStringRaw(@"DefaultEMDIAccessToken", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@DefaultEMDIAccessToken)));

            WriteElementString(@"SoundGroup", @"CsiPortalV1.xsd", Write130_GroupName(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName)o.@SoundGroup)));

            WriteElementStringRaw(@"TouchSupported", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@TouchSupported)));

            WriteElementStringRaw(@"AudioSupported", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AudioSupported)));

            WriteElementStringRaw(@"ConfigGroup", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@ConfigGroup)));

            if (o.@MediaDisplayIdSpecified) {

                WriteElementStringRaw(@"MediaDisplayId", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@MediaDisplayId)));

            }

            WriteEndElement(o);

        }



        string Write130_GroupName(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@ALARMS: s = @"ALARMS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@TILTS: s = @"TILTS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@SYSTEM: s = @"SYSTEM"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@VOCAL: s = @"VOCAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@FEEDBACK: s = @"FEEDBACK"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@GAME_SPECIAL: s = @"GAME_SPECIAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@GAME_SOUNDS: s = @"GAME_SOUNDS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@ATTRACTS: s = @"ATTRACTS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@GAME_PRESET_VOLUME_SOUNDS: s = @"GAME_PRESET_VOLUME_SOUNDS"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName");

            }

            return s;

        }



        void Write438_PortalExtents(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalExtents o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalExtents)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PortalExtents", @"CsiPortalV1.xsd");

            Write436_PortalSize(@"Min", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize)o.@Min), false, false);

            Write436_PortalSize(@"Max", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize)o.@Max), false, false);

            WriteEndElement(o);

        }



        void Write436_PortalSize(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PortalSize", @"CsiPortalV1.xsd");

            WriteElementStringRaw(@"Width", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Width)));

            WriteElementStringRaw(@"Height", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Height)));

            WriteEndElement(o);

        }



        void Write437_PortalBounds(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalBounds o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalBounds)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PortalBounds", @"CsiPortalV1.xsd");

            Write435_PortalLocation(@"Location", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalLocation)o.@Location), false, false);

            Write436_PortalSize(@"Size", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize)o.@Size), false, false);

            WriteEndElement(o);

        }



        void Write435_PortalLocation(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalLocation o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalLocation)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PortalLocation", @"CsiPortalV1.xsd");

            WriteElementStringRaw(@"X", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@X)));

            WriteElementStringRaw(@"Y", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Y)));

            WriteEndElement(o);

        }



        string Write434_PortalPosition(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@INVALID_PORTAL_POSITION: s = @"INVALID_PORTAL_POSITION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@LEFT: s = @"LEFT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@RIGHT: s = @"RIGHT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@BOTTOM: s = @"BOTTOM"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@TOP: s = @"TOP"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@FLOAT: s = @"FLOAT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@FULL: s = @"FULL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@CENTER: s = @"CENTER"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition");

            }

            return s;

        }



        string Write433_PortalType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@INVALID_TYPE: s = @"INVALID_TYPE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@SCALE: s = @"SCALE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@OVERLAY: s = @"OVERLAY"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@MODAL: s = @"MODAL"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType");

            }

            return s;

        }



        string Write432_PortalScreen(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@INVALID_SCREEN: s = @"INVALID_SCREEN"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@PRIMARY: s = @"PRIMARY"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@SECONDARY: s = @"SECONDARY"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@TOPPER: s = @"TOPPER"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@DPP: s = @"DPP"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen");

            }

            return s;

        }



        void Write431_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteEndElement(o);

        }



        void Write414_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalClass", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalClass));

            WriteElementString(@"VisibilityGroupName", @"CsiPortalV1.xsd", ((global::System.String)o.@VisibilityGroupName));

            {

                global::System.Collections.Generic.List<global::System.String> a = (global::System.Collections.Generic.List<global::System.String>)o.@PortalIds;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"PortalIds", @"CsiPortalV1.xsd", ((global::System.String)a[ia]));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write441_CreatePortalResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteElementStringRaw(@"DefaultEMDIAccessToken", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@DefaultEMDIAccessToken)));

            WriteEndElement(o);

        }



        void Write444_ExecuteContentRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write443_DestroyPortalResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteEndElement(o);

        }



        void Write442_DestroyPortalRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write453_GetVisibilityStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write467_PortalListResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            Write466_PortalIdList(@"PortalIds", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalIdList)o.@PortalIds), false, false);

            WriteEndElement(o);

        }



        void Write466_PortalIdList(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalIdList o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalIdList)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PortalIdList", @"CsiPortalV1.xsd");

            {

                global::System.Collections.Generic.List<global::System.String> a = (global::System.Collections.Generic.List<global::System.String>)o.@PortalId;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)a[ia]));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write465_PortalListRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalClass", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalClass));

            WriteEndElement(o);

        }



        void Write464_PortalInfoResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            Write439_PortalInfo(@"PortalInfo", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfo)o.@PortalInfo), false, false);

            WriteEndElement(o);

        }



        void Write468_ReleaseContentRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteElementString(@"RequestorName", @"CsiPortalV1.xsd", ((global::System.String)o.@RequestorName));

            WriteEndElement(o);

        }



        void Write471_ShowPortalResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteEndElement(o);

        }



        void Write470_ShowPortalRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write469_ReleaseContentResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteEndElement(o);

        }



        void Write457_HidePortalResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteEndElement(o);

        }



        void Write456_HidePortalRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write455_GetVisibilityStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteElementString(@"VisibilityState", @"CsiPortalV1.xsd", Write454_PortalVisibilityState(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState)o.@VisibilityState)));

            WriteEndElement(o);

        }



        string Write454_PortalVisibilityState(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState.@INVALID_PORTAL_VISIBILITY_STATE: s = @"INVALID_PORTAL_VISIBILITY_STATE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState.@HIDDEN: s = @"HIDDEN"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState.@SHOWN: s = @"SHOWN"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState");

            }

            return s;

        }



        void Write458_LoadContentRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteElementString(@"ContentURL", @"CsiPortalV1.xsd", ((global::System.String)o.@ContentURL));

            WriteElementString(@"RequestorName", @"CsiPortalV1.xsd", ((global::System.String)o.@RequestorName));

            WriteElementStringRaw(@"StartAfterLoad", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@StartAfterLoad)));

            WriteElementStringRaw(@"EMDIAccessToken", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@EMDIAccessToken)));

            WriteElementStringRaw(@"AuthorizeDefaultEMDICapabilities", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AuthorizeDefaultEMDICapabilities)));

            if (((global::System.Int64)o.@PortalContentToken) != (System.Int64)(0)) {

                WriteElementStringRaw(@"PortalContentToken", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@PortalContentToken)));

            }

            if (o.@PortalContentIdSpecified) {

                WriteElementStringRaw(@"PortalContentId", @"CsiPortalV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@PortalContentId)));

            }

            WriteEndElement(o);

        }



        void Write463_PortalInfoRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteEndElement(o);

        }



        void Write462_PortalActionNotifyEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionNotifyEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionNotifyEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            WriteElementString(@"PortalId", @"CsiPortalV1.xsd", ((global::System.String)o.@PortalId));

            WriteElementString(@"Action", @"CsiPortalV1.xsd", Write460_PortalAction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction)o.@Action)));

            WriteElementString(@"Result", @"CsiPortalV1.xsd", Write461_PortalActionResult(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult)o.@Result)));

            WriteEndElement(o);

        }



        string Write461_PortalActionResult(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult.@INVALID_PORTAL_ACTION_RESULT: s = @"INVALID_PORTAL_ACTION_RESULT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult.@SUCCESS: s = @"SUCCESS"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult.@FAILED: s = @"FAILED"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult");

            }

            return s;

        }



        string Write460_PortalAction(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@INVALID_PORTAL_ACTION: s = @"INVALID_PORTAL_ACTION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@PORTAL_CREATED: s = @"PORTAL_CREATED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@PORTAL_DESTROYED: s = @"PORTAL_DESTROYED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@LOAD_CONTENT: s = @"LOAD_CONTENT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EXECUTE_CONTENT: s = @"EXECUTE_CONTENT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@RELEASE_CONTENT: s = @"RELEASE_CONTENT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@CONTENT_ERROR: s = @"CONTENT_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@SHOW_PORTAL: s = @"SHOW_PORTAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@HIDE_PORTAL: s = @"HIDE_PORTAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EMDI_SOCKET_OPENED: s = @"EMDI_SOCKET_OPENED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EMDI_SOCKET_CLOSED: s = @"EMDI_SOCKET_CLOSED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EMDI_SOCKET_ERROR: s = @"EMDI_SOCKET_ERROR"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction");

            }

            return s;

        }



        void Write459_LoadContentResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPortalV1.xsd");

            Write430_PortalResponse(@"PortalResponse", @"CsiPortalV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse)o.@PortalResponse), false, false);

            WriteEndElement(o);

        }



        void Write413_CsiPresentationSpeed(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiPresentationSpeed", @"CsiPresentationSpeedV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedRequest) {

                    Write411_SetPresentationSpeedRequest(@"SetPresentationSpeedRequest", @"CsiPresentationSpeedV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedResponse) {

                    Write412_SetPresentationSpeedResponse(@"SetPresentationSpeedResponse", @"CsiPresentationSpeedV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedRequest) {

                    Write407_GetPresentationSpeedRequest(@"GetPresentationSpeedRequest", @"CsiPresentationSpeedV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedResponse) {

                    Write410_GetPresentationSpeedResponse(@"GetPresentationSpeedResponse", @"CsiPresentationSpeedV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write410_GetPresentationSpeedResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPresentationSpeedV1.xsd");

            Write409_PresentationSpeedResponse(@"PresentationSpeedResponse", @"CsiPresentationSpeedV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedResponse)o.@PresentationSpeedResponse), false, false);

            if (o.@DefaultPresentationSpeedSpecified) {

                WriteElementStringRaw(@"DefaultPresentationSpeed", @"CsiPresentationSpeedV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@DefaultPresentationSpeed)));

            }

            if (o.@PresentationSpeedSpecified) {

                WriteElementStringRaw(@"PresentationSpeed", @"CsiPresentationSpeedV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@PresentationSpeed)));

            }

            WriteEndElement(o);

        }



        void Write409_PresentationSpeedResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPresentationSpeedV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiPresentationSpeedV1.xsd", Write408_PresentationSpeedErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiPresentationSpeedV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write408_PresentationSpeedErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedErrorCode.@NONE: s = @"NONE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedErrorCode");

            }

            return s;

        }



        void Write407_GetPresentationSpeedRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPresentationSpeedV1.xsd");

            WriteEndElement(o);

        }



        void Write412_SetPresentationSpeedResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPresentationSpeedV1.xsd");

            Write409_PresentationSpeedResponse(@"PresentationSpeedResponse", @"CsiPresentationSpeedV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedResponse)o.@PresentationSpeedResponse), false, false);

            WriteEndElement(o);

        }



        void Write411_SetPresentationSpeedRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiPresentationSpeedV1.xsd");

            WriteAttribute(@"PresentationSpeed", @"CsiPresentationSpeedV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@PresentationSpeed)));

            WriteEndElement(o);

        }



        void Write406_CsiDepthCamera(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiDepthCamera", @"CsiDepthCameraV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesRequest) {

                    Write400_GetDepthCameraDevicesRequest(@"GetDepthCameraDevicesRequest", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesResponse) {

                    Write405_GetDepthCameraDevicesResponse(@"GetDepthCameraDevicesResponse", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusResponse) {

                    Write399_Item(@"GetDepthCameraDeviceStatusResponse", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceEvent) {

                    Write393_DepthCameraDeviceEvent(@"DepthCameraDeviceEvent", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusRequest) {

                    Write394_Item(@"GetDepthCameraDeviceStatusRequest", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write394_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiDepthCameraV1.xsd");

            WriteElementString(@"DeviceId", @"CsiDepthCameraV1.xsd", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write393_DepthCameraDeviceEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiDepthCameraV1.xsd");

            WriteElementString(@"DeviceId", @"CsiDepthCameraV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"Description", @"CsiDepthCameraV1.xsd", ((global::System.String)o.@Description));

            WriteElementString(@"Severity", @"CsiDepthCameraV1.xsd", Write392_Severity(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity)o.@Severity)));

            WriteEndElement(o);

        }



        string Write392_Severity(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity.@Info: s = @"Info"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity.@Low: s = @"Low"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity.@High: s = @"High"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity");

            }

            return s;

        }



        void Write399_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiDepthCameraV1.xsd");

            Write396_DepthCameraResponse(@"DepthCameraResponse", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraResponse)o.@DepthCameraResponse), false, false);

            Write398_Item(@"DepthCameraDeviceStatusResponse", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatusResponse)o.@DepthCameraDeviceStatusResponse), false, false);

            WriteEndElement(o);

        }



        void Write398_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"DepthCameraDeviceStatusResponse", @"CsiDepthCameraV1.xsd");

            WriteElementString(@"DeviceId", @"CsiDepthCameraV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"DepthCameraDeviceStatus", @"CsiDepthCameraV1.xsd", Write397_DepthCameraDeviceStatus(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus)o.@DepthCameraDeviceStatus)));

            WriteEndElement(o);

        }



        string Write397_DepthCameraDeviceStatus(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus.@OK: s = @"OK"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus.@Failure: s = @"Failure"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus");

            }

            return s;

        }



        void Write396_DepthCameraResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiDepthCameraV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiDepthCameraV1.xsd", Write395_DepthCameraErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiDepthCameraV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write395_DepthCameraErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode.@COMMUNICATION_FAILURE: s = @"COMMUNICATION_FAILURE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode.@UNKNOWN_DEVICE_ID: s = @"UNKNOWN_DEVICE_ID"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode");

            }

            return s;

        }



        void Write405_GetDepthCameraDevicesResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiDepthCameraV1.xsd");

            Write396_DepthCameraResponse(@"DepthCameraResponse", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraResponse)o.@DepthCameraResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice>)o.@DepthCameraDevices);

                if (a != null){

                    WriteStartElement(@"DepthCameraDevices", @"CsiDepthCameraV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write404_DepthCameraDevice(@"DepthCameraDevice", @"CsiDepthCameraV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write404_DepthCameraDevice(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"DepthCameraDevice", @"CsiDepthCameraV1.xsd");

            WriteElementString(@"DepthCameraType", @"CsiDepthCameraV1.xsd", Write401_CameraTechType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType)o.@DepthCameraType)));

            WriteElementString(@"DepthCameraDeviceIndex", @"CsiDepthCameraV1.xsd", Write402_DepthCameraDeviceIndex(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex)o.@DepthCameraDeviceIndex)));

            WriteElementString(@"DepthCameraModel", @"CsiDepthCameraV1.xsd", Write403_DepthCameraModel(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraModel)o.@DepthCameraModel)));

            WriteElementString(@"DepthCameraUsbLocationPath", @"CsiDepthCameraV1.xsd", ((global::System.String)o.@DepthCameraUsbLocationPath));

            WriteElementString(@"DepthCameraDeviceId", @"CsiDepthCameraV1.xsd", ((global::System.String)o.@DepthCameraDeviceId));

            WriteEndElement(o);

        }



        string Write403_DepthCameraModel(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraModel v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraModel.@PMDPicoFlex: s = @"PMDPicoFlex"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraModel");

            }

            return s;

        }



        string Write402_DepthCameraDeviceIndex(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex.@First: s = @"First"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex.@Second: s = @"Second"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex");

            }

            return s;

        }



        string Write401_CameraTechType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType.@TimeOfFlight: s = @"TimeOfFlight"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType.@StructuredLight: s = @"StructuredLight"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType");

            }

            return s;

        }



        void Write400_GetDepthCameraDevicesRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetDepthCameraDevicesRequest", @"CsiDepthCameraV1.xsd");

            WriteEndElement(o);

        }



        void Write391_CsiHaptic(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiHaptic", @"CsiHapticV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesResponse) {

                    Write388_GetHapticDevicesResponse(@"GetHapticDevicesResponse", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEvent) {

                    Write390_HapticDeviceEvent(@"HapticDeviceEvent", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesRequest) {

                    Write384_GetHapticDevicesRequest(@"GetHapticDevicesRequest", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusRequest) {

                    Write378_GetHapticDeviceStatusRequest(@"GetHapticDeviceStatusRequest", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusResponse) {

                    Write383_GetHapticDeviceStatusResponse(@"GetHapticDeviceStatusResponse", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write383_GetHapticDeviceStatusResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiHapticV1.xsd");

            Write380_HapticResponse(@"HapticResponse", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticResponse)o.@HapticResponse), false, false);

            Write382_HapticDeviceStatusResponse(@"HapticDeviceStatusResponse", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceStatusResponse)o.@HapticDeviceStatusResponse), false, false);

            WriteEndElement(o);

        }



        void Write382_HapticDeviceStatusResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"HapticDeviceStatusResponse", @"CsiHapticV1.xsd");

            WriteElementString(@"DeviceId", @"CsiHapticV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"HapticDeviceStatus", @"CsiHapticV1.xsd", Write381_HapticDeviceStatus(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus)o.@HapticDeviceStatus)));

            WriteEndElement(o);

        }



        string Write381_HapticDeviceStatus(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus.@OK: s = @"OK"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus.@Failure: s = @"Failure"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus");

            }

            return s;

        }



        void Write380_HapticResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiHapticV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiHapticV1.xsd", Write379_HapticErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiHapticV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write379_HapticErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode.@COMMUNICATION_FAILURE: s = @"COMMUNICATION_FAILURE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode.@UNKNOWN_DEVICE_ID: s = @"UNKNOWN_DEVICE_ID"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode");

            }

            return s;

        }



        void Write378_GetHapticDeviceStatusRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiHapticV1.xsd");

            WriteElementString(@"DeviceId", @"CsiHapticV1.xsd", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write384_GetHapticDevicesRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetHapticDevicesRequest", @"CsiHapticV1.xsd");

            WriteEndElement(o);

        }



        void Write390_HapticDeviceEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiHapticV1.xsd");

            WriteElementString(@"DeviceId", @"CsiHapticV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"Description", @"CsiHapticV1.xsd", ((global::System.String)o.@Description));

            WriteElementString(@"HapticDeviceEventSeverity", @"CsiHapticV1.xsd", Write389_HapticDeviceEventSeverityLevel(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel)o.@HapticDeviceEventSeverity)));

            WriteEndElement(o);

        }



        string Write389_HapticDeviceEventSeverityLevel(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel.@Info: s = @"Info"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel.@Low: s = @"Low"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel.@High: s = @"High"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel");

            }

            return s;

        }



        void Write388_GetHapticDevicesResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiHapticV1.xsd");

            Write380_HapticResponse(@"HapticResponse", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticResponse)o.@HapticResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice>)o.@HapticDevices);

                if (a != null){

                    WriteStartElement(@"HapticDevices", @"CsiHapticV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write387_HapticDevice(@"HapticDevice", @"CsiHapticV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write387_HapticDevice(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"HapticDevice", @"CsiHapticV1.xsd");

            WriteElementString(@"DeviceId", @"CsiHapticV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"HapticDeviceType", @"CsiHapticV1.xsd", Write385_HapticDeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType)o.@HapticDeviceType)));

            WriteElementString(@"HapticDeviceLocation", @"CsiHapticV1.xsd", Write386_HapticDeviceLocation(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation)o.@HapticDeviceLocation)));

            WriteEndElement(o);

        }



        string Write386_HapticDeviceLocation(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorTop: s = @"MainMonitorTop"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorBottom: s = @"MainMonitorBottom"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorLeft: s = @"MainMonitorLeft"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorRight: s = @"MainMonitorRight"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorTouchscreen: s = @"MainMonitorTouchscreen"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@DPP: s = @"DPP"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation");

            }

            return s;

        }



        string Write385_HapticDeviceType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType.@Ultrasonic: s = @"Ultrasonic"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType.@Vibration: s = @"Vibration"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType.@Mechanical: s = @"Mechanical"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType");

            }

            return s;

        }



        void Write377_CsiVideoTopper(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiVideoTopper", @"CsiVideoTopperV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentRequest) {

                    Write373_StopContentRequest(@"StopContentRequest", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentResponse) {

                    Write372_PlayContentResponse(@"PlayContentResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperContentEvent) {

                    Write376_VideoTopperContentEvent(@"VideoTopperContentEvent", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperContentEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentResponse) {

                    Write374_StopContentResponse(@"StopContentResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentRequest) {

                    Write371_PlayContentRequest(@"PlayContentRequest", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentResponse) {

                    Write365_CacheContentResponse(@"CacheContentResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentRequest) {

                    Write362_CacheContentRequest(@"CacheContentRequest", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponse) {

                    Write370_DeviceCapabilitiesResponse(@"DeviceCapabilitiesResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesRequest) {

                    Write366_DeviceCapabilitiesRequest(@"DeviceCapabilitiesRequest", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write366_DeviceCapabilitiesRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"DeviceCapabilitiesRequest", @"CsiVideoTopperV1.xsd");

            WriteEndElement(o);

        }



        void Write370_DeviceCapabilitiesResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            Write364_VideoTopperResponse(@"VideoTopperResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse)o.@VideoTopperResponse), false, false);

            Write367_Item(@"VideoTopperResolution", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseVideoTopperResolution)o.@VideoTopperResolution), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia>)o.@SupportedMedia;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write368_Item(@"SupportedMedia", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia)a[ia]), false, false);

                    }

                }

            }

            if (((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport)o.@SupportsPortals) != global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport.@VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN) {

                WriteElementString(@"SupportsPortals", @"CsiVideoTopperV1.xsd", Write369_VideoTopperPortalSupport(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport)o.@SupportsPortals)));

            }

            WriteEndElement(o);

        }



        string Write369_VideoTopperPortalSupport(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport.@VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN: s = @"VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport.@VIDEO_TOPPER_PORTALS_SUPPORTED: s = @"VIDEO_TOPPER_PORTALS_SUPPORTED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport.@VIDEO_TOPPER_PORTALS_UNSUPPORTED: s = @"VIDEO_TOPPER_PORTALS_UNSUPPORTED"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport");

            }

            return s;

        }



        void Write368_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            WriteAttribute(@"MimeType", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@MimeType));

            WriteAttribute(@"FileExtension", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@FileExtension));

            WriteEndElement(o);

        }



        void Write367_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseVideoTopperResolution o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseVideoTopperResolution)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            WriteAttribute(@"Width", @"CsiVideoTopperV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Width)));

            WriteAttribute(@"Height", @"CsiVideoTopperV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Height)));

            WriteEndElement(o);

        }



        void Write364_VideoTopperResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiVideoTopperV1.xsd", Write363_VideoTopperErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write363_VideoTopperErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@CONTENT_PATH_DOES_NOT_EXIST: s = @"CONTENT_PATH_DOES_NOT_EXIST"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@CONTENT_KEY_DOES_NOT_EXIST: s = @"CONTENT_KEY_DOES_NOT_EXIST"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@VIDEO_TOPPER_DRIVER_ERROR: s = @"VIDEO_TOPPER_DRIVER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@OTHER_ERROR: s = @"OTHER_ERROR"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode");

            }

            return s;

        }



        void Write362_CacheContentRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            WriteElementString(@"ContentPath", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@ContentPath));

            WriteEndElement(o);

        }



        void Write365_CacheContentResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            Write364_VideoTopperResponse(@"VideoTopperResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse)o.@VideoTopperResponse), false, false);

            WriteEndElement(o);

        }



        void Write371_PlayContentRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            WriteElementString(@"ContentPath", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@ContentPath));

            WriteElementStringRaw(@"SeekTime", @"CsiVideoTopperV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@SeekTime)));

            WriteElementStringRaw(@"LoopVideo", @"CsiVideoTopperV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@LoopVideo)));

            WriteElementStringRaw(@"ImageDuration", @"CsiVideoTopperV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@ImageDuration)));

            if (o.@PlayCountSpecified) {

                WriteElementStringRaw(@"PlayCount", @"CsiVideoTopperV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@PlayCount)));

            }

            WriteEndElement(o);

        }



        void Write374_StopContentResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            Write364_VideoTopperResponse(@"VideoTopperResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse)o.@VideoTopperResponse), false, false);

            WriteEndElement(o);

        }



        void Write376_VideoTopperContentEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperContentEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperContentEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            WriteElementString(@"Event", @"CsiVideoTopperV1.xsd", Write375_ContentEvent(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent)o.@Event)));

            WriteElementString(@"ContentKey", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@ContentKey));

            WriteElementString(@"EventMessage", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@EventMessage));

            WriteEndElement(o);

        }



        string Write375_ContentEvent(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent.@CONTENT_STARTED: s = @"CONTENT_STARTED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent.@CONTENT_STOPPED: s = @"CONTENT_STOPPED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent.@CONTENT_ERROR: s = @"CONTENT_ERROR"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent");

            }

            return s;

        }



        void Write372_PlayContentResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            Write364_VideoTopperResponse(@"VideoTopperResponse", @"CsiVideoTopperV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse)o.@VideoTopperResponse), false, false);

            WriteElementString(@"ContentKey", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@ContentKey));

            WriteEndElement(o);

        }



        void Write373_StopContentRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiVideoTopperV1.xsd");

            WriteElementString(@"ContentKey", @"CsiVideoTopperV1.xsd", ((global::System.String)o.@ContentKey));

            WriteEndElement(o);

        }



        void Write361_CsiMonitor(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiMonitor", @"CsiMonitorV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateRequest) {

                    Write353_GetStereoscopyStateRequest(@"GetStereoscopyStateRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateResponse) {

                    Write355_GetStereoscopyStateResponse(@"GetStereoscopyStateResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayRequest) {

                    Write351_GetPreferredUIDisplayRequest(@"GetPreferredUIDisplayRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayResponse) {

                    Write352_GetPreferredUIDisplayResponse(@"GetPreferredUIDisplayResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportRequest) {

                    Write359_SetTransmissiveSupportRequest(@"SetTransmissiveSupportRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportResponse) {

                    Write360_SetTransmissiveSupportResponse(@"SetTransmissiveSupportResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileRequest) {

                    Write356_SetColorProfileRequest(@"SetColorProfileRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileResponse) {

                    Write357_SetColorProfileResponse(@"SetColorProfileResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyRequest) {

                    Write332_EnableStereoscopyRequest(@"EnableStereoscopyRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyResponse) {

                    Write333_EnableStereoscopyResponse(@"EnableStereoscopyResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyRequest) {

                    Write328_DisableStereoscopyRequest(@"DisableStereoscopyRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyResponse) {

                    Write331_DisableStereoscopyResponse(@"DisableStereoscopyResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileRequest) {

                    Write349_GetCurrentColorProfileRequest(@"GetCurrentColorProfileRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileResponse) {

                    Write350_GetCurrentColorProfileResponse(@"GetCurrentColorProfileResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationRequest) {

                    Write334_GetConfigurationRequest(@"GetConfigurationRequest", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationResponse) {

                    Write348_GetConfigurationResponse(@"GetConfigurationResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write348_GetConfigurationResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            Write335_DesktopRectangle(@"Desktop", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle)o.@Desktop), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor>)o.@MonitorConfiguration);

                if (a != null){

                    WriteStartElement(@"MonitorConfiguration", @"CsiMonitorV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write347_Monitor(@"Monitor", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write347_Monitor(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"Monitor", @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"Role", @"CsiMonitorV1.xsd", Write336_MonitorRole(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole)o.@Role)));

            WriteElementString(@"Style", @"CsiMonitorV1.xsd", Write337_MonitorStyle(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle)o.@Style)));

            WriteElementString(@"Aspect", @"CsiMonitorV1.xsd", Write338_MonitorAspect(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect)o.@Aspect)));

            Write339_MonitorModel(@"Model", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorModel)o.@Model), false, false);

            Write335_DesktopRectangle(@"DesktopCoordinates", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle)o.@DesktopCoordinates), false, false);

            WriteElementStringRaw(@"VirtualX", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@VirtualX)));

            WriteElementStringRaw(@"VirtualY", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@VirtualY)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset>)o.@AdditionalLayers);

                if (a != null){

                    WriteStartElement(@"AdditionalLayers", @"CsiMonitorV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write340_LayerOffset(@"LayerOffset", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteElementStringRaw(@"ColorProfileId", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@ColorProfileId)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile>)o.@AvailableColorProfiles);

                if (a != null){

                    WriteStartElement(@"AvailableColorProfiles", @"CsiMonitorV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"ColorProfile", @"CsiMonitorV1.xsd", Write341_ColorProfile(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            Write344_StereoscopicSettings(@"StereoscopicSettings", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicSettings)o.@StereoscopicSettings), false, false);

            Write346_Gpu(@"ParentGpu", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Gpu)o.@ParentGpu), false, false);

            WriteEndElement(o);

        }



        void Write346_Gpu(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Gpu o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Gpu)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"Gpu", @"CsiMonitorV1.xsd");

            WriteElementString(@"Vendor", @"CsiMonitorV1.xsd", Write345_GpuVendor(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor)o.@Vendor)));

            WriteElementStringRaw(@"UniqueIdentifier", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@UniqueIdentifier)));

            WriteElementStringRaw(@"VendorIdentifier", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@VendorIdentifier)));

            WriteElementStringRaw(@"DeviceIdentifier", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@DeviceIdentifier)));

            WriteElementStringRaw(@"SubSystemIdentifier", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@SubSystemIdentifier)));

            WriteElementStringRaw(@"RevisionIdentifier", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@RevisionIdentifier)));

            WriteElementStringRaw(@"PrimaryAdapter", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PrimaryAdapter)));

            WriteEndElement(o);

        }



        string Write345_GpuVendor(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@AMD: s = @"AMD"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@Intel: s = @"Intel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@nVidia: s = @"nVidia"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@Unknown: s = @"Unknown"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor");

            }

            return s;

        }



        void Write344_StereoscopicSettings(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicSettings o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicSettings)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StereoscopicSettings", @"CsiDisplayTypesV1.xsd");

            WriteElementString(@"Technology", @"CsiDisplayTypesV1.xsd", Write342_StereoscopicTechnology(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology)o.@Technology)));

            WriteElementString(@"Format", @"CsiDisplayTypesV1.xsd", Write343_StereoscopicFormat(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat)o.@Format)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame>)o.@Frames;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write175_StereoscopicFrame(@"Frames", @"CsiDisplayTypesV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame)a[ia]), false, false);

                    }

                }

            }

            WriteElementString(@"Description", @"CsiDisplayTypesV1.xsd", ((global::System.String)o.@Description));

            WriteEndElement(o);

        }



        void Write175_StereoscopicFrame(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StereoscopicFrame", @"CsiDisplayTypesV1.xsd");

            WriteElementString(@"Type", @"CsiDisplayTypesV1.xsd", Write174_StereoscopicFrameType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType)o.@Type)));

            WriteElementStringRaw(@"X", @"CsiDisplayTypesV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@X)));

            WriteElementStringRaw(@"Y", @"CsiDisplayTypesV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@Y)));

            WriteElementStringRaw(@"Width", @"CsiDisplayTypesV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@Width)));

            WriteElementStringRaw(@"Height", @"CsiDisplayTypesV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@Height)));

            WriteEndElement(o);

        }



        string Write174_StereoscopicFrameType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType.@UNUSED: s = @"UNUSED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType.@LEFT: s = @"LEFT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType.@RIGHT: s = @"RIGHT"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType");

            }

            return s;

        }



        string Write343_StereoscopicFormat(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@SIDE_BY_SIDE_VERTICAL: s = @"SIDE_BY_SIDE_VERTICAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@SIDE_BY_SIDE_HORIZONTAL: s = @"SIDE_BY_SIDE_HORIZONTAL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@FRAME_PACKING: s = @"FRAME_PACKING"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@INTERLACED: s = @"INTERLACED"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat");

            }

            return s;

        }



        string Write342_StereoscopicTechnology(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@UNSUPPORTED: s = @"UNSUPPORTED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@AUTOSTEREOSCOPY: s = @"AUTOSTEREOSCOPY"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@HOLOGRAPHY: s = @"HOLOGRAPHY"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@VOLUMETRIC: s = @"VOLUMETRIC"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology");

            }

            return s;

        }



        string Write341_ColorProfile(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@None: s = @"None"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@Custom: s = @"Custom"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@ColorMatch: s = @"ColorMatch"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@Calibrated: s = @"Calibrated"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile");

            }

            return s;

        }



        void Write340_LayerOffset(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"LayerOffset", @"CsiMonitorV1.xsd");

            WriteElementStringRaw(@"OffsetX", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@OffsetX)));

            WriteElementStringRaw(@"OffsetY", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@OffsetY)));

            WriteEndElement(o);

        }



        void Write335_DesktopRectangle(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"DesktopRectangle", @"CsiMonitorV1.xsd");

            WriteElementStringRaw(@"x", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@x)));

            WriteElementStringRaw(@"y", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@y)));

            WriteElementStringRaw(@"w", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@w)));

            WriteElementStringRaw(@"h", @"CsiMonitorV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@h)));

            WriteEndElement(o);

        }



        void Write339_MonitorModel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorModel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorModel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"MonitorModel", @"CsiMonitorV1.xsd");

            WriteElementString(@"Manufacturer", @"CsiMonitorV1.xsd", ((global::System.String)o.@Manufacturer));

            WriteElementString(@"Model", @"CsiMonitorV1.xsd", ((global::System.String)o.@Model));

            WriteElementString(@"Version", @"CsiMonitorV1.xsd", ((global::System.String)o.@Version));

            WriteEndElement(o);

        }



        string Write338_MonitorAspect(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Standard: s = @"Standard"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Widescreen: s = @"Widescreen"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Ultrawide: s = @"Ultrawide"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Portrait: s = @"Portrait"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect");

            }

            return s;

        }



        string Write337_MonitorStyle(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@Normal: s = @"Normal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@RoundTop: s = @"RoundTop"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@PureDepth: s = @"PureDepth"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@ExtendedTouchscreen: s = @"ExtendedTouchscreen"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@Stereoscopic: s = @"Stereoscopic"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@Transmissive: s = @"Transmissive"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle");

            }

            return s;

        }



        string Write336_MonitorRole(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@Main: s = @"Main"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@Top: s = @"Top"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@BellyGlass: s = @"BellyGlass"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@ButtonPanel: s = @"ButtonPanel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@Topper: s = @"Topper"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@VideoWall: s = @"VideoWall"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole");

            }

            return s;

        }



        void Write330_MonitorResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiMonitorV1.xsd", Write329_MonitorErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiMonitorV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write329_MonitorErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@INVALID_MONITOR_ID: s = @"INVALID_MONITOR_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@COLOR_PROFILE_NOT_SUPPORTED: s = @"COLOR_PROFILE_NOT_SUPPORTED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@OPERATION_FAILED: s = @"OPERATION_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@MONITOR_IS_NOT_STEREOSCOPIC: s = @"MONITOR_IS_NOT_STEREOSCOPIC"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@MONITOR_IS_NOT_TRANSMISSIVE: s = @"MONITOR_IS_NOT_TRANSMISSIVE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@INCORRECT_ASPECT_RATIO: s = @"INCORRECT_ASPECT_RATIO"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode");

            }

            return s;

        }



        void Write334_GetConfigurationRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetConfigurationRequest", @"CsiMonitorV1.xsd");

            WriteEndElement(o);

        }



        void Write350_GetCurrentColorProfileResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"ColorProfile", @"CsiMonitorV1.xsd", Write341_ColorProfile(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile)o.@ColorProfile)));

            WriteElementString(@"ProfilePath", @"CsiMonitorV1.xsd", ((global::System.String)o.@ProfilePath));

            WriteEndElement(o);

        }



        void Write349_GetCurrentColorProfileRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write331_DisableStereoscopyResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            WriteEndElement(o);

        }



        void Write328_DisableStereoscopyRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write333_EnableStereoscopyResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            WriteEndElement(o);

        }



        void Write332_EnableStereoscopyRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write357_SetColorProfileResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            WriteEndElement(o);

        }



        void Write356_SetColorProfileRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"ColorProfile", @"CsiMonitorV1.xsd", Write341_ColorProfile(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile)o.@ColorProfile)));

            WriteElementString(@"ProfilePath", @"CsiMonitorV1.xsd", ((global::System.String)o.@ProfilePath));

            WriteEndElement(o);

        }



        void Write360_SetTransmissiveSupportResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            WriteEndElement(o);

        }



        void Write359_SetTransmissiveSupportRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"Support", @"CsiMonitorV1.xsd", Write358_TransmissiveSupport(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport)o.@Support)));

            WriteEndElement(o);

        }



        string Write358_TransmissiveSupport(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@None: s = @"None"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@Widescreen: s = @"Widescreen"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@Portrait: s = @"Portrait"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@WidescreenAndPortrait: s = @"WidescreenAndPortrait"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport");

            }

            return s;

        }



        void Write352_GetPreferredUIDisplayResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"Role", @"CsiMonitorV1.xsd", Write336_MonitorRole(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole)o.@Role)));

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            WriteEndElement(o);

        }



        void Write351_GetPreferredUIDisplayRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetPreferredUIDisplayRequest", @"CsiMonitorV1.xsd");

            WriteEndElement(o);

        }



        void Write355_GetStereoscopyStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"State", @"CsiMonitorV1.xsd", Write354_StereoscopyState(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState)o.@State)));

            Write330_MonitorResponse(@"MonitorResponse", @"CsiMonitorV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse)o.@MonitorResponse), false, false);

            WriteEndElement(o);

        }



        string Write354_StereoscopyState(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState.@DISABLED: s = @"DISABLED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState.@ENABLED: s = @"ENABLED"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState");

            }

            return s;

        }



        void Write353_GetStereoscopyStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiMonitorV1.xsd");

            WriteElementString(@"DeviceId", @"CsiMonitorV1.xsd", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write327_CsiReadiness(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiReadiness", @"CsiReadinessV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionResponse) {

                    Write324_ReadyStateSubscriptionResponse(@"ReadyStateSubscriptionResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateRequest) {

                    Write325_SetReadyStateRequest(@"SetReadyStateRequest", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateResponse) {

                    Write326_SetReadyStateResponse(@"SetReadyStateResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionRequest) {

                    Write323_ReadyStateSubscriptionRequest(@"ReadyStateSubscriptionRequest", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateRequest) {

                    Write315_GetReadyStateRequest(@"GetReadyStateRequest", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateResponse) {

                    Write320_GetReadyStateResponse(@"GetReadyStateResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateNotificationEvent) {

                    Write321_ReadyStateNotificationEvent(@"ReadyStateNotificationEvent", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateNotificationEvent)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write321_ReadyStateNotificationEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateNotificationEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateNotificationEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            Write319_ReadyStateResponse(@"ReadyStateResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse)o.@ReadyStateResponse), false, false);

            WriteEndElement(o);

        }



        void Write319_ReadyStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ReadyStateResponse", @"CsiReadinessV1.xsd");

            WriteAttribute(@"ClientPriority", @"", Write89_Priority(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority)o.@ClientPriority)));

            WriteAttribute(@"ClientIdentifier", @"", ((global::System.String)o.@ClientIdentifier));

            WriteAttribute(@"ReadyState", @"", Write318_ReadyState(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState)o.@ReadyState)));

            WriteEndElement(o);

        }



        string Write318_ReadyState(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState.@NotReadyForDisplay: s = @"NotReadyForDisplay"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState.@ReadyForDisplay: s = @"ReadyForDisplay"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState");

            }

            return s;

        }



        string Write89_Priority(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@DebugDisplay: s = @"DebugDisplay"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SystemPrompt: s = @"SystemPrompt"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Doors: s = @"Doors"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@TicketPrompt: s = @"TicketPrompt"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Tilt: s = @"Tilt"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@BillInAd: s = @"BillInAd"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Portal: s = @"Portal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@AttendantMenu: s = @"AttendantMenu"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@FeaturePortal: s = @"FeaturePortal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@PlayerPrompt: s = @"PlayerPrompt"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SyncSation: s = @"SyncSation"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SystemExtension: s = @"SystemExtension"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@MainMenu: s = @"MainMenu"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@GamePortal: s = @"GamePortal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Game: s = @"Game"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@GlassPortal: s = @"GlassPortal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SystemTopGlass: s = @"SystemTopGlass"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@DeviceEmulator: s = @"DeviceEmulator"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority");

            }

            return s;

        }



        void Write320_GetReadyStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            Write317_ReadinessResponse(@"ReadinessResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse)o.@ReadinessResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse>)o.@ReadyStateResponse;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write319_ReadyStateResponse(@"ReadyStateResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write317_ReadinessResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiReadinessV1.xsd", Write316_ReadinessErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiReadinessV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write316_ReadinessErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode.@UNKNOWN_CLIENT_IDENTIFIER: s = @"UNKNOWN_CLIENT_IDENTIFIER"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode");

            }

            return s;

        }



        void Write315_GetReadyStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            WriteAttribute(@"ClientPriority", @"", Write89_Priority(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority)o.@ClientPriority)));

            WriteAttribute(@"ClientIdentifier", @"", ((global::System.String)o.@ClientIdentifier));

            WriteEndElement(o);

        }



        void Write323_ReadyStateSubscriptionRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            WriteAttribute(@"ClientPriority", @"", Write89_Priority(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority)o.@ClientPriority)));

            WriteAttribute(@"Subscription", @"", Write322_SubscriptionStatus(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus)o.@Subscription)));

            WriteEndElement(o);

        }



        string Write322_SubscriptionStatus(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus.@Unsubscribe: s = @"Unsubscribe"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus.@Subscribe: s = @"Subscribe"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus");

            }

            return s;

        }



        void Write326_SetReadyStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            Write317_ReadinessResponse(@"ReadinessResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse)o.@ReadinessResponse), false, false);

            WriteEndElement(o);

        }



        void Write325_SetReadyStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            WriteAttribute(@"ReadyState", @"", Write318_ReadyState(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState)o.@ReadyState)));

            WriteEndElement(o);

        }



        void Write324_ReadyStateSubscriptionResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReadinessV1.xsd");

            Write317_ReadinessResponse(@"ReadinessResponse", @"CsiReadinessV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse)o.@ReadinessResponse), false, false);

            WriteEndElement(o);

        }



        void Write314_CsiTouchScreen(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiTouchScreen", @"CsiTouchScreenV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerToMinimumDebounceIntervalRequest) {

                    Write308_Item(@"SetDigitizerToMinimumDebounceIntervalRequest", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerToMinimumDebounceIntervalRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeResponse) {

                    Write307_Item(@"SetDigitizerExclusiveModeResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeRequest) {

                    Write306_Item(@"SetDigitizerExclusiveModeRequest", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchCalibrationCompleteEvent) {

                    Write309_TouchCalibrationCompleteEvent(@"TouchCalibrationCompleteEvent", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchCalibrationCompleteEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenInfoEvent) {

                    Write313_TouchScreenInfoEvent(@"TouchScreenInfoEvent", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenInfoEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenConnectionChangedEvent) {

                    Write312_Item(@"TouchScreenConnectionChangedEvent", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenConnectionChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchDisplayTargetEvent) {

                    Write310_TouchDisplayTargetEvent(@"TouchDisplayTargetEvent", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchDisplayTargetEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoRequest) {

                    Write299_GetTouchScreenInfoRequest(@"GetTouchScreenInfoRequest", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerDebounceIntervalResponse) {

                    Write298_Item(@"DigitizerDebounceIntervalResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerDebounceIntervalResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DPPDigitizerDebounceIntervalResponse) {

                    Write295_Item(@"DPPDigitizerDebounceIntervalResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DPPDigitizerDebounceIntervalResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoResponse) {

                    Write301_GetTouchScreenInfoResponse(@"GetTouchScreenInfoResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalRequest) {

                    Write304_Item(@"ResetDigitizerDebounceIntervalRequest", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalForDPP) {

                    Write303_Item(@"ResetDigitizerDebounceIntervalForDPP", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalForDPP)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RequestMinimumDigitizerDebounceIntervalForDPP) {

                    Write302_Item(@"RequestMinimumDigitizerDebounceIntervalForDPP", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RequestMinimumDigitizerDebounceIntervalForDPP)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write302_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RequestMinimumDigitizerDebounceIntervalForDPP o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RequestMinimumDigitizerDebounceIntervalForDPP)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteEndElement(o);

        }



        void Write303_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalForDPP o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalForDPP)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteEndElement(o);

        }



        void Write304_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteAttribute(@"digitizer", @"", Write296_DigitizerRole(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole)o.@digitizer)));

            WriteEndElement(o);

        }



        string Write296_DigitizerRole(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@All: s = @"All"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@Main: s = @"Main"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@Top: s = @"Top"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@BellyGlass: s = @"Belly Glass"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@ButtonPanel: s = @"Button Panel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@Topper: s = @"Topper"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole");

            }

            return s;

        }



        void Write301_GetTouchScreenInfoResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            Write293_TouchScreenResponse(@"TouchScreenResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse)o.@TouchScreenResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)o.@TouchScreens);

                if (a != null){

                    WriteStartElement(@"TouchScreens", @"CsiTouchScreenV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write300_TouchScreenInfo(@"TouchScreenInfo", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write300_TouchScreenInfo(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"TouchScreenInfo", @"CsiTouchScreenV1.xsd");

            WriteElementStringRaw(@"driverSubClass", @"CsiTouchScreenV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@driverSubClass)));

            WriteElementStringRaw(@"driver", @"CsiTouchScreenV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@driver)));

            WriteElementStringRaw(@"deviceId", @"CsiTouchScreenV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@deviceId)));

            WriteElementStringRaw(@"display", @"CsiTouchScreenV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@display)));

            WriteEndElement(o);

        }



        void Write293_TouchScreenResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiTouchScreenV1.xsd", Write292_TouchScreenErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiTouchScreenV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write292_TouchScreenErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode.@REQUEST_PROHIBITED_IN_THIS_JURISDICTION: s = @"REQUEST_PROHIBITED_IN_THIS_JURISDICTION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode");

            }

            return s;

        }



        void Write295_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DPPDigitizerDebounceIntervalResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DPPDigitizerDebounceIntervalResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            Write293_TouchScreenResponse(@"TouchScreenResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse)o.@TouchScreenResponse), false, false);

            Write294_DigitizerInterval(@"DigitizerInterval", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerInterval)o.@DigitizerInterval), false, false);

            WriteEndElement(o);

        }



        void Write294_DigitizerInterval(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerInterval o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerInterval)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteAttribute(@"interval", @"", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@interval)));

            WriteEndElement(o);

        }



        void Write298_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerDebounceIntervalResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerDebounceIntervalResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            Write293_TouchScreenResponse(@"TouchScreenResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse)o.@TouchScreenResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval>)o.@DigitizerIntervals);

                if (a != null){

                    WriteStartElement(@"DigitizerIntervals", @"CsiTouchScreenV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write297_SpecificDigitizerInterval(@"Interval", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write297_SpecificDigitizerInterval(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"SpecificDigitizerInterval", @"CsiTouchScreenV1.xsd");

            WriteElementStringRaw(@"Interval", @"CsiTouchScreenV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Interval)));

            WriteElementString(@"DigitizerRole", @"CsiTouchScreenV1.xsd", Write296_DigitizerRole(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole)o.@DigitizerRole)));

            WriteEndElement(o);

        }



        void Write299_GetTouchScreenInfoRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetTouchScreenInfoRequest", @"CsiTouchScreenV1.xsd");

            WriteEndElement(o);

        }



        void Write310_TouchDisplayTargetEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchDisplayTargetEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchDisplayTargetEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteAttribute(@"x", @"", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@x)));

            WriteAttribute(@"y", @"", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@y)));

            WriteAttribute(@"display", @"", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@display)));

            WriteAttribute(@"offscreen", @"", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@offscreen)));

            WriteEndElement(o);

        }



        void Write312_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenConnectionChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenConnectionChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteAttribute(@"deviceId", @"", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@deviceId)));

            WriteAttribute(@"driver", @"", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@driver)));

            WriteAttribute(@"driverSubClass", @"", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@driverSubClass)));

            WriteAttribute(@"connectionStatus", @"", Write311_ConnectionStatus(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus)o.@connectionStatus)));

            WriteEndElement(o);

        }



        string Write311_ConnectionStatus(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus.@Invalid: s = @"Invalid"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus.@Connected: s = @"Connected"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus.@Disconnected: s = @"Disconnected"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus");

            }

            return s;

        }



        void Write313_TouchScreenInfoEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenInfoEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenInfoEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)o.@TouchScreens);

                if (a != null){

                    WriteStartElement(@"TouchScreens", @"CsiTouchScreenV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write300_TouchScreenInfo(@"TouchScreenInfo", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write309_TouchCalibrationCompleteEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchCalibrationCompleteEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchCalibrationCompleteEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteAttribute(@"display", @"", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@display)));

            WriteEndElement(o);

        }



        void Write306_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            Write305_DigitizerExclusiveMode(@"Instance", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode)o.@Instance), false, false);

            WriteEndElement(o);

        }



        void Write305_DigitizerExclusiveMode(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"DigitizerExclusiveMode", @"CsiTouchScreenV1.xsd");

            WriteElementString(@"DigitizerRole", @"CsiTouchScreenV1.xsd", Write296_DigitizerRole(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole)o.@DigitizerRole)));

            WriteElementStringRaw(@"ExclusiveModeRequested", @"CsiTouchScreenV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@ExclusiveModeRequested)));

            WriteEndElement(o);

        }



        void Write307_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode>)o.@Instance;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write305_DigitizerExclusiveMode(@"Instance", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode)a[ia]), false, false);

                    }

                }

            }

            Write293_TouchScreenResponse(@"TouchScreenResponse", @"CsiTouchScreenV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse)o.@TouchScreenResponse), false, false);

            WriteEndElement(o);

        }



        void Write308_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerToMinimumDebounceIntervalRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerToMinimumDebounceIntervalRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiTouchScreenV1.xsd");

            WriteAttribute(@"digitizer", @"", Write296_DigitizerRole(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole)o.@digitizer)));

            WriteEndElement(o);

        }



        void Write291_CsiBankSynchronization(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiBankSynchronization", @"CsiBankSynchronizationV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationResponse1) {

                    Write287_MessageRegistrationResponse1(@"MessageRegistrationResponse", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationResponse1)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationRequest1) {

                    Write284_MessageRegistrationRequest1(@"MessageRegistrationRequest", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationRequest1)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SendSynchronizationPayload) {

                    Write290_SendSynchronizationPayload(@"SendSynchronizationPayload", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SendSynchronizationPayload)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReceivedSynchronizationPayload) {

                    Write289_ReceivedSynchronizationPayload(@"ReceivedSynchronizationPayload", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReceivedSynchronizationPayload)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoResponse) {

                    Write280_Item(@"BankSynchronizationInfoResponse", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoRequest) {

                    Write275_BankSynchronizationInfoRequest(@"BankSynchronizationInfoRequest", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write275_BankSynchronizationInfoRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"BankSynchronizationInfoRequest", @"CsiBankSynchronizationV1.xsd");

            WriteEndElement(o);

        }



        void Write280_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiBankSynchronizationV1.xsd");

            Write277_SynchronizationInfoError(@"SynchronizationInfoError", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInfoError)o.@SynchronizationInfoError), false, false);

            Write279_SynchronizationInformationData(@"SynchronizationInfo", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInformationData)o.@SynchronizationInfo), false, false);

            WriteEndElement(o);

        }



        void Write279_SynchronizationInformationData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInformationData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInformationData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"SynchronizationInformationData", @"CsiBankSynchronizationV1.xsd");

            WriteElementStringRaw(@"TimeFrame", @"CsiBankSynchronizationV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)o.@TimeFrame)));

            WriteElementString(@"TimeFramePrecision", @"CsiBankSynchronizationV1.xsd", Write278_TimeFramePrecisionLevel(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel)o.@TimeFramePrecision)));

            WriteElementStringRaw(@"PositionInBank", @"CsiBankSynchronizationV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@PositionInBank)));

            WriteElementStringRaw(@"TotalBankPositions", @"CsiBankSynchronizationV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@TotalBankPositions)));

            WriteEndElement(o);

        }



        string Write278_TimeFramePrecisionLevel(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel.@None: s = @"None"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel.@Low: s = @"Low"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel.@High: s = @"High"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel");

            }

            return s;

        }



        void Write277_SynchronizationInfoError(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInfoError o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInfoError)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiBankSynchronizationV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiBankSynchronizationV1.xsd", Write276_Item(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiBankSynchronizationV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write276_Item(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode.@None: s = @"None"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode.@FeatureDisabled: s = @"FeatureDisabled"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode");

            }

            return s;

        }



        void Write289_ReceivedSynchronizationPayload(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReceivedSynchronizationPayload o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReceivedSynchronizationPayload)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiBankSynchronizationV1.xsd");

            Write288_SynchronizationPayloadData(@"ReceivedPayload", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationPayloadData)o.@ReceivedPayload), false, false);

            WriteEndElement(o);

        }



        void Write288_SynchronizationPayloadData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationPayloadData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationPayloadData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"SynchronizationPayloadData", @"CsiBankSynchronizationV1.xsd");

            WriteElementStringRaw(@"PayloadSize", @"CsiBankSynchronizationV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@PayloadSize)));

            WriteElementString(@"PayloadData", @"CsiBankSynchronizationV1.xsd", ((global::System.String)o.@PayloadData));

            WriteEndElement(o);

        }



        void Write290_SendSynchronizationPayload(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SendSynchronizationPayload o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SendSynchronizationPayload)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiBankSynchronizationV1.xsd");

            Write288_SynchronizationPayloadData(@"SendPayload", @"CsiBankSynchronizationV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationPayloadData)o.@SendPayload), false, false);

            WriteElementString(@"Destination", @"CsiBankSynchronizationV1.xsd", Write282_MessageRegistrationType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType)o.@Destination)));

            WriteEndElement(o);

        }



        string Write282_MessageRegistrationType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType.@CONTROLLER: s = @"CONTROLLER"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType.@FOUNDATION: s = @"FOUNDATION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType.@GAME: s = @"GAME"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType");

            }

            return s;

        }



        void Write284_MessageRegistrationRequest1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationRequest1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationRequest1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiBankSynchronizationV1.xsd");

            WriteElementString(@"Action", @"CsiBankSynchronizationV1.xsd", Write281_MessageRegistrationAction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction)o.@Action)));

            WriteElementString(@"MessageType", @"CsiBankSynchronizationV1.xsd", Write282_MessageRegistrationType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType)o.@MessageType)));

            WriteEndElement(o);

        }



        string Write281_MessageRegistrationAction(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction.@REGISTER: s = @"REGISTER"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction.@UNREGISTER: s = @"UNREGISTER"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction");

            }

            return s;

        }



        void Write287_MessageRegistrationResponse1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationResponse1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationResponse1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiBankSynchronizationV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiBankSynchronizationV1.xsd", Write285_MessageRegistrationErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiBankSynchronizationV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write285_MessageRegistrationErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode.@None: s = @"None"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode.@FeatureDisabled: s = @"FeatureDisabled"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode");

            }

            return s;

        }



        void Write274_CsiStreamingLight(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiStreamingLight", @"CsiStreamingLightV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityRequest) {

                    Write265_SetLightIntensityRequest(@"SetLightIntensityRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityResponse) {

                    Write266_SetLightIntensityResponse(@"SetLightIntensityResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesRequest) {

                    Write263_Item(@"SetEnabledSymbolHighlightFeaturesRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesResponse) {

                    Write264_Item(@"SetEnabledSymbolHighlightFeaturesResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceRequest) {

                    Write272_StartLightSequenceRequest(@"StartLightSequenceRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceResponse) {

                    Write273_StartLightSequenceResponse(@"StartLightSequenceResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsRequest) {

                    Write267_SetSymbolHighlightsRequest(@"SetSymbolHighlightsRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsResponse) {

                    Write268_SetSymbolHighlightsResponse(@"SetSymbolHighlightsResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.NotificationEvent) {

                    Write261_NotificationEvent(@"NotificationEvent", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.NotificationEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsRequest) {

                    Write252_ClearSymbolHighlightsRequest(@"ClearSymbolHighlightsRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsResponse) {

                    Write253_ClearSymbolHighlightsResponse(@"ClearSymbolHighlightsResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopRequest) {

                    Write246_BreakLoopRequest(@"BreakLoopRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopResponse) {

                    Write249_BreakLoopResponse(@"BreakLoopResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityRequest) {

                    Write259_GetLightIntensityRequest(@"GetLightIntensityRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityResponse) {

                    Write260_GetLightIntensityResponse(@"GetLightIntensityResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest1) {

                    Write254_GetLightDevicesRequest1(@"GetLightDevicesRequest", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest1)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse1) {

                    Write258_GetLightDevicesResponse1(@"GetLightDevicesResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse1)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write258_GetLightDevicesResponse1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData>)o.@StreamingLightFeatures;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write257_StreamingLightFeatureData(@"StreamingLightFeatures", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write257_StreamingLightFeatureData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StreamingLightFeatureData", @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            WriteAttribute(@"LightType", @"CsiStreamingLightV1.xsd", Write256_LightType1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1)o.@LightType)));

            WriteAttribute(@"TotalLightCount", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@TotalLightCount)));

            WriteAttribute(@"AdjustableIntensity", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@AdjustableIntensity)));

            if (o.@SymbolHighlightsSupportedSpecified) {

                WriteAttribute(@"SymbolHighlightsSupported", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@SymbolHighlightsSupported)));

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup>)o.@Group;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write255_StreamingLightGroup(@"Group", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup)a[ia]), false, false);

                    }

                }

            }

            if (o.@SymbolHighlightsSupportedSpecified) {

            }

            WriteEndElement(o);

        }



        void Write255_StreamingLightGroup(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StreamingLightGroup", @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"NumberOfLights", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@NumberOfLights)));

            WriteAttribute(@"LightsWorkingFeedbackSupported", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@LightsWorkingFeedbackSupported)));

            WriteAttribute(@"CanShowGameOutcome", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@CanShowGameOutcome)));

            WriteAttribute(@"RealTimeFrameControlSupported", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@RealTimeFrameControlSupported)));

            WriteAttribute(@"NumberOfFramesSupported", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@NumberOfFramesSupported)));

            if (o.@SymbolHighlightsSupportedSpecified) {

                WriteAttribute(@"SymbolHighlightsSupported", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@SymbolHighlightsSupported)));

            }

            if (o.@SymbolHighlightsSupportedSpecified) {

            }

            WriteEndElement(o);

        }



        string Write256_LightType1(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1 v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@BonusGameLights: s = @"BonusGameLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@LightBezel: s = @"LightBezel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@LightBars: s = @"LightBars"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@ReelBackLights: s = @"ReelBackLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@Candle: s = @"Candle"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@AccentLights: s = @"AccentLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@CardReaderBezel: s = @"CardReaderBezel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@TopperLightRing: s = @"TopperLightRing"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@ReelDividerLights: s = @"ReelDividerLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@ReelHighlights: s = @"ReelHighlights"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1");

            }

            return s;

        }



        void Write248_StreamingLightResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiStreamingLightV1.xsd", Write247_StreamingLightErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write247_StreamingLightErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@UNKNOWN_DRIVER_ERROR: s = @"UNKNOWN_DRIVER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_FEATURE_ID: s = @"INVALID_FEATURE_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_LIGHT_GROUP: s = @"INVALID_LIGHT_GROUP"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@FILE_NOT_FOUND: s = @"FILE_NOT_FOUND"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_SEQUENCE: s = @"INVALID_SEQUENCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@QUEUE_EMPTY: s = @"QUEUE_EMPTY"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@SEQUENCE_COMPLETE: s = @"SEQUENCE_COMPLETE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@DEVICE_IN_TILT_STATE: s = @"DEVICE_IN_TILT_STATE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@QUEUE_FULL: s = @"QUEUE_FULL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_FRAME: s = @"INVALID_FRAME"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_COMMAND: s = @"INVALID_COMMAND"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode");

            }

            return s;

        }



        void Write254_GetLightDevicesRequest1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetLightDevicesRequest", @"CsiStreamingLightV1.xsd");

            WriteEndElement(o);

        }



        void Write260_GetLightIntensityResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            WriteAttribute(@"Intensity", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Intensity)));

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            WriteEndElement(o);

        }



        void Write259_GetLightIntensityRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            WriteEndElement(o);

        }



        void Write249_BreakLoopResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            WriteEndElement(o);

        }



        void Write246_BreakLoopRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            WriteAttribute(@"GroupNumber", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@GroupNumber)));

            WriteEndElement(o);

        }



        void Write253_ClearSymbolHighlightsResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            WriteEndElement(o);

        }



        void Write252_ClearSymbolHighlightsRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            if (o.@GroupNumberSpecified) {

                WriteAttribute(@"GroupNumber", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@GroupNumber)));

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)o.@SymbolTrackingDataList);

                if (a != null){

                    WriteStartElement(@"SymbolTrackingDataList", @"CsiStreamingLightV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write250_SymbolTrackingData(@"SymbolTrackingData", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)o.@SymbolHotPositionDataList);

                if (a != null){

                    WriteStartElement(@"SymbolHotPositionDataList", @"CsiStreamingLightV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write251_SymbolHotPositionData(@"SymbolHotPositionDataData", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            if (o.@GroupNumberSpecified) {

            }

            WriteEndElement(o);

        }



        void Write251_SymbolHotPositionData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"SymbolHotPositionData", @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"ReelIndex", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@ReelIndex)));

            WriteAttribute(@"ReelStop", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@ReelStop)));

            WriteAttribute(@"WindowStopIndex", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@WindowStopIndex)));

            WriteAttribute(@"Color", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Color)));

            WriteEndElement(o);

        }



        void Write250_SymbolTrackingData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"SymbolTrackingData", @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"ReelIndex", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@ReelIndex)));

            WriteAttribute(@"ReelStop", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@ReelStop)));

            WriteAttribute(@"RowIndex", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@RowIndex)));

            WriteAttribute(@"Color", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Color)));

            WriteEndElement(o);

        }



        void Write261_NotificationEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.NotificationEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.NotificationEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            WriteAttribute(@"GroupId", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@GroupId)));

            WriteAttribute(@"Notification", @"CsiStreamingLightV1.xsd", Write247_StreamingLightErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode)o.@Notification)));

            WriteEndElement(o);

        }



        void Write268_SetSymbolHighlightsResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            WriteEndElement(o);

        }



        void Write267_SetSymbolHighlightsRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            if (o.@GroupNumberSpecified) {

                WriteAttribute(@"GroupNumber", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@GroupNumber)));

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)o.@SymbolTrackingDataList);

                if (a != null){

                    WriteStartElement(@"SymbolTrackingDataList", @"CsiStreamingLightV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write250_SymbolTrackingData(@"SymbolTrackingData", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)o.@SymbolHotPositionDataList);

                if (a != null){

                    WriteStartElement(@"SymbolHotPositionDataList", @"CsiStreamingLightV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write251_SymbolHotPositionData(@"SymbolHotPositionDataData", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            if (o.@GroupNumberSpecified) {

            }

            WriteEndElement(o);

        }



        void Write273_StartLightSequenceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            WriteEndElement(o);

        }



        void Write272_StartLightSequenceRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            WriteAttribute(@"GroupNumber", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@GroupNumber)));

            if (((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode)o.@PlayMode) != global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode.@Restart) {

                WriteAttribute(@"PlayMode", @"CsiStreamingLightV1.xsd", Write271_PlayMode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode)o.@PlayMode)));

            }

            if ((object)(o.@Item) != null){

                if (o.@Item is global::System.String) {

                    WriteElementString(@"SequenceFile", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@Item));

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFrameData) {

                    Write269_StreamingLightFrameData(@"FrameData", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFrameData)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightSequenceData) {

                    Write270_StreamingLightSequenceData(@"SequenceData", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightSequenceData)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write270_StreamingLightSequenceData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightSequenceData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightSequenceData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StreamingLightSequenceData", @"CsiStreamingLightV1.xsd");

            WriteElementString(@"SequenceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@SequenceName));

            WriteElementStringRaw(@"SequenceData", @"CsiStreamingLightV1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@SequenceData)));

            WriteEndElement(o);

        }



        void Write269_StreamingLightFrameData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFrameData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFrameData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StreamingLightFrameData", @"CsiStreamingLightV1.xsd");

            WriteElementString(@"FrameName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@FrameName));

            WriteElementStringRaw(@"FrameCount", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@FrameCount)));

            WriteElementStringRaw(@"FrameData", @"CsiStreamingLightV1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@FrameData)));

            WriteElementStringRaw(@"FrameDataSize", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@FrameDataSize)));

            WriteEndElement(o);

        }



        string Write271_PlayMode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode.@Restart: s = @"Restart"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode.@Continue: s = @"Continue"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode.@Queue: s = @"Queue"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode");

            }

            return s;

        }



        void Write264_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            WriteEndElement(o);

        }



        void Write263_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            if (o.@GroupNumberSpecified) {

                WriteAttribute(@"GroupNumber", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@GroupNumber)));

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes>)o.@EnabledSymbolHighlightFeatures);

                if (a != null){

                    WriteStartElement(@"EnabledSymbolHighlightFeatures", @"CsiStreamingLightV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"SymbolHighlightFeatureType", @"CsiStreamingLightV1.xsd", Write262_SymbolHighlightFeatureTypes(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            if (o.@GroupNumberSpecified) {

            }

            WriteEndElement(o);

        }



        string Write262_SymbolHighlightFeatureTypes(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes.@SymbolTracking: s = @"SymbolTracking"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes.@HotPosition: s = @"HotPosition"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes");

            }

            return s;

        }



        void Write266_SetLightIntensityResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            Write248_StreamingLightResponse(@"StreamingLightResponse", @"CsiStreamingLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse)o.@StreamingLightResponse), false, false);

            WriteEndElement(o);

        }



        void Write265_SetLightIntensityRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiStreamingLightV1.xsd");

            WriteAttribute(@"InterfaceName", @"CsiStreamingLightV1.xsd", ((global::System.String)o.@InterfaceName));

            WriteAttribute(@"Intensity", @"CsiStreamingLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Intensity)));

            WriteEndElement(o);

        }



        void Write245_CsiSolenoid(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiSolenoid", @"CsiSolenoidV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidResponse) {

                    Write244_SolenoidResponse(@"SolenoidResponse", @"CsiSolenoidV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidRequest) {

                    Write242_SolenoidRequest(@"SolenoidRequest", @"CsiSolenoidV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write242_SolenoidRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSolenoidV1.xsd");

            WriteElementString(@"SolenoidActionType", @"CsiSolenoidV1.xsd", Write241_SolenoidActionType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType)o.@SolenoidActionType)));

            WriteElementStringRaw(@"SolenoidActionState", @"CsiSolenoidV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@SolenoidActionState)));

            WriteEndElement(o);

        }



        string Write241_SolenoidActionType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType.@Lock: s = @"Lock"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType.@Click: s = @"Click"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType");

            }

            return s;

        }



        void Write244_SolenoidResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSolenoidV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiSolenoidV1.xsd", Write243_SolenoidErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiSolenoidV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write243_SolenoidErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode.@UNKNOWN_DRIVER_ERROR: s = @"UNKNOWN_DRIVER_ERROR"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode");

            }

            return s;

        }



        void Write240_CsiReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiReel", @"CsiReelV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionResponse) {

                    Write226_SetToPositionResponse(@"SetToPositionResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequest) {

                    Write228_SpinRequest(@"SpinRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinResponse) {

                    Write229_SpinResponse(@"SpinResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequest) {

                    Write225_SetToPositionRequest(@"SetToPositionRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderResponse) {

                    Write220_SetStopOrderResponse(@"SetStopOrderResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequest) {

                    Write222_SetSynchronousStopRequest(@"SetSynchronousStopRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopResponse) {

                    Write223_SetSynchronousStopResponse(@"SetSynchronousStopResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequest) {

                    Write231_StopRequest(@"StopRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopResponse) {

                    Write237_SynchronousStopResponse(@"SynchronousStopResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusRequest) {

                    Write238_UnregisterStatusRequest(@"UnregisterStatusRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusResponse) {

                    Write239_UnregisterStatusResponse(@"UnregisterStatusResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopRequest) {

                    Write236_SynchronousStopRequest(@"SynchronousStopRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopResponse) {

                    Write232_StopResponse(@"StopResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequest) {

                    Write234_SynchronousSpinRequest(@"SynchronousSpinRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinResponse) {

                    Write235_SynchronousSpinResponse(@"SynchronousSpinResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderRequest) {

                    Write219_SetStopOrderRequest(@"SetStopOrderRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationRequest) {

                    Write202_ClearStatusRegistrationRequest(@"ClearStatusRegistrationRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationResponse) {

                    Write203_Item(@"ClearStatusRegistrationResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesRequest) {

                    Write204_GetReelDevicesRequest(@"GetReelDevicesRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MulipleReelResponse) {

                    Write201_MulipleReelResponse(@"ChangeSpeedResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MulipleReelResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequest) {

                    Write193_ApplyAttributesRequest(@"ApplyAttributesRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesResponse) {

                    Write196_ApplyAttributesResponse(@"ApplyAttributesResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeSpeedRequest) {

                    Write199_ChangeSpeedRequest(@"ChangeSpeedRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeSpeedRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponse) {

                    Write210_GetReelDevicesResponse(@"GetReelDevicesResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryResponse) {

                    Write216_SetRecoveryResponse(@"SetRecoveryResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest1) {

                    Write217_SetRequireDeviceRequest1(@"SetRequireDeviceRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest1)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse1) {

                    Write218_SetRequireDeviceResponse1(@"SetRequireDeviceResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse1)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryRequest) {

                    Write215_SetRecoveryRequest(@"SetRecoveryRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent) {

                    Write212_ReelStatusEvent(@"ReelStatusChangedEvent", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusRequest) {

                    Write213_RegisterStatusRequest(@"RegisterStatusRequest", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusResponse) {

                    Write214_RegisterStatusResponse(@"RegisterStatusResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write214_RegisterStatusResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write195_ReelResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiReelV1.xsd", Write194_ReelErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiReelV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write194_ReelErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@INVALID_FEATURE_ID: s = @"INVALID_FEATURE_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@INVALID_REEL: s = @"INVALID_REEL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@DUPLICATE_REEL: s = @"DUPLICATE_REEL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_BOUNCE_FAILED: s = @"SET_BOUNCE_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_COCK_FAILED: s = @"SET_COCK_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_DECELERATION_FAILED: s = @"SET_DECELERATION_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_DIRECTION_FAILED: s = @"SET_DIRECTION_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_DURATION_FAILED: s = @"SET_DURATION_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_RECOVERY_FAILED: s = @"SET_RECOVERY_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_SHAKE_FAILED: s = @"SET_SHAKE_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_SPEED_FAILED: s = @"SET_SPEED_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_STOP_FAILED: s = @"SET_STOP_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@START_SPIN_FAILED: s = @"START_SPIN_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@STOP_SPIN_FAILED: s = @"STOP_SPIN_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SYNCH_SPIN_FAILED: s = @"SYNCH_SPIN_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@UNKNOWN_DRIVER_ERROR: s = @"UNKNOWN_DRIVER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_HOVER_FAILED: s = @"SET_HOVER_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@REEL_DEVICE_TILTED: s = @"REEL_DEVICE_TILTED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@APPLY_ATTRIBUTES_FAILED: s = @"APPLY_ATTRIBUTES_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_TO_POSITION_FAILED: s = @"SET_TO_POSITION_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@CHANGE_SPEED_FAILED: s = @"CHANGE_SPEED_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@REQUEST_NOT_SUPPORTED_BY_DEVICE: s = @"REQUEST_NOT_SUPPORTED_BY_DEVICE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode");

            }

            return s;

        }



        void Write213_RegisterStatusRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent>)o.@StatusSubscription;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write212_ReelStatusEvent(@"StatusSubscription", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write212_ReelStatusEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ReelStatusEvent", @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteAttribute(@"ReelStatus", @"CsiReelV1.xsd", Write211_ReelStatus(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus)o.@ReelStatus)));

            WriteEndElement(o);

        }



        string Write211_ReelStatus(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@Accelerating: s = @"Accelerating"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@ConstantSpeed: s = @"ConstantSpeed"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@Decelerating: s = @"Decelerating"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@Stopped: s = @"Stopped"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@MovingIrregularly: s = @"MovingIrregularly"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus");

            }

            return s;

        }



        void Write215_SetRecoveryRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteElementStringRaw(@"Ascending", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Ascending)));

            WriteElementString(@"Direction", @"CsiReelV1.xsd", Write197_Direction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction)o.@Direction)));

            WriteEndElement(o);

        }



        string Write197_Direction(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction.@Shortest: s = @"Shortest"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction.@Ascending: s = @"Ascending"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction.@Descending: s = @"Descending"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction");

            }

            return s;

        }



        void Write218_SetRequireDeviceResponse1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write217_SetRequireDeviceRequest1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteEndElement(o);

        }



        void Write216_SetRecoveryResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write210_GetReelDevicesResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            Write209_GetReelDevicesResponseFeatures(@"Features", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponseFeatures)o.@Features), false, false);

            WriteEndElement(o);

        }



        void Write209_GetReelDevicesResponseFeatures(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponseFeatures o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponseFeatures)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1>)o.@Feature;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write208_FeatureData1(@"Feature", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write208_FeatureData1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"FeatureData", @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"ReelType", @"CsiReelV1.xsd", Write207_ReelType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType)o.@ReelType)));

            {

                global::System.UInt16[] a = (global::System.UInt16[])o.@Speeds;

                if (a != null) {

                    Writer.WriteStartAttribute(null, @"Speeds", @"CsiReelV1.xsd");

                    for (int i = 0; i < a.Length; i++) {

                        global::System.UInt16 ai = (global::System.UInt16)a[i];

                        if (i != 0) Writer.WriteString(" ");

                        WriteValue(System.Xml.XmlConvert.ToString((global::System.UInt16)ai));

                    }

                    Writer.WriteEndAttribute();

                }

            }

            {

                global::System.UInt16[] a = (global::System.UInt16[])o.@Decelerations;

                if (a != null) {

                    Writer.WriteStartAttribute(null, @"Decelerations", @"CsiReelV1.xsd");

                    for (int i = 0; i < a.Length; i++) {

                        global::System.UInt16 ai = (global::System.UInt16)a[i];

                        if (i != 0) Writer.WriteString(" ");

                        WriteValue(System.Xml.XmlConvert.ToString((global::System.UInt16)ai));

                    }

                    Writer.WriteEndAttribute();

                }

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write205_FeatureDataReel(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime>)o.@AccelerationDecelerationTimes);

                if (a != null){

                    WriteStartElement(@"AccelerationDecelerationTimes", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write206_AccelerationDecelerationTime(@"Times", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write206_AccelerationDecelerationTime(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"AccelerationDecelerationTime", @"CsiReelV1.xsd");

            WriteElementStringRaw(@"AccelerationTimeToNextSpeed", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@AccelerationTimeToNextSpeed)));

            WriteElementStringRaw(@"DecelerationTimeToPreviousSpeed", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@DecelerationTimeToPreviousSpeed)));

            WriteEndElement(o);

        }



        void Write205_FeatureDataReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementStringRaw(@"Stops", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Stops)));

            WriteElementStringRaw(@"MaxSeekTime", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@MaxSeekTime)));

            WriteEndElement(o);

        }



        string Write207_ReelType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@GamePlayReels: s = @"GamePlayReels"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@BonusReels: s = @"BonusReels"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Dice: s = @"Dice"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Wheel: s = @"Wheel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Prism: s = @"Prism"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@LinearSlider: s = @"LinearSlider"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Sphere: s = @"Sphere"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Pointer: s = @"Pointer"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Unknown: s = @"Unknown"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType");

            }

            return s;

        }



        void Write199_ChangeSpeedRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeSpeedRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeSpeedRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write198_ChangeReelSpeed(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write198_ChangeReelSpeed(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ChangeReelSpeed", @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementStringRaw(@"SpeedIndex", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@SpeedIndex)));

            WriteElementStringRaw(@"Period", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Period)));

            WriteElementString(@"Direction", @"CsiReelV1.xsd", Write197_Direction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction)o.@Direction)));

            WriteElementStringRaw(@"Immediate", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Immediate)));

            WriteEndElement(o);

        }



        void Write196_ApplyAttributesResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write193_ApplyAttributesRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write192_ApplyAttributesRequestReel(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write192_ApplyAttributesRequestReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            if (o.@CockSpecified) {

                WriteElementStringRaw(@"Cock", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Cock)));

            }

            if (o.@BounceSpecified) {

                WriteElementStringRaw(@"Bounce", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Bounce)));

            }

            if (o.@ShakeSpecified) {

                WriteElementString(@"Shake", @"CsiReelV1.xsd", Write189_Shake(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake)o.@Shake)));

            }

            if (o.@HoverSpecified) {

                WriteElementString(@"Hover", @"CsiReelV1.xsd", Write190_Hover(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover)o.@Hover)));

            }

            Write191_HoverLimits(@"HoverLimits", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits)o.@HoverLimits), false, false);

            WriteEndElement(o);

        }



        void Write191_HoverLimits(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"HoverLimits", @"CsiReelV1.xsd");

            WriteElementStringRaw(@"LowerLimit", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@LowerLimit)));

            WriteElementStringRaw(@"UpperLimit", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@UpperLimit)));

            WriteEndElement(o);

        }



        string Write190_Hover(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Off: s = @"Off"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Custom: s = @"Custom"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Top: s = @"Top"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Center: s = @"Center"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Bottom: s = @"Bottom"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover");

            }

            return s;

        }



        string Write189_Shake(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Off: s = @"Off"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Low: s = @"Low"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Medium: s = @"Medium"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@High: s = @"High"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Max: s = @"Max"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake");

            }

            return s;

        }



        void Write201_MulipleReelResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MulipleReelResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MulipleReelResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"MulipleReelResponse", @"CsiReelV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError>)o.@ReelRequestError;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write200_ReelRequestError(@"ReelRequestError", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write200_ReelRequestError(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ReelRequestError", @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementString(@"ErrorCode", @"CsiReelV1.xsd", Write194_ReelErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiReelV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        void Write204_GetReelDevicesRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetReelDevicesRequest", @"CsiReelV1.xsd");

            WriteEndElement(o);

        }



        void Write203_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write202_ClearStatusRegistrationRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteEndElement(o);

        }



        void Write219_SetStopOrderRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteElementString(@"Reels", @"CsiReelV1.xsd", ((global::System.String)o.@Reels));

            WriteEndElement(o);

        }



        void Write235_SynchronousSpinResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write234_SynchronousSpinRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteElementStringRaw(@"SpeedIndex", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@SpeedIndex)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write233_SynchronousSpinRequestReel(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write233_SynchronousSpinRequestReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementString(@"Direction", @"CsiReelV1.xsd", Write197_Direction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction)o.@Direction)));

            WriteElementStringRaw(@"Duration", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Duration)));

            WriteElementStringRaw(@"Stop", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Stop)));

            if (o.@CockSpecified) {

                WriteElementStringRaw(@"Cock", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Cock)));

            }

            if (o.@BounceSpecified) {

                WriteElementStringRaw(@"Bounce", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Bounce)));

            }

            if (o.@ShakeSpecified) {

                WriteElementString(@"Shake", @"CsiReelV1.xsd", Write189_Shake(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake)o.@Shake)));

            }

            if (o.@HoverSpecified) {

                WriteElementString(@"Hover", @"CsiReelV1.xsd", Write190_Hover(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover)o.@Hover)));

            }

            Write191_HoverLimits(@"HoverLimits", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits)o.@HoverLimits), false, false);

            WriteEndElement(o);

        }



        void Write232_StopResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write236_SynchronousStopRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            WriteElementString(@"Reels", @"CsiReelV1.xsd", ((global::System.String)o.@Reels));

            WriteEndElement(o);

        }



        void Write239_UnregisterStatusResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write238_UnregisterStatusRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent>)o.@StatusSubscription;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write212_ReelStatusEvent(@"StatusSubscription", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write237_SynchronousStopResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write231_StopRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write230_StopRequestReel(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write230_StopRequestReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementStringRaw(@"Stop", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Stop)));

            WriteEndElement(o);

        }



        void Write223_SetSynchronousStopResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write222_SetSynchronousStopRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write221_SetSynchronousStopRequestReel(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write221_SetSynchronousStopRequestReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementStringRaw(@"Stop", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Stop)));

            WriteEndElement(o);

        }



        void Write220_SetStopOrderResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write225_SetToPositionRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write224_SetToPositionRequestReel(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write224_SetToPositionRequestReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementStringRaw(@"Stop", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Stop)));

            WriteEndElement(o);

        }



        void Write229_SpinResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write228_SpinRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiReelV1.xsd", ((global::System.String)o.@FeatureId));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel>)o.@Reels);

                if (a != null){

                    WriteStartElement(@"Reels", @"CsiReelV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write227_SpinRequestReel(@"Reel", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write227_SpinRequestReel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            WriteElementStringRaw(@"Number", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Number)));

            WriteElementStringRaw(@"Deceleration", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Deceleration)));

            WriteElementStringRaw(@"Speed", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Speed)));

            WriteElementString(@"Direction", @"CsiReelV1.xsd", Write197_Direction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction)o.@Direction)));

            WriteElementStringRaw(@"Duration", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Duration)));

            WriteElementStringRaw(@"Stop", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Stop)));

            if (o.@CockSpecified) {

                WriteElementStringRaw(@"Cock", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Cock)));

            }

            if (o.@BounceSpecified) {

                WriteElementStringRaw(@"Bounce", @"CsiReelV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Bounce)));

            }

            if (o.@ShakeSpecified) {

                WriteElementString(@"Shake", @"CsiReelV1.xsd", Write189_Shake(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake)o.@Shake)));

            }

            if (o.@HoverSpecified) {

                WriteElementString(@"Hover", @"CsiReelV1.xsd", Write190_Hover(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover)o.@Hover)));

            }

            Write191_HoverLimits(@"HoverLimits", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits)o.@HoverLimits), false, false);

            WriteEndElement(o);

        }



        void Write226_SetToPositionResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiReelV1.xsd");

            Write195_ReelResponse(@"ReelResponse", @"CsiReelV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse)o.@ReelResponse), false, false);

            WriteEndElement(o);

        }



        void Write188_CsiWindow(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiWindow", @"CsiWindowV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionResponse) {

                    Write181_MultiWindowRepositionResponse(@"MultiWindowRepositionResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeRequest) {

                    Write182_MultiWindowSizeRequest(@"MultiWindowSizeRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponse) {

                    Write171_MonitorConfigurationResponse(@"MonitorConfigurationResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionRequest) {

                    Write180_MultiWindowRepositionRequest(@"MultiWindowRepositionRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeResponse) {

                    Write183_MultiWindowSizeResponse(@"MultiWindowSizeResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeRequest) {

                    Write186_SizeRequest(@"SizeRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeResponse) {

                    Write187_SizeResponse(@"SizeResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionRequest) {

                    Write184_RepositionRequest(@"RepositionRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionResponse) {

                    Write185_RepositionResponse(@"RepositionResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequest) {

                    Write155_ChangeZOrderRequest(@"ChangeZOrderRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeZOrderResponse) {

                    Write156_ChangeZOrderResponse(@"ChangeZOrderResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeZOrderResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateRequest) {

                    Write150_AnimateRequest(@"AnimateRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateResponse) {

                    Write153_AnimateResponse(@"AnimateResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedRequest) {

                    Write157_CreatedRequest(@"CreatedRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedResponse) {

                    Write160_DestroyedResponse(@"DestroyedResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationRequest) {

                    Write161_MonitorConfigurationRequest(@"MonitorConfigurationRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedResponse) {

                    Write158_CreatedResponse(@"CreatedResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedRequest) {

                    Write159_DestroyedRequest(@"DestroyedRequest", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write159_DestroyedRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            WriteEndElement(o);

        }



        void Write158_CreatedResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)o.@WindowResponse), false, false);

            if (o.@WindowIdSpecified) {

                WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            }

            WriteEndElement(o);

        }



        void Write152_WindowResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiWindowV1.xsd", Write151_WindowErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiWindowV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write151_WindowErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@UNKNOWN_WINDOW: s = @"UNKNOWN_WINDOW"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_WINDOW: s = @"INVALID_WINDOW"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_WINDOW_LOCATION: s = @"INVALID_WINDOW_LOCATION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_VIEWPORT_LOCATION: s = @"INVALID_VIEWPORT_LOCATION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_ANIMATION: s = @"INVALID_ANIMATION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@UNSUPPORTED_REQUEST: s = @"UNSUPPORTED_REQUEST"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode");

            }

            return s;

        }



        void Write161_MonitorConfigurationRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"MonitorConfigurationRequest", @"CsiWindowV1.xsd");

            WriteEndElement(o);

        }



        void Write160_DestroyedResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)o.@WindowResponse), false, false);

            if (o.@WindowIdSpecified) {

                WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            }

            WriteEndElement(o);

        }



        void Write157_CreatedRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"Flags", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Flags)));

            if (o.@MultitouchSupportedSpecified) {

                WriteElementStringRaw(@"MultitouchSupported", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@MultitouchSupported)));

            }

            if (o.@SimulateMouseEventsOnDppSpecified) {

                WriteElementStringRaw(@"SimulateMouseEventsOnDpp", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@SimulateMouseEventsOnDpp)));

            }

            WriteElementString(@"PriorityType", @"CsiWindowV1.xsd", Write89_Priority(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority)o.@PriorityType)));

            {

                global::System.Collections.Generic.List<global::System.Int64> a = (global::System.Collections.Generic.List<global::System.Int64>)o.@WindowHandle;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"WindowHandle", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int64)((global::System.Int64)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write153_AnimateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)o.@WindowResponse), false, false);

            WriteEndElement(o);

        }



        void Write150_AnimateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"Duration", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Duration)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation>)o.@Animations;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write149_Animation(@"Animations", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write149_Animation(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"Animation", @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport>)o.@AnimationViewports;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write148_AnimationViewport(@"AnimationViewports", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write148_AnimationViewport(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"AnimationViewport", @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"ViewportId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@ViewportId)));

            WriteElementStringRaw(@"LayerIndex", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@LayerIndex)));

            Write147_VirtualRectangle(@"Start", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle)o.@Start), false, false);

            Write147_VirtualRectangle(@"End", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle)o.@End), false, false);

            WriteEndElement(o);

        }



        void Write147_VirtualRectangle(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"VirtualRectangle", @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"x", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@x)));

            WriteElementStringRaw(@"y", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@y)));

            WriteElementStringRaw(@"w", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@w)));

            WriteElementStringRaw(@"h", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@h)));

            WriteEndElement(o);

        }



        void Write156_ChangeZOrderResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeZOrderResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeZOrderResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)o.@WindowResponse), false, false);

            if (o.@WindowIdSpecified) {

                WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            }

            WriteEndElement(o);

        }



        void Write155_ChangeZOrderRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            WriteElementString(@"AbsolutePosition", @"CsiWindowV1.xsd", Write154_Item(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition)o.@AbsolutePosition)));

            WriteEndElement(o);

        }



        string Write154_Item(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition.@Front: s = @"Front"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition.@Back: s = @"Back"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition");

            }

            return s;

        }



        void Write185_RepositionResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)o.@WindowResponse), false, false);

            if (o.@WindowIdSpecified) {

                WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            }

            WriteEndElement(o);

        }



        void Write184_RepositionRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write179_Window(@"Window", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window)o.@Window), false, false);

            WriteEndElement(o);

        }



        void Write179_Window(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"Window", @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            WriteElementString(@"Type", @"CsiWindowV1.xsd", Write172_WindowType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType)o.@Type)));

            WriteElementStringRaw(@"Status", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Status)));

            Write162_DesktopRectangle1(@"ViewportExtents", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1)o.@ViewportExtents), false, false);

            Write178_ViewportList(@"Viewports", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ViewportList)o.@Viewports), false, false);

            WriteEndElement(o);

        }



        void Write178_ViewportList(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ViewportList o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ViewportList)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ViewportList", @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport>)o.@Viewport;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write177_Viewport(@"Viewport", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write177_Viewport(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"Viewport", @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"ViewportId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@ViewportId)));

            WriteElementString(@"Dock", @"CsiWindowV1.xsd", Write173_DockType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType)o.@Dock)));

            WriteElementStringRaw(@"DockPriority", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@DockPriority)));

            Write147_VirtualRectangle(@"RequestedViewportCoordinates", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle)o.@RequestedViewportCoordinates), false, false);

            Write147_VirtualRectangle(@"AdjustedViewportCoordinates", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle)o.@AdjustedViewportCoordinates), false, false);

            Write162_DesktopRectangle1(@"AdjustedViewportRectangle", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1)o.@AdjustedViewportRectangle), false, false);

            Write162_DesktopRectangle1(@"RequestedViewportRectangle", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1)o.@RequestedViewportRectangle), false, false);

            if (o.@LayerIndexSpecified) {

                WriteElementStringRaw(@"LayerIndex", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@LayerIndex)));

            }

            Write176_StereoscopicFrameList(@"StereoscopicFrames", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameList)o.@StereoscopicFrames), false, false);

            WriteEndElement(o);

        }



        void Write176_StereoscopicFrameList(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameList o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameList)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"StereoscopicFrameList", @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame>)o.@StereoscopicFrame;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write175_StereoscopicFrame(@"StereoscopicFrame", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write162_DesktopRectangle1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"DesktopRectangle", @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"x", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@x)));

            WriteElementStringRaw(@"y", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@y)));

            WriteElementStringRaw(@"w", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@w)));

            WriteElementStringRaw(@"h", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)o.@h)));

            WriteEndElement(o);

        }



        string Write173_DockType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Left: s = @"Left"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Top: s = @"Top"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Right: s = @"Right"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Bottom: s = @"Bottom"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@LeftTop: s = @"LeftTop"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@RightTop: s = @"RightTop"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@LeftBottom: s = @"LeftBottom"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@RightBottom: s = @"RightBottom"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Overlay: s = @"Overlay"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType");

            }

            return s;

        }



        string Write172_WindowType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType.@Dockable: s = @"Dockable"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType.@Dialog: s = @"Dialog"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType");

            }

            return s;

        }



        void Write187_SizeResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)o.@WindowResponse), false, false);

            if (o.@WindowIdSpecified) {

                WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@WindowId)));

            }

            WriteEndElement(o);

        }



        void Write186_SizeRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write179_Window(@"Window", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window)o.@Window), false, false);

            WriteEndElement(o);

        }



        void Write183_MultiWindowSizeResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse>)o.@WindowResponse;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)a[ia]), false, false);

                    }

                }

            }

            {

                global::System.Collections.Generic.List<global::System.UInt64> a = (global::System.Collections.Generic.List<global::System.UInt64>)o.@WindowId;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write180_MultiWindowRepositionRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window>)o.@Windows;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write179_Window(@"Windows", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write171_MonitorConfigurationResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)o.@WindowResponse), false, false);

            Write170_Item(@"Data", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponseData)o.@Data), false, false);

            WriteEndElement(o);

        }



        void Write170_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponseData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponseData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            Write162_DesktopRectangle1(@"Desktop", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1)o.@Desktop), false, false);

            Write169_MonitorConfiguration1(@"MonitorConfiguration", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfiguration1)o.@MonitorConfiguration), false, false);

            WriteEndElement(o);

        }



        void Write169_MonitorConfiguration1(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfiguration1 o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfiguration1)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"MonitorConfiguration", @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor>)o.@Monitor;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write168_MonitorConfigurationMonitor(@"Monitor", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write168_MonitorConfigurationMonitor(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            WriteElementStringRaw(@"Identifier", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Identifier)));

            WriteElementString(@"Role", @"CsiWindowV1.xsd", Write163_MonitorRole1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1)o.@Role)));

            WriteElementString(@"Style", @"CsiWindowV1.xsd", Write164_MonitorStyle1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1)o.@Style)));

            WriteElementString(@"Aspect", @"CsiWindowV1.xsd", Write165_MonitorAspect1(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1)o.@Aspect)));

            Write166_Item(@"Model", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorModel)o.@Model), false, false);

            Write162_DesktopRectangle1(@"DesktopCoordinates", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1)o.@DesktopCoordinates), false, false);

            WriteElementStringRaw(@"VirtualX", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@VirtualX)));

            WriteElementStringRaw(@"VirtualY", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@VirtualY)));

            Write167_Item(@"AdditionalLayers", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorAdditionalLayers)o.@AdditionalLayers), false, false);

            WriteEndElement(o);

        }



        void Write167_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorAdditionalLayers o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorAdditionalLayers)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::System.Int32> a = (global::System.Collections.Generic.List<global::System.Int32>)o.@OffsetX;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"OffsetX", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)a[ia])));

                    }

                }

            }

            {

                global::System.Collections.Generic.List<global::System.Int32> a = (global::System.Collections.Generic.List<global::System.Int32>)o.@OffsetY;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"OffsetY", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.Int32)((global::System.Int32)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write166_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorModel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorModel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            WriteElementString(@"Manufacturer", @"CsiWindowV1.xsd", ((global::System.String)o.@Manufacturer));

            WriteElementString(@"Model", @"CsiWindowV1.xsd", ((global::System.String)o.@Model));

            WriteElementString(@"Version", @"CsiWindowV1.xsd", ((global::System.String)o.@Version));

            WriteEndElement(o);

        }



        string Write165_MonitorAspect1(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1 v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Standard: s = @"Standard"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Widescreen: s = @"Widescreen"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Narrow: s = @"Narrow"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Ultrawide: s = @"Ultrawide"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Portrait: s = @"Portrait"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1");

            }

            return s;

        }



        string Write164_MonitorStyle1(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1 v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@Normal: s = @"Normal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@RoundTop: s = @"RoundTop"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@PureDepth: s = @"PureDepth"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@ExtendedTouchscreen: s = @"ExtendedTouchscreen"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1");

            }

            return s;

        }



        string Write163_MonitorRole1(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1 v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@Main: s = @"Main"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@Top: s = @"Top"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@BellyGlass: s = @"BellyGlass"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@ButtonPanel: s = @"ButtonPanel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@Topper: s = @"Topper"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1");

            }

            return s;

        }



        void Write182_MultiWindowSizeRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window>)o.@Windows;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write179_Window(@"Windows", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write181_MultiWindowRepositionResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiWindowV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse>)o.@WindowResponse;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write152_WindowResponse(@"WindowResponse", @"CsiWindowV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse)a[ia]), false, false);

                    }

                }

            }

            {

                global::System.Collections.Generic.List<global::System.UInt64> a = (global::System.Collections.Generic.List<global::System.UInt64>)o.@WindowId;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"WindowId", @"CsiWindowV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write146_CsiSound(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiSound", @"CsiSoundV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusRequest) {

                    Write136_VolumeMuteAllStatusRequest(@"VolumeMuteAllStatusRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusResponse) {

                    Write137_VolumeMuteAllStatusResponse(@"VolumeMuteAllStatusResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelChangedEvent) {

                    Write138_VolumePlayerLevelChangedEvent(@"VolumePlayerLevelChangedEvent", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsResponse) {

                    Write133_VolumeAllGroupsResponse(@"VolumeAllGroupsResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeChangedEvent) {

                    Write134_VolumeChangedEvent(@"VolumeChangedEvent", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusChangedEvent) {

                    Write135_Item(@"VolumeMuteAllStatusChangedEvent", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelRequest) {

                    Write139_VolumePlayerLevelRequest(@"VolumePlayerLevelRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableResponse) {

                    Write143_VolumePlayerSelectableResponse(@"VolumePlayerSelectableResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeRequest) {

                    Write144_VolumeRequest(@"VolumeRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeResponse) {

                    Write145_VolumeResponse(@"VolumeResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelResponse) {

                    Write140_VolumePlayerLevelResponse(@"VolumePlayerLevelResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableChangedEvent) {

                    Write141_Item(@"VolumePlayerSelectableChangedEvent", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableRequest) {

                    Write142_VolumePlayerSelectableRequest(@"VolumePlayerSelectableRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsRequest) {

                    Write129_VolumeAllGroupsRequest(@"VolumeAllGroupsRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredResponse) {

                    Write116_ChairPoweredResponse(@"ChairPoweredResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsRequest) {

                    Write117_GetAudioEndpointsRequest(@"GetAudioEndpointsRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsResponse) {

                    Write119_GetAudioEndpointsResponse(@"GetAudioEndpointsResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerRequest) {

                    Write111_ChairEnablePowerRequest(@"ChairEnablePowerRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerResponse) {

                    Write114_ChairEnablePowerResponse(@"ChairEnablePowerResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredRequest) {

                    Write115_ChairPoweredRequest(@"ChairPoweredRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackChangedEvent) {

                    Write121_HeadphoneJackChangedEvent(@"HeadphoneJackChangedEvent", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackChangedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointResponse) {

                    Write126_Item(@"SetDefaultAudioEndpointResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelRequest) {

                    Write127_SetVolumePlayerLevelRequest(@"SetVolumePlayerLevelRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelResponse) {

                    Write128_SetVolumePlayerLevelResponse(@"SetVolumePlayerLevelResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsRequest) {

                    Write123_MuteClientsRequest(@"MuteClientsRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsResponse) {

                    Write124_MuteClientsResponse(@"MuteClientsResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointRequest) {

                    Write125_SetDefaultAudioEndpointRequest(@"SetDefaultAudioEndpointRequest", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointRequest)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write125_SetDefaultAudioEndpointRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementString(@"Endpoint", @"CsiSoundV1.xsd", ((global::System.String)o.@Endpoint));

            WriteEndElement(o);

        }



        void Write124_MuteClientsResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState>)o.@PriorityMuteState;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write122_PriorityMuteState(@"PriorityMuteState", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write122_PriorityMuteState(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"PriorityMuteState", @"CsiSoundV1.xsd");

            WriteElementString(@"PriorityType", @"CsiSoundV1.xsd", Write89_Priority(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority)o.@PriorityType)));

            WriteElementStringRaw(@"Muted", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Muted)));

            WriteEndElement(o);

        }



        void Write113_SoundResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiSoundV1.xsd", Write112_SoundErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiSoundV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write112_SoundErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CHAIR_NOT_INSTALLED: s = @"CHAIR_NOT_INSTALLED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CHAIR_COMMUNICATION_FAILURE: s = @"CHAIR_COMMUNICATION_FAILURE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@VOLUME_ERROR: s = @"VOLUME_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CSI_SCHEMA_VERSION_MISMATCH: s = @"CSI_SCHEMA_VERSION_MISMATCH"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@WASAPI_FAILURE: s = @"WASAPI_FAILURE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode");

            }

            return s;

        }



        void Write123_MuteClientsRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState>)o.@PriorityMuteState;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write122_PriorityMuteState(@"PriorityMuteState", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write128_SetVolumePlayerLevelResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            WriteEndElement(o);

        }



        void Write127_SetVolumePlayerLevelRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementStringRaw(@"VolumePlayerLevel", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@VolumePlayerLevel)));

            if (o.@PlayerMuteSelectedSpecified) {

                WriteElementStringRaw(@"PlayerMuteSelected", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PlayerMuteSelected)));

            }

            WriteEndElement(o);

        }



        void Write126_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            WriteEndElement(o);

        }



        void Write121_HeadphoneJackChangedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementString(@"HeadphoneJackState", @"CsiSoundV1.xsd", Write120_HeadphoneJackState(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState)o.@HeadphoneJackState)));

            WriteEndElement(o);

        }



        string Write120_HeadphoneJackState(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState.@Inserted: s = @"Inserted"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState.@Removed: s = @"Removed"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState");

            }

            return s;

        }



        void Write115_ChairPoweredRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ChairPoweredRequest", @"CsiSoundV1.xsd");

            WriteEndElement(o);

        }



        void Write114_ChairEnablePowerResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            if (o.@SuccessSpecified) {

                WriteElementStringRaw(@"Success", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Success)));

            }

            WriteEndElement(o);

        }



        void Write111_ChairEnablePowerRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementStringRaw(@"EnablePower", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@EnablePower)));

            WriteEndElement(o);

        }



        void Write119_GetAudioEndpointsResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            Write118_EndpointList(@"Endpoints", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EndpointList)o.@Endpoints), false, false);

            WriteEndElement(o);

        }



        void Write118_EndpointList(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EndpointList o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EndpointList)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"EndpointList", @"CsiSoundV1.xsd");

            {

                global::System.Collections.Generic.List<global::System.String> a = (global::System.Collections.Generic.List<global::System.String>)o.@Endpoint;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"Endpoint", @"CsiSoundV1.xsd", ((global::System.String)a[ia]));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write117_GetAudioEndpointsRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            if (o.@UnusedSpecified) {

                WriteElementStringRaw(@"Unused", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Unused)));

            }

            WriteEndElement(o);

        }



        void Write116_ChairPoweredResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            if (o.@PoweredSpecified) {

                WriteElementStringRaw(@"Powered", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Powered)));

            }

            WriteEndElement(o);

        }



        void Write129_VolumeAllGroupsRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"VolumeAllGroupsRequest", @"CsiSoundV1.xsd");

            WriteEndElement(o);

        }



        void Write142_VolumePlayerSelectableRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"VolumePlayerSelectableRequest", @"CsiSoundV1.xsd");

            WriteEndElement(o);

        }



        void Write141_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementStringRaw(@"VolumePlayerSelectable", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@VolumePlayerSelectable)));

            if (o.@PlayerMuteSelectableSpecified) {

                WriteElementStringRaw(@"PlayerMuteSelectable", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PlayerMuteSelectable)));

            }

            WriteEndElement(o);

        }



        void Write140_VolumePlayerLevelResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            if (o.@VolumePlayerLevelSpecified) {

                WriteElementStringRaw(@"VolumePlayerLevel", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@VolumePlayerLevel)));

            }

            if (o.@PlayerMuteSelectedSpecified) {

                WriteElementStringRaw(@"PlayerMuteSelected", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PlayerMuteSelected)));

            }

            if (o.@DefaultVolumePlayerLevelSpecified) {

                WriteElementStringRaw(@"DefaultVolumePlayerLevel", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@DefaultVolumePlayerLevel)));

            }

            WriteEndElement(o);

        }



        void Write145_VolumeResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            Write131_GroupVolumeSetting(@"GroupVolume", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting)o.@GroupVolume), false, false);

            WriteEndElement(o);

        }



        void Write131_GroupVolumeSetting(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GroupVolumeSetting", @"CsiSoundV1.xsd");

            WriteElementStringRaw(@"VolumeLevel", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@VolumeLevel)));

            WriteElementString(@"SoundGroup", @"CsiSoundV1.xsd", Write130_GroupName(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName)o.@SoundGroup)));

            WriteEndElement(o);

        }



        void Write144_VolumeRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementString(@"SoundGroup", @"CsiSoundV1.xsd", Write130_GroupName(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName)o.@SoundGroup)));

            WriteEndElement(o);

        }



        void Write143_VolumePlayerSelectableResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            if (o.@PlayerSelectableSpecified) {

                WriteElementStringRaw(@"PlayerSelectable", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PlayerSelectable)));

            }

            if (o.@PlayerMuteSelectableSpecified) {

                WriteElementStringRaw(@"PlayerMuteSelectable", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PlayerMuteSelectable)));

            }

            WriteEndElement(o);

        }



        void Write139_VolumePlayerLevelRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"VolumePlayerLevelRequest", @"CsiSoundV1.xsd");

            WriteEndElement(o);

        }



        void Write135_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementStringRaw(@"MuteAll", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@MuteAll)));

            WriteEndElement(o);

        }



        void Write134_VolumeChangedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write131_GroupVolumeSetting(@"GroupVolume", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting)o.@GroupVolume), false, false);

            WriteEndElement(o);

        }



        void Write133_VolumeAllGroupsResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            Write132_Volumes(@"Volumes", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Volumes)o.@Volumes), false, false);

            WriteEndElement(o);

        }



        void Write132_Volumes(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Volumes o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Volumes)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"Volumes", @"CsiSoundV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting>)o.@GroupVolume;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write131_GroupVolumeSetting(@"GroupVolume", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write138_VolumePlayerLevelChangedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelChangedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelChangedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            WriteElementStringRaw(@"VolumePlayerLevel", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Single)((global::System.Single)o.@VolumePlayerLevel)));

            WriteEndElement(o);

        }



        void Write137_VolumeMuteAllStatusResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiSoundV1.xsd");

            Write113_SoundResponse(@"SoundResponse", @"CsiSoundV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse)o.@SoundResponse), false, false);

            if (o.@MuteAllSpecified) {

                WriteElementStringRaw(@"MuteAll", @"CsiSoundV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@MuteAll)));

            }

            WriteEndElement(o);

        }



        void Write136_VolumeMuteAllStatusRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"VolumeMuteAllStatusRequest", @"CsiSoundV1.xsd");

            WriteEndElement(o);

        }



        void Write110_CsiResource(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiResource", @"CsiResourceV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationRequest) {

                    Write106_EventRegistrationRequest(@"EventRegistrationRequest", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceRemovedEvent) {

                    Write104_DeviceRemovedEvent(@"DeviceRemovedEvent", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceRemovedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceReleasedEvent) {

                    Write103_DeviceReleasedEvent(@"DeviceReleasedEvent", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceReleasedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceResponse) {

                    Write109_ReleaseDeviceResponse(@"ReleaseDeviceResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceRequest) {

                    Write108_ReleaseDeviceRequest(@"ReleaseDeviceRequest", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationResponse) {

                    Write107_EventRegistrationResponse(@"EventRegistrationResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesRequest) {

                    Write98_ConnectedDevicesRequest(@"ConnectedDevicesRequest", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceResponse) {

                    Write97_AcquireDeviceResponse(@"AcquireDeviceResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceRequest) {

                    Write91_AcquireDeviceRequest(@"AcquireDeviceRequest", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceConnectedEvent) {

                    Write102_DeviceConnectedEvent(@"DeviceConnectedEvent", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceConnectedEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceAcquiredEvent) {

                    Write101_DeviceAcquiredEvent(@"DeviceAcquiredEvent", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceAcquiredEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponse) {

                    Write100_ConnectedDevicesResponse(@"ConnectedDevicesResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write100_ConnectedDevicesResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            Write93_ResourceResponse(@"ResourceResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse)o.@ResourceResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice>)o.@Device;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write99_ConnectedDevicesResponseDevice(@"Device", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write99_ConnectedDevicesResponseDevice(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            {

                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)((global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList);

                if (a != null){

                    WriteStartElement(@"GroupList", @"CsiResourceV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"GroupId", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        string Write90_DeviceType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@ButtonPanel: s = @"ButtonPanel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Sound: s = @"Sound"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Light: s = @"Light"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Reel: s = @"Reel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@StreamingLight: s = @"StreamingLight"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@TouchScreen: s = @"TouchScreen"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Monitor: s = @"Monitor"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@VideoTopper: s = @"VideoTopper"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Haptic: s = @"Haptic"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@DepthCamera: s = @"DepthCamera"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Portal: s = @"Portal"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@EyeTracking: s = @"EyeTracking"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@MechanicalBell: s = @"MechanicalBell"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@VolumeMixer: s = @"VolumeMixer"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@EmulatedCashoutServerHost: s = @"EmulatedCashoutServerHost"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@EmulatedCashoutServerClient: s = @"EmulatedCashoutServerClient"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType");

            }

            return s;

        }



        void Write93_ResourceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiResourceV1.xsd", Write92_ResourceErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiResourceV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write92_ResourceErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@CONNECTION_LOST: s = @"CONNECTION_LOST"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@PERIPHERAL_STATUS_ERROR: s = @"PERIPHERAL_STATUS_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@EVENT_REGISTRATION_NOT_SUPPORTED: s = @"EVENT_REGISTRATION_NOT_SUPPORTED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@INVALID_RESOURCE_REQUEST: s = @"INVALID_RESOURCE_REQUEST"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode");

            }

            return s;

        }



        void Write101_DeviceAcquiredEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceAcquiredEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceAcquiredEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            {

                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)((global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList);

                if (a != null){

                    WriteStartElement(@"GroupList", @"CsiResourceV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"GroupId", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write102_DeviceConnectedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceConnectedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceConnectedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            {

                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)((global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList);

                if (a != null){

                    WriteStartElement(@"GroupList", @"CsiResourceV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"GroupId", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write91_AcquireDeviceRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            WriteElementString(@"PriorityType", @"CsiResourceV1.xsd", Write89_Priority(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority)o.@PriorityType)));

            {

                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)((global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList);

                if (a != null){

                    WriteStartElement(@"GroupList", @"CsiResourceV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"GroupId", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write97_AcquireDeviceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            Write93_ResourceResponse(@"ResourceResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse)o.@ResourceResponse), false, false);

            if (o.@AcquiredSpecified) {

                WriteElementStringRaw(@"Acquired", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Acquired)));

            }

            if (o.@ReasonSpecified) {

                WriteElementString(@"Reason", @"CsiResourceV1.xsd", Write94_DeviceNotAcquired(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired)o.@Reason)));

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse>)((global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse>)o.@GroupResponse);

                if (a != null){

                    WriteStartElement(@"GroupResponse", @"CsiResourceV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write96_GroupResponse(@"GroupResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse)a[ia]), false, false);

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write96_GroupResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GroupResponse", @"CsiResourceV1.xsd");

            WriteElementStringRaw(@"GroupId", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@GroupId)));

            WriteElementString(@"AcquisitionStatus", @"CsiResourceV1.xsd", Write95_GroupAcquiredStatus(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus)o.@AcquisitionStatus)));

            WriteEndElement(o);

        }



        string Write95_GroupAcquiredStatus(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus.@InQueue: s = @"InQueue"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus.@Acquired: s = @"Acquired"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus");

            }

            return s;

        }



        string Write94_DeviceNotAcquired(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired.@DeviceDisconnected: s = @"DeviceDisconnected"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired.@InQueue: s = @"InQueue"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired");

            }

            return s;

        }



        void Write98_ConnectedDevicesRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ConnectedDevicesRequest", @"CsiResourceV1.xsd");

            WriteEndElement(o);

        }



        void Write107_EventRegistrationResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            Write93_ResourceResponse(@"ResourceResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse)o.@ResourceResponse), false, false);

            WriteEndElement(o);

        }



        void Write108_ReleaseDeviceRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            {

                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)((global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList);

                if (a != null){

                    WriteStartElement(@"GroupList", @"CsiResourceV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"GroupId", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            WriteEndElement(o);

        }



        void Write109_ReleaseDeviceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            Write93_ResourceResponse(@"ResourceResponse", @"CsiResourceV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse)o.@ResourceResponse), false, false);

            WriteEndElement(o);

        }



        void Write103_DeviceReleasedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceReleasedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceReleasedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            {

                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)((global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList);

                if (a != null){

                    WriteStartElement(@"GroupList", @"CsiResourceV1.xsd", null, false);

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"GroupId", @"CsiResourceV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));

                    }

                    WriteEndElement();

                }

            }

            WriteElementString(@"Reason", @"CsiResourceV1.xsd", Write94_DeviceNotAcquired(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired)o.@Reason)));

            WriteEndElement(o);

        }



        void Write104_DeviceRemovedEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceRemovedEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceRemovedEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write106_EventRegistrationRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiResourceV1.xsd");

            WriteAttribute(@"DeviceType", @"", Write90_DeviceType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType)o.@DeviceType)));

            WriteAttribute(@"DeviceId", @"", ((global::System.String)o.@DeviceId));

            WriteElementString(@"Action", @"CsiResourceV1.xsd", Write105_EventRegistrationAction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction)o.@Action)));

            WriteEndElement(o);

        }



        string Write105_EventRegistrationAction(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction.@REGISTER: s = @"REGISTER"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction.@UNREGISTER: s = @"UNREGISTER"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction");

            }

            return s;

        }



        void Write88_CsiLight(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiLight", @"CsiLightV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityResponse) {

                    Write81_SetIntensityResponse(@"SetIntensityResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest) {

                    Write82_SetRequireDeviceRequest(@"SetRequireDeviceRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequest) {

                    Write80_SetIntensityRequest(@"SetIntensityRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequest) {

                    Write75_SetColorRequest(@"SetColorRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorResponse) {

                    Write76_SetColorResponse(@"SetColorResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffRequest) {

                    Write86_TurnOffRequest(@"TurnOffRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffResponse) {

                    Write87_TurnOffResponse(@"TurnOffResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceResponse) {

                    Write85_StartSequenceResponse(@"StartSequenceResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse) {

                    Write83_SetRequireDeviceResponse(@"SetRequireDeviceResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceRequest) {

                    Write84_StartSequenceRequest(@"StartSequenceRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningResponse) {

                    Write71_SequenceRunningResponse(@"SequenceRunningResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationRequest) {

                    Write58_Item(@"CandleStateChangeRegistrationRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationResponse) {

                    Write59_Item(@"CandleStateChangeRegistrationResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeEvent) {

                    Write56_CandleStateChangeEvent(@"CandleStateChangeEvent", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlRequest) {

                    Write51_BitwiseControlRequest(@"BitwiseControlRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlResponse) {

                    Write54_BitwiseControlResponse(@"BitwiseControlResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse) {

                    Write69_GetLightDevicesResponse(@"GetLightDevicesResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningRequest) {

                    Write70_SequenceRunningRequest(@"SequenceRunningRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest) {

                    Write62_GetLightDevicesRequest(@"GetLightDevicesRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateRequest) {

                    Write60_CandleStateRequest(@"CandleStateRequest", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateResponse) {

                    Write61_CandleStateResponse(@"CandleStateResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write61_CandleStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteElementString(@"Candle", @"CsiLightV1.xsd", Write55_Candle(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle)o.@Candle)));

            WriteElementStringRaw(@"Illuminated", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Illuminated)));

            WriteEndElement(o);

        }



        string Write55_Candle(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Invalid: s = @"Invalid"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle1: s = @"Candle1"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle2: s = @"Candle2"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle3: s = @"Candle3"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle4: s = @"Candle4"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@All: s = @"All"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle");

            }

            return s;

        }



        void Write53_LightResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiLightV1.xsd", Write52_LightErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiLightV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write52_LightErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_FEATURE_ID: s = @"INVALID_FEATURE_ID"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_GROUP: s = @"INVALID_GROUP"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_LIGHT_EXCEPTION: s = @"INVALID_LIGHT_EXCEPTION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_RANGE_EXCEPTION: s = @"INVALID_RANGE_EXCEPTION"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_BIT_CONTROL: s = @"INVALID_BIT_CONTROL"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@UNKNOWN_DRIVER_ERROR: s = @"UNKNOWN_DRIVER_ERROR"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@CLIENT_ALREADY_REGISTERED: s = @"CLIENT_ALREADY_REGISTERED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@CLIENT_NOT_REGISTERED: s = @"CLIENT_NOT_REGISTERED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_CANDLE: s = @"INVALID_CANDLE"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode");

            }

            return s;

        }



        void Write60_CandleStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementString(@"Candle", @"CsiLightV1.xsd", Write55_Candle(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle)o.@Candle)));

            WriteEndElement(o);

        }



        void Write62_GetLightDevicesRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetLightDevicesRequest", @"CsiLightV1.xsd");

            WriteEndElement(o);

        }



        void Write70_SequenceRunningRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"Group", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Group)));

            WriteElementStringRaw(@"SequenceNumber", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@SequenceNumber)));

            WriteEndElement(o);

        }



        void Write69_GetLightDevicesResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            Write68_Item(@"Features", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponseFeatures)o.@Features), false, false);

            WriteEndElement(o);

        }



        void Write68_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponseFeatures o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponseFeatures)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData>)o.@Feature;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write67_FeatureData(@"Feature", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write67_FeatureData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"FeatureData", @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"LightType", @"CsiLightV1.xsd", Write66_LightType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType)o.@LightType)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup>)o.@Group;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write65_FeatureDataGroup(@"Group", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write65_FeatureDataGroup(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"NumberOfLights", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@NumberOfLights)));

            WriteAttribute(@"HasRGB", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@HasRGB)));

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBezel) {

                    Write64_FeatureDataGroupLightBezel(@"LightBezel", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBezel)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBar) {

                    Write63_FeatureDataGroupLightBar(@"LightBar", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBar)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write63_FeatureDataGroupLightBar(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBar o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBar)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            {

                global::System.Collections.Generic.List<global::System.UInt32> a = (global::System.Collections.Generic.List<global::System.UInt32>)o.@NumberOfLights;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementStringRaw(@"NumberOfLights", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write64_FeatureDataGroupLightBezel(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBezel o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBezel)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementStringRaw(@"LightsOnTop", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@LightsOnTop)));

            WriteElementStringRaw(@"LightsOnBottom", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@LightsOnBottom)));

            WriteElementStringRaw(@"LightsOnLeft", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@LightsOnLeft)));

            WriteElementStringRaw(@"LightsOnRight", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@LightsOnRight)));

            WriteEndElement(o);

        }



        string Write66_LightType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@BonusGameLights: s = @"BonusGameLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@LightBezel: s = @"LightBezel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@LightBar: s = @"LightBar"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@ReelBackLights: s = @"ReelBackLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@CandleLights: s = @"CandleLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@AccentLights: s = @"AccentLights"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@CardReaderBezel: s = @"CardReaderBezel"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@TopperLightRing: s = @"TopperLightRing"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType");

            }

            return s;

        }



        void Write54_BitwiseControlResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteEndElement(o);

        }



        void Write51_BitwiseControlRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"Group", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Group)));

            WriteElementStringRaw(@"StartLight", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@StartLight)));

            WriteElementStringRaw(@"BitControl", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@BitControl)));

            WriteElementStringRaw(@"LightData", @"CsiLightV1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@LightData)));

            WriteEndElement(o);

        }



        void Write56_CandleStateChangeEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementString(@"Candle", @"CsiLightV1.xsd", Write55_Candle(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle)o.@Candle)));

            WriteElementStringRaw(@"Illuminated", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Illuminated)));

            WriteEndElement(o);

        }



        void Write59_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteEndElement(o);

        }



        void Write58_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementString(@"Candle", @"CsiLightV1.xsd", Write55_Candle(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle)o.@Candle)));

            WriteElementString(@"RegistrationAction", @"CsiLightV1.xsd", Write57_RegistrationAction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction)o.@RegistrationAction)));

            WriteEndElement(o);

        }



        string Write57_RegistrationAction(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction.@Register: s = @"Register"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction.@Unregister: s = @"Unregister"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction");

            }

            return s;

        }



        void Write71_SequenceRunningResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            if (o.@RunningSpecified) {

                WriteElementStringRaw(@"Running", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Running)));

            }

            WriteEndElement(o);

        }



        void Write84_StartSequenceRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"Group", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Group)));

            WriteElementStringRaw(@"Sequence", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@Sequence)));

            WriteElementStringRaw(@"TransitionMode", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@TransitionMode)));

            WriteElementStringRaw(@"Parameters", @"CsiLightV1.xsd", FromByteArrayBase64(((global::System.Byte[])o.@Parameters)));

            WriteEndElement(o);

        }



        void Write83_SetRequireDeviceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteEndElement(o);

        }



        void Write85_StartSequenceResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteEndElement(o);

        }



        void Write87_TurnOffResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteEndElement(o);

        }



        void Write86_TurnOffRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"Group", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Group)));

            WriteElementStringRaw(@"TransitionMode", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@TransitionMode)));

            WriteEndElement(o);

        }



        void Write76_SetColorResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteEndElement(o);

        }



        void Write75_SetColorRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"Group", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Group)));

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandom) {

                    Write74_SetColorRequestRandom(@"Random", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandom)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestConsecutive) {

                    Write72_SetColorRequestConsecutive(@"Consecutive", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestConsecutive)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write72_SetColorRequestConsecutive(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestConsecutive o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestConsecutive)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementStringRaw(@"StartingLight", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@StartingLight)));

            WriteElementString(@"Color", @"CsiLightV1.xsd", ((global::System.String)o.@Color));

            WriteEndElement(o);

        }



        void Write74_SetColorRequestRandom(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandom o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandom)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight>)o.@Light;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write73_SetColorRequestRandomLight(@"Light", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write73_SetColorRequestRandomLight(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementStringRaw(@"LightId", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@LightId)));

            WriteElementStringRaw(@"Color", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@Color)));

            WriteEndElement(o);

        }



        void Write80_SetIntensityRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteAttribute(@"Group", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Group)));

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandom) {

                    Write79_SetIntensityRequestRandom(@"Random", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandom)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestConsecutive) {

                    Write77_SetIntensityRequestConsecutive(@"Consecutive", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestConsecutive)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write77_SetIntensityRequestConsecutive(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestConsecutive o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestConsecutive)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementStringRaw(@"StartingLight", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@StartingLight)));

            WriteElementString(@"Intensity", @"CsiLightV1.xsd", ((global::System.String)o.@Intensity));

            WriteEndElement(o);

        }



        void Write79_SetIntensityRequestRandom(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandom o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandom)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight>)o.@Light;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write78_SetIntensityRequestRandomLight(@"Light", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write78_SetIntensityRequestRandomLight(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteElementStringRaw(@"LightId", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@LightId)));

            WriteElementStringRaw(@"Intensity", @"CsiLightV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Intensity)));

            WriteEndElement(o);

        }



        void Write82_SetRequireDeviceRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            WriteAttribute(@"FeatureId", @"CsiLightV1.xsd", ((global::System.String)o.@FeatureId));

            WriteEndElement(o);

        }



        void Write81_SetIntensityResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiLightV1.xsd");

            Write53_LightResponse(@"LightResponse", @"CsiLightV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse)o.@LightResponse), false, false);

            WriteEndElement(o);

        }



        void Write50_CsiCabinet(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiCabinet", @"CsiCabinetV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeRequest) {

                    Write45_GetCreditDisplayTypeRequest(@"GetCreditDisplayTypeRequest", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationResponse) {

                    Write44_Item(@"CabinetEventRegistrationResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationRequest) {

                    Write43_Item(@"CabinetEventRegistrationRequest", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeResponse) {

                    Write49_SetCreditDisplayTypeResponse(@"SetCreditDisplayTypeResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeRequest) {

                    Write48_SetCreditDisplayTypeRequest(@"SetCreditDisplayTypeRequest", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeResponse) {

                    Write47_GetCreditDisplayTypeResponse(@"GetCreditDisplayTypeResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEvent) {

                    Write41_CabinetEvent(@"CabinetEvent", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponse) {

                    Write35_ActivityStatusResponse(@"ActivityStatusResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusRequest) {

                    Write31_ActivityStatusRequest(@"ActivityStatusRequest", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusEvent) {

                    Write30_ActivityStatusEvent(@"ActivityStatusEvent", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationResponse) {

                    Write39_Item(@"AttractAestheticConfigurationResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationRequest) {

                    Write38_Item(@"AttractAestheticConfigurationRequest", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration) {

                    Write37_AttractAestheticConfiguration(@"AttractAestheticConfigurationChangedEvent", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write37_AttractAestheticConfiguration(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"AttractAestheticConfiguration", @"CsiCabinetV1.xsd");

            WriteElementStringRaw(@"GameAttractPlaylistGroup", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@GameAttractPlaylistGroup)));

            WriteElementString(@"GameAttractStyle", @"CsiCabinetV1.xsd", Write36_GameAttractStyle(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle)o.@GameAttractStyle)));

            WriteEndElement(o);

        }



        string Write36_GameAttractStyle(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle.@Subtle: s = @"Subtle"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle.@Intermediate: s = @"Intermediate"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle.@Exciting: s = @"Exciting"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle");

            }

            return s;

        }



        void Write38_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"AttractAestheticConfigurationRequest", @"CsiCabinetV1.xsd");

            WriteEndElement(o);

        }



        void Write39_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            Write33_CabinetResponse(@"CabinetResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse)o.@CabinetResponse), false, false);

            Write37_AttractAestheticConfiguration(@"Data", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration)o.@Data), false, false);

            WriteEndElement(o);

        }



        void Write33_CabinetResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiCabinetV1.xsd", Write32_CabinetErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiCabinetV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write32_CabinetErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@SET_DISPLAY_TYPE_FAILED: s = @"SET_DISPLAY_TYPE_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@CONNECTION_ALREADY_REGISTERED: s = @"CONNECTION_ALREADY_REGISTERED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@CLIENT_TYPE_NOT_SUPPORTED: s = @"CLIENT_TYPE_NOT_SUPPORTED"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode");

            }

            return s;

        }



        void Write30_ActivityStatusEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            WriteElementStringRaw(@"NewGame", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@NewGame)));

            WriteElementStringRaw(@"AttractInterval", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@AttractInterval)));

            WriteElementStringRaw(@"InactivityDelay", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@InactivityDelay)));

            WriteElementStringRaw(@"GameAttractsEnabled", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@GameAttractsEnabled)));

            WriteElementStringRaw(@"Active", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Active)));

            WriteEndElement(o);

        }



        void Write31_ActivityStatusRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ActivityStatusRequest", @"CsiCabinetV1.xsd");

            WriteEndElement(o);

        }



        void Write35_ActivityStatusResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            Write33_CabinetResponse(@"CabinetResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse)o.@CabinetResponse), false, false);

            Write34_ActivityStatusResponseData(@"Data", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponseData)o.@Data), false, false);

            WriteEndElement(o);

        }



        void Write34_ActivityStatusResponseData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponseData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponseData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            WriteElementStringRaw(@"NewGame", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@NewGame)));

            WriteElementStringRaw(@"AttractInterval", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@AttractInterval)));

            WriteElementStringRaw(@"InactivityDelay", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@InactivityDelay)));

            WriteElementStringRaw(@"GameAttractsEnabled", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@GameAttractsEnabled)));

            WriteElementStringRaw(@"Active", @"CsiCabinetV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Active)));

            WriteEndElement(o);

        }



        void Write41_CabinetEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            WriteElementString(@"Event", @"CsiCabinetV1.xsd", ((global::System.String)o.@Event));

            Write40_CabinetEventData(@"Data", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventData)o.@Data), false, false);

            WriteEndElement(o);

        }



        void Write40_CabinetEventData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            {

                global::System.Collections.Generic.List<global::System.String> a = (global::System.Collections.Generic.List<global::System.String>)o.@Value;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"Value", @"CsiCabinetV1.xsd", ((global::System.String)a[ia]));

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write47_GetCreditDisplayTypeResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            Write33_CabinetResponse(@"CabinetResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse)o.@CabinetResponse), false, false);

            WriteElementString(@"CreditDisplayType", @"CsiCabinetV1.xsd", Write46_CreditDisplayType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType)o.@CreditDisplayType)));

            WriteEndElement(o);

        }



        string Write46_CreditDisplayType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType.@NOT_SET: s = @"NOT_SET"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType.@CREDIT: s = @"CREDIT"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType.@CURRENCY: s = @"CURRENCY"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType");

            }

            return s;

        }



        void Write48_SetCreditDisplayTypeRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            WriteElementString(@"CreditDisplayType", @"CsiCabinetV1.xsd", Write46_CreditDisplayType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType)o.@CreditDisplayType)));

            WriteEndElement(o);

        }



        void Write49_SetCreditDisplayTypeResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            Write33_CabinetResponse(@"CabinetResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse)o.@CabinetResponse), false, false);

            WriteEndElement(o);

        }



        void Write43_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            WriteElementString(@"CabinetEventRegistrationAction", @"CsiCabinetV1.xsd", Write42_CabinetEventRegistrationAction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction)o.@CabinetEventRegistrationAction)));

            WriteEndElement(o);

        }



        string Write42_CabinetEventRegistrationAction(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction.@Register: s = @"Register"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction.@Unregister: s = @"Unregister"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction");

            }

            return s;

        }



        void Write44_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiCabinetV1.xsd");

            Write33_CabinetResponse(@"CabinetResponse", @"CsiCabinetV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse)o.@CabinetResponse), false, false);

            WriteEndElement(o);

        }



        void Write45_GetCreditDisplayTypeRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"GetCreditDisplayTypeRequest", @"CsiCabinetV1.xsd");

            WriteEndElement(o);

        }



        void Write29_CsiButton(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"CsiButton", @"CsiButtonV1.xsd");

            if ((object)(o.@Item) != null){

                if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetResponse) {

                    Write24_RemoveImageSetResponse(@"RemoveImageSetResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetRequest) {

                    Write23_RemoveImageSetRequest(@"RemoveImageSetRequest", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationResponse) {

                    Write22_PlayAnimationResponse(@"PlayAnimationResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsRequest) {

                    Write25_SetAllPixelsRequest(@"SetAllPixelsRequest", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateResponse) {

                    Write28_SetLampStateResponse(@"SetLampStateResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateRequest) {

                    Write27_SetLampStateRequest(@"SetLampStateRequest", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsResponse) {

                    Write26_SetAllPixelsResponse(@"SetAllPixelsResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationRequest) {

                    Write21_PlayAnimationRequest(@"PlayAnimationRequest", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponse) {

                    Write14_ConfigurationResponse(@"ConfigurationResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationRequest) {

                    Write6_ConfigurationRequest(@"ConfigurationRequest", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonEvent) {

                    Write5_ButtonEvent(@"ButtonEvent", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonEvent)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetRequest) {

                    Write15_DownloadImageSetRequest(@"DownloadImageSetRequest", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateResponse) {

                    Write20_GetLampStateResponse(@"GetLampStateResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateResponse)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateRequest) {

                    Write17_GetLampStateRequest(@"GetLampStateRequest", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateRequest)o.@Item), false, false);

                }

                else if (o.@Item is global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetResponse) {

                    Write16_DownloadImageSetResponse(@"DownloadImageSetResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetResponse)o.@Item), false, false);

                }

                else  if ((object)(o.@Item) != null){

                    throw CreateUnknownTypeException(o.@Item);

                }

            }

            WriteEndElement(o);

        }



        void Write16_DownloadImageSetResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write8_ButtonResponse(@"ButtonResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)o.@ButtonResponse), false, false);

            WriteElementString(@"DeviceId", @"CsiButtonV1.xsd", ((global::System.String)o.@DeviceId));

            if (o.@ImageSetIdSpecified) {

                WriteElementStringRaw(@"ImageSetId", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@ImageSetId)));

            }

            WriteEndElement(o);

        }



        void Write8_ButtonResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            WriteElementString(@"ErrorCode", @"CsiButtonV1.xsd", Write7_ButtonErrorCode(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode)o.@ErrorCode)));

            WriteElementString(@"ErrorDescription", @"CsiButtonV1.xsd", ((global::System.String)o.@ErrorDescription));

            WriteEndElement(o);

        }



        string Write7_ButtonErrorCode(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@NONE: s = @"NONE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@CONNECTION_LOST: s = @"CONNECTION_LOST"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@SET_ALL_LAMPS_FAILED: s = @"SET_ALL_LAMPS_FAILED"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@INVALID_SET_LAMP_STATE_REQUEST: s = @"INVALID_SET_LAMP_STATE_REQUEST"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE: s = @"CLIENT_DOES_NOT_OWN_RESOURCE"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@PERIPHERAL_STATUS_ERROR: s = @"PERIPHERAL_STATUS_ERROR"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode");

            }

            return s;

        }



        void Write17_GetLampStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId>)o.@ButtonId;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write2_ButtonId(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ButtonId", @"CsiButtonV1.xsd");

            WriteAttribute(@"DeviceId", @"CsiButtonV1.xsd", ((global::System.String)o.@DeviceId));

            {

                WriteValue(System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@Value)));

            }

            WriteEndElement(o);

        }



        void Write20_GetLampStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write8_ButtonResponse(@"ButtonResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)o.@ButtonResponse), false, false);

            Write19_LampStates(@"Lamps", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates)o.@Lamps), false, false);

            WriteEndElement(o);

        }



        void Write19_LampStates(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"LampStates", @"CsiButtonV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState>)o.@Lamp;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write18_LampState(@"Lamp", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write18_LampState(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"LampState", @"CsiButtonV1.xsd");

            Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)o.@ButtonId), false, false);

            WriteElementStringRaw(@"State", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@State)));

            WriteEndElement(o);

        }



        void Write15_DownloadImageSetRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            WriteElementString(@"DeviceId", @"CsiButtonV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementString(@"Filename", @"CsiButtonV1.xsd", ((global::System.String)o.@Filename));

            WriteEndElement(o);

        }



        void Write5_ButtonEvent(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonEvent o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonEvent)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            if (o.@timestampSpecified) {

                WriteAttribute(@"timestamp", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt64)((global::System.UInt64)o.@timestamp)));

            }

            Write4_ButtonState(@"Button", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonState)o.@Button), false, false);

            if (o.@timestampSpecified) {

            }

            WriteEndElement(o);

        }



        void Write4_ButtonState(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonState o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonState)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ButtonState", @"CsiButtonV1.xsd");

            Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)o.@ButtonId), false, false);

            WriteElementStringRaw(@"Pressed", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Pressed)));

            WriteElementStringRaw(@"IsDiagnostic", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@IsDiagnostic)));

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction>)o.@ButtonFunctions;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"ButtonFunctions", @"CsiButtonV1.xsd", Write3_ButtonFunction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        string Write3_ButtonFunction(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Unknown: s = @"Unknown"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@NoFunction: s = @"NoFunction"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Accept: s = @"Accept"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@AutoPlay: s = @"AutoPlay"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetOne: s = @"BetOne"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine1: s = @"BetPerLine1"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine2: s = @"BetPerLine2"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine3: s = @"BetPerLine3"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine4: s = @"BetPerLine4"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine5: s = @"BetPerLine5"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPlus: s = @"BetPlus"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetMinus: s = @"BetMinus"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Black: s = @"Black"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@CashOut: s = @"CashOut"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@HandleSwitch: s = @"HandleSwitch"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Gamble: s = @"Gamble"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@GameRules: s = @"GameRules"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Info: s = @"Info"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@MaxBet: s = @"MaxBet"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@MoreGames: s = @"MoreGames"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Red: s = @"Red"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Reject: s = @"Reject"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@RepeatBet: s = @"RepeatBet"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines1: s = @"SelectLines1"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines2: s = @"SelectLines2"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines3: s = @"SelectLines3"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines4: s = @"SelectLines4"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines5: s = @"SelectLines5"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Service: s = @"Service"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@ShowGaff: s = @"ShowGaff"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Start: s = @"Start"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@TakeWin: s = @"TakeWin"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@TournamentMenu: s = @"TournamentMenu"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction");

            }

            return s;

        }



        void Write6_ConfigurationRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"ConfigurationRequest", @"CsiButtonV1.xsd");

            WriteElementString(@"DeviceId", @"CsiButtonV1.xsd", ((global::System.String)o.@DeviceId));

            WriteEndElement(o);

        }



        void Write14_ConfigurationResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write8_ButtonResponse(@"ButtonResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)o.@ButtonResponse), false, false);

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData>)o.@Data;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write13_ConfigurationResponseData(@"Data", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write13_ConfigurationResponseData(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            WriteElementString(@"PanelLocation", @"CsiButtonV1.xsd", Write9_PanelLocation(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation)o.@PanelLocation)));

            WriteElementString(@"PanelType", @"CsiButtonV1.xsd", Write10_PanelType(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType)o.@PanelType)));

            if (o.@PanelIDSpecified) {

                WriteElementStringRaw(@"PanelID", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt32)((global::System.UInt32)o.@PanelID)));

            }

            WriteElementString(@"DeviceId", @"CsiButtonV1.xsd", ((global::System.String)o.@DeviceId));

            Write12_Item(@"Buttons", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseDataButtons)o.@Buttons), false, false);

            WriteEndElement(o);

        }



        void Write12_Item(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseDataButtons o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseDataButtons)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button>)o.@Button;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        Write11_Button(@"Button", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button)a[ia]), false, false);

                    }

                }

            }

            WriteEndElement(o);

        }



        void Write11_Button(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(@"Button", @"CsiButtonV1.xsd");

            Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)o.@ButtonId), false, false);

            WriteElementStringRaw(@"Dynamic", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Dynamic)));

            if (o.@HardwareButtonIdSpecified) {

                WriteElementStringRaw(@"HardwareButtonId", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Byte)((global::System.Byte)o.@HardwareButtonId)));

            }

            {

                global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction> a = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction>)o.@ButtonFunctions;

                if (a != null) {

                    for (int ia = 0; ia < ((System.Collections.ICollection)a).Count; ia++) {

                        WriteElementString(@"ButtonFunctions", @"CsiButtonV1.xsd", Write3_ButtonFunction(((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction)a[ia])));

                    }

                }

            }

            WriteEndElement(o);

        }



        string Write10_PanelType(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@Unknown: s = @"Unknown"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@Static: s = @"Static"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@Dynamic: s = @"Dynamic"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@StaticDynamic: s = @"StaticDynamic"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType");

            }

            return s;

        }



        string Write9_PanelLocation(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation v) {

            string s = null;

            switch (v) {

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation.@Unknown: s = @"Unknown"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation.@Main: s = @"Main"; break;

                case global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation.@Secondary: s = @"Secondary"; break;

                default: throw CreateInvalidEnumValueException(((System.Int64)v).ToString(System.Globalization.CultureInfo.InvariantCulture), @"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation");

            }

            return s;

        }



        void Write21_PlayAnimationRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)o.@ButtonId), false, false);

            WriteElementStringRaw(@"ImageSetId", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@ImageSetId)));

            WriteElementStringRaw(@"AnimationId", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@AnimationId)));

            WriteElementStringRaw(@"FrameDelay", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@FrameDelay)));

            WriteElementStringRaw(@"Repeat", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@Repeat)));

            WriteElementStringRaw(@"TransitionMode", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@TransitionMode)));

            WriteEndElement(o);

        }



        void Write26_SetAllPixelsResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write8_ButtonResponse(@"ButtonResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)o.@ButtonResponse), false, false);

            Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)o.@ButtonId), false, false);

            WriteEndElement(o);

        }



        void Write27_SetLampStateRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write19_LampStates(@"Lamps", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates)o.@Lamps), false, false);

            WriteEndElement(o);

        }



        void Write28_SetLampStateResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write8_ButtonResponse(@"ButtonResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)o.@ButtonResponse), false, false);

            Write19_LampStates(@"PreviousLampStates", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates)o.@PreviousLampStates), false, false);

            WriteEndElement(o);

        }



        void Write25_SetAllPixelsRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)o.@ButtonId), false, false);

            WriteElementStringRaw(@"PixelState", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.Boolean)((global::System.Boolean)o.@PixelState)));

            WriteEndElement(o);

        }



        void Write22_PlayAnimationResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write8_ButtonResponse(@"ButtonResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)o.@ButtonResponse), false, false);

            Write2_ButtonId(@"ButtonId", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId)o.@ButtonId), false, false);

            WriteEndElement(o);

        }



        void Write23_RemoveImageSetRequest(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetRequest o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetRequest)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            WriteElementString(@"DeviceId", @"CsiButtonV1.xsd", ((global::System.String)o.@DeviceId));

            WriteElementStringRaw(@"ImageSetId", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@ImageSetId)));

            WriteEndElement(o);

        }



        void Write24_RemoveImageSetResponse(string n, string ns, global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetResponse o, bool isNullable, bool needType) {

            if ((object)o == null) {

                if (isNullable) WriteNullTagLiteral(n, ns);

                return;

            }

            if (!needType) {

                System.Type t = o.GetType();

                if (t == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetResponse)) {

                }

                else {

                    throw CreateUnknownTypeException(o);

                }

            }

            WriteStartElement(n, ns, o, false, null);

            if (needType) WriteXsiType(null, @"CsiButtonV1.xsd");

            Write8_ButtonResponse(@"ButtonResponse", @"CsiButtonV1.xsd", ((global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse)o.@ButtonResponse), false, false);

            WriteElementString(@"DeviceId", @"CsiButtonV1.xsd", ((global::System.String)o.@DeviceId));

            if (o.@ImageSetIdSpecified) {

                WriteElementStringRaw(@"ImageSetId", @"CsiButtonV1.xsd", System.Xml.XmlConvert.ToString((global::System.UInt16)((global::System.UInt16)o.@ImageSetId)));

            }

            WriteEndElement(o);

        }



        protected override void InitCallbacks() {

        }

    }



    public class XmlSerializationReader1 : System.Xml.Serialization.XmlSerializationReader {



        public object Read531_CsiButton() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id1_CsiButton && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                    o = Read29_CsiButton(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiButtonV1.xsd:CsiButton");

            }

            return (object)o;

        }



        public object Read532_CsiCabinet() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id3_CsiCabinet && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                    o = Read50_CsiCabinet(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiCabinetV1.xsd:CsiCabinet");

            }

            return (object)o;

        }



        public object Read533_CsiLight() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id5_CsiLight && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o = Read88_CsiLight(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiLightV1.xsd:CsiLight");

            }

            return (object)o;

        }



        public object Read534_CsiResource() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id7_CsiResource && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                    o = Read110_CsiResource(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiResourceV1.xsd:CsiResource");

            }

            return (object)o;

        }



        public object Read535_CsiSound() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id9_CsiSound && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                    o = Read146_CsiSound(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiSoundV1.xsd:CsiSound");

            }

            return (object)o;

        }



        public object Read536_CsiWindow() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id11_CsiWindow && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                    o = Read188_CsiWindow(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiWindowV1.xsd:CsiWindow");

            }

            return (object)o;

        }



        public object Read537_CsiReel() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id13_CsiReel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o = Read240_CsiReel(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiReelV1.xsd:CsiReel");

            }

            return (object)o;

        }



        public object Read538_CsiSolenoid() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id15_CsiSolenoid && (object) Reader.NamespaceURI == (object)id16_CsiSolenoidV1xsd)) {

                    o = Read245_CsiSolenoid(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiSolenoidV1.xsd:CsiSolenoid");

            }

            return (object)o;

        }



        public object Read539_CsiStreamingLight() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id17_CsiStreamingLight && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o = Read274_CsiStreamingLight(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiStreamingLightV1.xsd:CsiStreamingLight");

            }

            return (object)o;

        }



        public object Read540_CsiBankSynchronization() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id19_CsiBankSynchronization && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                    o = Read291_CsiBankSynchronization(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiBankSynchronizationV1.xsd:CsiBankSynchronization");

            }

            return (object)o;

        }



        public object Read541_CsiTouchScreen() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id21_CsiTouchScreen && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                    o = Read314_CsiTouchScreen(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiTouchScreenV1.xsd:CsiTouchScreen");

            }

            return (object)o;

        }



        public object Read542_CsiReadiness() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id23_CsiReadiness && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                    o = Read327_CsiReadiness(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiReadinessV1.xsd:CsiReadiness");

            }

            return (object)o;

        }



        public object Read543_CsiMonitor() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id25_CsiMonitor && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                    o = Read361_CsiMonitor(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiMonitorV1.xsd:CsiMonitor");

            }

            return (object)o;

        }



        public object Read544_CsiVideoTopper() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id27_CsiVideoTopper && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                    o = Read377_CsiVideoTopper(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiVideoTopperV1.xsd:CsiVideoTopper");

            }

            return (object)o;

        }



        public object Read545_CsiHaptic() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id29_CsiHaptic && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                    o = Read391_CsiHaptic(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiHapticV1.xsd:CsiHaptic");

            }

            return (object)o;

        }



        public object Read546_CsiDepthCamera() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id31_CsiDepthCamera && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                    o = Read406_CsiDepthCamera(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiDepthCameraV1.xsd:CsiDepthCamera");

            }

            return (object)o;

        }



        public object Read547_CsiPresentationSpeed() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id33_CsiPresentationSpeed && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                    o = Read413_CsiPresentationSpeed(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiPresentationSpeedV1.xsd:CsiPresentationSpeed");

            }

            return (object)o;

        }



        public object Read548_CsiPortal() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id35_CsiPortal && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                    o = Read472_CsiPortal(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiPortalV1.xsd:CsiPortal");

            }

            return (object)o;

        }



        public object Read549_CsiMechanicalBell() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id37_CsiMechanicalBell && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                    o = Read479_CsiMechanicalBell(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiMechanicalBellV1.xsd:CsiMechanicalBell");

            }

            return (object)o;

        }



        public object Read550_CsiService() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id39_CsiService && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                    o = Read506_CsiService(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiServiceV1.xsd:CsiService");

            }

            return (object)o;

        }



        public object Read551_CsiEmulatedCashoutService() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id41_CsiEmulatedCashoutService && (object) Reader.NamespaceURI == (object)id42_Item)) {

                    o = Read516_CsiEmulatedCashoutService(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiEmulatedCashoutServiceV1.xsd:CsiEmulatedCashoutService");

            }

            return (object)o;

        }



        public object Read552_CsiConnect() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id43_CsiConnect && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                    o = Read528_CsiConnect(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiConnectV1.xsd:CsiConnect");

            }

            return (object)o;

        }



        public object Read553_Csi() {

            object o = null;

            Reader.MoveToContent();

            if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                if (((object) Reader.LocalName == (object)id45_Csi && (object) Reader.NamespaceURI == (object)id46_CsiMessageV1xsd)) {

                    o = Read530_Csi(false, true);

                }

                else {

                    throw CreateUnknownNodeException();

                }

            }

            else {

                UnknownNode(null, @"CsiMessageV1.xsd:Csi");

            }

            return (object)o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi Read530_Csi(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id46_CsiMessageV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id48_Category && (object) Reader.NamespaceURI == (object)id46_CsiMessageV1xsd)) {

                    o.@Category = Read517_Category(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id49_MessageType && (object) Reader.NamespaceURI == (object)id46_CsiMessageV1xsd)) {

                    o.@MessageType = Read529_MessageType(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id50_MessageId && (object) Reader.NamespaceURI == (object)id46_CsiMessageV1xsd)) {

                    o.@MessageId = System.Xml.XmlConvert.ToUInt64(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiMessageV1.xsd:Category, CsiMessageV1.xsd:MessageType, CsiMessageV1.xsd:MessageId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations0 = 0;

            int readerCount0 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id51_CsiBody && (object) Reader.NamespaceURI == (object)id46_CsiMessageV1xsd)) {

                        o.@CsiBody = (global::System.Xml.XmlElement)ReadXmlNode(true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMessageV1.xsd:CsiBody");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMessageV1.xsd:CsiBody");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations0, ref readerCount0);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType Read529_MessageType(string s) {

            switch (s) {

                case @"Event": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType.@Event;

                case @"Request": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType.@Request;

                case @"Response": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType.@Response;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category Read517_Category(string s) {

            switch (s) {

                case @"CsiButton": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiButton;

                case @"CsiCabinet": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiCabinet;

                case @"CsiLight": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiLight;

                case @"CsiResource": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiResource;

                case @"CsiSound": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiSound;

                case @"CsiWindow": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiWindow;

                case @"CsiReel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiReel;

                case @"CsiSolenoid": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiSolenoid;

                case @"CsiStreamingLight": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiStreamingLight;

                case @"CsiBankSynchronization": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiBankSynchronization;

                case @"CsiTouchScreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiTouchScreen;

                case @"CsiReadiness": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiReadiness;

                case @"CsiMonitor": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiMonitor;

                case @"CsiVideoTopper": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiVideoTopper;

                case @"CsiHaptic": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiHaptic;

                case @"CsiDepthCamera": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiDepthCamera;

                case @"CsiPresentationSpeed": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiPresentationSpeed;

                case @"CsiPortal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiPortal;

                case @"CsiMechanicalBell": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiMechanicalBell;

                case @"CsiService": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiService;

                case @"CsiEmulatedCashoutService": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category.@CsiEmulatedCashoutService;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Category));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect Read528_CsiConnect(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations1 = 0;

            int readerCount1 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id52_InitializeCsiRequest && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        o.@Item = Read522_CsiConnectInitializeCsiRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id53_InitializeCsiResponse && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        o.@Item = Read526_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id54_ShutdownSend && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        o.@Item = Read527_CsiConnectShutdownSend(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:InitializeCsiRequest, CsiConnectV1.xsd:InitializeCsiResponse, CsiConnectV1.xsd:ShutdownSend");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:InitializeCsiRequest, CsiConnectV1.xsd:InitializeCsiResponse, CsiConnectV1.xsd:ShutdownSend");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations1, ref readerCount1);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectShutdownSend Read527_CsiConnectShutdownSend(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectShutdownSend o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectShutdownSend();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations2 = 0;

            int readerCount2 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id55_ShutdownDescription && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@ShutdownDescription = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:ShutdownDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:ShutdownDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations2, ref readerCount2);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponse Read526_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations3 = 0;

            int readerCount3 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id56_ConnectResponse && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        o.@ConnectResponse = Read524_ConnectResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id57_Categories && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        o.@Categories = Read525_Item(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:ConnectResponse, CsiConnectV1.xsd:Categories");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:ConnectResponse, CsiConnectV1.xsd:Categories");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations3, ref readerCount3);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponseCategories Read525_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponseCategories o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiResponseCategories();

            if ((object)(o.@CategoryVersion) == null) o.@CategoryVersion = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion>)o.@CategoryVersion;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations4 = 0;

            int readerCount4 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id58_CategoryVersion && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read518_CategoryVersion(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:CategoryVersion");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:CategoryVersion");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations4, ref readerCount4);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion Read518_CategoryVersion(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id58_CategoryVersion && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations5 = 0;

            int readerCount5 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id48_Category && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@Category = Read517_Category(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id59_MajorVersion && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@MajorVersion = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id60_MinorVersion && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@MinorVersion = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:Category, CsiConnectV1.xsd:MajorVersion, CsiConnectV1.xsd:MinorVersion");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:Category, CsiConnectV1.xsd:MajorVersion, CsiConnectV1.xsd:MinorVersion");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations5, ref readerCount5);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectResponse Read524_ConnectResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id56_ConnectResponse && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations6 = 0;

            int readerCount6 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@ErrorCode = Read523_ConnectErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:ErrorCode, CsiConnectV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:ErrorCode, CsiConnectV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations6, ref readerCount6);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode Read523_ConnectErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode.@NONE;

                case @"TOKEN_ALREADY_IN_USE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode.@TOKEN_ALREADY_IN_USE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequest Read522_CsiConnectInitializeCsiRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations7 = 0;

            int readerCount7 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id57_Categories && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        o.@Categories = Read519_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id63_ClientInfo && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        o.@ClientInfo = Read521_ClientConnection(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:Categories, CsiConnectV1.xsd:ClientInfo");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:Categories, CsiConnectV1.xsd:ClientInfo");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations7, ref readerCount7);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClientConnection Read521_ClientConnection(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id64_ClientConnection && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClientConnection o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClientConnection();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations8 = 0;

            int readerCount8 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id65_ClientType && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@ClientType = Read520_ClientType(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id66_Token && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        {

                            o.@Token = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:ClientType, CsiConnectV1.xsd:Token");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:ClientType, CsiConnectV1.xsd:Token");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations8, ref readerCount8);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType Read520_ClientType(string s) {

            switch (s) {

                case @"Unknown": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Unknown;

                case @"SystemPrompt": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@SystemPrompt;

                case @"Tilt": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Tilt;

                case @"Portal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Portal;

                case @"AttendantMenu": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@AttendantMenu;

                case @"SyncSation": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@SyncSation;

                case @"SystemExtension": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@SystemExtension;

                case @"MainMenu": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@MainMenu;

                case @"Game": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Game;

                case @"DeviceEmulator": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@DeviceEmulator;

                case @"Debug": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType.@Debug;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ClientType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequestCategories Read519_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id44_CsiConnectV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequestCategories o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnectInitializeCsiRequestCategories();

            if ((object)(o.@CategoryVersion) == null) o.@CategoryVersion = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CategoryVersion>)o.@CategoryVersion;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations9 = 0;

            int readerCount9 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id58_CategoryVersion && (object) Reader.NamespaceURI == (object)id44_CsiConnectV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read518_CategoryVersion(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiConnectV1.xsd:CategoryVersion");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiConnectV1.xsd:CategoryVersion");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations9, ref readerCount9);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService Read516_CsiEmulatedCashoutService(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id41_CsiEmulatedCashoutService && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations10 = 0;

            int readerCount10 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id67_CultureChangedEvent && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@Item = Read507_CultureChangedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id68_Item && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@Item = Read508_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id69_Item && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@Item = Read509_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id70_Item && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@Item = Read512_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id71_Item && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@Item = Read513_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id72_Item && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@Item = Read514_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id73_Item && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@Item = Read515_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:CultureChangedEvent, CsiEmulatedCashoutServiceV1.xsd:HideEmulatedCashoutServiceEvent, CsiEmulatedCashoutServiceV1.xsd:RegisterAsEmulatedCashoutServiceWindowRequest, CsiEmulatedCashoutServiceV1.xsd:RegisterAsEmulatedCashoutServiceWindowResponse, CsiEmulatedCashoutServiceV1.xsd:SetEmulatedCashoutServiceVisibleRequest, CsiEmulatedCashoutServiceV1.xsd:SetEmulatedCashoutServiceVisibleResponse, CsiEmulatedCashoutServiceV1.xsd:ShowEmulatedCashoutServiceEvent");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:CultureChangedEvent, CsiEmulatedCashoutServiceV1.xsd:HideEmulatedCashoutServiceEvent, CsiEmulatedCashoutServiceV1.xsd:RegisterAsEmulatedCashoutServiceWindowRequest, CsiEmulatedCashoutServiceV1.xsd:RegisterAsEmulatedCashoutServiceWindowResponse, CsiEmulatedCashoutServiceV1.xsd:SetEmulatedCashoutServiceVisibleRequest, CsiEmulatedCashoutServiceV1.xsd:SetEmulatedCashoutServiceVisibleResponse, CsiEmulatedCashoutServiceV1.xsd:ShowEmulatedCashoutServiceEvent");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations10, ref readerCount10);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowEmulatedCashoutServiceEvent Read515_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id73_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowEmulatedCashoutServiceEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowEmulatedCashoutServiceEvent();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations11 = 0;

            int readerCount11 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations11, ref readerCount11);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleResponse Read514_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations12 = 0;

            int readerCount12 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id74_EmulatedCashoutServiceResponse && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@EmulatedCashoutServiceResponse = Read511_EmulatedCashoutServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:EmulatedCashoutServiceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:EmulatedCashoutServiceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations12, ref readerCount12);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceResponse Read511_EmulatedCashoutServiceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations13 = 0;

            int readerCount13 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        {

                            o.@ErrorCode = Read510_Item(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:ErrorCode, CsiEmulatedCashoutServiceV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:ErrorCode, CsiEmulatedCashoutServiceV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations13, ref readerCount13);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode Read510_Item(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@NONE;

                case @"WINDOW_ALREADY_REGISTERED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@WINDOW_ALREADY_REGISTERED;

                case @"OPERATION_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@OPERATION_FAILED;

                case @"HOST_OPERATION_CALLED_BY_CLIENT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@HOST_OPERATION_CALLED_BY_CLIENT;

                case @"CLIENT_OPERATION_CALLED_BY_HOST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@CLIENT_OPERATION_CALLED_BY_HOST;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedCashoutServiceErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleRequest Read513_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEmulatedCashoutServiceVisibleRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations14 = 0;

            int readerCount14 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id75_Visible && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        {

                            o.@Visible = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:Visible");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:Visible");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations14, ref readerCount14);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowResponse Read512_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations15 = 0;

            int readerCount15 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id74_EmulatedCashoutServiceResponse && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        o.@EmulatedCashoutServiceResponse = Read511_EmulatedCashoutServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:EmulatedCashoutServiceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:EmulatedCashoutServiceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations15, ref readerCount15);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowRequest Read509_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id69_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterAsEmulatedCashoutServiceWindowRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations16 = 0;

            int readerCount16 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations16, ref readerCount16);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HideEmulatedCashoutServiceEvent Read508_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id68_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HideEmulatedCashoutServiceEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HideEmulatedCashoutServiceEvent();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations17 = 0;

            int readerCount17 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations17, ref readerCount17);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CultureChangedEvent Read507_CultureChangedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id42_Item)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CultureChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CultureChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations18 = 0;

            int readerCount18 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id76_Culture && (object) Reader.NamespaceURI == (object)id42_Item)) {

                        {

                            o.@Culture = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:Culture");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiEmulatedCashoutServiceV1.xsd:Culture");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations18, ref readerCount18);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService Read506_CsiService(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id39_CsiService && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations19 = 0;

            int readerCount19 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id77_CallAttendantChangedEvent && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read480_CallAttendantChangedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id78_CashOutRequest && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read481_CashOutRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id79_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read482_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id80_GetCallAttendantRequest && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read483_GetCallAttendantRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id81_GetCallAttendantResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read486_GetCallAttendantResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id82_GetPlayerServiceRequest && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read487_GetPlayerServiceRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id83_GetPlayerServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read488_GetPlayerServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id84_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read489_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id85_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read490_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id86_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read491_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id87_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read493_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id88_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read494_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id89_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read495_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id90_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read497_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id91_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read498_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id92_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read499_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id93_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read500_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id94_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read501_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id95_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read502_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id96_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read503_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id97_Item && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read504_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id98_ServiceRequest && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@Item = Read505_ServiceRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:CallAttendantChangedEvent, CsiServiceV1.xsd:CashOutRequest, CsiServiceV1.xsd:EmulatedServiceButtonEnabledConfigItemChangedEvent, CsiServiceV1.xsd:GetCallAttendantRequest, CsiServiceV1.xsd:GetCallAttendantResponse, CsiServiceV1.xsd:GetPlayerServiceRequest, CsiServiceV1.xsd:GetPlayerServiceResponse, CsiServiceV1.xsd:GetPromptPlayerOnCashoutConfigItemValueRequest, CsiServiceV1.xsd:GetPromptPlayerOnCashoutConfigItemValueResponse, CsiServiceV1.xsd:GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest, CsiServiceV1.xsd:GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse, CsiServiceV1.xsd:PlayerServiceRequestChangedEvent, CsiServiceV1.xsd:PromptPlayerOnCashoutConfigItemChangedEvent, CsiServiceV1.xsd:RegisterForCallAttendantChangedEventsRequest, CsiServiceV1.xsd:RegisterForCallAttendantChangedEventsResponse, CsiServiceV1.xsd:RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest, CsiServiceV1.xsd:RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse, CsiServiceV1.xsd:RegisterForPlayerServiceRequestChangedEventsRequest, CsiServiceV1.xsd:RegisterForPlayerServiceRequestChangedEventsResponse, CsiServiceV1.xsd:RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest, CsiServiceV1.xsd:RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse, CsiServiceV1.xsd:ServiceRequest");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:CallAttendantChangedEvent, CsiServiceV1.xsd:CashOutRequest, CsiServiceV1.xsd:EmulatedServiceButtonEnabledConfigItemChangedEvent, CsiServiceV1.xsd:GetCallAttendantRequest, CsiServiceV1.xsd:GetCallAttendantResponse, CsiServiceV1.xsd:GetPlayerServiceRequest, CsiServiceV1.xsd:GetPlayerServiceResponse, CsiServiceV1.xsd:GetPromptPlayerOnCashoutConfigItemValueRequest, CsiServiceV1.xsd:GetPromptPlayerOnCashoutConfigItemValueResponse, CsiServiceV1.xsd:GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest, CsiServiceV1.xsd:GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse, CsiServiceV1.xsd:PlayerServiceRequestChangedEvent, CsiServiceV1.xsd:PromptPlayerOnCashoutConfigItemChangedEvent, CsiServiceV1.xsd:RegisterForCallAttendantChangedEventsRequest, CsiServiceV1.xsd:RegisterForCallAttendantChangedEventsResponse, CsiServiceV1.xsd:RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest, CsiServiceV1.xsd:RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse, CsiServiceV1.xsd:RegisterForPlayerServiceRequestChangedEventsRequest, CsiServiceV1.xsd:RegisterForPlayerServiceRequestChangedEventsResponse, CsiServiceV1.xsd:RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest, CsiServiceV1.xsd:RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse, CsiServiceV1.xsd:ServiceRequest");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations19, ref readerCount19);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceRequest Read505_ServiceRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id98_ServiceRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations20 = 0;

            int readerCount20 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations20, ref readerCount20);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse Read504_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations21 = 0;

            int readerCount21 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations21, ref readerCount21);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse Read485_ServiceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations22 = 0;

            int readerCount22 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@ErrorCode = Read484_ServiceErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ErrorCode, CsiServiceV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ErrorCode, CsiServiceV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations22, ref readerCount22);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode Read484_ServiceErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode.@NONE;

                case @"CLIENT_ALREADY_REGISTERED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode.@CLIENT_ALREADY_REGISTERED;

                case @"CLIENT_NOT_REGISTERED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode.@CLIENT_NOT_REGISTERED;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ServiceErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest Read503_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations23 = 0;

            int readerCount23 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id100_RegistrationAction && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@RegistrationAction = Read496_RegistrationAction1(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations23, ref readerCount23);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1 Read496_RegistrationAction1(string s) {

            switch (s) {

                case @"Register": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1.@Register;

                case @"Unregister": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1.@Unregister;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction1));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsResponse Read502_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations24 = 0;

            int readerCount24 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations24, ref readerCount24);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsRequest Read501_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForPlayerServiceRequestChangedEventsRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations25 = 0;

            int readerCount25 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id100_RegistrationAction && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@RegistrationAction = Read496_RegistrationAction1(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations25, ref readerCount25);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse Read500_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations26 = 0;

            int readerCount26 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations26, ref readerCount26);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest Read499_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations27 = 0;

            int readerCount27 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id100_RegistrationAction && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@RegistrationAction = Read496_RegistrationAction1(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations27, ref readerCount27);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsResponse Read498_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations28 = 0;

            int readerCount28 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations28, ref readerCount28);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsRequest Read497_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterForCallAttendantChangedEventsRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations29 = 0;

            int readerCount29 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id100_RegistrationAction && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@RegistrationAction = Read496_RegistrationAction1(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:RegistrationAction");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations29, ref readerCount29);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PromptPlayerOnCashoutConfigItemChangedEvent Read495_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PromptPlayerOnCashoutConfigItemChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PromptPlayerOnCashoutConfigItemChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations30 = 0;

            int readerCount30 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id101_Prompt && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@Prompt = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:Prompt");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:Prompt");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations30, ref readerCount30);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayerServiceRequestChangedEvent Read494_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayerServiceRequestChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayerServiceRequestChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations31 = 0;

            int readerCount31 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id102_PlayerServiceRequested && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@PlayerServiceRequested = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:PlayerServiceRequested");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:PlayerServiceRequested");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations31, ref readerCount31);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse Read493_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse();

            if ((object)(o.@EmulatableButton) == null) o.@EmulatableButton = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton>)o.@EmulatableButton;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations32 = 0;

            int readerCount32 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id103_EmulatableButton && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            a_1.Add(Read492_EmulatableButton(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:EmulatableButton");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:EmulatableButton");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations32, ref readerCount32);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton Read492_EmulatableButton(string s) {

            switch (s) {

                case @"Cashout": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton.@Cashout;

                case @"Service": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton.@Service;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatableButton));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest Read491_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id86_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations33 = 0;

            int readerCount33 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations33, ref readerCount33);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueResponse Read490_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations34 = 0;

            int readerCount34 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id101_Prompt && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@PromptSpecified = true;

                        {

                            o.@Prompt = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:Prompt");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:Prompt");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations34, ref readerCount34);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueRequest Read489_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id84_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPromptPlayerOnCashoutConfigItemValueRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations35 = 0;

            int readerCount35 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations35, ref readerCount35);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceResponse Read488_GetPlayerServiceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations36 = 0;

            int readerCount36 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id104_State && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@StateSpecified = true;

                        {

                            o.@State = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:State");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:State");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations36, ref readerCount36);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceRequest Read487_GetPlayerServiceRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id82_GetPlayerServiceRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPlayerServiceRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations37 = 0;

            int readerCount37 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations37, ref readerCount37);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantResponse Read486_GetCallAttendantResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations38 = 0;

            int readerCount38 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id99_ServiceResponse && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@ServiceResponse = Read485_ServiceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id104_State && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        o.@StateSpecified = true;

                        {

                            o.@State = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:State");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:ServiceResponse, CsiServiceV1.xsd:State");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations38, ref readerCount38);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantRequest Read483_GetCallAttendantRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id80_GetCallAttendantRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCallAttendantRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations39 = 0;

            int readerCount39 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations39, ref readerCount39);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedServiceButtonEnabledConfigItemChangedEvent Read482_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedServiceButtonEnabledConfigItemChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EmulatedServiceButtonEnabledConfigItemChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations40 = 0;

            int readerCount40 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id105_Enabled && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@Enabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:Enabled");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:Enabled");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations40, ref readerCount40);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CashOutRequest Read481_CashOutRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id78_CashOutRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CashOutRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CashOutRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations41 = 0;

            int readerCount41 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations41, ref readerCount41);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CallAttendantChangedEvent Read480_CallAttendantChangedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id40_CsiServiceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CallAttendantChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CallAttendantChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations42 = 0;

            int readerCount42 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id106_CallAttendant && (object) Reader.NamespaceURI == (object)id40_CsiServiceV1xsd)) {

                        {

                            o.@CallAttendant = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiServiceV1.xsd:CallAttendant");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiServiceV1.xsd:CallAttendant");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations42, ref readerCount42);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell Read479_CsiMechanicalBell(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id37_CsiMechanicalBell && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id38_CsiMechanicalBellV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations43 = 0;

            int readerCount43 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id107_MechanicalBellRingRequest && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        o.@Item = Read473_MechanicalBellRingRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id108_MechanicalBellRingResponse && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        o.@Item = Read476_MechanicalBellRingResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id109_MechanicalBellStopRequest && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        o.@Item = Read477_MechanicalBellStopRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id110_MechanicalBellStopResponse && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        o.@Item = Read478_MechanicalBellStopResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:MechanicalBellRingRequest, CsiMechanicalBellV1.xsd:MechanicalBellRingResponse, CsiMechanicalBellV1.xsd:MechanicalBellStopRequest, CsiMechanicalBellV1.xsd:MechanicalBellStopResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:MechanicalBellRingRequest, CsiMechanicalBellV1.xsd:MechanicalBellRingResponse, CsiMechanicalBellV1.xsd:MechanicalBellStopRequest, CsiMechanicalBellV1.xsd:MechanicalBellStopResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations43, ref readerCount43);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopResponse Read478_MechanicalBellStopResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id38_CsiMechanicalBellV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations44 = 0;

            int readerCount44 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id111_MechanicalBellResponse && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        o.@MechanicalBellResponse = Read475_MechanicalBellResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:MechanicalBellResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:MechanicalBellResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations44, ref readerCount44);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellResponse Read475_MechanicalBellResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id111_MechanicalBellResponse && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id38_CsiMechanicalBellV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations45 = 0;

            int readerCount45 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        {

                            o.@ErrorCode = Read474_MechanicalBellErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:ErrorCode, CsiMechanicalBellV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:ErrorCode, CsiMechanicalBellV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations45, ref readerCount45);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode Read474_MechanicalBellErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@NONE;

                case @"UNKNOWN_DRIVER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@UNKNOWN_DRIVER_ERROR;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"TOO_MANY_PENDING_RING_REQUESTS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode.@TOO_MANY_PENDING_RING_REQUESTS;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopRequest Read477_MechanicalBellStopRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id38_CsiMechanicalBellV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellStopRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations46 = 0;

            int readerCount46 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations46, ref readerCount46);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingResponse Read476_MechanicalBellRingResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id38_CsiMechanicalBellV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations47 = 0;

            int readerCount47 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id111_MechanicalBellResponse && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        o.@MechanicalBellResponse = Read475_MechanicalBellResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:MechanicalBellResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:MechanicalBellResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations47, ref readerCount47);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingRequest Read473_MechanicalBellRingRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id38_CsiMechanicalBellV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MechanicalBellRingRequest();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[3] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations48 = 0;

            int readerCount48 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id113_Count && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        {

                            o.@Count = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id114_RingDurationMilliseconds && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        {

                            o.@RingDurationMilliseconds = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id115_PauseDurationMilliseconds && (object) Reader.NamespaceURI == (object)id38_CsiMechanicalBellV1xsd)) {

                        {

                            o.@PauseDurationMilliseconds = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:Count, CsiMechanicalBellV1.xsd:RingDurationMilliseconds, CsiMechanicalBellV1.xsd:PauseDurationMilliseconds");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMechanicalBellV1.xsd:Count, CsiMechanicalBellV1.xsd:RingDurationMilliseconds, CsiMechanicalBellV1.xsd:PauseDurationMilliseconds");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations48, ref readerCount48);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal Read472_CsiPortal(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id35_CsiPortal && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations49 = 0;

            int readerCount49 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id116_Item && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read414_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id117_Item && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read431_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id118_CreatePortalRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read440_CreatePortalRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id119_CreatePortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read441_CreatePortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id120_DestroyPortalRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read442_DestroyPortalRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id121_DestroyPortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read443_DestroyPortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id122_ExecuteContentRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read444_ExecuteContentRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id123_ExecuteContentResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read445_ExecuteContentResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id124_GetContentStateRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read446_GetContentStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id125_GetContentStateResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read448_GetContentStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id126_GetEMDIConfigRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read449_GetEMDIConfigRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id127_GetEMDIConfigResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read450_GetEMDIConfigResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id128_GetPortalIdByNameRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read451_GetPortalIdByNameRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id129_GetPortalIdByNameResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read452_GetPortalIdByNameResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id130_GetVisibilityStateRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read453_GetVisibilityStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id131_GetVisibilityStateResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read455_GetVisibilityStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id132_HidePortalRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read456_HidePortalRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id133_HidePortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read457_HidePortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id134_LoadContentRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read458_LoadContentRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id135_LoadContentResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read459_LoadContentResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id136_PortalActionNotifyEvent && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read462_PortalActionNotifyEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id137_PortalInfoRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read463_PortalInfoRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id138_PortalInfoResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read464_PortalInfoResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id139_PortalListRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read465_PortalListRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id140_PortalListResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read467_PortalListResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id141_ReleaseContentRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read468_ReleaseContentRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id142_ReleaseContentResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read469_ReleaseContentResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id143_ShowPortalRequest && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read470_ShowPortalRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id144_ShowPortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Item = Read471_ShowPortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:ConfigureVisibilityGroupRequest, CsiPortalV1.xsd:ConfigureVisibilityGroupResponse, CsiPortalV1.xsd:CreatePortalRequest, CsiPortalV1.xsd:CreatePortalResponse, CsiPortalV1.xsd:DestroyPortalRequest, CsiPortalV1.xsd:DestroyPortalResponse, CsiPortalV1.xsd:ExecuteContentRequest, CsiPortalV1.xsd:ExecuteContentResponse, CsiPortalV1.xsd:GetContentStateRequest, CsiPortalV1.xsd:GetContentStateResponse, CsiPortalV1.xsd:GetEMDIConfigRequest, CsiPortalV1.xsd:GetEMDIConfigResponse, CsiPortalV1.xsd:GetPortalIdByNameRequest, CsiPortalV1.xsd:GetPortalIdByNameResponse, CsiPortalV1.xsd:GetVisibilityStateRequest, CsiPortalV1.xsd:GetVisibilityStateResponse, CsiPortalV1.xsd:HidePortalRequest, CsiPortalV1.xsd:HidePortalResponse, CsiPortalV1.xsd:LoadContentRequest, CsiPortalV1.xsd:LoadContentResponse, CsiPortalV1.xsd:PortalActionNotifyEvent, CsiPortalV1.xsd:PortalInfoRequest, CsiPortalV1.xsd:PortalInfoResponse, CsiPortalV1.xsd:PortalListRequest, CsiPortalV1.xsd:PortalListResponse, CsiPortalV1.xsd:ReleaseContentRequest, CsiPortalV1.xsd:ReleaseContentResponse, CsiPortalV1.xsd:ShowPortalRequest, CsiPortalV1.xsd:ShowPortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:ConfigureVisibilityGroupRequest, CsiPortalV1.xsd:ConfigureVisibilityGroupResponse, CsiPortalV1.xsd:CreatePortalRequest, CsiPortalV1.xsd:CreatePortalResponse, CsiPortalV1.xsd:DestroyPortalRequest, CsiPortalV1.xsd:DestroyPortalResponse, CsiPortalV1.xsd:ExecuteContentRequest, CsiPortalV1.xsd:ExecuteContentResponse, CsiPortalV1.xsd:GetContentStateRequest, CsiPortalV1.xsd:GetContentStateResponse, CsiPortalV1.xsd:GetEMDIConfigRequest, CsiPortalV1.xsd:GetEMDIConfigResponse, CsiPortalV1.xsd:GetPortalIdByNameRequest, CsiPortalV1.xsd:GetPortalIdByNameResponse, CsiPortalV1.xsd:GetVisibilityStateRequest, CsiPortalV1.xsd:GetVisibilityStateResponse, CsiPortalV1.xsd:HidePortalRequest, CsiPortalV1.xsd:HidePortalResponse, CsiPortalV1.xsd:LoadContentRequest, CsiPortalV1.xsd:LoadContentResponse, CsiPortalV1.xsd:PortalActionNotifyEvent, CsiPortalV1.xsd:PortalInfoRequest, CsiPortalV1.xsd:PortalInfoResponse, CsiPortalV1.xsd:PortalListRequest, CsiPortalV1.xsd:PortalListResponse, CsiPortalV1.xsd:ReleaseContentRequest, CsiPortalV1.xsd:ReleaseContentResponse, CsiPortalV1.xsd:ShowPortalRequest, CsiPortalV1.xsd:ShowPortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations49, ref readerCount49);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalResponse Read471_ShowPortalResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations50 = 0;

            int readerCount50 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations50, ref readerCount50);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse Read430_PortalResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations51 = 0;

            int readerCount51 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@ErrorCode = Read429_PortalErrorCode(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:ErrorCode, CsiPortalV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:ErrorCode, CsiPortalV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations51, ref readerCount51);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalErrorCode Read429_PortalErrorCode(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id146_PortalErrorCode && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalErrorCode o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalErrorCode();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations52 = 0;

            int readerCount52 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id147_Item && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read415_Item(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id148_CreatePortalErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read416_CreatePortalErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id149_DestroyPortalErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read417_DestroyPortalErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id150_ExecuteContentErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read418_ExecuteContentErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id151_GetContentStateErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read419_GetContentStateErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id152_GetEMDIConfigErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read420_GetEMDIConfigErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id153_GetPortalIdByNameErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read421_GetPortalIdByNameErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id154_GetVisibilityStateErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read422_GetVisibilityStateErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id155_HidePortalErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read423_HidePortalErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id156_LoadContentErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read424_LoadContentErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id157_PortalInfoErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read425_PortalInfoErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id158_PortalListErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read426_PortalListErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id159_ReleaseContentErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read427_ReleaseContentErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id160_ShowPortalErrorCode && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Item = Read428_ShowPortalErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:ConfigureVisibilityGroupErrorCode, CsiPortalV1.xsd:CreatePortalErrorCode, CsiPortalV1.xsd:DestroyPortalErrorCode, CsiPortalV1.xsd:ExecuteContentErrorCode, CsiPortalV1.xsd:GetContentStateErrorCode, CsiPortalV1.xsd:GetEMDIConfigErrorCode, CsiPortalV1.xsd:GetPortalIdByNameErrorCode, CsiPortalV1.xsd:GetVisibilityStateErrorCode, CsiPortalV1.xsd:HidePortalErrorCode, CsiPortalV1.xsd:LoadContentErrorCode, CsiPortalV1.xsd:PortalInfoErrorCode, CsiPortalV1.xsd:PortalListErrorCode, CsiPortalV1.xsd:ReleaseContentErrorCode, CsiPortalV1.xsd:ShowPortalErrorCode");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:ConfigureVisibilityGroupErrorCode, CsiPortalV1.xsd:CreatePortalErrorCode, CsiPortalV1.xsd:DestroyPortalErrorCode, CsiPortalV1.xsd:ExecuteContentErrorCode, CsiPortalV1.xsd:GetContentStateErrorCode, CsiPortalV1.xsd:GetEMDIConfigErrorCode, CsiPortalV1.xsd:GetPortalIdByNameErrorCode, CsiPortalV1.xsd:GetVisibilityStateErrorCode, CsiPortalV1.xsd:HidePortalErrorCode, CsiPortalV1.xsd:LoadContentErrorCode, CsiPortalV1.xsd:PortalInfoErrorCode, CsiPortalV1.xsd:PortalListErrorCode, CsiPortalV1.xsd:ReleaseContentErrorCode, CsiPortalV1.xsd:ShowPortalErrorCode");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations52, ref readerCount52);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode Read428_ShowPortalErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@INVALID_PORTAL_ID;

                case @"CANNOT_SHOW_PORTAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@CANNOT_SHOW_PORTAL;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode Read427_ReleaseContentErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@INVALID_PORTAL_ID;

                case @"CONTENT_NOT_LOADED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@CONTENT_NOT_LOADED;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode Read426_PortalListErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_CLASS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode.@INVALID_PORTAL_CLASS;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode Read425_PortalInfoErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode.@INVALID_PORTAL_ID;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode Read424_LoadContentErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@INVALID_PORTAL_ID;

                case @"MALFORMED_URL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@MALFORMED_URL;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode Read423_HidePortalErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@INVALID_PORTAL_ID;

                case @"CANNOT_HIDE_PORTAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@CANNOT_HIDE_PORTAL;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode Read422_GetVisibilityStateErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode.@INVALID_PORTAL_ID;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode Read421_GetPortalIdByNameErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_NAME": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@INVALID_PORTAL_NAME;

                case @"INVALID_PORTAL_CLASS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode.@INVALID_PORTAL_CLASS;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode Read420_GetEMDIConfigErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode.@OTHER_ERROR;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode Read419_GetContentStateErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode.@INVALID_PORTAL_ID;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode Read418_ExecuteContentErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@INVALID_PORTAL_ID;

                case @"CONTENT_NOT_LOADED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@CONTENT_NOT_LOADED;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode Read417_DestroyPortalErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@INVALID_PORTAL_ID;

                case @"CANNOT_DESTROY_PORTAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@CANNOT_DESTROY_PORTAL;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode Read416_CreatePortalErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@OTHER_ERROR;

                case @"PORTAL_EXISTS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@PORTAL_EXISTS;

                case @"PORTAL_OUT_OF_BOUNDS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@PORTAL_OUT_OF_BOUNDS;

                case @"INVALID_PRIORITY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_PRIORITY;

                case @"INVALID_MONITOR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_MONITOR;

                case @"INVALID_PORTAL_NAME": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_PORTAL_NAME;

                case @"INVALID_PORTAL_CLASS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_PORTAL_CLASS;

                case @"INVALID_DEFAULT_EMDI_TOKEN": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@INVALID_DEFAULT_EMDI_TOKEN;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode Read415_Item(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@NONE;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@OTHER_ERROR;

                case @"INVALID_PORTAL_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@INVALID_PORTAL_ID;

                case @"TOO_MANY_PORTALS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@TOO_MANY_PORTALS;

                case @"INVALID_GROUP_NAME": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@INVALID_GROUP_NAME;

                case @"PORTALS_NOT_ALL_SAME_CLASS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@PORTALS_NOT_ALL_SAME_CLASS;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalRequest Read470_ShowPortalRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ShowPortalRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations53 = 0;

            int readerCount53 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations53, ref readerCount53);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentResponse Read469_ReleaseContentResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations54 = 0;

            int readerCount54 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations54, ref readerCount54);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentRequest Read468_ReleaseContentRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseContentRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations55 = 0;

            int readerCount55 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id162_RequestorName && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@RequestorName = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:RequestorName");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:RequestorName");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations55, ref readerCount55);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListResponse Read467_PortalListResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations56 = 0;

            int readerCount56 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id163_PortalIds && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalIds = Read466_PortalIdList(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalIds");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalIds");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations56, ref readerCount56);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalIdList Read466_PortalIdList(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id164_PortalIdList && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalIdList o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalIdList();

            if ((object)(o.@PortalId) == null) o.@PortalId = new global::System.Collections.Generic.List<global::System.String>();

            global::System.Collections.Generic.List<global::System.String> a_0 = (global::System.Collections.Generic.List<global::System.String>)o.@PortalId;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations57 = 0;

            int readerCount57 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            a_0.Add(Reader.ReadElementString());

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations57, ref readerCount57);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListRequest Read465_PortalListRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalListRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations58 = 0;

            int readerCount58 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id165_PortalClass && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalClass = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalClass");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalClass");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations58, ref readerCount58);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoResponse Read464_PortalInfoResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations59 = 0;

            int readerCount59 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id166_PortalInfo && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalInfo = Read439_PortalInfo(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalInfo");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalInfo");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations59, ref readerCount59);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfo Read439_PortalInfo(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id166_PortalInfo && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfo o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfo();

            bool[] paramsRead = new bool[15];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations60 = 0;

            int readerCount60 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id167_Name && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Name = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id168_Priority && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Priority = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id169_Screen && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Screen = Read432_PortalScreen(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id170_Type && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Type = Read433_PortalType(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id171_Position && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Position = Read434_PortalPosition(Reader.ReadElementString());

                        }

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id172_Bounds && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Bounds = Read437_PortalBounds(false, true);

                        paramsRead[6] = true;

                    }

                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id173_TextureSize && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@TextureSize = Read436_PortalSize(false, true);

                        paramsRead[7] = true;

                    }

                    else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id174_Extents && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Extents = Read438_PortalExtents(false, true);

                        paramsRead[8] = true;

                    }

                    else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id175_DefaultEMDIAccessToken && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@DefaultEMDIAccessToken = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());

                        }

                        paramsRead[9] = true;

                    }

                    else if (!paramsRead[10] && ((object) Reader.LocalName == (object)id176_SoundGroup && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@SoundGroup = Read130_GroupName(Reader.ReadElementString());

                        }

                        paramsRead[10] = true;

                    }

                    else if (!paramsRead[11] && ((object) Reader.LocalName == (object)id177_TouchSupported && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@TouchSupported = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[11] = true;

                    }

                    else if (!paramsRead[12] && ((object) Reader.LocalName == (object)id178_AudioSupported && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@AudioSupported = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[12] = true;

                    }

                    else if (!paramsRead[13] && ((object) Reader.LocalName == (object)id179_ConfigGroup && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@ConfigGroup = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[13] = true;

                    }

                    else if (!paramsRead[14] && ((object) Reader.LocalName == (object)id180_MediaDisplayId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@MediaDisplayIdSpecified = true;

                        {

                            o.@MediaDisplayId = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[14] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:Name, CsiPortalV1.xsd:Priority, CsiPortalV1.xsd:Screen, CsiPortalV1.xsd:Type, CsiPortalV1.xsd:Position, CsiPortalV1.xsd:Bounds, CsiPortalV1.xsd:TextureSize, CsiPortalV1.xsd:Extents, CsiPortalV1.xsd:DefaultEMDIAccessToken, CsiPortalV1.xsd:SoundGroup, CsiPortalV1.xsd:TouchSupported, CsiPortalV1.xsd:AudioSupported, CsiPortalV1.xsd:ConfigGroup, CsiPortalV1.xsd:MediaDisplayId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:Name, CsiPortalV1.xsd:Priority, CsiPortalV1.xsd:Screen, CsiPortalV1.xsd:Type, CsiPortalV1.xsd:Position, CsiPortalV1.xsd:Bounds, CsiPortalV1.xsd:TextureSize, CsiPortalV1.xsd:Extents, CsiPortalV1.xsd:DefaultEMDIAccessToken, CsiPortalV1.xsd:SoundGroup, CsiPortalV1.xsd:TouchSupported, CsiPortalV1.xsd:AudioSupported, CsiPortalV1.xsd:ConfigGroup, CsiPortalV1.xsd:MediaDisplayId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations60, ref readerCount60);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName Read130_GroupName(string s) {

            switch (s) {

                case @"ALARMS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@ALARMS;

                case @"TILTS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@TILTS;

                case @"SYSTEM": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@SYSTEM;

                case @"VOCAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@VOCAL;

                case @"FEEDBACK": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@FEEDBACK;

                case @"GAME_SPECIAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@GAME_SPECIAL;

                case @"GAME_SOUNDS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@GAME_SOUNDS;

                case @"ATTRACTS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@ATTRACTS;

                case @"GAME_PRESET_VOLUME_SOUNDS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName.@GAME_PRESET_VOLUME_SOUNDS;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupName));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalExtents Read438_PortalExtents(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id181_PortalExtents && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalExtents o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalExtents();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations61 = 0;

            int readerCount61 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id182_Min && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Min = Read436_PortalSize(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id183_Max && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Max = Read436_PortalSize(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:Min, CsiPortalV1.xsd:Max");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:Min, CsiPortalV1.xsd:Max");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations61, ref readerCount61);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize Read436_PortalSize(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id184_PortalSize && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalSize();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations62 = 0;

            int readerCount62 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id185_Width && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Width = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id186_Height && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Height = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:Width, CsiPortalV1.xsd:Height");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:Width, CsiPortalV1.xsd:Height");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations62, ref readerCount62);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalBounds Read437_PortalBounds(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id187_PortalBounds && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalBounds o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalBounds();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations63 = 0;

            int readerCount63 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id188_Location && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Location = Read435_PortalLocation(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id189_Size && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@Size = Read436_PortalSize(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:Location, CsiPortalV1.xsd:Size");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:Location, CsiPortalV1.xsd:Size");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations63, ref readerCount63);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalLocation Read435_PortalLocation(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id190_PortalLocation && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalLocation o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalLocation();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations64 = 0;

            int readerCount64 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id191_X && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@X = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id192_Y && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Y = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:X, CsiPortalV1.xsd:Y");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:X, CsiPortalV1.xsd:Y");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations64, ref readerCount64);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition Read434_PortalPosition(string s) {

            switch (s) {

                case @"INVALID_PORTAL_POSITION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@INVALID_PORTAL_POSITION;

                case @"LEFT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@LEFT;

                case @"RIGHT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@RIGHT;

                case @"BOTTOM": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@BOTTOM;

                case @"TOP": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@TOP;

                case @"FLOAT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@FLOAT;

                case @"FULL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@FULL;

                case @"CENTER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition.@CENTER;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalPosition));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType Read433_PortalType(string s) {

            switch (s) {

                case @"INVALID_TYPE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@INVALID_TYPE;

                case @"SCALE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@SCALE;

                case @"OVERLAY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@OVERLAY;

                case @"MODAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType.@MODAL;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen Read432_PortalScreen(string s) {

            switch (s) {

                case @"INVALID_SCREEN": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@INVALID_SCREEN;

                case @"PRIMARY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@PRIMARY;

                case @"SECONDARY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@SECONDARY;

                case @"TOPPER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@TOPPER;

                case @"DPP": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen.@DPP;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalScreen));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoRequest Read463_PortalInfoRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalInfoRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations65 = 0;

            int readerCount65 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations65, ref readerCount65);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionNotifyEvent Read462_PortalActionNotifyEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionNotifyEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionNotifyEvent();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations66 = 0;

            int readerCount66 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id193_Action && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Action = Read460_PortalAction(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id194_Result && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@Result = Read461_PortalActionResult(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:Action, CsiPortalV1.xsd:Result");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:Action, CsiPortalV1.xsd:Result");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations66, ref readerCount66);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult Read461_PortalActionResult(string s) {

            switch (s) {

                case @"INVALID_PORTAL_ACTION_RESULT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult.@INVALID_PORTAL_ACTION_RESULT;

                case @"SUCCESS": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult.@SUCCESS;

                case @"FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult.@FAILED;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalActionResult));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction Read460_PortalAction(string s) {

            switch (s) {

                case @"INVALID_PORTAL_ACTION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@INVALID_PORTAL_ACTION;

                case @"PORTAL_CREATED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@PORTAL_CREATED;

                case @"PORTAL_DESTROYED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@PORTAL_DESTROYED;

                case @"LOAD_CONTENT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@LOAD_CONTENT;

                case @"EXECUTE_CONTENT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EXECUTE_CONTENT;

                case @"RELEASE_CONTENT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@RELEASE_CONTENT;

                case @"CONTENT_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@CONTENT_ERROR;

                case @"SHOW_PORTAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@SHOW_PORTAL;

                case @"HIDE_PORTAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@HIDE_PORTAL;

                case @"EMDI_SOCKET_OPENED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EMDI_SOCKET_OPENED;

                case @"EMDI_SOCKET_CLOSED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EMDI_SOCKET_CLOSED;

                case @"EMDI_SOCKET_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction.@EMDI_SOCKET_ERROR;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalAction));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentResponse Read459_LoadContentResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations67 = 0;

            int readerCount67 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations67, ref readerCount67);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentRequest Read458_LoadContentRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LoadContentRequest();

            bool[] paramsRead = new bool[8];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations68 = 0;

            int readerCount68 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id195_ContentURL && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@ContentURL = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id162_RequestorName && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@RequestorName = Reader.ReadElementString();

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id196_StartAfterLoad && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@StartAfterLoad = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id197_EMDIAccessToken && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@EMDIAccessToken = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id198_Item && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@AuthorizeDefaultEMDICapabilities = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id199_PortalContentToken && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        if (Reader.IsEmptyElement) {

                            Reader.Skip();

                        }

                        else {

                            o.@PortalContentToken = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());

                        }

                        paramsRead[6] = true;

                    }

                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id200_PortalContentId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalContentIdSpecified = true;

                        {

                            o.@PortalContentId = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());

                        }

                        paramsRead[7] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:ContentURL, CsiPortalV1.xsd:RequestorName, CsiPortalV1.xsd:StartAfterLoad, CsiPortalV1.xsd:EMDIAccessToken, CsiPortalV1.xsd:AuthorizeDefaultEMDICapabilities, CsiPortalV1.xsd:PortalContentToken, CsiPortalV1.xsd:PortalContentId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:ContentURL, CsiPortalV1.xsd:RequestorName, CsiPortalV1.xsd:StartAfterLoad, CsiPortalV1.xsd:EMDIAccessToken, CsiPortalV1.xsd:AuthorizeDefaultEMDICapabilities, CsiPortalV1.xsd:PortalContentToken, CsiPortalV1.xsd:PortalContentId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations68, ref readerCount68);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalResponse Read457_HidePortalResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations69 = 0;

            int readerCount69 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations69, ref readerCount69);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalRequest Read456_HidePortalRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HidePortalRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations70 = 0;

            int readerCount70 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations70, ref readerCount70);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateResponse Read455_GetVisibilityStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations71 = 0;

            int readerCount71 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id201_VisibilityState && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@VisibilityState = Read454_PortalVisibilityState(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:VisibilityState");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:VisibilityState");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations71, ref readerCount71);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState Read454_PortalVisibilityState(string s) {

            switch (s) {

                case @"INVALID_PORTAL_VISIBILITY_STATE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState.@INVALID_PORTAL_VISIBILITY_STATE;

                case @"HIDDEN": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState.@HIDDEN;

                case @"SHOWN": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState.@SHOWN;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalVisibilityState));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateRequest Read453_GetVisibilityStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetVisibilityStateRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations72 = 0;

            int readerCount72 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations72, ref readerCount72);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameResponse Read452_GetPortalIdByNameResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations73 = 0;

            int readerCount73 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations73, ref readerCount73);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameRequest Read451_GetPortalIdByNameRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPortalIdByNameRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations74 = 0;

            int readerCount74 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id165_PortalClass && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalClass = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id202_PortalName && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalName = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalClass, CsiPortalV1.xsd:PortalName");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalClass, CsiPortalV1.xsd:PortalName");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations74, ref readerCount74);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigResponse Read450_GetEMDIConfigResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations75 = 0;

            int readerCount75 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id203_XMLSocketEMDIPort && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@XMLSocketEMDIPort = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id204_WebsocketEMDIPort && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@WebsocketEMDIPort = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:XMLSocketEMDIPort, CsiPortalV1.xsd:WebsocketEMDIPort");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:XMLSocketEMDIPort, CsiPortalV1.xsd:WebsocketEMDIPort");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations75, ref readerCount75);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigRequest Read449_GetEMDIConfigRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id126_GetEMDIConfigRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetEMDIConfigRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations76 = 0;

            int readerCount76 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations76, ref readerCount76);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateResponse Read448_GetContentStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations77 = 0;

            int readerCount77 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id205_ContentState && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@ContentState = Read447_PortalContentState(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:ContentState");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:ContentState");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations77, ref readerCount77);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState Read447_PortalContentState(string s) {

            switch (s) {

                case @"INVALID_PORTAL_CONTENT_STATE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@INVALID_PORTAL_CONTENT_STATE;

                case @"RELEASED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@RELEASED;

                case @"LOADED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@LOADED;

                case @"PENDING": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@PENDING;

                case @"EXECUTING": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@EXECUTING;

                case @"ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState.@ERROR;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PortalContentState));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateRequest Read446_GetContentStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetContentStateRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations78 = 0;

            int readerCount78 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations78, ref readerCount78);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentResponse Read445_ExecuteContentResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations79 = 0;

            int readerCount79 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations79, ref readerCount79);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentRequest Read444_ExecuteContentRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ExecuteContentRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations80 = 0;

            int readerCount80 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations80, ref readerCount80);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalResponse Read443_DestroyPortalResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations81 = 0;

            int readerCount81 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations81, ref readerCount81);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalRequest Read442_DestroyPortalRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyPortalRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations82 = 0;

            int readerCount82 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations82, ref readerCount82);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalResponse Read441_CreatePortalResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations83 = 0;

            int readerCount83 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id161_PortalId && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalId = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id175_DefaultEMDIAccessToken && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@DefaultEMDIAccessToken = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:DefaultEMDIAccessToken");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse, CsiPortalV1.xsd:PortalId, CsiPortalV1.xsd:DefaultEMDIAccessToken");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations83, ref readerCount83);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalRequest Read440_CreatePortalRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatePortalRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations84 = 0;

            int readerCount84 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id206_PortalConfig && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalConfig = Read439_PortalInfo(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id165_PortalClass && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalClass = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalConfig, CsiPortalV1.xsd:PortalClass");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalConfig, CsiPortalV1.xsd:PortalClass");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations84, ref readerCount84);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupResponse Read431_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations85 = 0;

            int readerCount85 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id145_PortalResponse && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        o.@PortalResponse = Read430_PortalResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations85, ref readerCount85);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupRequest Read414_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id36_CsiPortalV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigureVisibilityGroupRequest();

            if ((object)(o.@PortalIds) == null) o.@PortalIds = new global::System.Collections.Generic.List<global::System.String>();

            global::System.Collections.Generic.List<global::System.String> a_2 = (global::System.Collections.Generic.List<global::System.String>)o.@PortalIds;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations86 = 0;

            int readerCount86 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id165_PortalClass && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@PortalClass = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id207_VisibilityGroupName && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            o.@VisibilityGroupName = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id163_PortalIds && (object) Reader.NamespaceURI == (object)id36_CsiPortalV1xsd)) {

                        {

                            a_2.Add(Reader.ReadElementString());

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiPortalV1.xsd:PortalClass, CsiPortalV1.xsd:VisibilityGroupName, CsiPortalV1.xsd:PortalIds");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPortalV1.xsd:PortalClass, CsiPortalV1.xsd:VisibilityGroupName, CsiPortalV1.xsd:PortalIds");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations86, ref readerCount86);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed Read413_CsiPresentationSpeed(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id33_CsiPresentationSpeed && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id34_CsiPresentationSpeedV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations87 = 0;

            int readerCount87 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id208_GetPresentationSpeedRequest && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@Item = Read407_GetPresentationSpeedRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id209_GetPresentationSpeedResponse && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@Item = Read410_GetPresentationSpeedResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id210_SetPresentationSpeedRequest && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@Item = Read411_SetPresentationSpeedRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id211_SetPresentationSpeedResponse && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@Item = Read412_SetPresentationSpeedResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:GetPresentationSpeedRequest, CsiPresentationSpeedV1.xsd:GetPresentationSpeedResponse, CsiPresentationSpeedV1.xsd:SetPresentationSpeedRequest, CsiPresentationSpeedV1.xsd:SetPresentationSpeedResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:GetPresentationSpeedRequest, CsiPresentationSpeedV1.xsd:GetPresentationSpeedResponse, CsiPresentationSpeedV1.xsd:SetPresentationSpeedRequest, CsiPresentationSpeedV1.xsd:SetPresentationSpeedResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations87, ref readerCount87);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedResponse Read412_SetPresentationSpeedResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id34_CsiPresentationSpeedV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations88 = 0;

            int readerCount88 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id212_PresentationSpeedResponse && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@PresentationSpeedResponse = Read409_PresentationSpeedResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:PresentationSpeedResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:PresentationSpeedResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations88, ref readerCount88);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedResponse Read409_PresentationSpeedResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id34_CsiPresentationSpeedV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations89 = 0;

            int readerCount89 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        {

                            o.@ErrorCode = Read408_PresentationSpeedErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:ErrorCode, CsiPresentationSpeedV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:ErrorCode, CsiPresentationSpeedV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations89, ref readerCount89);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedErrorCode Read408_PresentationSpeedErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedErrorCode.@NONE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PresentationSpeedErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedRequest Read411_SetPresentationSpeedRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id34_CsiPresentationSpeedV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetPresentationSpeedRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id213_PresentationSpeed && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                    o.@PresentationSpeed = System.Xml.XmlConvert.ToUInt32(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:PresentationSpeed");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations90 = 0;

            int readerCount90 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations90, ref readerCount90);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedResponse Read410_GetPresentationSpeedResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id34_CsiPresentationSpeedV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations91 = 0;

            int readerCount91 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id212_PresentationSpeedResponse && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@PresentationSpeedResponse = Read409_PresentationSpeedResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id214_DefaultPresentationSpeed && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@DefaultPresentationSpeedSpecified = true;

                        {

                            o.@DefaultPresentationSpeed = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id213_PresentationSpeed && (object) Reader.NamespaceURI == (object)id34_CsiPresentationSpeedV1xsd)) {

                        o.@PresentationSpeedSpecified = true;

                        {

                            o.@PresentationSpeed = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:PresentationSpeedResponse, CsiPresentationSpeedV1.xsd:DefaultPresentationSpeed, CsiPresentationSpeedV1.xsd:PresentationSpeed");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiPresentationSpeedV1.xsd:PresentationSpeedResponse, CsiPresentationSpeedV1.xsd:DefaultPresentationSpeed, CsiPresentationSpeedV1.xsd:PresentationSpeed");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations91, ref readerCount91);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedRequest Read407_GetPresentationSpeedRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id34_CsiPresentationSpeedV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPresentationSpeedRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations92 = 0;

            int readerCount92 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations92, ref readerCount92);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera Read406_CsiDepthCamera(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id31_CsiDepthCamera && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations93 = 0;

            int readerCount93 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id215_DepthCameraDeviceEvent && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@Item = Read393_DepthCameraDeviceEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id216_Item && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@Item = Read394_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id217_Item && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@Item = Read399_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id218_GetDepthCameraDevicesRequest && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@Item = Read400_GetDepthCameraDevicesRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id219_GetDepthCameraDevicesResponse && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@Item = Read405_GetDepthCameraDevicesResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraDeviceEvent, CsiDepthCameraV1.xsd:GetDepthCameraDeviceStatusRequest, CsiDepthCameraV1.xsd:GetDepthCameraDeviceStatusResponse, CsiDepthCameraV1.xsd:GetDepthCameraDevicesRequest, CsiDepthCameraV1.xsd:GetDepthCameraDevicesResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraDeviceEvent, CsiDepthCameraV1.xsd:GetDepthCameraDeviceStatusRequest, CsiDepthCameraV1.xsd:GetDepthCameraDeviceStatusResponse, CsiDepthCameraV1.xsd:GetDepthCameraDevicesRequest, CsiDepthCameraV1.xsd:GetDepthCameraDevicesResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations93, ref readerCount93);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesResponse Read405_GetDepthCameraDevicesResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesResponse();

            if ((object)(o.@DepthCameraDevices) == null) o.@DepthCameraDevices = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice>)o.@DepthCameraDevices;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations94 = 0;

            int readerCount94 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id220_DepthCameraResponse && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@DepthCameraResponse = Read396_DepthCameraResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id221_DepthCameraDevices && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@DepthCameraDevices) == null) o.@DepthCameraDevices = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice>)o.@DepthCameraDevices;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations95 = 0;

                                int readerCount95 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id222_DepthCameraDevice && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read404_DepthCameraDevice(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiDepthCameraV1.xsd:DepthCameraDevice");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiDepthCameraV1.xsd:DepthCameraDevice");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations95, ref readerCount95);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraResponse, CsiDepthCameraV1.xsd:DepthCameraDevices");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraResponse, CsiDepthCameraV1.xsd:DepthCameraDevices");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations94, ref readerCount94);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice Read404_DepthCameraDevice(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id222_DepthCameraDevice && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDevice();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations96 = 0;

            int readerCount96 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id223_DepthCameraType && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DepthCameraType = Read401_CameraTechType(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id224_DepthCameraDeviceIndex && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DepthCameraDeviceIndex = Read402_DepthCameraDeviceIndex(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id225_DepthCameraModel && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DepthCameraModel = Read403_DepthCameraModel(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id226_DepthCameraUsbLocationPath && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DepthCameraUsbLocationPath = Reader.ReadElementString();

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id227_DepthCameraDeviceId && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DepthCameraDeviceId = Reader.ReadElementString();

                        }

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraType, CsiDepthCameraV1.xsd:DepthCameraDeviceIndex, CsiDepthCameraV1.xsd:DepthCameraModel, CsiDepthCameraV1.xsd:DepthCameraUsbLocationPath, CsiDepthCameraV1.xsd:DepthCameraDeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraType, CsiDepthCameraV1.xsd:DepthCameraDeviceIndex, CsiDepthCameraV1.xsd:DepthCameraModel, CsiDepthCameraV1.xsd:DepthCameraUsbLocationPath, CsiDepthCameraV1.xsd:DepthCameraDeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations96, ref readerCount96);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraModel Read403_DepthCameraModel(string s) {

            switch (s) {

                case @"PMDPicoFlex": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraModel.@PMDPicoFlex;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraModel));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex Read402_DepthCameraDeviceIndex(string s) {

            switch (s) {

                case @"First": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex.@First;

                case @"Second": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex.@Second;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DepthCameraDeviceIndex));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType Read401_CameraTechType(string s) {

            switch (s) {

                case @"TimeOfFlight": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType.@TimeOfFlight;

                case @"StructuredLight": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType.@StructuredLight;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CameraTechType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraResponse Read396_DepthCameraResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations97 = 0;

            int readerCount97 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@ErrorCode = Read395_DepthCameraErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:ErrorCode, CsiDepthCameraV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:ErrorCode, CsiDepthCameraV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations97, ref readerCount97);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode Read395_DepthCameraErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode.@NONE;

                case @"COMMUNICATION_FAILURE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode.@COMMUNICATION_FAILURE;

                case @"UNKNOWN_DEVICE_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode.@UNKNOWN_DEVICE_ID;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesRequest Read400_GetDepthCameraDevicesRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id218_GetDepthCameraDevicesRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDevicesRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations98 = 0;

            int readerCount98 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations98, ref readerCount98);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusResponse Read399_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations99 = 0;

            int readerCount99 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id220_DepthCameraResponse && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@DepthCameraResponse = Read396_DepthCameraResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id228_Item && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        o.@DepthCameraDeviceStatusResponse = Read398_Item(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraResponse, CsiDepthCameraV1.xsd:DepthCameraDeviceStatusResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DepthCameraResponse, CsiDepthCameraV1.xsd:DepthCameraDeviceStatusResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations99, ref readerCount99);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatusResponse Read398_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id228_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatusResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations100 = 0;

            int readerCount100 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id230_DepthCameraDeviceStatus && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DepthCameraDeviceStatus = Read397_DepthCameraDeviceStatus(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DeviceId, CsiDepthCameraV1.xsd:DepthCameraDeviceStatus");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DeviceId, CsiDepthCameraV1.xsd:DepthCameraDeviceStatus");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations100, ref readerCount100);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus Read397_DepthCameraDeviceStatus(string s) {

            switch (s) {

                case @"OK": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus.@OK;

                case @"Failure": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus.@Failure;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceStatus));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusRequest Read394_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetDepthCameraDeviceStatusRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations101 = 0;

            int readerCount101 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations101, ref readerCount101);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceEvent Read393_DepthCameraDeviceEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id32_CsiDepthCameraV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DepthCameraDeviceEvent();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations102 = 0;

            int readerCount102 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id231_Description && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@Description = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id232_Severity && (object) Reader.NamespaceURI == (object)id32_CsiDepthCameraV1xsd)) {

                        {

                            o.@Severity = Read392_Severity(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DeviceId, CsiDepthCameraV1.xsd:Description, CsiDepthCameraV1.xsd:Severity");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDepthCameraV1.xsd:DeviceId, CsiDepthCameraV1.xsd:Description, CsiDepthCameraV1.xsd:Severity");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations102, ref readerCount102);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity Read392_Severity(string s) {

            switch (s) {

                case @"Info": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity.@Info;

                case @"Low": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity.@Low;

                case @"High": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity.@High;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Severity));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic Read391_CsiHaptic(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id29_CsiHaptic && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations103 = 0;

            int readerCount103 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id233_GetHapticDeviceStatusRequest && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@Item = Read378_GetHapticDeviceStatusRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id234_GetHapticDeviceStatusResponse && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@Item = Read383_GetHapticDeviceStatusResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id235_GetHapticDevicesRequest && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@Item = Read384_GetHapticDevicesRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id236_GetHapticDevicesResponse && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@Item = Read388_GetHapticDevicesResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id237_HapticDeviceEvent && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@Item = Read390_HapticDeviceEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:GetHapticDeviceStatusRequest, CsiHapticV1.xsd:GetHapticDeviceStatusResponse, CsiHapticV1.xsd:GetHapticDevicesRequest, CsiHapticV1.xsd:GetHapticDevicesResponse, CsiHapticV1.xsd:HapticDeviceEvent");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:GetHapticDeviceStatusRequest, CsiHapticV1.xsd:GetHapticDeviceStatusResponse, CsiHapticV1.xsd:GetHapticDevicesRequest, CsiHapticV1.xsd:GetHapticDevicesResponse, CsiHapticV1.xsd:HapticDeviceEvent");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations103, ref readerCount103);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEvent Read390_HapticDeviceEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEvent();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations104 = 0;

            int readerCount104 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id231_Description && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@Description = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id238_HapticDeviceEventSeverity && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@HapticDeviceEventSeverity = Read389_HapticDeviceEventSeverityLevel(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId, CsiHapticV1.xsd:Description, CsiHapticV1.xsd:HapticDeviceEventSeverity");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId, CsiHapticV1.xsd:Description, CsiHapticV1.xsd:HapticDeviceEventSeverity");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations104, ref readerCount104);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel Read389_HapticDeviceEventSeverityLevel(string s) {

            switch (s) {

                case @"Info": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel.@Info;

                case @"Low": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel.@Low;

                case @"High": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel.@High;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceEventSeverityLevel));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesResponse Read388_GetHapticDevicesResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesResponse();

            if ((object)(o.@HapticDevices) == null) o.@HapticDevices = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice>)o.@HapticDevices;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations105 = 0;

            int readerCount105 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id239_HapticResponse && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@HapticResponse = Read380_HapticResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id240_HapticDevices && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@HapticDevices) == null) o.@HapticDevices = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice>)o.@HapticDevices;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations106 = 0;

                                int readerCount106 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id241_HapticDevice && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read387_HapticDevice(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiHapticV1.xsd:HapticDevice");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiHapticV1.xsd:HapticDevice");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations106, ref readerCount106);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:HapticResponse, CsiHapticV1.xsd:HapticDevices");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:HapticResponse, CsiHapticV1.xsd:HapticDevices");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations105, ref readerCount105);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice Read387_HapticDevice(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id241_HapticDevice && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDevice();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations107 = 0;

            int readerCount107 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id242_HapticDeviceType && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@HapticDeviceType = Read385_HapticDeviceType(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id243_HapticDeviceLocation && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@HapticDeviceLocation = Read386_HapticDeviceLocation(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId, CsiHapticV1.xsd:HapticDeviceType, CsiHapticV1.xsd:HapticDeviceLocation");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId, CsiHapticV1.xsd:HapticDeviceType, CsiHapticV1.xsd:HapticDeviceLocation");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations107, ref readerCount107);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation Read386_HapticDeviceLocation(string s) {

            switch (s) {

                case @"MainMonitorTop": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorTop;

                case @"MainMonitorBottom": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorBottom;

                case @"MainMonitorLeft": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorLeft;

                case @"MainMonitorRight": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorRight;

                case @"MainMonitorTouchscreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@MainMonitorTouchscreen;

                case @"DPP": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation.@DPP;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceLocation));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType Read385_HapticDeviceType(string s) {

            switch (s) {

                case @"Ultrasonic": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType.@Ultrasonic;

                case @"Vibration": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType.@Vibration;

                case @"Mechanical": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType.@Mechanical;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticResponse Read380_HapticResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations108 = 0;

            int readerCount108 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@ErrorCode = Read379_HapticErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:ErrorCode, CsiHapticV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:ErrorCode, CsiHapticV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations108, ref readerCount108);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode Read379_HapticErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode.@NONE;

                case @"COMMUNICATION_FAILURE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode.@COMMUNICATION_FAILURE;

                case @"UNKNOWN_DEVICE_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode.@UNKNOWN_DEVICE_ID;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesRequest Read384_GetHapticDevicesRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id235_GetHapticDevicesRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDevicesRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations109 = 0;

            int readerCount109 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations109, ref readerCount109);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusResponse Read383_GetHapticDeviceStatusResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations110 = 0;

            int readerCount110 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id239_HapticResponse && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@HapticResponse = Read380_HapticResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id244_HapticDeviceStatusResponse && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        o.@HapticDeviceStatusResponse = Read382_HapticDeviceStatusResponse(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:HapticResponse, CsiHapticV1.xsd:HapticDeviceStatusResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:HapticResponse, CsiHapticV1.xsd:HapticDeviceStatusResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations110, ref readerCount110);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceStatusResponse Read382_HapticDeviceStatusResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id244_HapticDeviceStatusResponse && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HapticDeviceStatusResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations111 = 0;

            int readerCount111 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id245_HapticDeviceStatus && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@HapticDeviceStatus = Read381_HapticDeviceStatus(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId, CsiHapticV1.xsd:HapticDeviceStatus");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId, CsiHapticV1.xsd:HapticDeviceStatus");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations111, ref readerCount111);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus Read381_HapticDeviceStatus(string s) {

            switch (s) {

                case @"OK": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus.@OK;

                case @"Failure": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus.@Failure;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.HapticDeviceStatus));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusRequest Read378_GetHapticDeviceStatusRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id30_CsiHapticV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetHapticDeviceStatusRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations112 = 0;

            int readerCount112 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id30_CsiHapticV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiHapticV1.xsd:DeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations112, ref readerCount112);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper Read377_CsiVideoTopper(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id27_CsiVideoTopper && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations113 = 0;

            int readerCount113 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id246_CacheContentRequest && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read362_CacheContentRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id247_CacheContentResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read365_CacheContentResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id248_DeviceCapabilitiesRequest && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read366_DeviceCapabilitiesRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id249_DeviceCapabilitiesResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read370_DeviceCapabilitiesResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id250_PlayContentRequest && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read371_PlayContentRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id251_PlayContentResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read372_PlayContentResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id252_StopContentRequest && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read373_StopContentRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id253_StopContentResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read374_StopContentResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id254_VideoTopperContentEvent && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@Item = Read376_VideoTopperContentEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:CacheContentRequest, CsiVideoTopperV1.xsd:CacheContentResponse, CsiVideoTopperV1.xsd:DeviceCapabilitiesRequest, CsiVideoTopperV1.xsd:DeviceCapabilitiesResponse, CsiVideoTopperV1.xsd:PlayContentRequest, CsiVideoTopperV1.xsd:PlayContentResponse, CsiVideoTopperV1.xsd:StopContentRequest, CsiVideoTopperV1.xsd:StopContentResponse, CsiVideoTopperV1.xsd:VideoTopperContentEvent");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:CacheContentRequest, CsiVideoTopperV1.xsd:CacheContentResponse, CsiVideoTopperV1.xsd:DeviceCapabilitiesRequest, CsiVideoTopperV1.xsd:DeviceCapabilitiesResponse, CsiVideoTopperV1.xsd:PlayContentRequest, CsiVideoTopperV1.xsd:PlayContentResponse, CsiVideoTopperV1.xsd:StopContentRequest, CsiVideoTopperV1.xsd:StopContentResponse, CsiVideoTopperV1.xsd:VideoTopperContentEvent");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations113, ref readerCount113);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperContentEvent Read376_VideoTopperContentEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperContentEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperContentEvent();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations114 = 0;

            int readerCount114 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id255_Event && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@Event = Read375_ContentEvent(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id256_ContentKey && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ContentKey = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id257_EventMessage && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@EventMessage = Reader.ReadElementString();

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:Event, CsiVideoTopperV1.xsd:ContentKey, CsiVideoTopperV1.xsd:EventMessage");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:Event, CsiVideoTopperV1.xsd:ContentKey, CsiVideoTopperV1.xsd:EventMessage");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations114, ref readerCount114);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent Read375_ContentEvent(string s) {

            switch (s) {

                case @"CONTENT_STARTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent.@CONTENT_STARTED;

                case @"CONTENT_STOPPED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent.@CONTENT_STOPPED;

                case @"CONTENT_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent.@CONTENT_ERROR;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ContentEvent));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentResponse Read374_StopContentResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations115 = 0;

            int readerCount115 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id258_VideoTopperResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@VideoTopperResponse = Read364_VideoTopperResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations115, ref readerCount115);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse Read364_VideoTopperResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations116 = 0;

            int readerCount116 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ErrorCode = Read363_VideoTopperErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ErrorCode, CsiVideoTopperV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ErrorCode, CsiVideoTopperV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations116, ref readerCount116);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode Read363_VideoTopperErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@NONE;

                case @"CONTENT_PATH_DOES_NOT_EXIST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@CONTENT_PATH_DOES_NOT_EXIST;

                case @"CONTENT_KEY_DOES_NOT_EXIST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@CONTENT_KEY_DOES_NOT_EXIST;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"VIDEO_TOPPER_DRIVER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@VIDEO_TOPPER_DRIVER_ERROR;

                case @"OTHER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode.@OTHER_ERROR;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentRequest Read373_StopContentRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopContentRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations117 = 0;

            int readerCount117 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id256_ContentKey && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ContentKey = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ContentKey");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ContentKey");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations117, ref readerCount117);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentResponse Read372_PlayContentResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations118 = 0;

            int readerCount118 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id258_VideoTopperResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@VideoTopperResponse = Read364_VideoTopperResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id256_ContentKey && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ContentKey = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse, CsiVideoTopperV1.xsd:ContentKey");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse, CsiVideoTopperV1.xsd:ContentKey");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations118, ref readerCount118);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentRequest Read371_PlayContentRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayContentRequest();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations119 = 0;

            int readerCount119 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id259_ContentPath && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ContentPath = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id260_SeekTime && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@SeekTime = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id261_LoopVideo && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@LoopVideo = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id262_ImageDuration && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ImageDuration = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id263_PlayCount && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@PlayCountSpecified = true;

                        {

                            o.@PlayCount = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ContentPath, CsiVideoTopperV1.xsd:SeekTime, CsiVideoTopperV1.xsd:LoopVideo, CsiVideoTopperV1.xsd:ImageDuration, CsiVideoTopperV1.xsd:PlayCount");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ContentPath, CsiVideoTopperV1.xsd:SeekTime, CsiVideoTopperV1.xsd:LoopVideo, CsiVideoTopperV1.xsd:ImageDuration, CsiVideoTopperV1.xsd:PlayCount");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations119, ref readerCount119);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponse Read370_DeviceCapabilitiesResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponse();

            if ((object)(o.@SupportedMedia) == null) o.@SupportedMedia = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia> a_2 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia>)o.@SupportedMedia;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations120 = 0;

            int readerCount120 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id258_VideoTopperResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@VideoTopperResponse = Read364_VideoTopperResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id264_VideoTopperResolution && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@VideoTopperResolution = Read367_Item(false, true);

                        paramsRead[1] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id265_SupportedMedia && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        if ((object)(a_2) == null) Reader.Skip(); else a_2.Add(Read368_Item(false, true));

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id266_SupportsPortals && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        if (Reader.IsEmptyElement) {

                            Reader.Skip();

                        }

                        else {

                            o.@SupportsPortals = Read369_VideoTopperPortalSupport(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse, CsiVideoTopperV1.xsd:VideoTopperResolution, CsiVideoTopperV1.xsd:SupportedMedia, CsiVideoTopperV1.xsd:SupportsPortals");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse, CsiVideoTopperV1.xsd:VideoTopperResolution, CsiVideoTopperV1.xsd:SupportedMedia, CsiVideoTopperV1.xsd:SupportsPortals");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations120, ref readerCount120);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport Read369_VideoTopperPortalSupport(string s) {

            switch (s) {

                case @"VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport.@VIDEO_TOPPER_PORTAL_SUPPORT_UNKNOWN;

                case @"VIDEO_TOPPER_PORTALS_SUPPORTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport.@VIDEO_TOPPER_PORTALS_SUPPORTED;

                case @"VIDEO_TOPPER_PORTALS_UNSUPPORTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport.@VIDEO_TOPPER_PORTALS_UNSUPPORTED;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VideoTopperPortalSupport));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia Read368_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseSupportedMedia();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id267_MimeType && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                    o.@MimeType = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id268_FileExtension && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                    o.@FileExtension = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:MimeType, CsiVideoTopperV1.xsd:FileExtension");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations121 = 0;

            int readerCount121 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations121, ref readerCount121);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseVideoTopperResolution Read367_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseVideoTopperResolution o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesResponseVideoTopperResolution();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id185_Width && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                    o.@Width = System.Xml.XmlConvert.ToUInt32(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id186_Height && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                    o.@Height = System.Xml.XmlConvert.ToUInt32(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:Width, CsiVideoTopperV1.xsd:Height");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations122 = 0;

            int readerCount122 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations122, ref readerCount122);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesRequest Read366_DeviceCapabilitiesRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id248_DeviceCapabilitiesRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceCapabilitiesRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations123 = 0;

            int readerCount123 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations123, ref readerCount123);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentResponse Read365_CacheContentResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations124 = 0;

            int readerCount124 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id258_VideoTopperResponse && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        o.@VideoTopperResponse = Read364_VideoTopperResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:VideoTopperResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations124, ref readerCount124);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentRequest Read362_CacheContentRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id28_CsiVideoTopperV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CacheContentRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations125 = 0;

            int readerCount125 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id259_ContentPath && (object) Reader.NamespaceURI == (object)id28_CsiVideoTopperV1xsd)) {

                        {

                            o.@ContentPath = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ContentPath");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiVideoTopperV1.xsd:ContentPath");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations125, ref readerCount125);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor Read361_CsiMonitor(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id25_CsiMonitor && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations126 = 0;

            int readerCount126 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id269_DisableStereoscopyRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read328_DisableStereoscopyRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id270_DisableStereoscopyResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read331_DisableStereoscopyResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id271_EnableStereoscopyRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read332_EnableStereoscopyRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id272_EnableStereoscopyResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read333_EnableStereoscopyResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id273_GetConfigurationRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read334_GetConfigurationRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id274_GetConfigurationResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read348_GetConfigurationResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id275_GetCurrentColorProfileRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read349_GetCurrentColorProfileRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id276_GetCurrentColorProfileResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read350_GetCurrentColorProfileResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id277_GetPreferredUIDisplayRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read351_GetPreferredUIDisplayRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id278_GetPreferredUIDisplayResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read352_GetPreferredUIDisplayResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id279_GetStereoscopyStateRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read353_GetStereoscopyStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id280_GetStereoscopyStateResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read355_GetStereoscopyStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id281_SetColorProfileRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read356_SetColorProfileRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id282_SetColorProfileResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read357_SetColorProfileResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id283_SetTransmissiveSupportRequest && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read359_SetTransmissiveSupportRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id284_SetTransmissiveSupportResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Item = Read360_SetTransmissiveSupportResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DisableStereoscopyRequest, CsiMonitorV1.xsd:DisableStereoscopyResponse, CsiMonitorV1.xsd:EnableStereoscopyRequest, CsiMonitorV1.xsd:EnableStereoscopyResponse, CsiMonitorV1.xsd:GetConfigurationRequest, CsiMonitorV1.xsd:GetConfigurationResponse, CsiMonitorV1.xsd:GetCurrentColorProfileRequest, CsiMonitorV1.xsd:GetCurrentColorProfileResponse, CsiMonitorV1.xsd:GetPreferredUIDisplayRequest, CsiMonitorV1.xsd:GetPreferredUIDisplayResponse, CsiMonitorV1.xsd:GetStereoscopyStateRequest, CsiMonitorV1.xsd:GetStereoscopyStateResponse, CsiMonitorV1.xsd:SetColorProfileRequest, CsiMonitorV1.xsd:SetColorProfileResponse, CsiMonitorV1.xsd:SetTransmissiveSupportRequest, CsiMonitorV1.xsd:SetTransmissiveSupportResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DisableStereoscopyRequest, CsiMonitorV1.xsd:DisableStereoscopyResponse, CsiMonitorV1.xsd:EnableStereoscopyRequest, CsiMonitorV1.xsd:EnableStereoscopyResponse, CsiMonitorV1.xsd:GetConfigurationRequest, CsiMonitorV1.xsd:GetConfigurationResponse, CsiMonitorV1.xsd:GetCurrentColorProfileRequest, CsiMonitorV1.xsd:GetCurrentColorProfileResponse, CsiMonitorV1.xsd:GetPreferredUIDisplayRequest, CsiMonitorV1.xsd:GetPreferredUIDisplayResponse, CsiMonitorV1.xsd:GetStereoscopyStateRequest, CsiMonitorV1.xsd:GetStereoscopyStateResponse, CsiMonitorV1.xsd:SetColorProfileRequest, CsiMonitorV1.xsd:SetColorProfileResponse, CsiMonitorV1.xsd:SetTransmissiveSupportRequest, CsiMonitorV1.xsd:SetTransmissiveSupportResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations126, ref readerCount126);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportResponse Read360_SetTransmissiveSupportResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations127 = 0;

            int readerCount127 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations127, ref readerCount127);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse Read330_MonitorResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations128 = 0;

            int readerCount128 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@ErrorCode = Read329_MonitorErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:ErrorCode, CsiMonitorV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:ErrorCode, CsiMonitorV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations128, ref readerCount128);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode Read329_MonitorErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@NONE;

                case @"INVALID_MONITOR_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@INVALID_MONITOR_ID;

                case @"COLOR_PROFILE_NOT_SUPPORTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@COLOR_PROFILE_NOT_SUPPORTED;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"OPERATION_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@OPERATION_FAILED;

                case @"MONITOR_IS_NOT_STEREOSCOPIC": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@MONITOR_IS_NOT_STEREOSCOPIC;

                case @"MONITOR_IS_NOT_TRANSMISSIVE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@MONITOR_IS_NOT_TRANSMISSIVE;

                case @"INCORRECT_ASPECT_RATIO": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode.@INCORRECT_ASPECT_RATIO;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportRequest Read359_SetTransmissiveSupportRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetTransmissiveSupportRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations129 = 0;

            int readerCount129 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id286_Support && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Support = Read358_TransmissiveSupport(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:Support");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:Support");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations129, ref readerCount129);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport Read358_TransmissiveSupport(string s) {

            switch (s) {

                case @"None": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@None;

                case @"Widescreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@Widescreen;

                case @"Portrait": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@Portrait;

                case @"WidescreenAndPortrait": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport.@WidescreenAndPortrait;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TransmissiveSupport));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileResponse Read357_SetColorProfileResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations130 = 0;

            int readerCount130 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations130, ref readerCount130);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileRequest Read356_SetColorProfileRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorProfileRequest();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations131 = 0;

            int readerCount131 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id287_ColorProfile && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@ColorProfile = Read341_ColorProfile(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id288_ProfilePath && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@ProfilePath = Reader.ReadElementString();

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:ColorProfile, CsiMonitorV1.xsd:ProfilePath");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:ColorProfile, CsiMonitorV1.xsd:ProfilePath");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations131, ref readerCount131);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile Read341_ColorProfile(string s) {

            switch (s) {

                case @"None": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@None;

                case @"Custom": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@Custom;

                case @"ColorMatch": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@ColorMatch;

                case @"Calibrated": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile.@Calibrated;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateResponse Read355_GetStereoscopyStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations132 = 0;

            int readerCount132 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id104_State && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@State = Read354_StereoscopyState(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:State, CsiMonitorV1.xsd:MonitorResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:State, CsiMonitorV1.xsd:MonitorResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations132, ref readerCount132);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState Read354_StereoscopyState(string s) {

            switch (s) {

                case @"DISABLED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState.@DISABLED;

                case @"ENABLED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState.@ENABLED;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopyState));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateRequest Read353_GetStereoscopyStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetStereoscopyStateRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations133 = 0;

            int readerCount133 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations133, ref readerCount133);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayResponse Read352_GetPreferredUIDisplayResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations134 = 0;

            int readerCount134 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id289_Role && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Role = Read336_MonitorRole(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:Role, CsiMonitorV1.xsd:MonitorResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:Role, CsiMonitorV1.xsd:MonitorResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations134, ref readerCount134);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole Read336_MonitorRole(string s) {

            switch (s) {

                case @"Main": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@Main;

                case @"Top": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@Top;

                case @"BellyGlass": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@BellyGlass;

                case @"ButtonPanel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@ButtonPanel;

                case @"Topper": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@Topper;

                case @"VideoWall": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole.@VideoWall;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorRole));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayRequest Read351_GetPreferredUIDisplayRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id277_GetPreferredUIDisplayRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetPreferredUIDisplayRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations135 = 0;

            int readerCount135 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations135, ref readerCount135);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileResponse Read350_GetCurrentColorProfileResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileResponse();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations136 = 0;

            int readerCount136 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id287_ColorProfile && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@ColorProfile = Read341_ColorProfile(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id288_ProfilePath && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@ProfilePath = Reader.ReadElementString();

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse, CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:ColorProfile, CsiMonitorV1.xsd:ProfilePath");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse, CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:ColorProfile, CsiMonitorV1.xsd:ProfilePath");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations136, ref readerCount136);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileRequest Read349_GetCurrentColorProfileRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCurrentColorProfileRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations137 = 0;

            int readerCount137 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations137, ref readerCount137);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationResponse Read348_GetConfigurationResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationResponse();

            if ((object)(o.@MonitorConfiguration) == null) o.@MonitorConfiguration = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor> a_2 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor>)o.@MonitorConfiguration;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations138 = 0;

            int readerCount138 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id290_Desktop && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Desktop = Read335_DesktopRectangle(false, true);

                        paramsRead[1] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id291_MonitorConfiguration && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@MonitorConfiguration) == null) o.@MonitorConfiguration = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor> a_2_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor>)o.@MonitorConfiguration;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations139 = 0;

                                int readerCount139 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id292_Monitor && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                                            if ((object)(a_2_0) == null) Reader.Skip(); else a_2_0.Add(Read347_Monitor(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiMonitorV1.xsd:Monitor");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiMonitorV1.xsd:Monitor");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations139, ref readerCount139);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse, CsiMonitorV1.xsd:Desktop, CsiMonitorV1.xsd:MonitorConfiguration");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse, CsiMonitorV1.xsd:Desktop, CsiMonitorV1.xsd:MonitorConfiguration");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations138, ref readerCount138);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor Read347_Monitor(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id292_Monitor && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Monitor();

            if ((object)(o.@AdditionalLayers) == null) o.@AdditionalLayers = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset> a_8 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset>)o.@AdditionalLayers;

            if ((object)(o.@AvailableColorProfiles) == null) o.@AvailableColorProfiles = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile> a_10 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile>)o.@AvailableColorProfiles;

            bool[] paramsRead = new bool[13];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations140 = 0;

            int readerCount140 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id289_Role && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Role = Read336_MonitorRole(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id293_Style && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Style = Read337_MonitorStyle(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id294_Aspect && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Aspect = Read338_MonitorAspect(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id295_Model && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@Model = Read339_MonitorModel(false, true);

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id296_DesktopCoordinates && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@DesktopCoordinates = Read335_DesktopRectangle(false, true);

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id297_VirtualX && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@VirtualX = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[6] = true;

                    }

                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id298_VirtualY && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@VirtualY = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[7] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id299_AdditionalLayers && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@AdditionalLayers) == null) o.@AdditionalLayers = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset> a_8_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset>)o.@AdditionalLayers;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations141 = 0;

                                int readerCount141 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id300_LayerOffset && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                                            if ((object)(a_8_0) == null) Reader.Skip(); else a_8_0.Add(Read340_LayerOffset(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiMonitorV1.xsd:LayerOffset");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiMonitorV1.xsd:LayerOffset");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations141, ref readerCount141);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id301_ColorProfileId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@ColorProfileId = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[9] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id302_AvailableColorProfiles && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@AvailableColorProfiles) == null) o.@AvailableColorProfiles = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile> a_10_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ColorProfile>)o.@AvailableColorProfiles;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations142 = 0;

                                int readerCount142 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id287_ColorProfile && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                                            {

                                                a_10_0.Add(Read341_ColorProfile(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiMonitorV1.xsd:ColorProfile");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiMonitorV1.xsd:ColorProfile");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations142, ref readerCount142);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else if (!paramsRead[11] && ((object) Reader.LocalName == (object)id303_StereoscopicSettings && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@StereoscopicSettings = Read344_StereoscopicSettings(false, true);

                        paramsRead[11] = true;

                    }

                    else if (!paramsRead[12] && ((object) Reader.LocalName == (object)id304_ParentGpu && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@ParentGpu = Read346_Gpu(false, true);

                        paramsRead[12] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:Role, CsiMonitorV1.xsd:Style, CsiMonitorV1.xsd:Aspect, CsiMonitorV1.xsd:Model, CsiMonitorV1.xsd:DesktopCoordinates, CsiMonitorV1.xsd:VirtualX, CsiMonitorV1.xsd:VirtualY, CsiMonitorV1.xsd:AdditionalLayers, CsiMonitorV1.xsd:ColorProfileId, CsiMonitorV1.xsd:AvailableColorProfiles, CsiMonitorV1.xsd:StereoscopicSettings, CsiMonitorV1.xsd:ParentGpu");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId, CsiMonitorV1.xsd:Role, CsiMonitorV1.xsd:Style, CsiMonitorV1.xsd:Aspect, CsiMonitorV1.xsd:Model, CsiMonitorV1.xsd:DesktopCoordinates, CsiMonitorV1.xsd:VirtualX, CsiMonitorV1.xsd:VirtualY, CsiMonitorV1.xsd:AdditionalLayers, CsiMonitorV1.xsd:ColorProfileId, CsiMonitorV1.xsd:AvailableColorProfiles, CsiMonitorV1.xsd:StereoscopicSettings, CsiMonitorV1.xsd:ParentGpu");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations140, ref readerCount140);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Gpu Read346_Gpu(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id305_Gpu && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Gpu o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Gpu();

            bool[] paramsRead = new bool[7];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations143 = 0;

            int readerCount143 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id306_Vendor && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Vendor = Read345_GpuVendor(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id307_UniqueIdentifier && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@UniqueIdentifier = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id308_VendorIdentifier && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@VendorIdentifier = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id309_DeviceIdentifier && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceIdentifier = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id310_SubSystemIdentifier && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@SubSystemIdentifier = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id311_RevisionIdentifier && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@RevisionIdentifier = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id312_PrimaryAdapter && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@PrimaryAdapter = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[6] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:Vendor, CsiMonitorV1.xsd:UniqueIdentifier, CsiMonitorV1.xsd:VendorIdentifier, CsiMonitorV1.xsd:DeviceIdentifier, CsiMonitorV1.xsd:SubSystemIdentifier, CsiMonitorV1.xsd:RevisionIdentifier, CsiMonitorV1.xsd:PrimaryAdapter");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:Vendor, CsiMonitorV1.xsd:UniqueIdentifier, CsiMonitorV1.xsd:VendorIdentifier, CsiMonitorV1.xsd:DeviceIdentifier, CsiMonitorV1.xsd:SubSystemIdentifier, CsiMonitorV1.xsd:RevisionIdentifier, CsiMonitorV1.xsd:PrimaryAdapter");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations143, ref readerCount143);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor Read345_GpuVendor(string s) {

            switch (s) {

                case @"AMD": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@AMD;

                case @"Intel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@Intel;

                case @"nVidia": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@nVidia;

                case @"Unknown": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor.@Unknown;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GpuVendor));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicSettings Read344_StereoscopicSettings(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id303_StereoscopicSettings && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id313_CsiDisplayTypesV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicSettings o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicSettings();

            if ((object)(o.@Frames) == null) o.@Frames = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame> a_2 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame>)o.@Frames;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations144 = 0;

            int readerCount144 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id314_Technology && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@Technology = Read342_StereoscopicTechnology(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id315_Format && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@Format = Read343_StereoscopicFormat(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id316_Frames && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        if ((object)(a_2) == null) Reader.Skip(); else a_2.Add(Read175_StereoscopicFrame(false, true));

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id231_Description && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@Description = Reader.ReadElementString();

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDisplayTypesV1.xsd:Technology, CsiDisplayTypesV1.xsd:Format, CsiDisplayTypesV1.xsd:Frames, CsiDisplayTypesV1.xsd:Description");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDisplayTypesV1.xsd:Technology, CsiDisplayTypesV1.xsd:Format, CsiDisplayTypesV1.xsd:Frames, CsiDisplayTypesV1.xsd:Description");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations144, ref readerCount144);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame Read175_StereoscopicFrame(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id317_StereoscopicFrame && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id313_CsiDisplayTypesV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations145 = 0;

            int readerCount145 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id170_Type && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@Type = Read174_StereoscopicFrameType(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id191_X && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@X = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id192_Y && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@Y = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id185_Width && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@Width = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id186_Height && (object) Reader.NamespaceURI == (object)id313_CsiDisplayTypesV1xsd)) {

                        {

                            o.@Height = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiDisplayTypesV1.xsd:Type, CsiDisplayTypesV1.xsd:X, CsiDisplayTypesV1.xsd:Y, CsiDisplayTypesV1.xsd:Width, CsiDisplayTypesV1.xsd:Height");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiDisplayTypesV1.xsd:Type, CsiDisplayTypesV1.xsd:X, CsiDisplayTypesV1.xsd:Y, CsiDisplayTypesV1.xsd:Width, CsiDisplayTypesV1.xsd:Height");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations145, ref readerCount145);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType Read174_StereoscopicFrameType(string s) {

            switch (s) {

                case @"UNUSED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType.@UNUSED;

                case @"LEFT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType.@LEFT;

                case @"RIGHT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType.@RIGHT;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat Read343_StereoscopicFormat(string s) {

            switch (s) {

                case @"SIDE_BY_SIDE_VERTICAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@SIDE_BY_SIDE_VERTICAL;

                case @"SIDE_BY_SIDE_HORIZONTAL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@SIDE_BY_SIDE_HORIZONTAL;

                case @"FRAME_PACKING": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@FRAME_PACKING;

                case @"INTERLACED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat.@INTERLACED;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFormat));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology Read342_StereoscopicTechnology(string s) {

            switch (s) {

                case @"UNSUPPORTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@UNSUPPORTED;

                case @"AUTOSTEREOSCOPY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@AUTOSTEREOSCOPY;

                case @"HOLOGRAPHY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@HOLOGRAPHY;

                case @"VOLUMETRIC": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology.@VOLUMETRIC;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicTechnology));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset Read340_LayerOffset(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id300_LayerOffset && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.LayerOffset();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations146 = 0;

            int readerCount146 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id318_OffsetX && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@OffsetX = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id319_OffsetY && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@OffsetY = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:OffsetX, CsiMonitorV1.xsd:OffsetY");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:OffsetX, CsiMonitorV1.xsd:OffsetY");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations146, ref readerCount146);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle Read335_DesktopRectangle(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id320_DesktopRectangle && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations147 = 0;

            int readerCount147 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id321_x && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@x = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id322_y && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@y = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id323_w && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@w = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id324_h && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@h = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:x, CsiMonitorV1.xsd:y, CsiMonitorV1.xsd:w, CsiMonitorV1.xsd:h");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:x, CsiMonitorV1.xsd:y, CsiMonitorV1.xsd:w, CsiMonitorV1.xsd:h");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations147, ref readerCount147);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorModel Read339_MonitorModel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id325_MonitorModel && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorModel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorModel();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations148 = 0;

            int readerCount148 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id326_Manufacturer && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Manufacturer = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id295_Model && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Model = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id327_Version && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@Version = Reader.ReadElementString();

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:Manufacturer, CsiMonitorV1.xsd:Model, CsiMonitorV1.xsd:Version");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:Manufacturer, CsiMonitorV1.xsd:Model, CsiMonitorV1.xsd:Version");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations148, ref readerCount148);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect Read338_MonitorAspect(string s) {

            switch (s) {

                case @"Standard": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Standard;

                case @"Widescreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Widescreen;

                case @"Ultrawide": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Ultrawide;

                case @"Portrait": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect.@Portrait;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorAspect));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle Read337_MonitorStyle(string s) {

            switch (s) {

                case @"Normal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@Normal;

                case @"RoundTop": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@RoundTop;

                case @"PureDepth": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@PureDepth;

                case @"ExtendedTouchscreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@ExtendedTouchscreen;

                case @"Stereoscopic": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@Stereoscopic;

                case @"Transmissive": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle.@Transmissive;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.MonitorStyle));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationRequest Read334_GetConfigurationRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id273_GetConfigurationRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetConfigurationRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations149 = 0;

            int readerCount149 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations149, ref readerCount149);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyResponse Read333_EnableStereoscopyResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations150 = 0;

            int readerCount150 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations150, ref readerCount150);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyRequest Read332_EnableStereoscopyRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EnableStereoscopyRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations151 = 0;

            int readerCount151 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations151, ref readerCount151);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyResponse Read331_DisableStereoscopyResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations152 = 0;

            int readerCount152 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id285_MonitorResponse && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        o.@MonitorResponse = Read330_MonitorResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:MonitorResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations152, ref readerCount152);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyRequest Read328_DisableStereoscopyRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id26_CsiMonitorV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DisableStereoscopyRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations153 = 0;

            int readerCount153 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id26_CsiMonitorV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiMonitorV1.xsd:DeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations153, ref readerCount153);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness Read327_CsiReadiness(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id23_CsiReadiness && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations154 = 0;

            int readerCount154 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id328_GetReadyStateRequest && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@Item = Read315_GetReadyStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id329_GetReadyStateResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@Item = Read320_GetReadyStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id330_ReadyStateNotificationEvent && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@Item = Read321_ReadyStateNotificationEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id331_ReadyStateSubscriptionRequest && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@Item = Read323_ReadyStateSubscriptionRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id332_ReadyStateSubscriptionResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@Item = Read324_ReadyStateSubscriptionResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id333_SetReadyStateRequest && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@Item = Read325_SetReadyStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id334_SetReadyStateResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@Item = Read326_SetReadyStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReadinessV1.xsd:GetReadyStateRequest, CsiReadinessV1.xsd:GetReadyStateResponse, CsiReadinessV1.xsd:ReadyStateNotificationEvent, CsiReadinessV1.xsd:ReadyStateSubscriptionRequest, CsiReadinessV1.xsd:ReadyStateSubscriptionResponse, CsiReadinessV1.xsd:SetReadyStateRequest, CsiReadinessV1.xsd:SetReadyStateResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReadinessV1.xsd:GetReadyStateRequest, CsiReadinessV1.xsd:GetReadyStateResponse, CsiReadinessV1.xsd:ReadyStateNotificationEvent, CsiReadinessV1.xsd:ReadyStateSubscriptionRequest, CsiReadinessV1.xsd:ReadyStateSubscriptionResponse, CsiReadinessV1.xsd:SetReadyStateRequest, CsiReadinessV1.xsd:SetReadyStateResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations154, ref readerCount154);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateResponse Read326_SetReadyStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations155 = 0;

            int readerCount155 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id335_ReadinessResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@ReadinessResponse = Read317_ReadinessResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadinessResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadinessResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations155, ref readerCount155);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse Read317_ReadinessResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations156 = 0;

            int readerCount156 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        {

                            o.@ErrorCode = Read316_ReadinessErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReadinessV1.xsd:ErrorCode, CsiReadinessV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReadinessV1.xsd:ErrorCode, CsiReadinessV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations156, ref readerCount156);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode Read316_ReadinessErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode.@NONE;

                case @"UNKNOWN_CLIENT_IDENTIFIER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode.@UNKNOWN_CLIENT_IDENTIFIER;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadinessErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateRequest Read325_SetReadyStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetReadyStateRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id336_ReadyState && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@ReadyState = Read318_ReadyState(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":ReadyState");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations157 = 0;

            int readerCount157 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations157, ref readerCount157);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState Read318_ReadyState(string s) {

            switch (s) {

                case @"NotReadyForDisplay": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState.@NotReadyForDisplay;

                case @"ReadyForDisplay": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState.@ReadyForDisplay;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReadyState));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionResponse Read324_ReadyStateSubscriptionResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations158 = 0;

            int readerCount158 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id335_ReadinessResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@ReadinessResponse = Read317_ReadinessResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadinessResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadinessResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations158, ref readerCount158);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionRequest Read323_ReadyStateSubscriptionRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateSubscriptionRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id337_ClientPriority && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@ClientPriority = Read89_Priority(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id338_Subscription && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@Subscription = Read322_SubscriptionStatus(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":ClientPriority, :Subscription");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations159 = 0;

            int readerCount159 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations159, ref readerCount159);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus Read322_SubscriptionStatus(string s) {

            switch (s) {

                case @"Unsubscribe": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus.@Unsubscribe;

                case @"Subscribe": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus.@Subscribe;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SubscriptionStatus));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority Read89_Priority(string s) {

            switch (s) {

                case @"DebugDisplay": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@DebugDisplay;

                case @"SystemPrompt": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SystemPrompt;

                case @"Doors": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Doors;

                case @"TicketPrompt": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@TicketPrompt;

                case @"Tilt": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Tilt;

                case @"BillInAd": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@BillInAd;

                case @"Portal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Portal;

                case @"AttendantMenu": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@AttendantMenu;

                case @"FeaturePortal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@FeaturePortal;

                case @"PlayerPrompt": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@PlayerPrompt;

                case @"SyncSation": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SyncSation;

                case @"SystemExtension": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SystemExtension;

                case @"MainMenu": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@MainMenu;

                case @"GamePortal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@GamePortal;

                case @"Game": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@Game;

                case @"GlassPortal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@GlassPortal;

                case @"SystemTopGlass": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@SystemTopGlass;

                case @"DeviceEmulator": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority.@DeviceEmulator;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Priority));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateNotificationEvent Read321_ReadyStateNotificationEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateNotificationEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateNotificationEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations160 = 0;

            int readerCount160 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id339_ReadyStateResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@ReadyStateResponse = Read319_ReadyStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadyStateResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadyStateResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations160, ref readerCount160);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse Read319_ReadyStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id339_ReadyStateResponse && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id337_ClientPriority && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@ClientPriority = Read89_Priority(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id340_ClientIdentifier && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@ClientIdentifier = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id336_ReadyState && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@ReadyState = Read318_ReadyState(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":ClientPriority, :ClientIdentifier, :ReadyState");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations161 = 0;

            int readerCount161 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations161, ref readerCount161);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateResponse Read320_GetReadyStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateResponse();

            if ((object)(o.@ReadyStateResponse) == null) o.@ReadyStateResponse = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReadyStateResponse>)o.@ReadyStateResponse;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations162 = 0;

            int readerCount162 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id335_ReadinessResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        o.@ReadinessResponse = Read317_ReadinessResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id339_ReadyStateResponse && (object) Reader.NamespaceURI == (object)id24_CsiReadinessV1xsd)) {

                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read319_ReadyStateResponse(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadinessResponse, CsiReadinessV1.xsd:ReadyStateResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReadinessV1.xsd:ReadinessResponse, CsiReadinessV1.xsd:ReadyStateResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations162, ref readerCount162);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateRequest Read315_GetReadyStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id24_CsiReadinessV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReadyStateRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id337_ClientPriority && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@ClientPriority = Read89_Priority(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id340_ClientIdentifier && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@ClientIdentifier = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":ClientPriority, :ClientIdentifier");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations163 = 0;

            int readerCount163 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations163, ref readerCount163);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen Read314_CsiTouchScreen(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id21_CsiTouchScreen && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations164 = 0;

            int readerCount164 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id341_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read295_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id342_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read298_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id343_GetTouchScreenInfoRequest && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read299_GetTouchScreenInfoRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id344_GetTouchScreenInfoResponse && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read301_GetTouchScreenInfoResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id345_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read302_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id346_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read303_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id347_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read304_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id348_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read306_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id349_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read307_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id350_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read308_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id351_TouchCalibrationCompleteEvent && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read309_TouchCalibrationCompleteEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id352_TouchDisplayTargetEvent && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read310_TouchDisplayTargetEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id353_Item && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read312_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id354_TouchScreenInfoEvent && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Item = Read313_TouchScreenInfoEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:DPPDigitizerDebounceIntervalResponse, CsiTouchScreenV1.xsd:DigitizerDebounceIntervalResponse, CsiTouchScreenV1.xsd:GetTouchScreenInfoRequest, CsiTouchScreenV1.xsd:GetTouchScreenInfoResponse, CsiTouchScreenV1.xsd:RequestMinimumDigitizerDebounceIntervalForDPP, CsiTouchScreenV1.xsd:ResetDigitizerDebounceIntervalForDPP, CsiTouchScreenV1.xsd:ResetDigitizerDebounceIntervalRequest, CsiTouchScreenV1.xsd:SetDigitizerExclusiveModeRequest, CsiTouchScreenV1.xsd:SetDigitizerExclusiveModeResponse, CsiTouchScreenV1.xsd:SetDigitizerToMinimumDebounceIntervalRequest, CsiTouchScreenV1.xsd:TouchCalibrationCompleteEvent, CsiTouchScreenV1.xsd:TouchDisplayTargetEvent, CsiTouchScreenV1.xsd:TouchScreenConnectionChangedEvent, CsiTouchScreenV1.xsd:TouchScreenInfoEvent");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:DPPDigitizerDebounceIntervalResponse, CsiTouchScreenV1.xsd:DigitizerDebounceIntervalResponse, CsiTouchScreenV1.xsd:GetTouchScreenInfoRequest, CsiTouchScreenV1.xsd:GetTouchScreenInfoResponse, CsiTouchScreenV1.xsd:RequestMinimumDigitizerDebounceIntervalForDPP, CsiTouchScreenV1.xsd:ResetDigitizerDebounceIntervalForDPP, CsiTouchScreenV1.xsd:ResetDigitizerDebounceIntervalRequest, CsiTouchScreenV1.xsd:SetDigitizerExclusiveModeRequest, CsiTouchScreenV1.xsd:SetDigitizerExclusiveModeResponse, CsiTouchScreenV1.xsd:SetDigitizerToMinimumDebounceIntervalRequest, CsiTouchScreenV1.xsd:TouchCalibrationCompleteEvent, CsiTouchScreenV1.xsd:TouchDisplayTargetEvent, CsiTouchScreenV1.xsd:TouchScreenConnectionChangedEvent, CsiTouchScreenV1.xsd:TouchScreenInfoEvent");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations164, ref readerCount164);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenInfoEvent Read313_TouchScreenInfoEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenInfoEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenInfoEvent();

            if ((object)(o.@TouchScreens) == null) o.@TouchScreens = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)o.@TouchScreens;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations165 = 0;

            int readerCount165 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id355_TouchScreens && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@TouchScreens) == null) o.@TouchScreens = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)o.@TouchScreens;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations166 = 0;

                                int readerCount166 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id356_TouchScreenInfo && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read300_TouchScreenInfo(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiTouchScreenV1.xsd:TouchScreenInfo");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiTouchScreenV1.xsd:TouchScreenInfo");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations166, ref readerCount166);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreens");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreens");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations165, ref readerCount165);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo Read300_TouchScreenInfo(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id356_TouchScreenInfo && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations167 = 0;

            int readerCount167 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id357_driverSubClass && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@driverSubClass = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id358_driver && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@driver = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id359_deviceId && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@deviceId = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id360_display && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@display = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:driverSubClass, CsiTouchScreenV1.xsd:driver, CsiTouchScreenV1.xsd:deviceId, CsiTouchScreenV1.xsd:display");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:driverSubClass, CsiTouchScreenV1.xsd:driver, CsiTouchScreenV1.xsd:deviceId, CsiTouchScreenV1.xsd:display");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations167, ref readerCount167);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenConnectionChangedEvent Read312_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenConnectionChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenConnectionChangedEvent();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id359_deviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@deviceId = System.Xml.XmlConvert.ToUInt32(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id358_driver && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@driver = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id357_driverSubClass && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@driverSubClass = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id361_connectionStatus && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@connectionStatus = Read311_ConnectionStatus(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":deviceId, :driver, :driverSubClass, :connectionStatus");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations168 = 0;

            int readerCount168 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations168, ref readerCount168);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus Read311_ConnectionStatus(string s) {

            switch (s) {

                case @"Invalid": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus.@Invalid;

                case @"Connected": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus.@Connected;

                case @"Disconnected": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus.@Disconnected;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectionStatus));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchDisplayTargetEvent Read310_TouchDisplayTargetEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchDisplayTargetEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchDisplayTargetEvent();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id321_x && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@x = System.Xml.XmlConvert.ToSingle(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id322_y && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@y = System.Xml.XmlConvert.ToSingle(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id360_display && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@display = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id362_offscreen && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@offscreen = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":x, :y, :display, :offscreen");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations169 = 0;

            int readerCount169 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations169, ref readerCount169);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchCalibrationCompleteEvent Read309_TouchCalibrationCompleteEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchCalibrationCompleteEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchCalibrationCompleteEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id360_display && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@display = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":display");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations170 = 0;

            int readerCount170 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations170, ref readerCount170);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerToMinimumDebounceIntervalRequest Read308_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerToMinimumDebounceIntervalRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerToMinimumDebounceIntervalRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id363_digitizer && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@digitizer = Read296_DigitizerRole(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":digitizer");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations171 = 0;

            int readerCount171 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations171, ref readerCount171);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole Read296_DigitizerRole(string s) {

            switch (s) {

                case @"All": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@All;

                case @"Main": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@Main;

                case @"Top": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@Top;

                case @"Belly Glass": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@BellyGlass;

                case @"Button Panel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@ButtonPanel;

                case @"Topper": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole.@Topper;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DigitizerRole));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeResponse Read307_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeResponse();

            if ((object)(o.@Instance) == null) o.@Instance = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode>)o.@Instance;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations172 = 0;

            int readerCount172 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id364_Instance && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read305_DigitizerExclusiveMode(false, true));

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id365_TouchScreenResponse && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@TouchScreenResponse = Read293_TouchScreenResponse(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:Instance, CsiTouchScreenV1.xsd:TouchScreenResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:Instance, CsiTouchScreenV1.xsd:TouchScreenResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations172, ref readerCount172);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse Read293_TouchScreenResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations173 = 0;

            int readerCount173 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@ErrorCode = Read292_TouchScreenErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:ErrorCode, CsiTouchScreenV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:ErrorCode, CsiTouchScreenV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations173, ref readerCount173);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode Read292_TouchScreenErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode.@NONE;

                case @"REQUEST_PROHIBITED_IN_THIS_JURISDICTION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode.@REQUEST_PROHIBITED_IN_THIS_JURISDICTION;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TouchScreenErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode Read305_DigitizerExclusiveMode(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id366_DigitizerExclusiveMode && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerExclusiveMode();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations174 = 0;

            int readerCount174 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id367_DigitizerRole && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@DigitizerRole = Read296_DigitizerRole(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id368_ExclusiveModeRequested && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@ExclusiveModeRequested = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:DigitizerRole, CsiTouchScreenV1.xsd:ExclusiveModeRequested");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:DigitizerRole, CsiTouchScreenV1.xsd:ExclusiveModeRequested");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations174, ref readerCount174);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeRequest Read306_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDigitizerExclusiveModeRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations175 = 0;

            int readerCount175 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id364_Instance && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@Instance = Read305_DigitizerExclusiveMode(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:Instance");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:Instance");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations175, ref readerCount175);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalRequest Read304_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id363_digitizer && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@digitizer = Read296_DigitizerRole(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":digitizer");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations176 = 0;

            int readerCount176 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations176, ref readerCount176);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalForDPP Read303_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalForDPP o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResetDigitizerDebounceIntervalForDPP();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations177 = 0;

            int readerCount177 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations177, ref readerCount177);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RequestMinimumDigitizerDebounceIntervalForDPP Read302_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RequestMinimumDigitizerDebounceIntervalForDPP o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RequestMinimumDigitizerDebounceIntervalForDPP();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations178 = 0;

            int readerCount178 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations178, ref readerCount178);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoResponse Read301_GetTouchScreenInfoResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoResponse();

            if ((object)(o.@TouchScreens) == null) o.@TouchScreens = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)o.@TouchScreens;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations179 = 0;

            int readerCount179 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id365_TouchScreenResponse && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@TouchScreenResponse = Read293_TouchScreenResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id355_TouchScreens && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@TouchScreens) == null) o.@TouchScreens = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TouchScreenInfo>)o.@TouchScreens;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations180 = 0;

                                int readerCount180 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id356_TouchScreenInfo && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read300_TouchScreenInfo(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiTouchScreenV1.xsd:TouchScreenInfo");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiTouchScreenV1.xsd:TouchScreenInfo");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations180, ref readerCount180);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreenResponse, CsiTouchScreenV1.xsd:TouchScreens");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreenResponse, CsiTouchScreenV1.xsd:TouchScreens");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations179, ref readerCount179);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoRequest Read299_GetTouchScreenInfoRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id343_GetTouchScreenInfoRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetTouchScreenInfoRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations181 = 0;

            int readerCount181 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations181, ref readerCount181);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerDebounceIntervalResponse Read298_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerDebounceIntervalResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerDebounceIntervalResponse();

            if ((object)(o.@DigitizerIntervals) == null) o.@DigitizerIntervals = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval>)o.@DigitizerIntervals;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations182 = 0;

            int readerCount182 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id365_TouchScreenResponse && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@TouchScreenResponse = Read293_TouchScreenResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id369_DigitizerIntervals && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@DigitizerIntervals) == null) o.@DigitizerIntervals = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval>)o.@DigitizerIntervals;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations183 = 0;

                                int readerCount183 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id370_Interval && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read297_SpecificDigitizerInterval(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiTouchScreenV1.xsd:Interval");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiTouchScreenV1.xsd:Interval");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations183, ref readerCount183);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreenResponse, CsiTouchScreenV1.xsd:DigitizerIntervals");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreenResponse, CsiTouchScreenV1.xsd:DigitizerIntervals");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations182, ref readerCount182);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval Read297_SpecificDigitizerInterval(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id371_SpecificDigitizerInterval && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpecificDigitizerInterval();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations184 = 0;

            int readerCount184 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id370_Interval && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@Interval = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id367_DigitizerRole && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        {

                            o.@DigitizerRole = Read296_DigitizerRole(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:Interval, CsiTouchScreenV1.xsd:DigitizerRole");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:Interval, CsiTouchScreenV1.xsd:DigitizerRole");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations184, ref readerCount184);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DPPDigitizerDebounceIntervalResponse Read295_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DPPDigitizerDebounceIntervalResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DPPDigitizerDebounceIntervalResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations185 = 0;

            int readerCount185 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id365_TouchScreenResponse && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@TouchScreenResponse = Read293_TouchScreenResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id372_DigitizerInterval && (object) Reader.NamespaceURI == (object)id22_CsiTouchScreenV1xsd)) {

                        o.@DigitizerInterval = Read294_DigitizerInterval(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreenResponse, CsiTouchScreenV1.xsd:DigitizerInterval");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiTouchScreenV1.xsd:TouchScreenResponse, CsiTouchScreenV1.xsd:DigitizerInterval");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations185, ref readerCount185);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerInterval Read294_DigitizerInterval(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id22_CsiTouchScreenV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerInterval o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DigitizerInterval();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id373_interval && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@interval = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":interval");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations186 = 0;

            int readerCount186 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations186, ref readerCount186);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization Read291_CsiBankSynchronization(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id19_CsiBankSynchronization && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations187 = 0;

            int readerCount187 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id374_BankSynchronizationInfoRequest && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@Item = Read275_BankSynchronizationInfoRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id375_Item && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@Item = Read280_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id376_MessageRegistrationRequest && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@Item = Read284_MessageRegistrationRequest1(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id377_MessageRegistrationResponse && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@Item = Read287_MessageRegistrationResponse1(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id378_ReceivedSynchronizationPayload && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@Item = Read289_ReceivedSynchronizationPayload(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id379_SendSynchronizationPayload && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@Item = Read290_SendSynchronizationPayload(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:BankSynchronizationInfoRequest, CsiBankSynchronizationV1.xsd:BankSynchronizationInfoResponse, CsiBankSynchronizationV1.xsd:MessageRegistrationRequest, CsiBankSynchronizationV1.xsd:MessageRegistrationResponse, CsiBankSynchronizationV1.xsd:ReceivedSynchronizationPayload, CsiBankSynchronizationV1.xsd:SendSynchronizationPayload");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:BankSynchronizationInfoRequest, CsiBankSynchronizationV1.xsd:BankSynchronizationInfoResponse, CsiBankSynchronizationV1.xsd:MessageRegistrationRequest, CsiBankSynchronizationV1.xsd:MessageRegistrationResponse, CsiBankSynchronizationV1.xsd:ReceivedSynchronizationPayload, CsiBankSynchronizationV1.xsd:SendSynchronizationPayload");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations187, ref readerCount187);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SendSynchronizationPayload Read290_SendSynchronizationPayload(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SendSynchronizationPayload o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SendSynchronizationPayload();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations188 = 0;

            int readerCount188 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id380_SendPayload && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@SendPayload = Read288_SynchronizationPayloadData(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id381_Destination && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@Destination = Read282_MessageRegistrationType(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:SendPayload, CsiBankSynchronizationV1.xsd:Destination");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:SendPayload, CsiBankSynchronizationV1.xsd:Destination");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations188, ref readerCount188);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType Read282_MessageRegistrationType(string s) {

            switch (s) {

                case @"CONTROLLER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType.@CONTROLLER;

                case @"FOUNDATION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType.@FOUNDATION;

                case @"GAME": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType.@GAME;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationPayloadData Read288_SynchronizationPayloadData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id382_SynchronizationPayloadData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationPayloadData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationPayloadData();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations189 = 0;

            int readerCount189 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id383_PayloadSize && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@PayloadSize = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id384_PayloadData && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@PayloadData = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:PayloadSize, CsiBankSynchronizationV1.xsd:PayloadData");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:PayloadSize, CsiBankSynchronizationV1.xsd:PayloadData");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations189, ref readerCount189);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReceivedSynchronizationPayload Read289_ReceivedSynchronizationPayload(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReceivedSynchronizationPayload o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReceivedSynchronizationPayload();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations190 = 0;

            int readerCount190 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id385_ReceivedPayload && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@ReceivedPayload = Read288_SynchronizationPayloadData(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:ReceivedPayload");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:ReceivedPayload");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations190, ref readerCount190);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationResponse1 Read287_MessageRegistrationResponse1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationResponse1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationResponse1();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations191 = 0;

            int readerCount191 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@ErrorCode = Read285_MessageRegistrationErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:ErrorCode, CsiBankSynchronizationV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:ErrorCode, CsiBankSynchronizationV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations191, ref readerCount191);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode Read285_MessageRegistrationErrorCode(string s) {

            switch (s) {

                case @"None": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode.@None;

                case @"FeatureDisabled": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode.@FeatureDisabled;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationRequest1 Read284_MessageRegistrationRequest1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationRequest1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationRequest1();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations192 = 0;

            int readerCount192 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id193_Action && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@Action = Read281_MessageRegistrationAction(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id49_MessageType && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@MessageType = Read282_MessageRegistrationType(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:Action, CsiBankSynchronizationV1.xsd:MessageType");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:Action, CsiBankSynchronizationV1.xsd:MessageType");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations192, ref readerCount192);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction Read281_MessageRegistrationAction(string s) {

            switch (s) {

                case @"REGISTER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction.@REGISTER;

                case @"UNREGISTER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction.@UNREGISTER;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MessageRegistrationAction));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoResponse Read280_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations193 = 0;

            int readerCount193 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id386_SynchronizationInfoError && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@SynchronizationInfoError = Read277_SynchronizationInfoError(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id387_SynchronizationInfo && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        o.@SynchronizationInfo = Read279_SynchronizationInformationData(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:SynchronizationInfoError, CsiBankSynchronizationV1.xsd:SynchronizationInfo");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:SynchronizationInfoError, CsiBankSynchronizationV1.xsd:SynchronizationInfo");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations193, ref readerCount193);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInformationData Read279_SynchronizationInformationData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id388_SynchronizationInformationData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInformationData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInformationData();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations194 = 0;

            int readerCount194 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id389_TimeFrame && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@TimeFrame = System.Xml.XmlConvert.ToInt64(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id390_TimeFramePrecision && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@TimeFramePrecision = Read278_TimeFramePrecisionLevel(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id391_PositionInBank && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@PositionInBank = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id392_TotalBankPositions && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@TotalBankPositions = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:TimeFrame, CsiBankSynchronizationV1.xsd:TimeFramePrecision, CsiBankSynchronizationV1.xsd:PositionInBank, CsiBankSynchronizationV1.xsd:TotalBankPositions");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:TimeFrame, CsiBankSynchronizationV1.xsd:TimeFramePrecision, CsiBankSynchronizationV1.xsd:PositionInBank, CsiBankSynchronizationV1.xsd:TotalBankPositions");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations194, ref readerCount194);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel Read278_TimeFramePrecisionLevel(string s) {

            switch (s) {

                case @"None": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel.@None;

                case @"Low": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel.@Low;

                case @"High": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel.@High;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.TimeFramePrecisionLevel));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInfoError Read277_SynchronizationInfoError(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInfoError o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronizationInfoError();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations195 = 0;

            int readerCount195 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@ErrorCode = Read276_Item(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id20_CsiBankSynchronizationV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:ErrorCode, CsiBankSynchronizationV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiBankSynchronizationV1.xsd:ErrorCode, CsiBankSynchronizationV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations195, ref readerCount195);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode Read276_Item(string s) {

            switch (s) {

                case @"None": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode.@None;

                case @"FeatureDisabled": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode.@FeatureDisabled;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoRequest Read275_BankSynchronizationInfoRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id374_BankSynchronizationInfoRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id20_CsiBankSynchronizationV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BankSynchronizationInfoRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations196 = 0;

            int readerCount196 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations196, ref readerCount196);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight Read274_CsiStreamingLight(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id17_CsiStreamingLight && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations197 = 0;

            int readerCount197 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id393_BreakLoopRequest && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read246_BreakLoopRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id394_BreakLoopResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read249_BreakLoopResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id395_ClearSymbolHighlightsRequest && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read252_ClearSymbolHighlightsRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id396_ClearSymbolHighlightsResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read253_ClearSymbolHighlightsResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id397_GetLightDevicesRequest && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read254_GetLightDevicesRequest1(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id398_GetLightDevicesResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read258_GetLightDevicesResponse1(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id399_GetLightIntensityRequest && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read259_GetLightIntensityRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id400_GetLightIntensityResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read260_GetLightIntensityResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id401_NotificationEvent && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read261_NotificationEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id402_Item && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read263_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id403_Item && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read264_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id404_SetLightIntensityRequest && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read265_SetLightIntensityRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id405_SetLightIntensityResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read266_SetLightIntensityResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id406_SetSymbolHighlightsRequest && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read267_SetSymbolHighlightsRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id407_SetSymbolHighlightsResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read268_SetSymbolHighlightsResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id408_StartLightSequenceRequest && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read272_StartLightSequenceRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id409_StartLightSequenceResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read273_StartLightSequenceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:BreakLoopRequest, CsiStreamingLightV1.xsd:BreakLoopResponse, CsiStreamingLightV1.xsd:ClearSymbolHighlightsRequest, CsiStreamingLightV1.xsd:ClearSymbolHighlightsResponse, CsiStreamingLightV1.xsd:GetLightDevicesRequest, CsiStreamingLightV1.xsd:GetLightDevicesResponse, CsiStreamingLightV1.xsd:GetLightIntensityRequest, CsiStreamingLightV1.xsd:GetLightIntensityResponse, CsiStreamingLightV1.xsd:NotificationEvent, CsiStreamingLightV1.xsd:SetEnabledSymbolHighlightFeaturesRequest, CsiStreamingLightV1.xsd:SetEnabledSymbolHighlightFeaturesResponse, CsiStreamingLightV1.xsd:SetLightIntensityRequest, CsiStreamingLightV1.xsd:SetLightIntensityResponse, CsiStreamingLightV1.xsd:SetSymbolHighlightsRequest, CsiStreamingLightV1.xsd:SetSymbolHighlightsResponse, CsiStreamingLightV1.xsd:StartLightSequenceRequest, CsiStreamingLightV1.xsd:StartLightSequenceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:BreakLoopRequest, CsiStreamingLightV1.xsd:BreakLoopResponse, CsiStreamingLightV1.xsd:ClearSymbolHighlightsRequest, CsiStreamingLightV1.xsd:ClearSymbolHighlightsResponse, CsiStreamingLightV1.xsd:GetLightDevicesRequest, CsiStreamingLightV1.xsd:GetLightDevicesResponse, CsiStreamingLightV1.xsd:GetLightIntensityRequest, CsiStreamingLightV1.xsd:GetLightIntensityResponse, CsiStreamingLightV1.xsd:NotificationEvent, CsiStreamingLightV1.xsd:SetEnabledSymbolHighlightFeaturesRequest, CsiStreamingLightV1.xsd:SetEnabledSymbolHighlightFeaturesResponse, CsiStreamingLightV1.xsd:SetLightIntensityRequest, CsiStreamingLightV1.xsd:SetLightIntensityResponse, CsiStreamingLightV1.xsd:SetSymbolHighlightsRequest, CsiStreamingLightV1.xsd:SetSymbolHighlightsResponse, CsiStreamingLightV1.xsd:StartLightSequenceRequest, CsiStreamingLightV1.xsd:StartLightSequenceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations197, ref readerCount197);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceResponse Read273_StartLightSequenceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations198 = 0;

            int readerCount198 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations198, ref readerCount198);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse Read248_StreamingLightResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id410_StreamingLightResponse && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations199 = 0;

            int readerCount199 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@ErrorCode = Read247_StreamingLightErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:ErrorCode, CsiStreamingLightV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:ErrorCode, CsiStreamingLightV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations199, ref readerCount199);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode Read247_StreamingLightErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@NONE;

                case @"UNKNOWN_DRIVER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@UNKNOWN_DRIVER_ERROR;

                case @"INVALID_FEATURE_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_FEATURE_ID;

                case @"INVALID_LIGHT_GROUP": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_LIGHT_GROUP;

                case @"FILE_NOT_FOUND": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@FILE_NOT_FOUND;

                case @"INVALID_SEQUENCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_SEQUENCE;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"QUEUE_EMPTY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@QUEUE_EMPTY;

                case @"SEQUENCE_COMPLETE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@SEQUENCE_COMPLETE;

                case @"DEVICE_IN_TILT_STATE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@DEVICE_IN_TILT_STATE;

                case @"QUEUE_FULL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@QUEUE_FULL;

                case @"INVALID_FRAME": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_FRAME;

                case @"INVALID_COMMAND": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode.@INVALID_COMMAND;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceRequest Read272_StartLightSequenceRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartLightSequenceRequest();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id412_GroupNumber && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@GroupNumber = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id413_PlayMode && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@PlayMode = Read271_PlayMode(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:GroupNumber, CsiStreamingLightV1.xsd:PlayMode");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations200 = 0;

            int readerCount200 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id414_FrameData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read269_StreamingLightFrameData(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id415_SequenceData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@Item = Read270_StreamingLightSequenceData(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id416_SequenceFile && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@Item = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:FrameData, CsiStreamingLightV1.xsd:SequenceData, CsiStreamingLightV1.xsd:SequenceFile");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:FrameData, CsiStreamingLightV1.xsd:SequenceData, CsiStreamingLightV1.xsd:SequenceFile");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations200, ref readerCount200);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightSequenceData Read270_StreamingLightSequenceData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id417_StreamingLightSequenceData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightSequenceData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightSequenceData();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations201 = 0;

            int readerCount201 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id418_SequenceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@SequenceName = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id415_SequenceData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@SequenceData = ToByteArrayBase64(false);

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:SequenceName, CsiStreamingLightV1.xsd:SequenceData");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:SequenceName, CsiStreamingLightV1.xsd:SequenceData");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations201, ref readerCount201);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFrameData Read269_StreamingLightFrameData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id419_StreamingLightFrameData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFrameData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFrameData();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations202 = 0;

            int readerCount202 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id420_FrameName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@FrameName = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id421_FrameCount && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@FrameCount = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id414_FrameData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@FrameData = ToByteArrayBase64(false);

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id422_FrameDataSize && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        {

                            o.@FrameDataSize = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:FrameName, CsiStreamingLightV1.xsd:FrameCount, CsiStreamingLightV1.xsd:FrameData, CsiStreamingLightV1.xsd:FrameDataSize");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:FrameName, CsiStreamingLightV1.xsd:FrameCount, CsiStreamingLightV1.xsd:FrameData, CsiStreamingLightV1.xsd:FrameDataSize");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations202, ref readerCount202);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode Read271_PlayMode(string s) {

            switch (s) {

                case @"Restart": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode.@Restart;

                case @"Continue": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode.@Continue;

                case @"Queue": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode.@Queue;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayMode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsResponse Read268_SetSymbolHighlightsResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations203 = 0;

            int readerCount203 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations203, ref readerCount203);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsRequest Read267_SetSymbolHighlightsRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSymbolHighlightsRequest();

            if ((object)(o.@SymbolTrackingDataList) == null) o.@SymbolTrackingDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)o.@SymbolTrackingDataList;

            if ((object)(o.@SymbolHotPositionDataList) == null) o.@SymbolHotPositionDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)o.@SymbolHotPositionDataList;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id412_GroupNumber && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@GroupNumber = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    o.@GroupNumberSpecified = true;

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:GroupNumber");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations204 = 0;

            int readerCount204 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id423_SymbolTrackingDataList && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@SymbolTrackingDataList) == null) o.@SymbolTrackingDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)o.@SymbolTrackingDataList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations205 = 0;

                                int readerCount205 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id424_SymbolTrackingData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read250_SymbolTrackingData(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolTrackingData");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolTrackingData");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations205, ref readerCount205);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else if (((object) Reader.LocalName == (object)id425_SymbolHotPositionDataList && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@SymbolHotPositionDataList) == null) o.@SymbolHotPositionDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)o.@SymbolHotPositionDataList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations206 = 0;

                                int readerCount206 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id426_SymbolHotPositionDataData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read251_SymbolHotPositionData(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolHotPositionDataData");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolHotPositionDataData");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations206, ref readerCount206);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:SymbolTrackingDataList, CsiStreamingLightV1.xsd:SymbolHotPositionDataList");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:SymbolTrackingDataList, CsiStreamingLightV1.xsd:SymbolHotPositionDataList");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations204, ref readerCount204);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData Read251_SymbolHotPositionData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id427_SymbolHotPositionData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id428_ReelIndex && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@ReelIndex = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id429_ReelStop && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@ReelStop = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id430_WindowStopIndex && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@WindowStopIndex = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id431_Color && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@Color = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:ReelIndex, CsiStreamingLightV1.xsd:ReelStop, CsiStreamingLightV1.xsd:WindowStopIndex, CsiStreamingLightV1.xsd:Color");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations207 = 0;

            int readerCount207 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations207, ref readerCount207);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData Read250_SymbolTrackingData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id424_SymbolTrackingData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id428_ReelIndex && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@ReelIndex = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id429_ReelStop && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@ReelStop = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id432_RowIndex && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@RowIndex = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id431_Color && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@Color = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:ReelIndex, CsiStreamingLightV1.xsd:ReelStop, CsiStreamingLightV1.xsd:RowIndex, CsiStreamingLightV1.xsd:Color");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations208 = 0;

            int readerCount208 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations208, ref readerCount208);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityResponse Read266_SetLightIntensityResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations209 = 0;

            int readerCount209 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations209, ref readerCount209);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityRequest Read265_SetLightIntensityRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLightIntensityRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id433_Intensity && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@Intensity = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:Intensity");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations210 = 0;

            int readerCount210 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations210, ref readerCount210);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesResponse Read264_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations211 = 0;

            int readerCount211 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations211, ref readerCount211);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesRequest Read263_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetEnabledSymbolHighlightFeaturesRequest();

            if ((object)(o.@EnabledSymbolHighlightFeatures) == null) o.@EnabledSymbolHighlightFeatures = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes>)o.@EnabledSymbolHighlightFeatures;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id412_GroupNumber && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@GroupNumber = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    o.@GroupNumberSpecified = true;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:GroupNumber");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations212 = 0;

            int readerCount212 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id434_EnabledSymbolHighlightFeatures && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@EnabledSymbolHighlightFeatures) == null) o.@EnabledSymbolHighlightFeatures = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes>)o.@EnabledSymbolHighlightFeatures;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations213 = 0;

                                int readerCount213 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id435_SymbolHighlightFeatureType && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                                            {

                                                a_0_0.Add(Read262_SymbolHighlightFeatureTypes(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolHighlightFeatureType");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolHighlightFeatureType");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations213, ref readerCount213);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:EnabledSymbolHighlightFeatures");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:EnabledSymbolHighlightFeatures");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations212, ref readerCount212);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes Read262_SymbolHighlightFeatureTypes(string s) {

            switch (s) {

                case @"SymbolTracking": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes.@SymbolTracking;

                case @"HotPosition": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes.@HotPosition;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHighlightFeatureTypes));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.NotificationEvent Read261_NotificationEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.NotificationEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.NotificationEvent();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@GroupId = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id437_Notification && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@Notification = Read247_StreamingLightErrorCode(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:GroupId, CsiStreamingLightV1.xsd:Notification");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations214 = 0;

            int readerCount214 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations214, ref readerCount214);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityResponse Read260_GetLightIntensityResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id433_Intensity && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@Intensity = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:Intensity");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations215 = 0;

            int readerCount215 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations215, ref readerCount215);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityRequest Read259_GetLightIntensityRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightIntensityRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations216 = 0;

            int readerCount216 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations216, ref readerCount216);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse1 Read258_GetLightDevicesResponse1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse1();

            if ((object)(o.@StreamingLightFeatures) == null) o.@StreamingLightFeatures = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData>)o.@StreamingLightFeatures;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations217 = 0;

            int readerCount217 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id438_StreamingLightFeatures && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read257_StreamingLightFeatureData(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse, CsiStreamingLightV1.xsd:StreamingLightFeatures");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse, CsiStreamingLightV1.xsd:StreamingLightFeatures");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations217, ref readerCount217);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData Read257_StreamingLightFeatureData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id439_StreamingLightFeatureData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightFeatureData();

            if ((object)(o.@Group) == null) o.@Group = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup>)o.@Group;

            bool[] paramsRead = new bool[6];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id440_LightType && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@LightType = Read256_LightType1(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id441_TotalLightCount && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@TotalLightCount = System.Xml.XmlConvert.ToInt32(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id442_AdjustableIntensity && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@AdjustableIntensity = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    paramsRead[4] = true;

                }

                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id443_SymbolHighlightsSupported && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@SymbolHighlightsSupported = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    o.@SymbolHighlightsSupportedSpecified = true;

                    paramsRead[5] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:LightType, CsiStreamingLightV1.xsd:TotalLightCount, CsiStreamingLightV1.xsd:AdjustableIntensity, CsiStreamingLightV1.xsd:SymbolHighlightsSupported");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations218 = 0;

            int readerCount218 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read255_StreamingLightGroup(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:Group");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:Group");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations218, ref readerCount218);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup Read255_StreamingLightGroup(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id445_StreamingLightGroup && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StreamingLightGroup();

            bool[] paramsRead = new bool[6];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id446_NumberOfLights && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@NumberOfLights = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id447_LightsWorkingFeedbackSupported && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@LightsWorkingFeedbackSupported = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id448_CanShowGameOutcome && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@CanShowGameOutcome = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id449_RealTimeFrameControlSupported && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@RealTimeFrameControlSupported = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id450_NumberOfFramesSupported && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@NumberOfFramesSupported = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[4] = true;

                }

                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id443_SymbolHighlightsSupported && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@SymbolHighlightsSupported = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    o.@SymbolHighlightsSupportedSpecified = true;

                    paramsRead[5] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:NumberOfLights, CsiStreamingLightV1.xsd:LightsWorkingFeedbackSupported, CsiStreamingLightV1.xsd:CanShowGameOutcome, CsiStreamingLightV1.xsd:RealTimeFrameControlSupported, CsiStreamingLightV1.xsd:NumberOfFramesSupported, CsiStreamingLightV1.xsd:SymbolHighlightsSupported");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations219 = 0;

            int readerCount219 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations219, ref readerCount219);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1 Read256_LightType1(string s) {

            switch (s) {

                case @"BonusGameLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@BonusGameLights;

                case @"LightBezel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@LightBezel;

                case @"LightBars": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@LightBars;

                case @"ReelBackLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@ReelBackLights;

                case @"Candle": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@Candle;

                case @"AccentLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@AccentLights;

                case @"CardReaderBezel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@CardReaderBezel;

                case @"TopperLightRing": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@TopperLightRing;

                case @"ReelDividerLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@ReelDividerLights;

                case @"ReelHighlights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1.@ReelHighlights;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType1));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest1 Read254_GetLightDevicesRequest1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id397_GetLightDevicesRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest1();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations220 = 0;

            int readerCount220 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations220, ref readerCount220);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsResponse Read253_ClearSymbolHighlightsResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations221 = 0;

            int readerCount221 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations221, ref readerCount221);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsRequest Read252_ClearSymbolHighlightsRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearSymbolHighlightsRequest();

            if ((object)(o.@SymbolTrackingDataList) == null) o.@SymbolTrackingDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)o.@SymbolTrackingDataList;

            if ((object)(o.@SymbolHotPositionDataList) == null) o.@SymbolHotPositionDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)o.@SymbolHotPositionDataList;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id412_GroupNumber && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@GroupNumber = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    o.@GroupNumberSpecified = true;

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:GroupNumber");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations222 = 0;

            int readerCount222 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id423_SymbolTrackingDataList && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@SymbolTrackingDataList) == null) o.@SymbolTrackingDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolTrackingData>)o.@SymbolTrackingDataList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations223 = 0;

                                int readerCount223 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id424_SymbolTrackingData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read250_SymbolTrackingData(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolTrackingData");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolTrackingData");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations223, ref readerCount223);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else if (((object) Reader.LocalName == (object)id425_SymbolHotPositionDataList && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@SymbolHotPositionDataList) == null) o.@SymbolHotPositionDataList = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SymbolHotPositionData>)o.@SymbolHotPositionDataList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations224 = 0;

                                int readerCount224 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id426_SymbolHotPositionDataData && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read251_SymbolHotPositionData(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolHotPositionDataData");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiStreamingLightV1.xsd:SymbolHotPositionDataData");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations224, ref readerCount224);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:SymbolTrackingDataList, CsiStreamingLightV1.xsd:SymbolHotPositionDataList");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:SymbolTrackingDataList, CsiStreamingLightV1.xsd:SymbolHotPositionDataList");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations222, ref readerCount222);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopResponse Read249_BreakLoopResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations225 = 0;

            int readerCount225 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id410_StreamingLightResponse && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                        o.@StreamingLightResponse = Read248_StreamingLightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:StreamingLightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations225, ref readerCount225);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopRequest Read246_BreakLoopRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id18_CsiStreamingLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BreakLoopRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id411_InterfaceName && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@InterfaceName = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id412_GroupNumber && (object) Reader.NamespaceURI == (object)id18_CsiStreamingLightV1xsd)) {

                    o.@GroupNumber = System.Xml.XmlConvert.ToUInt16(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiStreamingLightV1.xsd:InterfaceName, CsiStreamingLightV1.xsd:GroupNumber");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations226 = 0;

            int readerCount226 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations226, ref readerCount226);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid Read245_CsiSolenoid(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id15_CsiSolenoid && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_CsiSolenoidV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations227 = 0;

            int readerCount227 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id451_SolenoidRequest && (object) Reader.NamespaceURI == (object)id16_CsiSolenoidV1xsd)) {

                        o.@Item = Read242_SolenoidRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id452_SolenoidResponse && (object) Reader.NamespaceURI == (object)id16_CsiSolenoidV1xsd)) {

                        o.@Item = Read244_SolenoidResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSolenoidV1.xsd:SolenoidRequest, CsiSolenoidV1.xsd:SolenoidResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSolenoidV1.xsd:SolenoidRequest, CsiSolenoidV1.xsd:SolenoidResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations227, ref readerCount227);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidResponse Read244_SolenoidResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_CsiSolenoidV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations228 = 0;

            int readerCount228 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id16_CsiSolenoidV1xsd)) {

                        {

                            o.@ErrorCode = Read243_SolenoidErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id16_CsiSolenoidV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSolenoidV1.xsd:ErrorCode, CsiSolenoidV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSolenoidV1.xsd:ErrorCode, CsiSolenoidV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations228, ref readerCount228);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode Read243_SolenoidErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode.@NONE;

                case @"UNKNOWN_DRIVER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode.@UNKNOWN_DRIVER_ERROR;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidRequest Read242_SolenoidRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id16_CsiSolenoidV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations229 = 0;

            int readerCount229 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id453_SolenoidActionType && (object) Reader.NamespaceURI == (object)id16_CsiSolenoidV1xsd)) {

                        {

                            o.@SolenoidActionType = Read241_SolenoidActionType(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id454_SolenoidActionState && (object) Reader.NamespaceURI == (object)id16_CsiSolenoidV1xsd)) {

                        {

                            o.@SolenoidActionState = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSolenoidV1.xsd:SolenoidActionType, CsiSolenoidV1.xsd:SolenoidActionState");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSolenoidV1.xsd:SolenoidActionType, CsiSolenoidV1.xsd:SolenoidActionState");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations229, ref readerCount229);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType Read241_SolenoidActionType(string s) {

            switch (s) {

                case @"Lock": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType.@Lock;

                case @"Click": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType.@Click;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SolenoidActionType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel Read240_CsiReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id13_CsiReel && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations230 = 0;

            int readerCount230 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id455_ApplyAttributesRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read193_ApplyAttributesRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id456_ApplyAttributesResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read196_ApplyAttributesResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id457_ChangeSpeedRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read199_ChangeSpeedRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id458_ChangeSpeedResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read201_MulipleReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id459_ClearStatusRegistrationRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read202_ClearStatusRegistrationRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id460_Item && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read203_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id461_GetReelDevicesRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read204_GetReelDevicesRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id462_GetReelDevicesResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read210_GetReelDevicesResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id463_ReelStatusChangedEvent && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read212_ReelStatusEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id464_RegisterStatusRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read213_RegisterStatusRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id465_RegisterStatusResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read214_RegisterStatusResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id466_SetRecoveryRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read215_SetRecoveryRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id467_SetRecoveryResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read216_SetRecoveryResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id468_SetRequireDeviceRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read217_SetRequireDeviceRequest1(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id469_SetRequireDeviceResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read218_SetRequireDeviceResponse1(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id470_SetStopOrderRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read219_SetStopOrderRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id471_SetStopOrderResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read220_SetStopOrderResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id472_SetSynchronousStopRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read222_SetSynchronousStopRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id473_SetSynchronousStopResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read223_SetSynchronousStopResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id474_SetToPositionRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read225_SetToPositionRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id475_SetToPositionResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read226_SetToPositionResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id476_SpinRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read228_SpinRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id477_SpinResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read229_SpinResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id478_StopRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read231_StopRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id479_StopResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read232_StopResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id480_SynchronousSpinRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read234_SynchronousSpinRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id481_SynchronousSpinResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read235_SynchronousSpinResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id482_SynchronousStopRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read236_SynchronousStopRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id483_SynchronousStopResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read237_SynchronousStopResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id484_UnregisterStatusRequest && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read238_UnregisterStatusRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id485_UnregisterStatusResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Item = Read239_UnregisterStatusResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ApplyAttributesRequest, CsiReelV1.xsd:ApplyAttributesResponse, CsiReelV1.xsd:ChangeSpeedRequest, CsiReelV1.xsd:ChangeSpeedResponse, CsiReelV1.xsd:ClearStatusRegistrationRequest, CsiReelV1.xsd:ClearStatusRegistrationResponse, CsiReelV1.xsd:GetReelDevicesRequest, CsiReelV1.xsd:GetReelDevicesResponse, CsiReelV1.xsd:ReelStatusChangedEvent, CsiReelV1.xsd:RegisterStatusRequest, CsiReelV1.xsd:RegisterStatusResponse, CsiReelV1.xsd:SetRecoveryRequest, CsiReelV1.xsd:SetRecoveryResponse, CsiReelV1.xsd:SetRequireDeviceRequest, CsiReelV1.xsd:SetRequireDeviceResponse, CsiReelV1.xsd:SetStopOrderRequest, CsiReelV1.xsd:SetStopOrderResponse, CsiReelV1.xsd:SetSynchronousStopRequest, CsiReelV1.xsd:SetSynchronousStopResponse, CsiReelV1.xsd:SetToPositionRequest, CsiReelV1.xsd:SetToPositionResponse, CsiReelV1.xsd:SpinRequest, CsiReelV1.xsd:SpinResponse, CsiReelV1.xsd:StopRequest, CsiReelV1.xsd:StopResponse, CsiReelV1.xsd:SynchronousSpinRequest, CsiReelV1.xsd:SynchronousSpinResponse, CsiReelV1.xsd:SynchronousStopRequest, CsiReelV1.xsd:SynchronousStopResponse, CsiReelV1.xsd:UnregisterStatusRequest, CsiReelV1.xsd:UnregisterStatusResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ApplyAttributesRequest, CsiReelV1.xsd:ApplyAttributesResponse, CsiReelV1.xsd:ChangeSpeedRequest, CsiReelV1.xsd:ChangeSpeedResponse, CsiReelV1.xsd:ClearStatusRegistrationRequest, CsiReelV1.xsd:ClearStatusRegistrationResponse, CsiReelV1.xsd:GetReelDevicesRequest, CsiReelV1.xsd:GetReelDevicesResponse, CsiReelV1.xsd:ReelStatusChangedEvent, CsiReelV1.xsd:RegisterStatusRequest, CsiReelV1.xsd:RegisterStatusResponse, CsiReelV1.xsd:SetRecoveryRequest, CsiReelV1.xsd:SetRecoveryResponse, CsiReelV1.xsd:SetRequireDeviceRequest, CsiReelV1.xsd:SetRequireDeviceResponse, CsiReelV1.xsd:SetStopOrderRequest, CsiReelV1.xsd:SetStopOrderResponse, CsiReelV1.xsd:SetSynchronousStopRequest, CsiReelV1.xsd:SetSynchronousStopResponse, CsiReelV1.xsd:SetToPositionRequest, CsiReelV1.xsd:SetToPositionResponse, CsiReelV1.xsd:SpinRequest, CsiReelV1.xsd:SpinResponse, CsiReelV1.xsd:StopRequest, CsiReelV1.xsd:StopResponse, CsiReelV1.xsd:SynchronousSpinRequest, CsiReelV1.xsd:SynchronousSpinResponse, CsiReelV1.xsd:SynchronousStopRequest, CsiReelV1.xsd:SynchronousStopResponse, CsiReelV1.xsd:UnregisterStatusRequest, CsiReelV1.xsd:UnregisterStatusResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations230, ref readerCount230);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusResponse Read239_UnregisterStatusResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations231 = 0;

            int readerCount231 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations231, ref readerCount231);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse Read195_ReelResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations232 = 0;

            int readerCount232 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@ErrorCode = Read194_ReelErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ErrorCode, CsiReelV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ErrorCode, CsiReelV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations232, ref readerCount232);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode Read194_ReelErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@NONE;

                case @"INVALID_FEATURE_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@INVALID_FEATURE_ID;

                case @"INVALID_REEL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@INVALID_REEL;

                case @"DUPLICATE_REEL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@DUPLICATE_REEL;

                case @"SET_BOUNCE_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_BOUNCE_FAILED;

                case @"SET_COCK_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_COCK_FAILED;

                case @"SET_DECELERATION_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_DECELERATION_FAILED;

                case @"SET_DIRECTION_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_DIRECTION_FAILED;

                case @"SET_DURATION_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_DURATION_FAILED;

                case @"SET_RECOVERY_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_RECOVERY_FAILED;

                case @"SET_SHAKE_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_SHAKE_FAILED;

                case @"SET_SPEED_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_SPEED_FAILED;

                case @"SET_STOP_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_STOP_FAILED;

                case @"START_SPIN_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@START_SPIN_FAILED;

                case @"STOP_SPIN_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@STOP_SPIN_FAILED;

                case @"SYNCH_SPIN_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SYNCH_SPIN_FAILED;

                case @"UNKNOWN_DRIVER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@UNKNOWN_DRIVER_ERROR;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"SET_HOVER_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_HOVER_FAILED;

                case @"REEL_DEVICE_TILTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@REEL_DEVICE_TILTED;

                case @"APPLY_ATTRIBUTES_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@APPLY_ATTRIBUTES_FAILED;

                case @"SET_TO_POSITION_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@SET_TO_POSITION_FAILED;

                case @"CHANGE_SPEED_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@CHANGE_SPEED_FAILED;

                case @"REQUEST_NOT_SUPPORTED_BY_DEVICE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode.@REQUEST_NOT_SUPPORTED_BY_DEVICE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusRequest Read238_UnregisterStatusRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.UnregisterStatusRequest();

            if ((object)(o.@StatusSubscription) == null) o.@StatusSubscription = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent>)o.@StatusSubscription;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations233 = 0;

            int readerCount233 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id487_StatusSubscription && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read212_ReelStatusEvent(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:StatusSubscription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:StatusSubscription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations233, ref readerCount233);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent Read212_ReelStatusEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id488_ReelStatusEvent && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@Number = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id490_ReelStatus && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@ReelStatus = Read211_ReelStatus(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId, CsiReelV1.xsd:Number, CsiReelV1.xsd:ReelStatus");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations234 = 0;

            int readerCount234 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations234, ref readerCount234);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus Read211_ReelStatus(string s) {

            switch (s) {

                case @"Accelerating": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@Accelerating;

                case @"ConstantSpeed": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@ConstantSpeed;

                case @"Decelerating": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@Decelerating;

                case @"Stopped": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@Stopped;

                case @"MovingIrregularly": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus.@MovingIrregularly;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ReelStatus));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopResponse Read237_SynchronousStopResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations235 = 0;

            int readerCount235 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations235, ref readerCount235);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopRequest Read236_SynchronousStopRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousStopRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations236 = 0;

            int readerCount236 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Reels = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations236, ref readerCount236);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinResponse Read235_SynchronousSpinResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations237 = 0;

            int readerCount237 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations237, ref readerCount237);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequest Read234_SynchronousSpinRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequest();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel>)o.@Reels;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations238 = 0;

            int readerCount238 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id492_SpeedIndex && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@SpeedIndex = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations239 = 0;

                                int readerCount239 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read233_SynchronousSpinRequestReel(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations239, ref readerCount239);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:SpeedIndex, CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:SpeedIndex, CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations238, ref readerCount238);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel Read233_SynchronousSpinRequestReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SynchronousSpinRequestReel();

            bool[] paramsRead = new bool[9];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations240 = 0;

            int readerCount240 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id494_Direction && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Direction = Read197_Direction(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id495_Duration && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Duration = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id496_Stop && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Stop = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id497_Cock && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@CockSpecified = true;

                        {

                            o.@Cock = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id498_Bounce && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@BounceSpecified = true;

                        {

                            o.@Bounce = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id499_Shake && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ShakeSpecified = true;

                        {

                            o.@Shake = Read189_Shake(Reader.ReadElementString());

                        }

                        paramsRead[6] = true;

                    }

                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id500_Hover && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@HoverSpecified = true;

                        {

                            o.@Hover = Read190_Hover(Reader.ReadElementString());

                        }

                        paramsRead[7] = true;

                    }

                    else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id501_HoverLimits && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@HoverLimits = Read191_HoverLimits(false, true);

                        paramsRead[8] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Direction, CsiReelV1.xsd:Duration, CsiReelV1.xsd:Stop, CsiReelV1.xsd:Cock, CsiReelV1.xsd:Bounce, CsiReelV1.xsd:Shake, CsiReelV1.xsd:Hover, CsiReelV1.xsd:HoverLimits");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Direction, CsiReelV1.xsd:Duration, CsiReelV1.xsd:Stop, CsiReelV1.xsd:Cock, CsiReelV1.xsd:Bounce, CsiReelV1.xsd:Shake, CsiReelV1.xsd:Hover, CsiReelV1.xsd:HoverLimits");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations240, ref readerCount240);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits Read191_HoverLimits(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id501_HoverLimits && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HoverLimits();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations241 = 0;

            int readerCount241 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id502_LowerLimit && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@LowerLimit = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id503_UpperLimit && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@UpperLimit = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:LowerLimit, CsiReelV1.xsd:UpperLimit");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:LowerLimit, CsiReelV1.xsd:UpperLimit");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations241, ref readerCount241);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover Read190_Hover(string s) {

            switch (s) {

                case @"Off": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Off;

                case @"Custom": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Custom;

                case @"Top": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Top;

                case @"Center": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Center;

                case @"Bottom": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover.@Bottom;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Hover));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake Read189_Shake(string s) {

            switch (s) {

                case @"Off": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Off;

                case @"Low": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Low;

                case @"Medium": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Medium;

                case @"High": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@High;

                case @"Max": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake.@Max;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Shake));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction Read197_Direction(string s) {

            switch (s) {

                case @"Shortest": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction.@Shortest;

                case @"Ascending": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction.@Ascending;

                case @"Descending": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction.@Descending;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Direction));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopResponse Read232_StopResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations242 = 0;

            int readerCount242 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations242, ref readerCount242);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequest Read231_StopRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequest();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel>)o.@Reels;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations243 = 0;

            int readerCount243 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations244 = 0;

                                int readerCount244 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read230_StopRequestReel(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations244, ref readerCount244);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations243, ref readerCount243);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel Read230_StopRequestReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StopRequestReel();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations245 = 0;

            int readerCount245 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id496_Stop && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Stop = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stop");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stop");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations245, ref readerCount245);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinResponse Read229_SpinResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations246 = 0;

            int readerCount246 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations246, ref readerCount246);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequest Read228_SpinRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequest();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel>)o.@Reels;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations247 = 0;

            int readerCount247 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations248 = 0;

                                int readerCount248 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read227_SpinRequestReel(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations248, ref readerCount248);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations247, ref readerCount247);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel Read227_SpinRequestReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SpinRequestReel();

            bool[] paramsRead = new bool[11];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations249 = 0;

            int readerCount249 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id504_Deceleration && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Deceleration = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id505_Speed && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Speed = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id494_Direction && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Direction = Read197_Direction(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id495_Duration && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Duration = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id496_Stop && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Stop = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id497_Cock && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@CockSpecified = true;

                        {

                            o.@Cock = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[6] = true;

                    }

                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id498_Bounce && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@BounceSpecified = true;

                        {

                            o.@Bounce = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[7] = true;

                    }

                    else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id499_Shake && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ShakeSpecified = true;

                        {

                            o.@Shake = Read189_Shake(Reader.ReadElementString());

                        }

                        paramsRead[8] = true;

                    }

                    else if (!paramsRead[9] && ((object) Reader.LocalName == (object)id500_Hover && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@HoverSpecified = true;

                        {

                            o.@Hover = Read190_Hover(Reader.ReadElementString());

                        }

                        paramsRead[9] = true;

                    }

                    else if (!paramsRead[10] && ((object) Reader.LocalName == (object)id501_HoverLimits && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@HoverLimits = Read191_HoverLimits(false, true);

                        paramsRead[10] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Deceleration, CsiReelV1.xsd:Speed, CsiReelV1.xsd:Direction, CsiReelV1.xsd:Duration, CsiReelV1.xsd:Stop, CsiReelV1.xsd:Cock, CsiReelV1.xsd:Bounce, CsiReelV1.xsd:Shake, CsiReelV1.xsd:Hover, CsiReelV1.xsd:HoverLimits");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Deceleration, CsiReelV1.xsd:Speed, CsiReelV1.xsd:Direction, CsiReelV1.xsd:Duration, CsiReelV1.xsd:Stop, CsiReelV1.xsd:Cock, CsiReelV1.xsd:Bounce, CsiReelV1.xsd:Shake, CsiReelV1.xsd:Hover, CsiReelV1.xsd:HoverLimits");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations249, ref readerCount249);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionResponse Read226_SetToPositionResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations250 = 0;

            int readerCount250 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations250, ref readerCount250);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequest Read225_SetToPositionRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequest();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel>)o.@Reels;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations251 = 0;

            int readerCount251 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations252 = 0;

                                int readerCount252 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read224_SetToPositionRequestReel(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations252, ref readerCount252);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations251, ref readerCount251);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel Read224_SetToPositionRequestReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetToPositionRequestReel();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations253 = 0;

            int readerCount253 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id496_Stop && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Stop = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stop");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stop");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations253, ref readerCount253);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopResponse Read223_SetSynchronousStopResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations254 = 0;

            int readerCount254 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations254, ref readerCount254);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequest Read222_SetSynchronousStopRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequest();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel>)o.@Reels;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations255 = 0;

            int readerCount255 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations256 = 0;

                                int readerCount256 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read221_SetSynchronousStopRequestReel(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations256, ref readerCount256);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations255, ref readerCount255);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel Read221_SetSynchronousStopRequestReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetSynchronousStopRequestReel();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations257 = 0;

            int readerCount257 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id496_Stop && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Stop = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stop");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stop");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations257, ref readerCount257);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderResponse Read220_SetStopOrderResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations258 = 0;

            int readerCount258 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations258, ref readerCount258);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderRequest Read219_SetStopOrderRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetStopOrderRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations259 = 0;

            int readerCount259 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Reels = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations259, ref readerCount259);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse1 Read218_SetRequireDeviceResponse1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse1();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations260 = 0;

            int readerCount260 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations260, ref readerCount260);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest1 Read217_SetRequireDeviceRequest1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest1();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations261 = 0;

            int readerCount261 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations261, ref readerCount261);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryResponse Read216_SetRecoveryResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations262 = 0;

            int readerCount262 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations262, ref readerCount262);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryRequest Read215_SetRecoveryRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRecoveryRequest();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations263 = 0;

            int readerCount263 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id506_Ascending && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Ascending = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id494_Direction && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Direction = Read197_Direction(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Ascending, CsiReelV1.xsd:Direction");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Ascending, CsiReelV1.xsd:Direction");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations263, ref readerCount263);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusResponse Read214_RegisterStatusResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations264 = 0;

            int readerCount264 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations264, ref readerCount264);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusRequest Read213_RegisterStatusRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegisterStatusRequest();

            if ((object)(o.@StatusSubscription) == null) o.@StatusSubscription = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelStatusEvent>)o.@StatusSubscription;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations265 = 0;

            int readerCount265 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id487_StatusSubscription && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read212_ReelStatusEvent(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:StatusSubscription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:StatusSubscription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations265, ref readerCount265);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponse Read210_GetReelDevicesResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations266 = 0;

            int readerCount266 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id507_Features && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@Features = Read209_GetReelDevicesResponseFeatures(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse, CsiReelV1.xsd:Features");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse, CsiReelV1.xsd:Features");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations266, ref readerCount266);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponseFeatures Read209_GetReelDevicesResponseFeatures(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponseFeatures o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesResponseFeatures();

            if ((object)(o.@Feature) == null) o.@Feature = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1>)o.@Feature;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations267 = 0;

            int readerCount267 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id508_Feature && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read208_FeatureData1(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Feature");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Feature");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations267, ref readerCount267);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1 Read208_FeatureData1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id509_FeatureData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData1();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel>)o.@Reels;

            if ((object)(o.@AccelerationDecelerationTimes) == null) o.@AccelerationDecelerationTimes = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime>)o.@AccelerationDecelerationTimes;

            global::System.UInt16[] a_4 = null;

            int ca_4 = 0;

            global::System.UInt16[] a_5 = null;

            int ca_5 = 0;

            bool[] paramsRead = new bool[6];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id510_ReelType && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@ReelType = Read207_ReelType(Reader.Value);

                    paramsRead[3] = true;

                }

                else if (((object) Reader.LocalName == (object)id511_Speeds && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    string listValues = Reader.Value;

                    string[] vals = listValues.Split(null);

                    for (int i = 0; i < vals.Length; i++) {

                        a_4 = (global::System.UInt16[])EnsureArrayIndex(a_4, ca_4, typeof(global::System.UInt16));a_4[ca_4++] = System.Xml.XmlConvert.ToUInt16(vals[i]);

                    }

                }

                else if (((object) Reader.LocalName == (object)id512_Decelerations && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    string listValues = Reader.Value;

                    string[] vals = listValues.Split(null);

                    for (int i = 0; i < vals.Length; i++) {

                        a_5 = (global::System.UInt16[])EnsureArrayIndex(a_5, ca_5, typeof(global::System.UInt16));a_5[ca_5++] = System.Xml.XmlConvert.ToUInt16(vals[i]);

                    }

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId, CsiReelV1.xsd:ReelType, CsiReelV1.xsd:Speeds, CsiReelV1.xsd:Decelerations");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                o.@Speeds = (global::System.UInt16[])ShrinkArray(a_4, ca_4, typeof(global::System.UInt16), true);

                o.@Decelerations = (global::System.UInt16[])ShrinkArray(a_5, ca_5, typeof(global::System.UInt16), true);

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations268 = 0;

            int readerCount268 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations269 = 0;

                                int readerCount269 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read205_FeatureDataReel(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations269, ref readerCount269);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else if (((object) Reader.LocalName == (object)id513_AccelerationDecelerationTimes && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@AccelerationDecelerationTimes) == null) o.@AccelerationDecelerationTimes = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime> a_1_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime>)o.@AccelerationDecelerationTimes;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations270 = 0;

                                int readerCount270 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id514_Times && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_1_0) == null) Reader.Skip(); else a_1_0.Add(Read206_AccelerationDecelerationTime(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Times");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Times");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations270, ref readerCount270);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels, CsiReelV1.xsd:AccelerationDecelerationTimes");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels, CsiReelV1.xsd:AccelerationDecelerationTimes");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations268, ref readerCount268);

            }

            o.@Speeds = (global::System.UInt16[])ShrinkArray(a_4, ca_4, typeof(global::System.UInt16), true);

            o.@Decelerations = (global::System.UInt16[])ShrinkArray(a_5, ca_5, typeof(global::System.UInt16), true);

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime Read206_AccelerationDecelerationTime(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id515_AccelerationDecelerationTime && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AccelerationDecelerationTime();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations271 = 0;

            int readerCount271 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id516_AccelerationTimeToNextSpeed && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@AccelerationTimeToNextSpeed = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id517_Item && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@DecelerationTimeToPreviousSpeed = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:AccelerationTimeToNextSpeed, CsiReelV1.xsd:DecelerationTimeToPreviousSpeed");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:AccelerationTimeToNextSpeed, CsiReelV1.xsd:DecelerationTimeToPreviousSpeed");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations271, ref readerCount271);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel Read205_FeatureDataReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataReel();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations272 = 0;

            int readerCount272 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id518_Stops && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Stops = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id519_MaxSeekTime && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@MaxSeekTime = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stops, CsiReelV1.xsd:MaxSeekTime");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Stops, CsiReelV1.xsd:MaxSeekTime");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations272, ref readerCount272);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType Read207_ReelType(string s) {

            switch (s) {

                case @"GamePlayReels": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@GamePlayReels;

                case @"BonusReels": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@BonusReels;

                case @"Dice": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Dice;

                case @"Wheel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Wheel;

                case @"Prism": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Prism;

                case @"LinearSlider": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@LinearSlider;

                case @"Sphere": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Sphere;

                case @"Pointer": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Pointer;

                case @"Unknown": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType.@Unknown;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesRequest Read204_GetReelDevicesRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id461_GetReelDevicesRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetReelDevicesRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations273 = 0;

            int readerCount273 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations273, ref readerCount273);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationResponse Read203_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations274 = 0;

            int readerCount274 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations274, ref readerCount274);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationRequest Read202_ClearStatusRegistrationRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ClearStatusRegistrationRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations275 = 0;

            int readerCount275 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations275, ref readerCount275);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MulipleReelResponse Read201_MulipleReelResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id520_MulipleReelResponse && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MulipleReelResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MulipleReelResponse();

            if ((object)(o.@ReelRequestError) == null) o.@ReelRequestError = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError>)o.@ReelRequestError;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations276 = 0;

            int readerCount276 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id521_ReelRequestError && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read200_ReelRequestError(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelRequestError");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelRequestError");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations276, ref readerCount276);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError Read200_ReelRequestError(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id521_ReelRequestError && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReelRequestError();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations277 = 0;

            int readerCount277 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@ErrorCode = Read194_ReelErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:ErrorCode, CsiReelV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:ErrorCode, CsiReelV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations277, ref readerCount277);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeSpeedRequest Read199_ChangeSpeedRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeSpeedRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeSpeedRequest();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed>)o.@Reels;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations278 = 0;

            int readerCount278 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations279 = 0;

                                int readerCount279 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read198_ChangeReelSpeed(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations279, ref readerCount279);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations278, ref readerCount278);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed Read198_ChangeReelSpeed(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id522_ChangeReelSpeed && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeReelSpeed();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations280 = 0;

            int readerCount280 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id492_SpeedIndex && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@SpeedIndex = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id523_Period && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Period = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id494_Direction && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Direction = Read197_Direction(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id524_Immediate && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Immediate = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:SpeedIndex, CsiReelV1.xsd:Period, CsiReelV1.xsd:Direction, CsiReelV1.xsd:Immediate");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:SpeedIndex, CsiReelV1.xsd:Period, CsiReelV1.xsd:Direction, CsiReelV1.xsd:Immediate");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations280, ref readerCount280);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesResponse Read196_ApplyAttributesResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations281 = 0;

            int readerCount281 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id486_ReelResponse && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ReelResponse = Read195_ReelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:ReelResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations281, ref readerCount281);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequest Read193_ApplyAttributesRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequest();

            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel>)o.@Reels;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiReelV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations282 = 0;

            int readerCount282 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id491_Reels && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@Reels) == null) o.@Reels = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel> a_0_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel>)o.@Reels;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations283 = 0;

                                int readerCount283 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id493_Reel && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                                            if ((object)(a_0_0) == null) Reader.Skip(); else a_0_0.Add(Read192_ApplyAttributesRequestReel(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiReelV1.xsd:Reel");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations283, ref readerCount283);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Reels");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations282, ref readerCount282);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel Read192_ApplyAttributesRequestReel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id14_CsiReelV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ApplyAttributesRequestReel();

            bool[] paramsRead = new bool[6];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations284 = 0;

            int readerCount284 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id489_Number && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        {

                            o.@Number = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id497_Cock && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@CockSpecified = true;

                        {

                            o.@Cock = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id498_Bounce && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@BounceSpecified = true;

                        {

                            o.@Bounce = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id499_Shake && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@ShakeSpecified = true;

                        {

                            o.@Shake = Read189_Shake(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id500_Hover && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@HoverSpecified = true;

                        {

                            o.@Hover = Read190_Hover(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id501_HoverLimits && (object) Reader.NamespaceURI == (object)id14_CsiReelV1xsd)) {

                        o.@HoverLimits = Read191_HoverLimits(false, true);

                        paramsRead[5] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Cock, CsiReelV1.xsd:Bounce, CsiReelV1.xsd:Shake, CsiReelV1.xsd:Hover, CsiReelV1.xsd:HoverLimits");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiReelV1.xsd:Number, CsiReelV1.xsd:Cock, CsiReelV1.xsd:Bounce, CsiReelV1.xsd:Shake, CsiReelV1.xsd:Hover, CsiReelV1.xsd:HoverLimits");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations284, ref readerCount284);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow Read188_CsiWindow(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id11_CsiWindow && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations285 = 0;

            int readerCount285 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id525_AnimateRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read150_AnimateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id526_AnimateResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read153_AnimateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id527_ChangeZOrderRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read155_ChangeZOrderRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id528_ChangeZOrderResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read156_ChangeZOrderResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id529_CreatedRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read157_CreatedRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id530_CreatedResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read158_CreatedResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id531_DestroyedRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read159_DestroyedRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id532_DestroyedResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read160_DestroyedResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id533_MonitorConfigurationRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read161_MonitorConfigurationRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id534_MonitorConfigurationResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read171_MonitorConfigurationResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id535_MultiWindowRepositionRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read180_MultiWindowRepositionRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id536_MultiWindowRepositionResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read181_MultiWindowRepositionResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id537_MultiWindowSizeRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read182_MultiWindowSizeRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id538_MultiWindowSizeResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read183_MultiWindowSizeResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id539_RepositionRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read184_RepositionRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id540_RepositionResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read185_RepositionResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id541_SizeRequest && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read186_SizeRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id542_SizeResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Item = Read187_SizeResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:AnimateRequest, CsiWindowV1.xsd:AnimateResponse, CsiWindowV1.xsd:ChangeZOrderRequest, CsiWindowV1.xsd:ChangeZOrderResponse, CsiWindowV1.xsd:CreatedRequest, CsiWindowV1.xsd:CreatedResponse, CsiWindowV1.xsd:DestroyedRequest, CsiWindowV1.xsd:DestroyedResponse, CsiWindowV1.xsd:MonitorConfigurationRequest, CsiWindowV1.xsd:MonitorConfigurationResponse, CsiWindowV1.xsd:MultiWindowRepositionRequest, CsiWindowV1.xsd:MultiWindowRepositionResponse, CsiWindowV1.xsd:MultiWindowSizeRequest, CsiWindowV1.xsd:MultiWindowSizeResponse, CsiWindowV1.xsd:RepositionRequest, CsiWindowV1.xsd:RepositionResponse, CsiWindowV1.xsd:SizeRequest, CsiWindowV1.xsd:SizeResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:AnimateRequest, CsiWindowV1.xsd:AnimateResponse, CsiWindowV1.xsd:ChangeZOrderRequest, CsiWindowV1.xsd:ChangeZOrderResponse, CsiWindowV1.xsd:CreatedRequest, CsiWindowV1.xsd:CreatedResponse, CsiWindowV1.xsd:DestroyedRequest, CsiWindowV1.xsd:DestroyedResponse, CsiWindowV1.xsd:MonitorConfigurationRequest, CsiWindowV1.xsd:MonitorConfigurationResponse, CsiWindowV1.xsd:MultiWindowRepositionRequest, CsiWindowV1.xsd:MultiWindowRepositionResponse, CsiWindowV1.xsd:MultiWindowSizeRequest, CsiWindowV1.xsd:MultiWindowSizeResponse, CsiWindowV1.xsd:RepositionRequest, CsiWindowV1.xsd:RepositionResponse, CsiWindowV1.xsd:SizeRequest, CsiWindowV1.xsd:SizeResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations285, ref readerCount285);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeResponse Read187_SizeResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations286 = 0;

            int readerCount286 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowResponse = Read152_WindowResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowIdSpecified = true;

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations286, ref readerCount286);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse Read152_WindowResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations287 = 0;

            int readerCount287 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@ErrorCode = Read151_WindowErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:ErrorCode, CsiWindowV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:ErrorCode, CsiWindowV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations287, ref readerCount287);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode Read151_WindowErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@NONE;

                case @"UNKNOWN_WINDOW": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@UNKNOWN_WINDOW;

                case @"INVALID_WINDOW": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_WINDOW;

                case @"INVALID_WINDOW_LOCATION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_WINDOW_LOCATION;

                case @"INVALID_VIEWPORT_LOCATION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_VIEWPORT_LOCATION;

                case @"INVALID_ANIMATION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@INVALID_ANIMATION;

                case @"UNSUPPORTED_REQUEST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode.@UNSUPPORTED_REQUEST;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeRequest Read186_SizeRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SizeRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations288 = 0;

            int readerCount288 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id545_Window && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Window = Read179_Window(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Window");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Window");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations288, ref readerCount288);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window Read179_Window(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id545_Window && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations289 = 0;

            int readerCount289 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id170_Type && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Type = Read172_WindowType(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id546_Status && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Status = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id547_ViewportExtents && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@ViewportExtents = Read162_DesktopRectangle1(false, true);

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id548_Viewports && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Viewports = Read178_ViewportList(false, true);

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId, CsiWindowV1.xsd:Type, CsiWindowV1.xsd:Status, CsiWindowV1.xsd:ViewportExtents, CsiWindowV1.xsd:Viewports");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId, CsiWindowV1.xsd:Type, CsiWindowV1.xsd:Status, CsiWindowV1.xsd:ViewportExtents, CsiWindowV1.xsd:Viewports");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations289, ref readerCount289);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ViewportList Read178_ViewportList(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id549_ViewportList && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ViewportList o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ViewportList();

            if ((object)(o.@Viewport) == null) o.@Viewport = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport>)o.@Viewport;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations290 = 0;

            int readerCount290 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id550_Viewport && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read177_Viewport(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Viewport");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Viewport");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations290, ref readerCount290);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport Read177_Viewport(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id550_Viewport && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Viewport();

            bool[] paramsRead = new bool[9];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations291 = 0;

            int readerCount291 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id551_ViewportId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@ViewportId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id552_Dock && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Dock = Read173_DockType(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id553_DockPriority && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@DockPriority = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id554_RequestedViewportCoordinates && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@RequestedViewportCoordinates = Read147_VirtualRectangle(false, true);

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id555_AdjustedViewportCoordinates && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@AdjustedViewportCoordinates = Read147_VirtualRectangle(false, true);

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id556_AdjustedViewportRectangle && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@AdjustedViewportRectangle = Read162_DesktopRectangle1(false, true);

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id557_RequestedViewportRectangle && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@RequestedViewportRectangle = Read162_DesktopRectangle1(false, true);

                        paramsRead[6] = true;

                    }

                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id558_LayerIndex && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@LayerIndexSpecified = true;

                        {

                            o.@LayerIndex = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[7] = true;

                    }

                    else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id559_StereoscopicFrames && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@StereoscopicFrames = Read176_StereoscopicFrameList(false, true);

                        paramsRead[8] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:ViewportId, CsiWindowV1.xsd:Dock, CsiWindowV1.xsd:DockPriority, CsiWindowV1.xsd:RequestedViewportCoordinates, CsiWindowV1.xsd:AdjustedViewportCoordinates, CsiWindowV1.xsd:AdjustedViewportRectangle, CsiWindowV1.xsd:RequestedViewportRectangle, CsiWindowV1.xsd:LayerIndex, CsiWindowV1.xsd:StereoscopicFrames");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:ViewportId, CsiWindowV1.xsd:Dock, CsiWindowV1.xsd:DockPriority, CsiWindowV1.xsd:RequestedViewportCoordinates, CsiWindowV1.xsd:AdjustedViewportCoordinates, CsiWindowV1.xsd:AdjustedViewportRectangle, CsiWindowV1.xsd:RequestedViewportRectangle, CsiWindowV1.xsd:LayerIndex, CsiWindowV1.xsd:StereoscopicFrames");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations291, ref readerCount291);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameList Read176_StereoscopicFrameList(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id560_StereoscopicFrameList && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameList o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrameList();

            if ((object)(o.@StereoscopicFrame) == null) o.@StereoscopicFrame = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.StereoscopicFrame>)o.@StereoscopicFrame;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations292 = 0;

            int readerCount292 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id317_StereoscopicFrame && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read175_StereoscopicFrame(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:StereoscopicFrame");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:StereoscopicFrame");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations292, ref readerCount292);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1 Read162_DesktopRectangle1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id320_DesktopRectangle && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DesktopRectangle1();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations293 = 0;

            int readerCount293 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id321_x && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@x = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id322_y && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@y = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id323_w && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@w = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id324_h && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@h = System.Xml.XmlConvert.ToInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:x, CsiWindowV1.xsd:y, CsiWindowV1.xsd:w, CsiWindowV1.xsd:h");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:x, CsiWindowV1.xsd:y, CsiWindowV1.xsd:w, CsiWindowV1.xsd:h");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations293, ref readerCount293);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle Read147_VirtualRectangle(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id561_VirtualRectangle && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.VirtualRectangle();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations294 = 0;

            int readerCount294 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id321_x && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@x = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id322_y && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@y = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id323_w && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@w = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id324_h && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@h = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:x, CsiWindowV1.xsd:y, CsiWindowV1.xsd:w, CsiWindowV1.xsd:h");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:x, CsiWindowV1.xsd:y, CsiWindowV1.xsd:w, CsiWindowV1.xsd:h");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations294, ref readerCount294);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType Read173_DockType(string s) {

            switch (s) {

                case @"Left": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Left;

                case @"Top": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Top;

                case @"Right": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Right;

                case @"Bottom": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Bottom;

                case @"LeftTop": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@LeftTop;

                case @"RightTop": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@RightTop;

                case @"LeftBottom": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@LeftBottom;

                case @"RightBottom": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@RightBottom;

                case @"Overlay": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType.@Overlay;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DockType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType Read172_WindowType(string s) {

            switch (s) {

                case @"Dockable": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType.@Dockable;

                case @"Dialog": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType.@Dialog;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.WindowType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionResponse Read185_RepositionResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations295 = 0;

            int readerCount295 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowResponse = Read152_WindowResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowIdSpecified = true;

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations295, ref readerCount295);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionRequest Read184_RepositionRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RepositionRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations296 = 0;

            int readerCount296 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id545_Window && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Window = Read179_Window(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Window");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Window");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations296, ref readerCount296);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeResponse Read183_MultiWindowSizeResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeResponse();

            if ((object)(o.@WindowResponse) == null) o.@WindowResponse = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse>)o.@WindowResponse;

            if ((object)(o.@WindowId) == null) o.@WindowId = new global::System.Collections.Generic.List<global::System.UInt64>();

            global::System.Collections.Generic.List<global::System.UInt64> a_1 = (global::System.Collections.Generic.List<global::System.UInt64>)o.@WindowId;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations297 = 0;

            int readerCount297 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read152_WindowResponse(false, true));

                    }

                    else if (((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            a_1.Add(System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations297, ref readerCount297);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeRequest Read182_MultiWindowSizeRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowSizeRequest();

            if ((object)(o.@Windows) == null) o.@Windows = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window>)o.@Windows;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations298 = 0;

            int readerCount298 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id562_Windows && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read179_Window(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Windows");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Windows");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations298, ref readerCount298);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionResponse Read181_MultiWindowRepositionResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionResponse();

            if ((object)(o.@WindowResponse) == null) o.@WindowResponse = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.WindowResponse>)o.@WindowResponse;

            if ((object)(o.@WindowId) == null) o.@WindowId = new global::System.Collections.Generic.List<global::System.UInt64>();

            global::System.Collections.Generic.List<global::System.UInt64> a_1 = (global::System.Collections.Generic.List<global::System.UInt64>)o.@WindowId;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations299 = 0;

            int readerCount299 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read152_WindowResponse(false, true));

                    }

                    else if (((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            a_1.Add(System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations299, ref readerCount299);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionRequest Read180_MultiWindowRepositionRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MultiWindowRepositionRequest();

            if ((object)(o.@Windows) == null) o.@Windows = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Window>)o.@Windows;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations300 = 0;

            int readerCount300 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id562_Windows && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read179_Window(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Windows");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Windows");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations300, ref readerCount300);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponse Read171_MonitorConfigurationResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations301 = 0;

            int readerCount301 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowResponse = Read152_WindowResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id563_Data && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Data = Read170_Item(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:Data");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:Data");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations301, ref readerCount301);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponseData Read170_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponseData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationResponseData();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations302 = 0;

            int readerCount302 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id290_Desktop && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Desktop = Read162_DesktopRectangle1(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id291_MonitorConfiguration && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@MonitorConfiguration = Read169_MonitorConfiguration1(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Desktop, CsiWindowV1.xsd:MonitorConfiguration");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Desktop, CsiWindowV1.xsd:MonitorConfiguration");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations302, ref readerCount302);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfiguration1 Read169_MonitorConfiguration1(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id291_MonitorConfiguration && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfiguration1 o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfiguration1();

            if ((object)(o.@Monitor) == null) o.@Monitor = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor>)o.@Monitor;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations303 = 0;

            int readerCount303 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id292_Monitor && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read168_MonitorConfigurationMonitor(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Monitor");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Monitor");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations303, ref readerCount303);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor Read168_MonitorConfigurationMonitor(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitor();

            bool[] paramsRead = new bool[9];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations304 = 0;

            int readerCount304 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id564_Identifier && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Identifier = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id289_Role && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Role = Read163_MonitorRole1(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id293_Style && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Style = Read164_MonitorStyle1(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id294_Aspect && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Aspect = Read165_MonitorAspect1(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id295_Model && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Model = Read166_Item(false, true);

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id296_DesktopCoordinates && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@DesktopCoordinates = Read162_DesktopRectangle1(false, true);

                        paramsRead[5] = true;

                    }

                    else if (!paramsRead[6] && ((object) Reader.LocalName == (object)id297_VirtualX && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@VirtualX = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[6] = true;

                    }

                    else if (!paramsRead[7] && ((object) Reader.LocalName == (object)id298_VirtualY && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@VirtualY = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[7] = true;

                    }

                    else if (!paramsRead[8] && ((object) Reader.LocalName == (object)id299_AdditionalLayers && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@AdditionalLayers = Read167_Item(false, true);

                        paramsRead[8] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Identifier, CsiWindowV1.xsd:Role, CsiWindowV1.xsd:Style, CsiWindowV1.xsd:Aspect, CsiWindowV1.xsd:Model, CsiWindowV1.xsd:DesktopCoordinates, CsiWindowV1.xsd:VirtualX, CsiWindowV1.xsd:VirtualY, CsiWindowV1.xsd:AdditionalLayers");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Identifier, CsiWindowV1.xsd:Role, CsiWindowV1.xsd:Style, CsiWindowV1.xsd:Aspect, CsiWindowV1.xsd:Model, CsiWindowV1.xsd:DesktopCoordinates, CsiWindowV1.xsd:VirtualX, CsiWindowV1.xsd:VirtualY, CsiWindowV1.xsd:AdditionalLayers");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations304, ref readerCount304);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorAdditionalLayers Read167_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorAdditionalLayers o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorAdditionalLayers();

            if ((object)(o.@OffsetX) == null) o.@OffsetX = new global::System.Collections.Generic.List<global::System.Int32>();

            global::System.Collections.Generic.List<global::System.Int32> a_0 = (global::System.Collections.Generic.List<global::System.Int32>)o.@OffsetX;

            if ((object)(o.@OffsetY) == null) o.@OffsetY = new global::System.Collections.Generic.List<global::System.Int32>();

            global::System.Collections.Generic.List<global::System.Int32> a_1 = (global::System.Collections.Generic.List<global::System.Int32>)o.@OffsetY;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations305 = 0;

            int readerCount305 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id318_OffsetX && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            a_0.Add(System.Xml.XmlConvert.ToInt32(Reader.ReadElementString()));

                        }

                    }

                    else if (((object) Reader.LocalName == (object)id319_OffsetY && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            a_1.Add(System.Xml.XmlConvert.ToInt32(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:OffsetX, CsiWindowV1.xsd:OffsetY");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:OffsetX, CsiWindowV1.xsd:OffsetY");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations305, ref readerCount305);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorModel Read166_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorModel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationMonitorModel();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations306 = 0;

            int readerCount306 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id326_Manufacturer && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Manufacturer = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id295_Model && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Model = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id327_Version && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Version = Reader.ReadElementString();

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Manufacturer, CsiWindowV1.xsd:Model, CsiWindowV1.xsd:Version");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Manufacturer, CsiWindowV1.xsd:Model, CsiWindowV1.xsd:Version");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations306, ref readerCount306);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1 Read165_MonitorAspect1(string s) {

            switch (s) {

                case @"Standard": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Standard;

                case @"Widescreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Widescreen;

                case @"Narrow": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Narrow;

                case @"Ultrawide": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Ultrawide;

                case @"Portrait": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1.@Portrait;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorAspect1));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1 Read164_MonitorStyle1(string s) {

            switch (s) {

                case @"Normal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@Normal;

                case @"RoundTop": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@RoundTop;

                case @"PureDepth": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@PureDepth;

                case @"ExtendedTouchscreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1.@ExtendedTouchscreen;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorStyle1));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1 Read163_MonitorRole1(string s) {

            switch (s) {

                case @"Main": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@Main;

                case @"Top": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@Top;

                case @"BellyGlass": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@BellyGlass;

                case @"ButtonPanel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@ButtonPanel;

                case @"Topper": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1.@Topper;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorRole1));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationRequest Read161_MonitorConfigurationRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id533_MonitorConfigurationRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MonitorConfigurationRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations307 = 0;

            int readerCount307 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations307, ref readerCount307);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedResponse Read160_DestroyedResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations308 = 0;

            int readerCount308 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowResponse = Read152_WindowResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowIdSpecified = true;

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations308, ref readerCount308);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedRequest Read159_DestroyedRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DestroyedRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations309 = 0;

            int readerCount309 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations309, ref readerCount309);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedResponse Read158_CreatedResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations310 = 0;

            int readerCount310 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowResponse = Read152_WindowResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowIdSpecified = true;

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations310, ref readerCount310);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedRequest Read157_CreatedRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CreatedRequest();

            if ((object)(o.@WindowHandle) == null) o.@WindowHandle = new global::System.Collections.Generic.List<global::System.Int64>();

            global::System.Collections.Generic.List<global::System.Int64> a_4 = (global::System.Collections.Generic.List<global::System.Int64>)o.@WindowHandle;

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations311 = 0;

            int readerCount311 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id565_Flags && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Flags = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id566_MultitouchSupported && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@MultitouchSupportedSpecified = true;

                        {

                            o.@MultitouchSupported = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id567_SimulateMouseEventsOnDpp && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@SimulateMouseEventsOnDppSpecified = true;

                        {

                            o.@SimulateMouseEventsOnDpp = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id568_PriorityType && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@PriorityType = Read89_Priority(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id569_WindowHandle && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            a_4.Add(System.Xml.XmlConvert.ToInt64(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Flags, CsiWindowV1.xsd:MultitouchSupported, CsiWindowV1.xsd:SimulateMouseEventsOnDpp, CsiWindowV1.xsd:PriorityType, CsiWindowV1.xsd:WindowHandle");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Flags, CsiWindowV1.xsd:MultitouchSupported, CsiWindowV1.xsd:SimulateMouseEventsOnDpp, CsiWindowV1.xsd:PriorityType, CsiWindowV1.xsd:WindowHandle");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations311, ref readerCount311);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeZOrderResponse Read156_ChangeZOrderResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeZOrderResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChangeZOrderResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations312 = 0;

            int readerCount312 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowResponse = Read152_WindowResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowIdSpecified = true;

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse, CsiWindowV1.xsd:WindowId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations312, ref readerCount312);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequest Read155_ChangeZOrderRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations313 = 0;

            int readerCount313 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id570_AbsolutePosition && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@AbsolutePosition = Read154_Item(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId, CsiWindowV1.xsd:AbsolutePosition");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId, CsiWindowV1.xsd:AbsolutePosition");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations313, ref readerCount313);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition Read154_Item(string s) {

            switch (s) {

                case @"Front": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition.@Front;

                case @"Back": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition.@Back;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.ChangeZOrderRequestAbsolutePosition));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateResponse Read153_AnimateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations314 = 0;

            int readerCount314 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id543_WindowResponse && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@WindowResponse = Read152_WindowResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations314, ref readerCount314);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateRequest Read150_AnimateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimateRequest();

            if ((object)(o.@Animations) == null) o.@Animations = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation>)o.@Animations;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations315 = 0;

            int readerCount315 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id495_Duration && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@Duration = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id571_Animations && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read149_Animation(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:Duration, CsiWindowV1.xsd:Animations");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:Duration, CsiWindowV1.xsd:Animations");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations315, ref readerCount315);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation Read149_Animation(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id572_Animation && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Animation();

            if ((object)(o.@AnimationViewports) == null) o.@AnimationViewports = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport>)o.@AnimationViewports;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations316 = 0;

            int readerCount316 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id544_WindowId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@WindowId = System.Xml.XmlConvert.ToUInt64(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id573_AnimationViewports && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read148_AnimationViewport(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId, CsiWindowV1.xsd:AnimationViewports");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:WindowId, CsiWindowV1.xsd:AnimationViewports");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations316, ref readerCount316);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport Read148_AnimationViewport(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id574_AnimationViewport && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id12_CsiWindowV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AnimationViewport();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations317 = 0;

            int readerCount317 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id551_ViewportId && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@ViewportId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id558_LayerIndex && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        {

                            o.@LayerIndex = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id575_Start && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@Start = Read147_VirtualRectangle(false, true);

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id576_End && (object) Reader.NamespaceURI == (object)id12_CsiWindowV1xsd)) {

                        o.@End = Read147_VirtualRectangle(false, true);

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiWindowV1.xsd:ViewportId, CsiWindowV1.xsd:LayerIndex, CsiWindowV1.xsd:Start, CsiWindowV1.xsd:End");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiWindowV1.xsd:ViewportId, CsiWindowV1.xsd:LayerIndex, CsiWindowV1.xsd:Start, CsiWindowV1.xsd:End");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations317, ref readerCount317);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound Read146_CsiSound(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id9_CsiSound && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations318 = 0;

            int readerCount318 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id577_ChairEnablePowerRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read111_ChairEnablePowerRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id578_ChairEnablePowerResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read114_ChairEnablePowerResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id579_ChairPoweredRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read115_ChairPoweredRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id580_ChairPoweredResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read116_ChairPoweredResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id581_GetAudioEndpointsRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read117_GetAudioEndpointsRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id582_GetAudioEndpointsResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read119_GetAudioEndpointsResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id583_HeadphoneJackChangedEvent && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read121_HeadphoneJackChangedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id584_MuteClientsRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read123_MuteClientsRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id585_MuteClientsResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read124_MuteClientsResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id586_SetDefaultAudioEndpointRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read125_SetDefaultAudioEndpointRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id587_Item && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read126_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id588_SetVolumePlayerLevelRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read127_SetVolumePlayerLevelRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id589_SetVolumePlayerLevelResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read128_SetVolumePlayerLevelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id590_VolumeAllGroupsRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read129_VolumeAllGroupsRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id591_VolumeAllGroupsResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read133_VolumeAllGroupsResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id592_VolumeChangedEvent && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read134_VolumeChangedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id593_Item && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read135_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id594_VolumeMuteAllStatusRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read136_VolumeMuteAllStatusRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id595_VolumeMuteAllStatusResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read137_VolumeMuteAllStatusResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id596_VolumePlayerLevelChangedEvent && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read138_VolumePlayerLevelChangedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id597_VolumePlayerLevelRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read139_VolumePlayerLevelRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id598_VolumePlayerLevelResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read140_VolumePlayerLevelResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id599_Item && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read141_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id600_VolumePlayerSelectableRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read142_VolumePlayerSelectableRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id601_VolumePlayerSelectableResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read143_VolumePlayerSelectableResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id602_VolumeRequest && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read144_VolumeRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id603_VolumeResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Item = Read145_VolumeResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:ChairEnablePowerRequest, CsiSoundV1.xsd:ChairEnablePowerResponse, CsiSoundV1.xsd:ChairPoweredRequest, CsiSoundV1.xsd:ChairPoweredResponse, CsiSoundV1.xsd:GetAudioEndpointsRequest, CsiSoundV1.xsd:GetAudioEndpointsResponse, CsiSoundV1.xsd:HeadphoneJackChangedEvent, CsiSoundV1.xsd:MuteClientsRequest, CsiSoundV1.xsd:MuteClientsResponse, CsiSoundV1.xsd:SetDefaultAudioEndpointRequest, CsiSoundV1.xsd:SetDefaultAudioEndpointResponse, CsiSoundV1.xsd:SetVolumePlayerLevelRequest, CsiSoundV1.xsd:SetVolumePlayerLevelResponse, CsiSoundV1.xsd:VolumeAllGroupsRequest, CsiSoundV1.xsd:VolumeAllGroupsResponse, CsiSoundV1.xsd:VolumeChangedEvent, CsiSoundV1.xsd:VolumeMuteAllStatusChangedEvent, CsiSoundV1.xsd:VolumeMuteAllStatusRequest, CsiSoundV1.xsd:VolumeMuteAllStatusResponse, CsiSoundV1.xsd:VolumePlayerLevelChangedEvent, CsiSoundV1.xsd:VolumePlayerLevelRequest, CsiSoundV1.xsd:VolumePlayerLevelResponse, CsiSoundV1.xsd:VolumePlayerSelectableChangedEvent, CsiSoundV1.xsd:VolumePlayerSelectableRequest, CsiSoundV1.xsd:VolumePlayerSelectableResponse, CsiSoundV1.xsd:VolumeRequest, CsiSoundV1.xsd:VolumeResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:ChairEnablePowerRequest, CsiSoundV1.xsd:ChairEnablePowerResponse, CsiSoundV1.xsd:ChairPoweredRequest, CsiSoundV1.xsd:ChairPoweredResponse, CsiSoundV1.xsd:GetAudioEndpointsRequest, CsiSoundV1.xsd:GetAudioEndpointsResponse, CsiSoundV1.xsd:HeadphoneJackChangedEvent, CsiSoundV1.xsd:MuteClientsRequest, CsiSoundV1.xsd:MuteClientsResponse, CsiSoundV1.xsd:SetDefaultAudioEndpointRequest, CsiSoundV1.xsd:SetDefaultAudioEndpointResponse, CsiSoundV1.xsd:SetVolumePlayerLevelRequest, CsiSoundV1.xsd:SetVolumePlayerLevelResponse, CsiSoundV1.xsd:VolumeAllGroupsRequest, CsiSoundV1.xsd:VolumeAllGroupsResponse, CsiSoundV1.xsd:VolumeChangedEvent, CsiSoundV1.xsd:VolumeMuteAllStatusChangedEvent, CsiSoundV1.xsd:VolumeMuteAllStatusRequest, CsiSoundV1.xsd:VolumeMuteAllStatusResponse, CsiSoundV1.xsd:VolumePlayerLevelChangedEvent, CsiSoundV1.xsd:VolumePlayerLevelRequest, CsiSoundV1.xsd:VolumePlayerLevelResponse, CsiSoundV1.xsd:VolumePlayerSelectableChangedEvent, CsiSoundV1.xsd:VolumePlayerSelectableRequest, CsiSoundV1.xsd:VolumePlayerSelectableResponse, CsiSoundV1.xsd:VolumeRequest, CsiSoundV1.xsd:VolumeResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations318, ref readerCount318);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeResponse Read145_VolumeResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations319 = 0;

            int readerCount319 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id605_GroupVolume && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@GroupVolume = Read131_GroupVolumeSetting(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:GroupVolume");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:GroupVolume");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations319, ref readerCount319);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting Read131_GroupVolumeSetting(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id606_GroupVolumeSetting && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations320 = 0;

            int readerCount320 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id607_VolumeLevel && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@VolumeLevel = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id176_SoundGroup && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@SoundGroup = Read130_GroupName(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:VolumeLevel, CsiSoundV1.xsd:SoundGroup");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:VolumeLevel, CsiSoundV1.xsd:SoundGroup");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations320, ref readerCount320);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse Read113_SoundResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations321 = 0;

            int readerCount321 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@ErrorCode = Read112_SoundErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:ErrorCode, CsiSoundV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:ErrorCode, CsiSoundV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations321, ref readerCount321);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode Read112_SoundErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@NONE;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"CHAIR_NOT_INSTALLED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CHAIR_NOT_INSTALLED;

                case @"CHAIR_COMMUNICATION_FAILURE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CHAIR_COMMUNICATION_FAILURE;

                case @"VOLUME_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@VOLUME_ERROR;

                case @"CSI_SCHEMA_VERSION_MISMATCH": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@CSI_SCHEMA_VERSION_MISMATCH;

                case @"WASAPI_FAILURE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode.@WASAPI_FAILURE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SoundErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeRequest Read144_VolumeRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations322 = 0;

            int readerCount322 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id176_SoundGroup && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@SoundGroup = Read130_GroupName(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundGroup");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundGroup");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations322, ref readerCount322);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableResponse Read143_VolumePlayerSelectableResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations323 = 0;

            int readerCount323 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id608_PlayerSelectable && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@PlayerSelectableSpecified = true;

                        {

                            o.@PlayerSelectable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id609_PlayerMuteSelectable && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@PlayerMuteSelectableSpecified = true;

                        {

                            o.@PlayerMuteSelectable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:PlayerSelectable, CsiSoundV1.xsd:PlayerMuteSelectable");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:PlayerSelectable, CsiSoundV1.xsd:PlayerMuteSelectable");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations323, ref readerCount323);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableRequest Read142_VolumePlayerSelectableRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id600_VolumePlayerSelectableRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations324 = 0;

            int readerCount324 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations324, ref readerCount324);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableChangedEvent Read141_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerSelectableChangedEvent();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations325 = 0;

            int readerCount325 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id610_VolumePlayerSelectable && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@VolumePlayerSelectable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id609_PlayerMuteSelectable && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@PlayerMuteSelectableSpecified = true;

                        {

                            o.@PlayerMuteSelectable = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:VolumePlayerSelectable, CsiSoundV1.xsd:PlayerMuteSelectable");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:VolumePlayerSelectable, CsiSoundV1.xsd:PlayerMuteSelectable");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations325, ref readerCount325);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelResponse Read140_VolumePlayerLevelResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelResponse();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations326 = 0;

            int readerCount326 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id611_VolumePlayerLevel && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@VolumePlayerLevelSpecified = true;

                        {

                            o.@VolumePlayerLevel = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id612_PlayerMuteSelected && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@PlayerMuteSelectedSpecified = true;

                        {

                            o.@PlayerMuteSelected = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id613_DefaultVolumePlayerLevel && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@DefaultVolumePlayerLevelSpecified = true;

                        {

                            o.@DefaultVolumePlayerLevel = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:VolumePlayerLevel, CsiSoundV1.xsd:PlayerMuteSelected, CsiSoundV1.xsd:DefaultVolumePlayerLevel");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:VolumePlayerLevel, CsiSoundV1.xsd:PlayerMuteSelected, CsiSoundV1.xsd:DefaultVolumePlayerLevel");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations326, ref readerCount326);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelRequest Read139_VolumePlayerLevelRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id597_VolumePlayerLevelRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations327 = 0;

            int readerCount327 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations327, ref readerCount327);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelChangedEvent Read138_VolumePlayerLevelChangedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumePlayerLevelChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations328 = 0;

            int readerCount328 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id611_VolumePlayerLevel && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@VolumePlayerLevel = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:VolumePlayerLevel");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:VolumePlayerLevel");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations328, ref readerCount328);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusResponse Read137_VolumeMuteAllStatusResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations329 = 0;

            int readerCount329 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id614_MuteAll && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@MuteAllSpecified = true;

                        {

                            o.@MuteAll = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:MuteAll");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:MuteAll");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations329, ref readerCount329);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusRequest Read136_VolumeMuteAllStatusRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id594_VolumeMuteAllStatusRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations330 = 0;

            int readerCount330 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations330, ref readerCount330);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusChangedEvent Read135_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeMuteAllStatusChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations331 = 0;

            int readerCount331 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id614_MuteAll && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@MuteAll = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:MuteAll");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:MuteAll");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations331, ref readerCount331);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeChangedEvent Read134_VolumeChangedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations332 = 0;

            int readerCount332 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id605_GroupVolume && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@GroupVolume = Read131_GroupVolumeSetting(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:GroupVolume");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:GroupVolume");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations332, ref readerCount332);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsResponse Read133_VolumeAllGroupsResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations333 = 0;

            int readerCount333 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id615_Volumes && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Volumes = Read132_Volumes(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Volumes");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Volumes");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations333, ref readerCount333);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Volumes Read132_Volumes(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id615_Volumes && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Volumes o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Volumes();

            if ((object)(o.@GroupVolume) == null) o.@GroupVolume = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GroupVolumeSetting>)o.@GroupVolume;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations334 = 0;

            int readerCount334 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id605_GroupVolume && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read131_GroupVolumeSetting(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:GroupVolume");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:GroupVolume");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations334, ref readerCount334);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsRequest Read129_VolumeAllGroupsRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id590_VolumeAllGroupsRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.VolumeAllGroupsRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations335 = 0;

            int readerCount335 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations335, ref readerCount335);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelResponse Read128_SetVolumePlayerLevelResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations336 = 0;

            int readerCount336 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations336, ref readerCount336);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelRequest Read127_SetVolumePlayerLevelRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetVolumePlayerLevelRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations337 = 0;

            int readerCount337 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id611_VolumePlayerLevel && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@VolumePlayerLevel = System.Xml.XmlConvert.ToSingle(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id612_PlayerMuteSelected && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@PlayerMuteSelectedSpecified = true;

                        {

                            o.@PlayerMuteSelected = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:VolumePlayerLevel, CsiSoundV1.xsd:PlayerMuteSelected");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:VolumePlayerLevel, CsiSoundV1.xsd:PlayerMuteSelected");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations337, ref readerCount337);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointResponse Read126_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations338 = 0;

            int readerCount338 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations338, ref readerCount338);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointRequest Read125_SetDefaultAudioEndpointRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetDefaultAudioEndpointRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations339 = 0;

            int readerCount339 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id616_Endpoint && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@Endpoint = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:Endpoint");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:Endpoint");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations339, ref readerCount339);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsResponse Read124_MuteClientsResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsResponse();

            if ((object)(o.@PriorityMuteState) == null) o.@PriorityMuteState = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState>)o.@PriorityMuteState;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations340 = 0;

            int readerCount340 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id617_PriorityMuteState && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read122_PriorityMuteState(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:PriorityMuteState");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:PriorityMuteState");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations340, ref readerCount340);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState Read122_PriorityMuteState(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id617_PriorityMuteState && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations341 = 0;

            int readerCount341 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id568_PriorityType && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@PriorityType = Read89_Priority(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id618_Muted && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@Muted = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:PriorityType, CsiSoundV1.xsd:Muted");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:PriorityType, CsiSoundV1.xsd:Muted");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations341, ref readerCount341);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsRequest Read123_MuteClientsRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.MuteClientsRequest();

            if ((object)(o.@PriorityMuteState) == null) o.@PriorityMuteState = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PriorityMuteState>)o.@PriorityMuteState;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations342 = 0;

            int readerCount342 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id617_PriorityMuteState && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read122_PriorityMuteState(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:PriorityMuteState");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:PriorityMuteState");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations342, ref readerCount342);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackChangedEvent Read121_HeadphoneJackChangedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackChangedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackChangedEvent();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations343 = 0;

            int readerCount343 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id619_HeadphoneJackState && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@HeadphoneJackState = Read120_HeadphoneJackState(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:HeadphoneJackState");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:HeadphoneJackState");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations343, ref readerCount343);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState Read120_HeadphoneJackState(string s) {

            switch (s) {

                case @"Inserted": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState.@Inserted;

                case @"Removed": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState.@Removed;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.HeadphoneJackState));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsResponse Read119_GetAudioEndpointsResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations344 = 0;

            int readerCount344 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id620_Endpoints && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@Endpoints = Read118_EndpointList(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Endpoints");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Endpoints");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations344, ref readerCount344);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EndpointList Read118_EndpointList(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id621_EndpointList && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EndpointList o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EndpointList();

            if ((object)(o.@Endpoint) == null) o.@Endpoint = new global::System.Collections.Generic.List<global::System.String>();

            global::System.Collections.Generic.List<global::System.String> a_0 = (global::System.Collections.Generic.List<global::System.String>)o.@Endpoint;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations345 = 0;

            int readerCount345 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id616_Endpoint && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            a_0.Add(Reader.ReadElementString());

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:Endpoint");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:Endpoint");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations345, ref readerCount345);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsRequest Read117_GetAudioEndpointsRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetAudioEndpointsRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations346 = 0;

            int readerCount346 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id622_Unused && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@UnusedSpecified = true;

                        {

                            o.@Unused = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:Unused");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:Unused");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations346, ref readerCount346);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredResponse Read116_ChairPoweredResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations347 = 0;

            int readerCount347 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id623_Powered && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@PoweredSpecified = true;

                        {

                            o.@Powered = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Powered");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Powered");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations347, ref readerCount347);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredRequest Read115_ChairPoweredRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id579_ChairPoweredRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairPoweredRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations348 = 0;

            int readerCount348 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations348, ref readerCount348);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerResponse Read114_ChairEnablePowerResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations349 = 0;

            int readerCount349 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id604_SoundResponse && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SoundResponse = Read113_SoundResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id624_Success && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        o.@SuccessSpecified = true;

                        {

                            o.@Success = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Success");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:SoundResponse, CsiSoundV1.xsd:Success");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations349, ref readerCount349);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerRequest Read111_ChairEnablePowerRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id10_CsiSoundV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ChairEnablePowerRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations350 = 0;

            int readerCount350 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id625_EnablePower && (object) Reader.NamespaceURI == (object)id10_CsiSoundV1xsd)) {

                        {

                            o.@EnablePower = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiSoundV1.xsd:EnablePower");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiSoundV1.xsd:EnablePower");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations350, ref readerCount350);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource Read110_CsiResource(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id7_CsiResource && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations351 = 0;

            int readerCount351 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id626_AcquireDeviceRequest && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read91_AcquireDeviceRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id627_AcquireDeviceResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read97_AcquireDeviceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id628_ConnectedDevicesRequest && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read98_ConnectedDevicesRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id629_ConnectedDevicesResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read100_ConnectedDevicesResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id630_DeviceAcquiredEvent && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read101_DeviceAcquiredEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id631_DeviceConnectedEvent && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read102_DeviceConnectedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id632_DeviceReleasedEvent && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read103_DeviceReleasedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id633_DeviceRemovedEvent && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read104_DeviceRemovedEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id634_EventRegistrationRequest && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read106_EventRegistrationRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id635_EventRegistrationResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read107_EventRegistrationResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id636_ReleaseDeviceRequest && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read108_ReleaseDeviceRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id637_ReleaseDeviceResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@Item = Read109_ReleaseDeviceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:AcquireDeviceRequest, CsiResourceV1.xsd:AcquireDeviceResponse, CsiResourceV1.xsd:ConnectedDevicesRequest, CsiResourceV1.xsd:ConnectedDevicesResponse, CsiResourceV1.xsd:DeviceAcquiredEvent, CsiResourceV1.xsd:DeviceConnectedEvent, CsiResourceV1.xsd:DeviceReleasedEvent, CsiResourceV1.xsd:DeviceRemovedEvent, CsiResourceV1.xsd:EventRegistrationRequest, CsiResourceV1.xsd:EventRegistrationResponse, CsiResourceV1.xsd:ReleaseDeviceRequest, CsiResourceV1.xsd:ReleaseDeviceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:AcquireDeviceRequest, CsiResourceV1.xsd:AcquireDeviceResponse, CsiResourceV1.xsd:ConnectedDevicesRequest, CsiResourceV1.xsd:ConnectedDevicesResponse, CsiResourceV1.xsd:DeviceAcquiredEvent, CsiResourceV1.xsd:DeviceConnectedEvent, CsiResourceV1.xsd:DeviceReleasedEvent, CsiResourceV1.xsd:DeviceRemovedEvent, CsiResourceV1.xsd:EventRegistrationRequest, CsiResourceV1.xsd:EventRegistrationResponse, CsiResourceV1.xsd:ReleaseDeviceRequest, CsiResourceV1.xsd:ReleaseDeviceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations351, ref readerCount351);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceResponse Read109_ReleaseDeviceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations352 = 0;

            int readerCount352 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id639_ResourceResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@ResourceResponse = Read93_ResourceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations352, ref readerCount352);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse Read93_ResourceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations353 = 0;

            int readerCount353 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        {

                            o.@ErrorCode = Read92_ResourceErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:ErrorCode, CsiResourceV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:ErrorCode, CsiResourceV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations353, ref readerCount353);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode Read92_ResourceErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@NONE;

                case @"CONNECTION_LOST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@CONNECTION_LOST;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"PERIPHERAL_STATUS_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@PERIPHERAL_STATUS_ERROR;

                case @"EVENT_REGISTRATION_NOT_SUPPORTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@EVENT_REGISTRATION_NOT_SUPPORTED;

                case @"INVALID_RESOURCE_REQUEST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode.@INVALID_RESOURCE_REQUEST;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ResourceErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType Read90_DeviceType(string s) {

            switch (s) {

                case @"ButtonPanel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@ButtonPanel;

                case @"Sound": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Sound;

                case @"Light": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Light;

                case @"Reel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Reel;

                case @"StreamingLight": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@StreamingLight;

                case @"TouchScreen": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@TouchScreen;

                case @"Monitor": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Monitor;

                case @"VideoTopper": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@VideoTopper;

                case @"Haptic": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Haptic;

                case @"DepthCamera": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@DepthCamera;

                case @"Portal": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@Portal;

                case @"EyeTracking": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@EyeTracking;

                case @"MechanicalBell": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@MechanicalBell;

                case @"VolumeMixer": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@VolumeMixer;

                case @"EmulatedCashoutServerHost": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@EmulatedCashoutServerHost;

                case @"EmulatedCashoutServerClient": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType.@EmulatedCashoutServerClient;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.DeviceType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceRequest Read108_ReleaseDeviceRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ReleaseDeviceRequest();

            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations354 = 0;

            int readerCount354 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id640_GroupList && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

                            global::System.Collections.Generic.List<global::System.UInt32> a_0_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations355 = 0;

                                int readerCount355 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                                            {

                                                a_0_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations355, ref readerCount355);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations354, ref readerCount354);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationResponse Read107_EventRegistrationResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations356 = 0;

            int readerCount356 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id639_ResourceResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@ResourceResponse = Read93_ResourceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations356, ref readerCount356);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationRequest Read106_EventRegistrationRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationRequest();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations357 = 0;

            int readerCount357 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id193_Action && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        {

                            o.@Action = Read105_EventRegistrationAction(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:Action");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:Action");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations357, ref readerCount357);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction Read105_EventRegistrationAction(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction.@NONE;

                case @"REGISTER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction.@REGISTER;

                case @"UNREGISTER": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction.@UNREGISTER;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.EventRegistrationAction));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceRemovedEvent Read104_DeviceRemovedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceRemovedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceRemovedEvent();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[0] = true;

                }

                else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations358 = 0;

            int readerCount358 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations358, ref readerCount358);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceReleasedEvent Read103_DeviceReleasedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceReleasedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceReleasedEvent();

            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations359 = 0;

            int readerCount359 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id640_GroupList && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

                            global::System.Collections.Generic.List<global::System.UInt32> a_0_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations360 = 0;

                                int readerCount360 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                                            {

                                                a_0_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations360, ref readerCount360);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id641_Reason && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        {

                            o.@Reason = Read94_DeviceNotAcquired(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList, CsiResourceV1.xsd:Reason");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList, CsiResourceV1.xsd:Reason");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations359, ref readerCount359);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired Read94_DeviceNotAcquired(string s) {

            switch (s) {

                case @"DeviceDisconnected": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired.@DeviceDisconnected;

                case @"InQueue": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired.@InQueue;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceNotAcquired));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceConnectedEvent Read102_DeviceConnectedEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceConnectedEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceConnectedEvent();

            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations361 = 0;

            int readerCount361 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id640_GroupList && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

                            global::System.Collections.Generic.List<global::System.UInt32> a_0_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations362 = 0;

                                int readerCount362 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                                            {

                                                a_0_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations362, ref readerCount362);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations361, ref readerCount361);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceAcquiredEvent Read101_DeviceAcquiredEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceAcquiredEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DeviceAcquiredEvent();

            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations363 = 0;

            int readerCount363 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id640_GroupList && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

                            global::System.Collections.Generic.List<global::System.UInt32> a_0_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations364 = 0;

                                int readerCount364 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                                            {

                                                a_0_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations364, ref readerCount364);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations363, ref readerCount363);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponse Read100_ConnectedDevicesResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponse();

            if ((object)(o.@Device) == null) o.@Device = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice>)o.@Device;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations365 = 0;

            int readerCount365 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id639_ResourceResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@ResourceResponse = Read93_ResourceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id642_Device && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read99_ConnectedDevicesResponseDevice(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse, CsiResourceV1.xsd:Device");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse, CsiResourceV1.xsd:Device");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations365, ref readerCount365);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice Read99_ConnectedDevicesResponseDevice(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesResponseDevice();

            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations366 = 0;

            int readerCount366 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id640_GroupList && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

                            global::System.Collections.Generic.List<global::System.UInt32> a_0_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations367 = 0;

                                int readerCount367 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                                            {

                                                a_0_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations367, ref readerCount367);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:GroupList");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations366, ref readerCount366);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesRequest Read98_ConnectedDevicesRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id628_ConnectedDevicesRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConnectedDevicesRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations368 = 0;

            int readerCount368 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations368, ref readerCount368);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceResponse Read97_AcquireDeviceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceResponse();

            if ((object)(o.@GroupResponse) == null) o.@GroupResponse = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse> a_3 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse>)o.@GroupResponse;

            bool[] paramsRead = new bool[6];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[4] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[4] = true;

                }

                else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[5] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations369 = 0;

            int readerCount369 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id639_ResourceResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@ResourceResponse = Read93_ResourceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id643_Acquired && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@AcquiredSpecified = true;

                        {

                            o.@Acquired = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id641_Reason && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        o.@ReasonSpecified = true;

                        {

                            o.@Reason = Read94_DeviceNotAcquired(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id644_GroupResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@GroupResponse) == null) o.@GroupResponse = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse>();

                            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse> a_3_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse>)o.@GroupResponse;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations370 = 0;

                                int readerCount370 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id644_GroupResponse && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                                            if ((object)(a_3_0) == null) Reader.Skip(); else a_3_0.Add(Read96_GroupResponse(false, true));

                                        }

                                        else {

                                            UnknownNode(null, @"CsiResourceV1.xsd:GroupResponse");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiResourceV1.xsd:GroupResponse");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations370, ref readerCount370);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse, CsiResourceV1.xsd:Acquired, CsiResourceV1.xsd:Reason, CsiResourceV1.xsd:GroupResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:ResourceResponse, CsiResourceV1.xsd:Acquired, CsiResourceV1.xsd:Reason, CsiResourceV1.xsd:GroupResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations369, ref readerCount369);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse Read96_GroupResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id644_GroupResponse && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations371 = 0;

            int readerCount371 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        {

                            o.@GroupId = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id645_AcquisitionStatus && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        {

                            o.@AcquisitionStatus = Read95_GroupAcquiredStatus(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:GroupId, CsiResourceV1.xsd:AcquisitionStatus");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:GroupId, CsiResourceV1.xsd:AcquisitionStatus");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations371, ref readerCount371);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus Read95_GroupAcquiredStatus(string s) {

            switch (s) {

                case @"InQueue": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus.@InQueue;

                case @"Acquired": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus.@Acquired;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GroupAcquiredStatus));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceRequest Read91_AcquireDeviceRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id8_CsiResourceV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AcquireDeviceRequest();

            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

            global::System.Collections.Generic.List<global::System.UInt32> a_1 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[2] && ((object) Reader.LocalName == (object)id638_DeviceType && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceType = Read90_DeviceType(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id47_Item)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[3] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @":DeviceType, :DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations372 = 0;

            int readerCount372 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id568_PriorityType && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        {

                            o.@PriorityType = Read89_Priority(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id640_GroupList && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                        if (!ReadNull()) {

                            if ((object)(o.@GroupList) == null) o.@GroupList = new global::System.Collections.Generic.List<global::System.UInt32>();

                            global::System.Collections.Generic.List<global::System.UInt32> a_1_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@GroupList;

                            if ((Reader.IsEmptyElement)) {

                                Reader.Skip();

                            }

                            else {

                                Reader.ReadStartElement();

                                Reader.MoveToContent();

                                int whileIterations373 = 0;

                                int readerCount373 = ReaderCount;

                                while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                                    if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                                        if (((object) Reader.LocalName == (object)id436_GroupId && (object) Reader.NamespaceURI == (object)id8_CsiResourceV1xsd)) {

                                            {

                                                a_1_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));

                                            }

                                        }

                                        else {

                                            UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                        }

                                    }

                                    else {

                                        UnknownNode(null, @"CsiResourceV1.xsd:GroupId");

                                    }

                                    Reader.MoveToContent();

                                    CheckReaderCount(ref whileIterations373, ref readerCount373);

                                }

                            ReadEndElement();

                            }

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiResourceV1.xsd:PriorityType, CsiResourceV1.xsd:GroupList");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiResourceV1.xsd:PriorityType, CsiResourceV1.xsd:GroupList");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations372, ref readerCount372);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight Read88_CsiLight(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id5_CsiLight && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations374 = 0;

            int readerCount374 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id646_BitwiseControlRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read51_BitwiseControlRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id647_BitwiseControlResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read54_BitwiseControlResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id648_CandleStateChangeEvent && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read56_CandleStateChangeEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id649_Item && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read58_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id650_Item && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read59_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id651_CandleStateRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read60_CandleStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id652_CandleStateResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read61_CandleStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id397_GetLightDevicesRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read62_GetLightDevicesRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id398_GetLightDevicesResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read69_GetLightDevicesResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id653_SequenceRunningRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read70_SequenceRunningRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id654_SequenceRunningResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read71_SequenceRunningResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id655_SetColorRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read75_SetColorRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id656_SetColorResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read76_SetColorResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id657_SetIntensityRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read80_SetIntensityRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id658_SetIntensityResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read81_SetIntensityResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id468_SetRequireDeviceRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read82_SetRequireDeviceRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id469_SetRequireDeviceResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read83_SetRequireDeviceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id659_StartSequenceRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read84_StartSequenceRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id660_StartSequenceResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read85_StartSequenceResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id661_TurnOffRequest && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read86_TurnOffRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id662_TurnOffResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read87_TurnOffResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:BitwiseControlRequest, CsiLightV1.xsd:BitwiseControlResponse, CsiLightV1.xsd:CandleStateChangeEvent, CsiLightV1.xsd:CandleStateChangeRegistrationRequest, CsiLightV1.xsd:CandleStateChangeRegistrationResponse, CsiLightV1.xsd:CandleStateRequest, CsiLightV1.xsd:CandleStateResponse, CsiLightV1.xsd:GetLightDevicesRequest, CsiLightV1.xsd:GetLightDevicesResponse, CsiLightV1.xsd:SequenceRunningRequest, CsiLightV1.xsd:SequenceRunningResponse, CsiLightV1.xsd:SetColorRequest, CsiLightV1.xsd:SetColorResponse, CsiLightV1.xsd:SetIntensityRequest, CsiLightV1.xsd:SetIntensityResponse, CsiLightV1.xsd:SetRequireDeviceRequest, CsiLightV1.xsd:SetRequireDeviceResponse, CsiLightV1.xsd:StartSequenceRequest, CsiLightV1.xsd:StartSequenceResponse, CsiLightV1.xsd:TurnOffRequest, CsiLightV1.xsd:TurnOffResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:BitwiseControlRequest, CsiLightV1.xsd:BitwiseControlResponse, CsiLightV1.xsd:CandleStateChangeEvent, CsiLightV1.xsd:CandleStateChangeRegistrationRequest, CsiLightV1.xsd:CandleStateChangeRegistrationResponse, CsiLightV1.xsd:CandleStateRequest, CsiLightV1.xsd:CandleStateResponse, CsiLightV1.xsd:GetLightDevicesRequest, CsiLightV1.xsd:GetLightDevicesResponse, CsiLightV1.xsd:SequenceRunningRequest, CsiLightV1.xsd:SequenceRunningResponse, CsiLightV1.xsd:SetColorRequest, CsiLightV1.xsd:SetColorResponse, CsiLightV1.xsd:SetIntensityRequest, CsiLightV1.xsd:SetIntensityResponse, CsiLightV1.xsd:SetRequireDeviceRequest, CsiLightV1.xsd:SetRequireDeviceResponse, CsiLightV1.xsd:StartSequenceRequest, CsiLightV1.xsd:StartSequenceResponse, CsiLightV1.xsd:TurnOffRequest, CsiLightV1.xsd:TurnOffResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations374, ref readerCount374);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffResponse Read87_TurnOffResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations375 = 0;

            int readerCount375 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations375, ref readerCount375);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse Read53_LightResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations376 = 0;

            int readerCount376 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@ErrorCode = Read52_LightErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:ErrorCode, CsiLightV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:ErrorCode, CsiLightV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations376, ref readerCount376);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode Read52_LightErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@NONE;

                case @"INVALID_FEATURE_ID": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_FEATURE_ID;

                case @"INVALID_GROUP": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_GROUP;

                case @"INVALID_LIGHT_EXCEPTION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_LIGHT_EXCEPTION;

                case @"INVALID_RANGE_EXCEPTION": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_RANGE_EXCEPTION;

                case @"INVALID_BIT_CONTROL": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_BIT_CONTROL;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"UNKNOWN_DRIVER_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@UNKNOWN_DRIVER_ERROR;

                case @"CLIENT_ALREADY_REGISTERED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@CLIENT_ALREADY_REGISTERED;

                case @"CLIENT_NOT_REGISTERED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@CLIENT_NOT_REGISTERED;

                case @"INVALID_CANDLE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode.@INVALID_CANDLE;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffRequest Read86_TurnOffRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.TurnOffRequest();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@Group = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId, CsiLightV1.xsd:Group");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations377 = 0;

            int readerCount377 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id664_TransitionMode && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@TransitionMode = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:TransitionMode");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:TransitionMode");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations377, ref readerCount377);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceResponse Read85_StartSequenceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations378 = 0;

            int readerCount378 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations378, ref readerCount378);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceRequest Read84_StartSequenceRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.StartSequenceRequest();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[3] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[3] = true;

                }

                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@Group = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[4] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId, CsiLightV1.xsd:Group");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations379 = 0;

            int readerCount379 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id665_Sequence && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Sequence = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id664_TransitionMode && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@TransitionMode = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id666_Parameters && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Parameters = ToByteArrayBase64(false);

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Sequence, CsiLightV1.xsd:TransitionMode, CsiLightV1.xsd:Parameters");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Sequence, CsiLightV1.xsd:TransitionMode, CsiLightV1.xsd:Parameters");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations379, ref readerCount379);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse Read83_SetRequireDeviceResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations380 = 0;

            int readerCount380 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations380, ref readerCount380);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest Read82_SetRequireDeviceRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetRequireDeviceRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations381 = 0;

            int readerCount381 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations381, ref readerCount381);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityResponse Read81_SetIntensityResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations382 = 0;

            int readerCount382 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations382, ref readerCount382);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequest Read80_SetIntensityRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequest();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@Group = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId, CsiLightV1.xsd:Group");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations383 = 0;

            int readerCount383 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id667_Consecutive && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read77_SetIntensityRequestConsecutive(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id668_Random && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read79_SetIntensityRequestRandom(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Consecutive, CsiLightV1.xsd:Random");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Consecutive, CsiLightV1.xsd:Random");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations383, ref readerCount383);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandom Read79_SetIntensityRequestRandom(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandom o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandom();

            if ((object)(o.@Light) == null) o.@Light = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight>)o.@Light;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations384 = 0;

            int readerCount384 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id669_Light && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read78_SetIntensityRequestRandomLight(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Light");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Light");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations384, ref readerCount384);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight Read78_SetIntensityRequestRandomLight(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestRandomLight();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations385 = 0;

            int readerCount385 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id670_LightId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@LightId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id433_Intensity && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Intensity = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightId, CsiLightV1.xsd:Intensity");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightId, CsiLightV1.xsd:Intensity");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations385, ref readerCount385);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestConsecutive Read77_SetIntensityRequestConsecutive(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestConsecutive o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetIntensityRequestConsecutive();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations386 = 0;

            int readerCount386 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id671_StartingLight && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@StartingLight = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id433_Intensity && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Intensity = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:StartingLight, CsiLightV1.xsd:Intensity");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:StartingLight, CsiLightV1.xsd:Intensity");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations386, ref readerCount386);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorResponse Read76_SetColorResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations387 = 0;

            int readerCount387 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations387, ref readerCount387);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequest Read75_SetColorRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequest();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@Group = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId, CsiLightV1.xsd:Group");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations388 = 0;

            int readerCount388 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id667_Consecutive && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read72_SetColorRequestConsecutive(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id668_Random && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read74_SetColorRequestRandom(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Consecutive, CsiLightV1.xsd:Random");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Consecutive, CsiLightV1.xsd:Random");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations388, ref readerCount388);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandom Read74_SetColorRequestRandom(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandom o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandom();

            if ((object)(o.@Light) == null) o.@Light = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight>)o.@Light;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations389 = 0;

            int readerCount389 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id669_Light && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read73_SetColorRequestRandomLight(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Light");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Light");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations389, ref readerCount389);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight Read73_SetColorRequestRandomLight(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestRandomLight();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations390 = 0;

            int readerCount390 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id670_LightId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@LightId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id431_Color && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Color = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightId, CsiLightV1.xsd:Color");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightId, CsiLightV1.xsd:Color");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations390, ref readerCount390);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestConsecutive Read72_SetColorRequestConsecutive(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestConsecutive o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetColorRequestConsecutive();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations391 = 0;

            int readerCount391 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id671_StartingLight && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@StartingLight = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id431_Color && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Color = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:StartingLight, CsiLightV1.xsd:Color");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:StartingLight, CsiLightV1.xsd:Color");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations391, ref readerCount391);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningResponse Read71_SequenceRunningResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations392 = 0;

            int readerCount392 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id672_Running && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@RunningSpecified = true;

                        {

                            o.@Running = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse, CsiLightV1.xsd:Running");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse, CsiLightV1.xsd:Running");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations392, ref readerCount392);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningRequest Read70_SequenceRunningRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SequenceRunningRequest();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@Group = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId, CsiLightV1.xsd:Group");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations393 = 0;

            int readerCount393 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id673_SequenceNumber && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@SequenceNumber = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:SequenceNumber");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:SequenceNumber");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations393, ref readerCount393);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse Read69_GetLightDevicesResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations394 = 0;

            int readerCount394 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id507_Features && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Features = Read68_Item(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse, CsiLightV1.xsd:Features");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse, CsiLightV1.xsd:Features");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations394, ref readerCount394);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponseFeatures Read68_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponseFeatures o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesResponseFeatures();

            if ((object)(o.@Feature) == null) o.@Feature = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData>)o.@Feature;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations395 = 0;

            int readerCount395 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id508_Feature && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read67_FeatureData(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Feature");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Feature");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations395, ref readerCount395);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData Read67_FeatureData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id509_FeatureData && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureData();

            if ((object)(o.@Group) == null) o.@Group = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup>)o.@Group;

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id440_LightType && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@LightType = Read66_LightType(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId, CsiLightV1.xsd:LightType");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations396 = 0;

            int readerCount396 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read65_FeatureDataGroup(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Group");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Group");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations396, ref readerCount396);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup Read65_FeatureDataGroup(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroup();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id446_NumberOfLights && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@NumberOfLights = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[1] = true;

                }

                else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id674_HasRGB && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@HasRGB = System.Xml.XmlConvert.ToBoolean(Reader.Value);

                    paramsRead[2] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:NumberOfLights, CsiLightV1.xsd:HasRGB");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations397 = 0;

            int readerCount397 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id675_LightBar && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read63_FeatureDataGroupLightBar(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id676_LightBezel && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@Item = Read64_FeatureDataGroupLightBezel(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightBar, CsiLightV1.xsd:LightBezel");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightBar, CsiLightV1.xsd:LightBezel");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations397, ref readerCount397);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBezel Read64_FeatureDataGroupLightBezel(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBezel o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBezel();

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations398 = 0;

            int readerCount398 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id677_LightsOnTop && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@LightsOnTop = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id678_LightsOnBottom && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@LightsOnBottom = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id679_LightsOnLeft && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@LightsOnLeft = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id680_LightsOnRight && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@LightsOnRight = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightsOnTop, CsiLightV1.xsd:LightsOnBottom, CsiLightV1.xsd:LightsOnLeft, CsiLightV1.xsd:LightsOnRight");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightsOnTop, CsiLightV1.xsd:LightsOnBottom, CsiLightV1.xsd:LightsOnLeft, CsiLightV1.xsd:LightsOnRight");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations398, ref readerCount398);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBar Read63_FeatureDataGroupLightBar(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBar o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.FeatureDataGroupLightBar();

            if ((object)(o.@NumberOfLights) == null) o.@NumberOfLights = new global::System.Collections.Generic.List<global::System.UInt32>();

            global::System.Collections.Generic.List<global::System.UInt32> a_0 = (global::System.Collections.Generic.List<global::System.UInt32>)o.@NumberOfLights;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations399 = 0;

            int readerCount399 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id446_NumberOfLights && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            a_0.Add(System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:NumberOfLights");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:NumberOfLights");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations399, ref readerCount399);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType Read66_LightType(string s) {

            switch (s) {

                case @"BonusGameLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@BonusGameLights;

                case @"LightBezel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@LightBezel;

                case @"LightBar": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@LightBar;

                case @"ReelBackLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@ReelBackLights;

                case @"CandleLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@CandleLights;

                case @"AccentLights": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@AccentLights;

                case @"CardReaderBezel": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@CardReaderBezel;

                case @"TopperLightRing": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType.@TopperLightRing;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LightType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest Read62_GetLightDevicesRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id397_GetLightDevicesRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLightDevicesRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations400 = 0;

            int readerCount400 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations400, ref readerCount400);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateResponse Read61_CandleStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations401 = 0;

            int readerCount401 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id681_Candle && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Candle = Read55_Candle(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id682_Illuminated && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Illuminated = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse, CsiLightV1.xsd:Candle, CsiLightV1.xsd:Illuminated");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse, CsiLightV1.xsd:Candle, CsiLightV1.xsd:Illuminated");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations401, ref readerCount401);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle Read55_Candle(string s) {

            switch (s) {

                case @"Invalid": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Invalid;

                case @"Candle1": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle1;

                case @"Candle2": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle2;

                case @"Candle3": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle3;

                case @"Candle4": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@Candle4;

                case @"All": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle.@All;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Candle));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateRequest Read60_CandleStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations402 = 0;

            int readerCount402 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id681_Candle && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Candle = Read55_Candle(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Candle");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Candle");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations402, ref readerCount402);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationResponse Read59_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations403 = 0;

            int readerCount403 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations403, ref readerCount403);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationRequest Read58_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeRegistrationRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations404 = 0;

            int readerCount404 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id681_Candle && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Candle = Read55_Candle(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id100_RegistrationAction && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@RegistrationAction = Read57_RegistrationAction(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Candle, CsiLightV1.xsd:RegistrationAction");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Candle, CsiLightV1.xsd:RegistrationAction");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations404, ref readerCount404);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction Read57_RegistrationAction(string s) {

            switch (s) {

                case @"Register": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction.@Register;

                case @"Unregister": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction.@Unregister;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RegistrationAction));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeEvent Read56_CandleStateChangeEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CandleStateChangeEvent();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations405 = 0;

            int readerCount405 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id681_Candle && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Candle = Read55_Candle(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id682_Illuminated && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@Illuminated = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:Candle, CsiLightV1.xsd:Illuminated");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:Candle, CsiLightV1.xsd:Illuminated");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations405, ref readerCount405);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlResponse Read54_BitwiseControlResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations406 = 0;

            int readerCount406 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id663_LightResponse && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        o.@LightResponse = Read53_LightResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:LightResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations406, ref readerCount406);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlRequest Read51_BitwiseControlRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id6_CsiLightV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.BitwiseControlRequest();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[3] && ((object) Reader.LocalName == (object)id112_FeatureId && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@FeatureId = Reader.Value;

                    paramsRead[3] = true;

                }

                else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id444_Group && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                    o.@Group = System.Xml.XmlConvert.ToByte(Reader.Value);

                    paramsRead[4] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiLightV1.xsd:FeatureId, CsiLightV1.xsd:Group");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations407 = 0;

            int readerCount407 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id683_StartLight && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@StartLight = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id684_BitControl && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@BitControl = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id685_LightData && (object) Reader.NamespaceURI == (object)id6_CsiLightV1xsd)) {

                        {

                            o.@LightData = ToByteArrayBase64(false);

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiLightV1.xsd:StartLight, CsiLightV1.xsd:BitControl, CsiLightV1.xsd:LightData");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiLightV1.xsd:StartLight, CsiLightV1.xsd:BitControl, CsiLightV1.xsd:LightData");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations407, ref readerCount407);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet Read50_CsiCabinet(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id3_CsiCabinet && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations408 = 0;

            int readerCount408 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id686_ActivityStatusEvent && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read30_ActivityStatusEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id687_ActivityStatusRequest && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read31_ActivityStatusRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id688_ActivityStatusResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read35_ActivityStatusResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id689_Item && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read37_AttractAestheticConfiguration(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id690_Item && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read38_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id691_Item && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read39_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id692_CabinetEvent && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read41_CabinetEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id693_Item && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read43_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id694_Item && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read44_Item(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id695_GetCreditDisplayTypeRequest && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read45_GetCreditDisplayTypeRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id696_GetCreditDisplayTypeResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read47_GetCreditDisplayTypeResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id697_SetCreditDisplayTypeRequest && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read48_SetCreditDisplayTypeRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id698_SetCreditDisplayTypeResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Item = Read49_SetCreditDisplayTypeResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:ActivityStatusEvent, CsiCabinetV1.xsd:ActivityStatusRequest, CsiCabinetV1.xsd:ActivityStatusResponse, CsiCabinetV1.xsd:AttractAestheticConfigurationChangedEvent, CsiCabinetV1.xsd:AttractAestheticConfigurationRequest, CsiCabinetV1.xsd:AttractAestheticConfigurationResponse, CsiCabinetV1.xsd:CabinetEvent, CsiCabinetV1.xsd:CabinetEventRegistrationRequest, CsiCabinetV1.xsd:CabinetEventRegistrationResponse, CsiCabinetV1.xsd:GetCreditDisplayTypeRequest, CsiCabinetV1.xsd:GetCreditDisplayTypeResponse, CsiCabinetV1.xsd:SetCreditDisplayTypeRequest, CsiCabinetV1.xsd:SetCreditDisplayTypeResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:ActivityStatusEvent, CsiCabinetV1.xsd:ActivityStatusRequest, CsiCabinetV1.xsd:ActivityStatusResponse, CsiCabinetV1.xsd:AttractAestheticConfigurationChangedEvent, CsiCabinetV1.xsd:AttractAestheticConfigurationRequest, CsiCabinetV1.xsd:AttractAestheticConfigurationResponse, CsiCabinetV1.xsd:CabinetEvent, CsiCabinetV1.xsd:CabinetEventRegistrationRequest, CsiCabinetV1.xsd:CabinetEventRegistrationResponse, CsiCabinetV1.xsd:GetCreditDisplayTypeRequest, CsiCabinetV1.xsd:GetCreditDisplayTypeResponse, CsiCabinetV1.xsd:SetCreditDisplayTypeRequest, CsiCabinetV1.xsd:SetCreditDisplayTypeResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations408, ref readerCount408);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeResponse Read49_SetCreditDisplayTypeResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations409 = 0;

            int readerCount409 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id699_CabinetResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@CabinetResponse = Read33_CabinetResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations409, ref readerCount409);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse Read33_CabinetResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations410 = 0;

            int readerCount410 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@ErrorCode = Read32_CabinetErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:ErrorCode, CsiCabinetV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:ErrorCode, CsiCabinetV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations410, ref readerCount410);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode Read32_CabinetErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@NONE;

                case @"SET_DISPLAY_TYPE_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@SET_DISPLAY_TYPE_FAILED;

                case @"CONNECTION_ALREADY_REGISTERED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@CONNECTION_ALREADY_REGISTERED;

                case @"CLIENT_TYPE_NOT_SUPPORTED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode.@CLIENT_TYPE_NOT_SUPPORTED;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeRequest Read48_SetCreditDisplayTypeRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetCreditDisplayTypeRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations411 = 0;

            int readerCount411 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id700_CreditDisplayType && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@CreditDisplayType = Read46_CreditDisplayType(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:CreditDisplayType");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:CreditDisplayType");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations411, ref readerCount411);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType Read46_CreditDisplayType(string s) {

            switch (s) {

                case @"NOT_SET": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType.@NOT_SET;

                case @"CREDIT": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType.@CREDIT;

                case @"CURRENCY": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType.@CURRENCY;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.CreditDisplayType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeResponse Read47_GetCreditDisplayTypeResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations412 = 0;

            int readerCount412 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id699_CabinetResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@CabinetResponse = Read33_CabinetResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id700_CreditDisplayType && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@CreditDisplayType = Read46_CreditDisplayType(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse, CsiCabinetV1.xsd:CreditDisplayType");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse, CsiCabinetV1.xsd:CreditDisplayType");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations412, ref readerCount412);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeRequest Read45_GetCreditDisplayTypeRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id695_GetCreditDisplayTypeRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetCreditDisplayTypeRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations413 = 0;

            int readerCount413 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations413, ref readerCount413);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationResponse Read44_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationResponse();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations414 = 0;

            int readerCount414 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id699_CabinetResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@CabinetResponse = Read33_CabinetResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations414, ref readerCount414);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationRequest Read43_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations415 = 0;

            int readerCount415 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id701_CabinetEventRegistrationAction && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@CabinetEventRegistrationAction = Read42_CabinetEventRegistrationAction(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetEventRegistrationAction");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetEventRegistrationAction");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations415, ref readerCount415);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction Read42_CabinetEventRegistrationAction(string s) {

            switch (s) {

                case @"Register": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction.@Register;

                case @"Unregister": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction.@Unregister;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventRegistrationAction));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEvent Read41_CabinetEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEvent();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations416 = 0;

            int readerCount416 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id255_Event && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@Event = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id563_Data && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Data = Read40_CabinetEventData(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:Event, CsiCabinetV1.xsd:Data");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:Event, CsiCabinetV1.xsd:Data");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations416, ref readerCount416);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventData Read40_CabinetEventData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CabinetEventData();

            if ((object)(o.@Value) == null) o.@Value = new global::System.Collections.Generic.List<global::System.String>();

            global::System.Collections.Generic.List<global::System.String> a_0 = (global::System.Collections.Generic.List<global::System.String>)o.@Value;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations417 = 0;

            int readerCount417 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id702_Value && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            a_0.Add(Reader.ReadElementString());

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:Value");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:Value");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations417, ref readerCount417);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationResponse Read39_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations418 = 0;

            int readerCount418 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id699_CabinetResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@CabinetResponse = Read33_CabinetResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id563_Data && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Data = Read37_AttractAestheticConfiguration(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse, CsiCabinetV1.xsd:Data");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse, CsiCabinetV1.xsd:Data");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations418, ref readerCount418);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration Read37_AttractAestheticConfiguration(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id703_AttractAestheticConfiguration && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.AttractAestheticConfiguration();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations419 = 0;

            int readerCount419 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id704_GameAttractPlaylistGroup && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@GameAttractPlaylistGroup = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id705_GameAttractStyle && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@GameAttractStyle = Read36_GameAttractStyle(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:GameAttractPlaylistGroup, CsiCabinetV1.xsd:GameAttractStyle");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:GameAttractPlaylistGroup, CsiCabinetV1.xsd:GameAttractStyle");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations419, ref readerCount419);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle Read36_GameAttractStyle(string s) {

            switch (s) {

                case @"Subtle": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle.@Subtle;

                case @"Intermediate": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle.@Intermediate;

                case @"Exciting": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle.@Exciting;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.GameAttractStyle));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationRequest Read38_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id690_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.AttractAestheticConfigurationRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations420 = 0;

            int readerCount420 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations420, ref readerCount420);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponse Read35_ActivityStatusResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations421 = 0;

            int readerCount421 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id699_CabinetResponse && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@CabinetResponse = Read33_CabinetResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id563_Data && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        o.@Data = Read34_ActivityStatusResponseData(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse, CsiCabinetV1.xsd:Data");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:CabinetResponse, CsiCabinetV1.xsd:Data");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations421, ref readerCount421);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponseData Read34_ActivityStatusResponseData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponseData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusResponseData();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations422 = 0;

            int readerCount422 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id706_NewGame && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@NewGame = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id707_AttractInterval && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@AttractInterval = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id708_InactivityDelay && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@InactivityDelay = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id709_GameAttractsEnabled && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@GameAttractsEnabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id710_Active && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@Active = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:NewGame, CsiCabinetV1.xsd:AttractInterval, CsiCabinetV1.xsd:InactivityDelay, CsiCabinetV1.xsd:GameAttractsEnabled, CsiCabinetV1.xsd:Active");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:NewGame, CsiCabinetV1.xsd:AttractInterval, CsiCabinetV1.xsd:InactivityDelay, CsiCabinetV1.xsd:GameAttractsEnabled, CsiCabinetV1.xsd:Active");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations422, ref readerCount422);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusRequest Read31_ActivityStatusRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id687_ActivityStatusRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusRequest();

            bool[] paramsRead = new bool[0];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations423 = 0;

            int readerCount423 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations423, ref readerCount423);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusEvent Read30_ActivityStatusEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id4_CsiCabinetV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ActivityStatusEvent();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations424 = 0;

            int readerCount424 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id706_NewGame && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@NewGame = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id707_AttractInterval && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@AttractInterval = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id708_InactivityDelay && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@InactivityDelay = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id709_GameAttractsEnabled && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@GameAttractsEnabled = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id710_Active && (object) Reader.NamespaceURI == (object)id4_CsiCabinetV1xsd)) {

                        {

                            o.@Active = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiCabinetV1.xsd:NewGame, CsiCabinetV1.xsd:AttractInterval, CsiCabinetV1.xsd:InactivityDelay, CsiCabinetV1.xsd:GameAttractsEnabled, CsiCabinetV1.xsd:Active");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiCabinetV1.xsd:NewGame, CsiCabinetV1.xsd:AttractInterval, CsiCabinetV1.xsd:InactivityDelay, CsiCabinetV1.xsd:GameAttractsEnabled, CsiCabinetV1.xsd:Active");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations424, ref readerCount424);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton Read29_CsiButton(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id1_CsiButton && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations425 = 0;

            int readerCount425 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id711_ButtonEvent && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read5_ButtonEvent(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id712_ConfigurationRequest && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read6_ConfigurationRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id713_ConfigurationResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read14_ConfigurationResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id714_DownloadImageSetRequest && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read15_DownloadImageSetRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id715_DownloadImageSetResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read16_DownloadImageSetResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id716_GetLampStateRequest && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read17_GetLampStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id717_GetLampStateResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read20_GetLampStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id718_PlayAnimationRequest && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read21_PlayAnimationRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id719_PlayAnimationResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read22_PlayAnimationResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id720_RemoveImageSetRequest && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read23_RemoveImageSetRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id721_RemoveImageSetResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read24_RemoveImageSetResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id722_SetAllPixelsRequest && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read25_SetAllPixelsRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id723_SetAllPixelsResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read26_SetAllPixelsResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id724_SetLampStateRequest && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read27_SetLampStateRequest(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[0] && ((object) Reader.LocalName == (object)id725_SetLampStateResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Item = Read28_SetLampStateResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonEvent, CsiButtonV1.xsd:ConfigurationRequest, CsiButtonV1.xsd:ConfigurationResponse, CsiButtonV1.xsd:DownloadImageSetRequest, CsiButtonV1.xsd:DownloadImageSetResponse, CsiButtonV1.xsd:GetLampStateRequest, CsiButtonV1.xsd:GetLampStateResponse, CsiButtonV1.xsd:PlayAnimationRequest, CsiButtonV1.xsd:PlayAnimationResponse, CsiButtonV1.xsd:RemoveImageSetRequest, CsiButtonV1.xsd:RemoveImageSetResponse, CsiButtonV1.xsd:SetAllPixelsRequest, CsiButtonV1.xsd:SetAllPixelsResponse, CsiButtonV1.xsd:SetLampStateRequest, CsiButtonV1.xsd:SetLampStateResponse");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonEvent, CsiButtonV1.xsd:ConfigurationRequest, CsiButtonV1.xsd:ConfigurationResponse, CsiButtonV1.xsd:DownloadImageSetRequest, CsiButtonV1.xsd:DownloadImageSetResponse, CsiButtonV1.xsd:GetLampStateRequest, CsiButtonV1.xsd:GetLampStateResponse, CsiButtonV1.xsd:PlayAnimationRequest, CsiButtonV1.xsd:PlayAnimationResponse, CsiButtonV1.xsd:RemoveImageSetRequest, CsiButtonV1.xsd:RemoveImageSetResponse, CsiButtonV1.xsd:SetAllPixelsRequest, CsiButtonV1.xsd:SetAllPixelsResponse, CsiButtonV1.xsd:SetLampStateRequest, CsiButtonV1.xsd:SetLampStateResponse");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations425, ref readerCount425);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateResponse Read28_SetLampStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations426 = 0;

            int readerCount426 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id726_ButtonResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonResponse = Read8_ButtonResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id727_PreviousLampStates && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@PreviousLampStates = Read19_LampStates(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:PreviousLampStates");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:PreviousLampStates");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations426, ref readerCount426);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates Read19_LampStates(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id728_LampStates && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampStates();

            if ((object)(o.@Lamp) == null) o.@Lamp = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState>)o.@Lamp;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations427 = 0;

            int readerCount427 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id729_Lamp && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read18_LampState(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:Lamp");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:Lamp");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations427, ref readerCount427);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState Read18_LampState(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id730_LampState && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.LampState();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations428 = 0;

            int readerCount428 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonId = Read2_ButtonId(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id104_State && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@State = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:State");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:State");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations428, ref readerCount428);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId Read2_ButtonId(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id731_ButtonId && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                    o.@DeviceId = Reader.Value;

                    paramsRead[0] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:DeviceId");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations429 = 0;

            int readerCount429 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                string tmp = null;

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    UnknownNode((object)o, @"");

                }

                else if (Reader.NodeType == System.Xml.XmlNodeType.Text || 

                Reader.NodeType == System.Xml.XmlNodeType.CDATA || 

                Reader.NodeType == System.Xml.XmlNodeType.Whitespace || 

                Reader.NodeType == System.Xml.XmlNodeType.SignificantWhitespace) {

                    o.@Value = System.Xml.XmlConvert.ToByte(Reader.ReadString());

                }

                else {

                    UnknownNode((object)o, @"");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations429, ref readerCount429);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse Read8_ButtonResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations430 = 0;

            int readerCount430 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id61_ErrorCode && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@ErrorCode = Read7_ButtonErrorCode(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id62_ErrorDescription && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@ErrorDescription = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ErrorCode, CsiButtonV1.xsd:ErrorDescription");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ErrorCode, CsiButtonV1.xsd:ErrorDescription");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations430, ref readerCount430);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode Read7_ButtonErrorCode(string s) {

            switch (s) {

                case @"NONE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@NONE;

                case @"CONNECTION_LOST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@CONNECTION_LOST;

                case @"SET_ALL_LAMPS_FAILED": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@SET_ALL_LAMPS_FAILED;

                case @"INVALID_SET_LAMP_STATE_REQUEST": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@INVALID_SET_LAMP_STATE_REQUEST;

                case @"CLIENT_DOES_NOT_OWN_RESOURCE": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@CLIENT_DOES_NOT_OWN_RESOURCE;

                case @"PERIPHERAL_STATUS_ERROR": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode.@PERIPHERAL_STATUS_ERROR;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonErrorCode));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateRequest Read27_SetLampStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetLampStateRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations431 = 0;

            int readerCount431 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id732_Lamps && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Lamps = Read19_LampStates(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:Lamps");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:Lamps");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations431, ref readerCount431);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsResponse Read26_SetAllPixelsResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations432 = 0;

            int readerCount432 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id726_ButtonResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonResponse = Read8_ButtonResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonId = Read2_ButtonId(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:ButtonId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:ButtonId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations432, ref readerCount432);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsRequest Read25_SetAllPixelsRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.SetAllPixelsRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations433 = 0;

            int readerCount433 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonId = Read2_ButtonId(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id733_PixelState && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@PixelState = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:PixelState");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:PixelState");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations433, ref readerCount433);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetResponse Read24_RemoveImageSetResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations434 = 0;

            int readerCount434 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id726_ButtonResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonResponse = Read8_ButtonResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id734_ImageSetId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ImageSetIdSpecified = true;

                        {

                            o.@ImageSetId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:ImageSetId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:ImageSetId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations434, ref readerCount434);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetRequest Read23_RemoveImageSetRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.RemoveImageSetRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations435 = 0;

            int readerCount435 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id734_ImageSetId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@ImageSetId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:ImageSetId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:ImageSetId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations435, ref readerCount435);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationResponse Read22_PlayAnimationResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations436 = 0;

            int readerCount436 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id726_ButtonResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonResponse = Read8_ButtonResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonId = Read2_ButtonId(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:ButtonId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:ButtonId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations436, ref readerCount436);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationRequest Read21_PlayAnimationRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PlayAnimationRequest();

            bool[] paramsRead = new bool[6];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations437 = 0;

            int readerCount437 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonId = Read2_ButtonId(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id734_ImageSetId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@ImageSetId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id735_AnimationId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@AnimationId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id736_FrameDelay && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@FrameDelay = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id737_Repeat && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@Repeat = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[4] = true;

                    }

                    else if (!paramsRead[5] && ((object) Reader.LocalName == (object)id664_TransitionMode && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@TransitionMode = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[5] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:ImageSetId, CsiButtonV1.xsd:AnimationId, CsiButtonV1.xsd:FrameDelay, CsiButtonV1.xsd:Repeat, CsiButtonV1.xsd:TransitionMode");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:ImageSetId, CsiButtonV1.xsd:AnimationId, CsiButtonV1.xsd:FrameDelay, CsiButtonV1.xsd:Repeat, CsiButtonV1.xsd:TransitionMode");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations437, ref readerCount437);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateResponse Read20_GetLampStateResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateResponse();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations438 = 0;

            int readerCount438 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id726_ButtonResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonResponse = Read8_ButtonResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id732_Lamps && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Lamps = Read19_LampStates(false, true);

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:Lamps");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:Lamps");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations438, ref readerCount438);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateRequest Read17_GetLampStateRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.GetLampStateRequest();

            if ((object)(o.@ButtonId) == null) o.@ButtonId = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonId>)o.@ButtonId;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations439 = 0;

            int readerCount439 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read2_ButtonId(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations439, ref readerCount439);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetResponse Read16_DownloadImageSetResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetResponse();

            bool[] paramsRead = new bool[3];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations440 = 0;

            int readerCount440 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id726_ButtonResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonResponse = Read8_ButtonResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id734_ImageSetId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ImageSetIdSpecified = true;

                        {

                            o.@ImageSetId = System.Xml.XmlConvert.ToUInt16(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:ImageSetId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:ImageSetId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations440, ref readerCount440);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetRequest Read15_DownloadImageSetRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.DownloadImageSetRequest();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations441 = 0;

            int readerCount441 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id738_Filename && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@Filename = Reader.ReadElementString();

                        }

                        paramsRead[1] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:Filename");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:Filename");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations441, ref readerCount441);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponse Read14_ConfigurationResponse(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponse o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponse();

            if ((object)(o.@Data) == null) o.@Data = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData> a_1 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData>)o.@Data;

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations442 = 0;

            int readerCount442 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id726_ButtonResponse && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonResponse = Read8_ButtonResponse(false, true);

                        paramsRead[0] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id563_Data && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        if ((object)(a_1) == null) Reader.Skip(); else a_1.Add(Read13_ConfigurationResponseData(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:Data");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonResponse, CsiButtonV1.xsd:Data");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations442, ref readerCount442);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData Read13_ConfigurationResponseData(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseData();

            bool[] paramsRead = new bool[5];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations443 = 0;

            int readerCount443 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id739_PanelLocation && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@PanelLocation = Read9_PanelLocation(Reader.ReadElementString());

                        }

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id740_PanelType && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@PanelType = Read10_PanelType(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id741_PanelID && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@PanelIDSpecified = true;

                        {

                            o.@PanelID = System.Xml.XmlConvert.ToUInt32(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (!paramsRead[3] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[3] = true;

                    }

                    else if (!paramsRead[4] && ((object) Reader.LocalName == (object)id742_Buttons && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Buttons = Read12_Item(false, true);

                        paramsRead[4] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:PanelLocation, CsiButtonV1.xsd:PanelType, CsiButtonV1.xsd:PanelID, CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:Buttons");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:PanelLocation, CsiButtonV1.xsd:PanelType, CsiButtonV1.xsd:PanelID, CsiButtonV1.xsd:DeviceId, CsiButtonV1.xsd:Buttons");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations443, ref readerCount443);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseDataButtons Read12_Item(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseDataButtons o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationResponseDataButtons();

            if ((object)(o.@Button) == null) o.@Button = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button> a_0 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button>)o.@Button;

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations444 = 0;

            int readerCount444 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (((object) Reader.LocalName == (object)id743_Button && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        if ((object)(a_0) == null) Reader.Skip(); else a_0.Add(Read11_Button(false, true));

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:Button");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:Button");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations444, ref readerCount444);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button Read11_Button(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id743_Button && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Button();

            if ((object)(o.@ButtonFunctions) == null) o.@ButtonFunctions = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction> a_3 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction>)o.@ButtonFunctions;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations445 = 0;

            int readerCount445 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonId = Read2_ButtonId(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id744_Dynamic && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@Dynamic = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id745_HardwareButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@HardwareButtonIdSpecified = true;

                        {

                            o.@HardwareButtonId = System.Xml.XmlConvert.ToByte(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id746_ButtonFunctions && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            a_3.Add(Read3_ButtonFunction(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:Dynamic, CsiButtonV1.xsd:HardwareButtonId, CsiButtonV1.xsd:ButtonFunctions");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:Dynamic, CsiButtonV1.xsd:HardwareButtonId, CsiButtonV1.xsd:ButtonFunctions");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations445, ref readerCount445);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction Read3_ButtonFunction(string s) {

            switch (s) {

                case @"Unknown": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Unknown;

                case @"NoFunction": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@NoFunction;

                case @"Accept": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Accept;

                case @"AutoPlay": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@AutoPlay;

                case @"BetOne": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetOne;

                case @"BetPerLine1": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine1;

                case @"BetPerLine2": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine2;

                case @"BetPerLine3": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine3;

                case @"BetPerLine4": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine4;

                case @"BetPerLine5": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPerLine5;

                case @"BetPlus": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetPlus;

                case @"BetMinus": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@BetMinus;

                case @"Black": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Black;

                case @"CashOut": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@CashOut;

                case @"HandleSwitch": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@HandleSwitch;

                case @"Gamble": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Gamble;

                case @"GameRules": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@GameRules;

                case @"Info": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Info;

                case @"MaxBet": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@MaxBet;

                case @"MoreGames": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@MoreGames;

                case @"Red": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Red;

                case @"Reject": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Reject;

                case @"RepeatBet": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@RepeatBet;

                case @"SelectLines1": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines1;

                case @"SelectLines2": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines2;

                case @"SelectLines3": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines3;

                case @"SelectLines4": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines4;

                case @"SelectLines5": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@SelectLines5;

                case @"Service": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Service;

                case @"ShowGaff": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@ShowGaff;

                case @"Start": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@Start;

                case @"TakeWin": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@TakeWin;

                case @"TournamentMenu": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction.@TournamentMenu;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType Read10_PanelType(string s) {

            switch (s) {

                case @"Unknown": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@Unknown;

                case @"Static": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@Static;

                case @"Dynamic": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@Dynamic;

                case @"StaticDynamic": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType.@StaticDynamic;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelType));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation Read9_PanelLocation(string s) {

            switch (s) {

                case @"Unknown": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation.@Unknown;

                case @"Main": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation.@Main;

                case @"Secondary": return global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation.@Secondary;

                default: throw CreateUnknownConstantException(s, typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.PanelLocation));

            }

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationRequest Read6_ConfigurationRequest(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id712_ConfigurationRequest && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationRequest o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ConfigurationRequest();

            bool[] paramsRead = new bool[1];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations446 = 0;

            int readerCount446 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id229_DeviceId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@DeviceId = Reader.ReadElementString();

                        }

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:DeviceId");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:DeviceId");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations446, ref readerCount446);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonEvent Read5_ButtonEvent(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id47_Item && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonEvent o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonEvent();

            bool[] paramsRead = new bool[2];

            while (Reader.MoveToNextAttribute()) {

                if (!paramsRead[1] && ((object) Reader.LocalName == (object)id747_timestamp && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                    o.@timestamp = System.Xml.XmlConvert.ToUInt64(Reader.Value);

                    o.@timestampSpecified = true;

                    paramsRead[1] = true;

                }

                else if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:timestamp");

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations447 = 0;

            int readerCount447 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id743_Button && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@Button = Read4_ButtonState(false, true);

                        paramsRead[0] = true;

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:Button");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:Button");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations447, ref readerCount447);

            }

            ReadEndElement();

            return o;

        }



        global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonState Read4_ButtonState(bool isNullable, bool checkType) {

            System.Xml.XmlQualifiedName xsiType = checkType ? GetXsiType() : null;

            bool isNull = false;

            if (isNullable) isNull = ReadNull();

            if (checkType) {

            if (xsiType == null || ((object) ((System.Xml.XmlQualifiedName)xsiType).Name == (object)id748_ButtonState && (object) ((System.Xml.XmlQualifiedName)xsiType).Namespace == (object)id2_CsiButtonV1xsd)) {

            }

            else

                throw CreateUnknownTypeException((System.Xml.XmlQualifiedName)xsiType);

            }

            if (isNull) return null;

            global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonState o;

            o = new global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonState();

            if ((object)(o.@ButtonFunctions) == null) o.@ButtonFunctions = new global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction>();

            global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction> a_3 = (global::System.Collections.Generic.List<global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.ButtonFunction>)o.@ButtonFunctions;

            bool[] paramsRead = new bool[4];

            while (Reader.MoveToNextAttribute()) {

                if (!IsXmlnsAttribute(Reader.Name)) {

                    UnknownNode((object)o);

                }

            }

            Reader.MoveToElement();

            if (Reader.IsEmptyElement) {

                Reader.Skip();

                return o;

            }

            Reader.ReadStartElement();

            Reader.MoveToContent();

            int whileIterations448 = 0;

            int readerCount448 = ReaderCount;

            while (Reader.NodeType != System.Xml.XmlNodeType.EndElement && Reader.NodeType != System.Xml.XmlNodeType.None) {

                if (Reader.NodeType == System.Xml.XmlNodeType.Element) {

                    if (!paramsRead[0] && ((object) Reader.LocalName == (object)id731_ButtonId && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        o.@ButtonId = Read2_ButtonId(false, true);

                        paramsRead[0] = true;

                    }

                    else if (!paramsRead[1] && ((object) Reader.LocalName == (object)id749_Pressed && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@Pressed = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[1] = true;

                    }

                    else if (!paramsRead[2] && ((object) Reader.LocalName == (object)id750_IsDiagnostic && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            o.@IsDiagnostic = System.Xml.XmlConvert.ToBoolean(Reader.ReadElementString());

                        }

                        paramsRead[2] = true;

                    }

                    else if (((object) Reader.LocalName == (object)id746_ButtonFunctions && (object) Reader.NamespaceURI == (object)id2_CsiButtonV1xsd)) {

                        {

                            a_3.Add(Read3_ButtonFunction(Reader.ReadElementString()));

                        }

                    }

                    else {

                        UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:Pressed, CsiButtonV1.xsd:IsDiagnostic, CsiButtonV1.xsd:ButtonFunctions");

                    }

                }

                else {

                    UnknownNode((object)o, @"CsiButtonV1.xsd:ButtonId, CsiButtonV1.xsd:Pressed, CsiButtonV1.xsd:IsDiagnostic, CsiButtonV1.xsd:ButtonFunctions");

                }

                Reader.MoveToContent();

                CheckReaderCount(ref whileIterations448, ref readerCount448);

            }

            ReadEndElement();

            return o;

        }



        protected override void InitCallbacks() {

        }



        string id190_PortalLocation;

        string id63_ClientInfo;

        string id114_RingDurationMilliseconds;

        string id601_VolumePlayerSelectableResponse;

        string id20_CsiBankSynchronizationV1xsd;

        string id156_LoadContentErrorCode;

        string id528_ChangeZOrderResponse;

        string id133_HidePortalResponse;

        string id466_SetRecoveryRequest;

        string id358_driver;

        string id82_GetPlayerServiceRequest;

        string id292_Monitor;

        string id84_Item;

        string id316_Frames;

        string id475_SetToPositionResponse;

        string id604_SoundResponse;

        string id493_Reel;

        string id671_StartingLight;

        string id284_SetTransmissiveSupportResponse;

        string id173_TextureSize;

        string id577_ChairEnablePowerRequest;

        string id651_CandleStateRequest;

        string id336_ReadyState;

        string id627_AcquireDeviceResponse;

        string id372_DigitizerInterval;

        string id532_DestroyedResponse;

        string id670_LightId;

        string id353_Item;

        string id241_HapticDevice;

        string id350_Item;

        string id551_ViewportId;

        string id428_ReelIndex;

        string id104_State;

        string id708_InactivityDelay;

        string id375_Item;

        string id313_CsiDisplayTypesV1xsd;

        string id379_SendSynchronizationPayload;

        string id4_CsiCabinetV1xsd;

        string id168_Priority;

        string id536_MultiWindowRepositionResponse;

        string id144_ShowPortalResponse;

        string id340_ClientIdentifier;

        string id384_PayloadData;

        string id523_Period;

        string id703_AttractAestheticConfiguration;

        string id591_VolumeAllGroupsResponse;

        string id458_ChangeSpeedResponse;

        string id530_CreatedResponse;

        string id566_MultitouchSupported;

        string id38_CsiMechanicalBellV1xsd;

        string id88_Item;

        string id204_WebsocketEMDIPort;

        string id127_GetEMDIConfigResponse;

        string id729_Lamp;

        string id713_ConfigurationResponse;

        string id65_ClientType;

        string id377_MessageRegistrationResponse;

        string id514_Times;

        string id447_LightsWorkingFeedbackSupported;

        string id169_Screen;

        string id436_GroupId;

        string id191_X;

        string id620_Endpoints;

        string id198_Item;

        string id142_ReleaseContentResponse;

        string id139_PortalListRequest;

        string id15_CsiSolenoid;

        string id275_GetCurrentColorProfileRequest;

        string id306_Vendor;

        string id360_display;

        string id741_PanelID;

        string id120_DestroyPortalRequest;

        string id295_Model;

        string id116_Item;

        string id109_MechanicalBellStopRequest;

        string id267_MimeType;

        string id533_MonitorConfigurationRequest;

        string id714_DownloadImageSetRequest;

        string id607_VolumeLevel;

        string id264_VideoTopperResolution;

        string id709_GameAttractsEnabled;

        string id9_CsiSound;

        string id218_GetDepthCameraDevicesRequest;

        string id408_StartLightSequenceRequest;

        string id461_GetReelDevicesRequest;

        string id249_DeviceCapabilitiesResponse;

        string id387_SynchronizationInfo;

        string id745_HardwareButtonId;

        string id243_HapticDeviceLocation;

        string id362_offscreen;

        string id13_CsiReel;

        string id53_InitializeCsiResponse;

        string id557_RequestedViewportRectangle;

        string id712_ConfigurationRequest;

        string id307_UniqueIdentifier;

        string id614_MuteAll;

        string id545_Window;

        string id654_SequenceRunningResponse;

        string id335_ReadinessResponse;

        string id338_Subscription;

        string id677_LightsOnTop;

        string id125_GetContentStateResponse;

        string id646_BitwiseControlRequest;

        string id450_NumberOfFramesSupported;

        string id230_DepthCameraDeviceStatus;

        string id159_ReleaseContentErrorCode;

        string id691_Item;

        string id100_RegistrationAction;

        string id106_CallAttendant;

        string id510_ReelType;

        string id254_VideoTopperContentEvent;

        string id181_PortalExtents;

        string id373_interval;

        string id253_StopContentResponse;

        string id425_SymbolHotPositionDataList;

        string id129_GetPortalIdByNameResponse;

        string id511_Speeds;

        string id101_Prompt;

        string id647_BitwiseControlResponse;

        string id66_Token;

        string id541_SizeRequest;

        string id397_GetLightDevicesRequest;

        string id239_HapticResponse;

        string id339_ReadyStateResponse;

        string id58_CategoryVersion;

        string id749_Pressed;

        string id271_EnableStereoscopyRequest;

        string id560_StereoscopicFrameList;

        string id327_Version;

        string id639_ResourceResponse;

        string id354_TouchScreenInfoEvent;

        string id86_Item;

        string id96_Item;

        string id268_FileExtension;

        string id137_PortalInfoRequest;

        string id711_ButtonEvent;

        string id202_PortalName;

        string id21_CsiTouchScreen;

        string id22_CsiTouchScreenV1xsd;

        string id548_Viewports;

        string id36_CsiPortalV1xsd;

        string id652_CandleStateResponse;

        string id434_EnabledSymbolHighlightFeatures;

        string id571_Animations;

        string id347_Item;

        string id303_StereoscopicSettings;

        string id217_Item;

        string id64_ClientConnection;

        string id136_PortalActionNotifyEvent;

        string id455_ApplyAttributesRequest;

        string id518_Stops;

        string id274_GetConfigurationResponse;

        string id52_InitializeCsiRequest;

        string id655_SetColorRequest;

        string id345_Item;

        string id732_Lamps;

        string id283_SetTransmissiveSupportRequest;

        string id608_PlayerSelectable;

        string id501_HoverLimits;

        string id619_HeadphoneJackState;

        string id385_ReceivedPayload;

        string id93_Item;

        string id183_Max;

        string id245_HapticDeviceStatus;

        string id242_HapticDeviceType;

        string id153_GetPortalIdByNameErrorCode;

        string id442_AdjustableIntensity;

        string id680_LightsOnRight;

        string id422_FrameDataSize;

        string id30_CsiHapticV1xsd;

        string id334_SetReadyStateResponse;

        string id331_ReadyStateSubscriptionRequest;

        string id74_EmulatedCashoutServiceResponse;

        string id145_PortalResponse;

        string id600_VolumePlayerSelectableRequest;

        string id579_ChairPoweredRequest;

        string id117_Item;

        string id314_Technology;

        string id172_Bounds;

        string id219_GetDepthCameraDevicesResponse;

        string id396_ClearSymbolHighlightsResponse;

        string id568_PriorityType;

        string id49_MessageType;

        string id503_UpperLimit;

        string id289_Role;

        string id531_DestroyedRequest;

        string id527_ChangeZOrderRequest;

        string id437_Notification;

        string id179_ConfigGroup;

        string id700_CreditDisplayType;

        string id550_Viewport;

        string id624_Success;

        string id310_SubSystemIdentifier;

        string id130_GetVisibilityStateRequest;

        string id538_MultiWindowSizeResponse;

        string id281_SetColorProfileRequest;

        string id610_VolumePlayerSelectable;

        string id238_HapticDeviceEventSeverity;

        string id78_CashOutRequest;

        string id19_CsiBankSynchronization;

        string id187_PortalBounds;

        string id237_HapticDeviceEvent;

        string id383_PayloadSize;

        string id246_CacheContentRequest;

        string id666_Parameters;

        string id684_BitControl;

        string id17_CsiStreamingLight;

        string id225_DepthCameraModel;

        string id357_driverSubClass;

        string id630_DeviceAcquiredEvent;

        string id37_CsiMechanicalBell;

        string id94_Item;

        string id266_SupportsPortals;

        string id121_DestroyPortalResponse;

        string id702_Value;

        string id261_LoopVideo;

        string id26_CsiMonitorV1xsd;

        string id68_Item;

        string id176_SoundGroup;

        string id394_BreakLoopResponse;

        string id681_Candle;

        string id479_StopResponse;

        string id631_DeviceConnectedEvent;

        string id215_DepthCameraDeviceEvent;

        string id483_SynchronousStopResponse;

        string id344_GetTouchScreenInfoResponse;

        string id561_VirtualRectangle;

        string id435_SymbolHighlightFeatureType;

        string id6_CsiLightV1xsd;

        string id351_TouchCalibrationCompleteEvent;

        string id716_GetLampStateRequest;

        string id376_MessageRegistrationRequest;

        string id682_Illuminated;

        string id108_MechanicalBellRingResponse;

        string id491_Reels;

        string id391_PositionInBank;

        string id14_CsiReelV1xsd;

        string id412_GroupNumber;

        string id718_PlayAnimationRequest;

        string id175_DefaultEMDIAccessToken;

        string id370_Interval;

        string id186_Height;

        string id98_ServiceRequest;

        string id554_RequestedViewportCoordinates;

        string id95_Item;

        string id468_SetRequireDeviceRequest;

        string id597_VolumePlayerLevelRequest;

        string id276_GetCurrentColorProfileResponse;

        string id744_Dynamic;

        string id562_Windows;

        string id547_ViewportExtents;

        string id556_AdjustedViewportRectangle;

        string id453_SolenoidActionType;

        string id29_CsiHaptic;

        string id232_Severity;

        string id457_ChangeSpeedRequest;

        string id416_SequenceFile;

        string id662_TurnOffResponse;

        string id395_ClearSymbolHighlightsRequest;

        string id348_Item;

        string id315_Format;

        string id690_Item;

        string id519_MaxSeekTime;

        string id92_Item;

        string id417_StreamingLightSequenceData;

        string id157_PortalInfoErrorCode;

        string id262_ImageDuration;

        string id644_GroupResponse;

        string id616_Endpoint;

        string id414_FrameData;

        string id252_StopContentRequest;

        string id460_Item;

        string id135_LoadContentResponse;

        string id195_ContentURL;

        string id328_GetReadyStateRequest;

        string id165_PortalClass;

        string id293_Style;

        string id526_AnimateResponse;

        string id279_GetStereoscopyStateRequest;

        string id704_GameAttractPlaylistGroup;

        string id312_PrimaryAdapter;

        string id583_HeadphoneJackChangedEvent;

        string id546_Status;

        string id154_GetVisibilityStateErrorCode;

        string id3_CsiCabinet;

        string id62_ErrorDescription;

        string id194_Result;

        string id24_CsiReadinessV1xsd;

        string id199_PortalContentToken;

        string id500_Hover;

        string id124_GetContentStateRequest;

        string id605_GroupVolume;

        string id69_Item;

        string id61_ErrorCode;

        string id5_CsiLight;

        string id73_Item;

        string id413_PlayMode;

        string id163_PortalIds;

        string id696_GetCreditDisplayTypeResponse;

        string id406_SetSymbolHighlightsRequest;

        string id196_StartAfterLoad;

        string id513_AccelerationDecelerationTimes;

        string id486_ReelResponse;

        string id540_RepositionResponse;

        string id650_Item;

        string id596_VolumePlayerLevelChangedEvent;

        string id67_CultureChangedEvent;

        string id481_SynchronousSpinResponse;

        string id18_CsiStreamingLightV1xsd;

        string id549_ViewportList;

        string id748_ButtonState;

        string id220_DepthCameraResponse;

        string id594_VolumeMuteAllStatusRequest;

        string id122_ExecuteContentRequest;

        string id567_SimulateMouseEventsOnDpp;

        string id724_SetLampStateRequest;

        string id570_AbsolutePosition;

        string id197_EMDIAccessToken;

        string id707_AttractInterval;

        string id633_DeviceRemovedEvent;

        string id366_DigitizerExclusiveMode;

        string id119_CreatePortalResponse;

        string id216_Item;

        string id72_Item;

        string id433_Intensity;

        string id426_SymbolHotPositionDataData;

        string id443_SymbolHighlightsSupported;

        string id739_PanelLocation;

        string id648_CandleStateChangeEvent;

        string id409_StartLightSequenceResponse;

        string id419_StreamingLightFrameData;

        string id189_Size;

        string id698_SetCreditDisplayTypeResponse;

        string id60_MinorVersion;

        string id205_ContentState;

        string id83_GetPlayerServiceResponse;

        string id233_GetHapticDeviceStatusRequest;

        string id134_LoadContentRequest;

        string id735_AnimationId;

        string id193_Action;

        string id226_DepthCameraUsbLocationPath;

        string id382_SynchronizationPayloadData;

        string id192_Y;

        string id485_UnregisterStatusResponse;

        string id240_HapticDevices;

        string id534_MonitorConfigurationResponse;

        string id638_DeviceType;

        string id131_GetVisibilityStateResponse;

        string id201_VisibilityState;

        string id162_RequestorName;

        string id574_AnimationViewport;

        string id236_GetHapticDevicesResponse;

        string id87_Item;

        string id469_SetRequireDeviceResponse;

        string id695_GetCreditDisplayTypeRequest;

        string id452_SolenoidResponse;

        string id462_GetReelDevicesResponse;

        string id10_CsiSoundV1xsd;

        string id719_PlayAnimationResponse;

        string id321_x;

        string id99_ServiceResponse;

        string id701_CabinetEventRegistrationAction;

        string id521_ReelRequestError;

        string id305_Gpu;

        string id323_w;

        string id665_Sequence;

        string id463_ReelStatusChangedEvent;

        string id7_CsiResource;

        string id184_PortalSize;

        string id586_SetDefaultAudioEndpointRequest;

        string id653_SequenceRunningRequest;

        string id2_CsiButtonV1xsd;

        string id257_EventMessage;

        string id578_ChairEnablePowerResponse;

        string id658_SetIntensityResponse;

        string id621_EndpointList;

        string id265_SupportedMedia;

        string id543_WindowResponse;

        string id715_DownloadImageSetResponse;

        string id50_MessageId;

        string id374_BankSynchronizationInfoRequest;

        string id269_DisableStereoscopyRequest;

        string id494_Direction;

        string id141_ReleaseContentRequest;

        string id23_CsiReadiness;

        string id263_PlayCount;

        string id398_GetLightDevicesResponse;

        string id399_GetLightIntensityRequest;

        string id54_ShutdownSend;

        string id448_CanShowGameOutcome;

        string id291_MonitorConfiguration;

        string id270_DisableStereoscopyResponse;

        string id174_Extents;

        string id668_Random;

        string id697_SetCreditDisplayTypeRequest;

        string id430_WindowStopIndex;

        string id287_ColorProfile;

        string id282_SetColorProfileResponse;

        string id580_ChairPoweredResponse;

        string id300_LayerOffset;

        string id329_GetReadyStateResponse;

        string id525_AnimateRequest;

        string id148_CreatePortalErrorCode;

        string id223_DepthCameraType;

        string id603_VolumeResponse;

        string id51_CsiBody;

        string id727_PreviousLampStates;

        string id598_VolumePlayerLevelResponse;

        string id649_Item;

        string id618_Muted;

        string id369_DigitizerIntervals;

        string id615_Volumes;

        string id367_DigitizerRole;

        string id569_WindowHandle;

        string id432_RowIndex;

        string id407_SetSymbolHighlightsResponse;

        string id477_SpinResponse;

        string id34_CsiPresentationSpeedV1xsd;

        string id147_Item;

        string id57_Categories;

        string id160_ShowPortalErrorCode;

        string id590_VolumeAllGroupsRequest;

        string id90_Item;

        string id27_CsiVideoTopper;

        string id212_PresentationSpeedResponse;

        string id388_SynchronizationInformationData;

        string id371_SpecificDigitizerInterval;

        string id674_HasRGB;

        string id637_ReleaseDeviceResponse;

        string id288_ProfilePath;

        string id402_Item;

        string id512_Decelerations;

        string id710_Active;

        string id111_MechanicalBellResponse;

        string id318_OffsetX;

        string id319_OffsetY;

        string id657_SetIntensityRequest;

        string id517_Item;

        string id506_Ascending;

        string id733_PixelState;

        string id459_ClearStatusRegistrationRequest;

        string id297_VirtualX;

        string id77_CallAttendantChangedEvent;

        string id208_GetPresentationSpeedRequest;

        string id227_DepthCameraDeviceId;

        string id149_DestroyPortalErrorCode;

        string id301_ColorProfileId;

        string id539_RepositionRequest;

        string id146_PortalErrorCode;

        string id742_Buttons;

        string id612_PlayerMuteSelected;

        string id480_SynchronousSpinRequest;

        string id427_SymbolHotPositionData;

        string id734_ImageSetId;

        string id694_Item;

        string id675_LightBar;

        string id599_Item;

        string id464_RegisterStatusRequest;

        string id185_Width;

        string id676_LightBezel;

        string id669_Light;

        string id206_PortalConfig;

        string id628_ConnectedDevicesRequest;

        string id747_timestamp;

        string id324_h;

        string id234_GetHapticDeviceStatusResponse;

        string id359_deviceId;

        string id558_LayerIndex;

        string id424_SymbolTrackingData;

        string id392_TotalBankPositions;

        string id446_NumberOfLights;

        string id75_Visible;

        string id492_SpeedIndex;

        string id170_Type;

        string id441_TotalLightCount;

        string id32_CsiDepthCameraV1xsd;

        string id693_Item;

        string id221_DepthCameraDevices;

        string id515_AccelerationDecelerationTime;

        string id81_GetCallAttendantResponse;

        string id520_MulipleReelResponse;

        string id522_ChangeReelSpeed;

        string id411_InterfaceName;

        string id740_PanelType;

        string id11_CsiWindow;

        string id97_Item;

        string id499_Shake;

        string id365_TouchScreenResponse;

        string id431_Color;

        string id737_Repeat;

        string id55_ShutdownDescription;

        string id128_GetPortalIdByNameRequest;

        string id346_Item;

        string id277_GetPreferredUIDisplayRequest;

        string id589_SetVolumePlayerLevelResponse;

        string id31_CsiDepthCamera;

        string id364_Instance;

        string id625_EnablePower;

        string id636_ReleaseDeviceRequest;

        string id478_StopRequest;

        string id403_Item;

        string id474_SetToPositionRequest;

        string id70_Item;

        string id565_Flags;

        string id381_Destination;

        string id390_TimeFramePrecision;

        string id309_DeviceIdentifier;

        string id564_Identifier;

        string id686_ActivityStatusEvent;

        string id559_StereoscopicFrames;

        string id40_CsiServiceV1xsd;

        string id728_LampStates;

        string id214_DefaultPresentationSpeed;

        string id444_Group;

        string id656_SetColorResponse;

        string id471_SetStopOrderResponse;

        string id553_DockPriority;

        string id260_SeekTime;

        string id294_Aspect;

        string id672_Running;

        string id563_Data;

        string id743_Button;

        string id171_Position;

        string id229_DeviceId;

        string id320_DesktopRectangle;

        string id529_CreatedRequest;

        string id244_HapticDeviceStatusResponse;

        string id623_Powered;

        string id211_SetPresentationSpeedResponse;

        string id389_TimeFrame;

        string id617_PriorityMuteState;

        string id118_CreatePortalRequest;

        string id12_CsiWindowV1xsd;

        string id420_FrameName;

        string id472_SetSynchronousStopRequest;

        string id317_StereoscopicFrame;

        string id573_AnimationViewports;

        string id80_GetCallAttendantRequest;

        string id164_PortalIdList;

        string id706_NewGame;

        string id592_VolumeChangedEvent;

        string id56_ConnectResponse;

        string id333_SetReadyStateRequest;

        string id661_TurnOffRequest;

        string id576_End;

        string id161_PortalId;

        string id222_DepthCameraDevice;

        string id410_StreamingLightResponse;

        string id720_RemoveImageSetRequest;

        string id91_Item;

        string id224_DepthCameraDeviceIndex;

        string id476_SpinRequest;

        string id167_Name;

        string id248_DeviceCapabilitiesRequest;

        string id664_TransitionMode;

        string id484_UnregisterStatusRequest;

        string id723_SetAllPixelsResponse;

        string id1_CsiButton;

        string id150_ExecuteContentErrorCode;

        string id404_SetLightIntensityRequest;

        string id418_SequenceName;

        string id393_BreakLoopRequest;

        string id454_SolenoidActionState;

        string id368_ExclusiveModeRequested;

        string id746_ButtonFunctions;

        string id251_PlayContentResponse;

        string id107_MechanicalBellRingRequest;

        string id386_SynchronizationInfoError;

        string id688_ActivityStatusResponse;

        string id273_GetConfigurationRequest;

        string id25_CsiMonitor;

        string id640_GroupList;

        string id103_EmulatableButton;

        string id685_LightData;

        string id378_ReceivedSynchronizationPayload;

        string id330_ReadyStateNotificationEvent;

        string id726_ButtonResponse;

        string id299_AdditionalLayers;

        string id705_GameAttractStyle;

        string id632_DeviceReleasedEvent;

        string id535_MultiWindowRepositionRequest;

        string id635_EventRegistrationResponse;

        string id355_TouchScreens;

        string id497_Cock;

        string id352_TouchDisplayTargetEvent;

        string id415_SequenceData;

        string id683_StartLight;

        string id45_Csi;

        string id421_FrameCount;

        string id489_Number;

        string id429_ReelStop;

        string id498_Bounce;

        string id401_NotificationEvent;

        string id35_CsiPortal;

        string id606_GroupVolumeSetting;

        string id731_ButtonId;

        string id250_PlayContentRequest;

        string id629_ConnectedDevicesResponse;

        string id123_ExecuteContentResponse;

        string id537_MultiWindowSizeRequest;

        string id42_Item;

        string id641_Reason;

        string id400_GetLightIntensityResponse;

        string id667_Consecutive;

        string id505_Speed;

        string id28_CsiVideoTopperV1xsd;

        string id180_MediaDisplayId;

        string id311_RevisionIdentifier;

        string id322_y;

        string id298_VirtualY;

        string id585_MuteClientsResponse;

        string id438_StreamingLightFeatures;

        string id200_PortalContentId;

        string id730_LampState;

        string id609_PlayerMuteSelectable;

        string id296_DesktopCoordinates;

        string id496_Stop;

        string id41_CsiEmulatedCashoutService;

        string id495_Duration;

        string id308_VendorIdentifier;

        string id642_Device;

        string id140_PortalListResponse;

        string id213_PresentationSpeed;

        string id341_Item;

        string id593_Item;

        string id552_Dock;

        string id473_SetSynchronousStopResponse;

        string id285_MonitorResponse;

        string id138_PortalInfoResponse;

        string id105_Enabled;

        string id584_MuteClientsRequest;

        string id209_GetPresentationSpeedResponse;

        string id112_FeatureId;

        string id44_CsiConnectV1xsd;

        string id349_Item;

        string id380_SendPayload;

        string id634_EventRegistrationRequest;

        string id465_RegisterStatusResponse;

        string id155_HidePortalErrorCode;

        string id602_VolumeRequest;

        string id504_Deceleration;

        string id717_GetLampStateResponse;

        string id643_Acquired;

        string id8_CsiResourceV1xsd;

        string id423_SymbolTrackingDataList;

        string id572_Animation;

        string id255_Event;

        string id645_AcquisitionStatus;

        string id507_Features;

        string id43_CsiConnect;

        string id440_LightType;

        string id203_XMLSocketEMDIPort;

        string id490_ReelStatus;

        string id48_Category;

        string id488_ReelStatusEvent;

        string id280_GetStereoscopyStateResponse;

        string id272_EnableStereoscopyResponse;

        string id509_FeatureData;

        string id611_VolumePlayerLevel;

        string id663_LightResponse;

        string id678_LightsOnBottom;

        string id721_RemoveImageSetResponse;

        string id110_MechanicalBellStopResponse;

        string id126_GetEMDIConfigRequest;

        string id516_AccelerationTimeToNextSpeed;

        string id304_ParentGpu;

        string id290_Desktop;

        string id659_StartSequenceRequest;

        string id258_VideoTopperResponse;

        string id449_RealTimeFrameControlSupported;

        string id595_VolumeMuteAllStatusResponse;

        string id356_TouchScreenInfo;

        string id278_GetPreferredUIDisplayResponse;

        string id325_MonitorModel;

        string id542_SizeResponse;

        string id256_ContentKey;

        string id456_ApplyAttributesResponse;

        string id622_Unused;

        string id177_TouchSupported;

        string id113_Count;

        string id361_connectionStatus;

        string id178_AudioSupported;

        string id152_GetEMDIConfigErrorCode;

        string id482_SynchronousStopRequest;

        string id508_Feature;

        string id405_SetLightIntensityResponse;

        string id79_Item;

        string id302_AvailableColorProfiles;

        string id228_Item;

        string id750_IsDiagnostic;

        string id259_ContentPath;

        string id555_AdjustedViewportCoordinates;

        string id231_Description;

        string id132_HidePortalRequest;

        string id575_Start;

        string id343_GetTouchScreenInfoRequest;

        string id326_Manufacturer;

        string id158_PortalListErrorCode;

        string id679_LightsOnLeft;

        string id582_GetAudioEndpointsResponse;

        string id210_SetPresentationSpeedRequest;

        string id587_Item;

        string id687_ActivityStatusRequest;

        string id342_Item;

        string id143_ShowPortalRequest;

        string id115_PauseDurationMilliseconds;

        string id470_SetStopOrderRequest;

        string id451_SolenoidRequest;

        string id59_MajorVersion;

        string id502_LowerLimit;

        string id337_ClientPriority;

        string id33_CsiPresentationSpeed;

        string id151_GetContentStateErrorCode;

        string id692_CabinetEvent;

        string id46_CsiMessageV1xsd;

        string id699_CabinetResponse;

        string id188_Location;

        string id85_Item;

        string id363_digitizer;

        string id722_SetAllPixelsRequest;

        string id445_StreamingLightGroup;

        string id71_Item;

        string id332_ReadyStateSubscriptionResponse;

        string id102_PlayerServiceRequested;

        string id626_AcquireDeviceRequest;

        string id182_Min;

        string id689_Item;

        string id736_FrameDelay;

        string id286_Support;

        string id581_GetAudioEndpointsRequest;

        string id76_Culture;

        string id467_SetRecoveryResponse;

        string id725_SetLampStateResponse;

        string id487_StatusSubscription;

        string id524_Immediate;

        string id166_PortalInfo;

        string id588_SetVolumePlayerLevelRequest;

        string id247_CacheContentResponse;

        string id47_Item;

        string id613_DefaultVolumePlayerLevel;

        string id207_VisibilityGroupName;

        string id39_CsiService;

        string id89_Item;

        string id660_StartSequenceResponse;

        string id16_CsiSolenoidV1xsd;

        string id738_Filename;

        string id439_StreamingLightFeatureData;

        string id544_WindowId;

        string id235_GetHapticDevicesRequest;

        string id673_SequenceNumber;



        protected override void InitIDs() {

            id190_PortalLocation = Reader.NameTable.Add(@"PortalLocation");

            id63_ClientInfo = Reader.NameTable.Add(@"ClientInfo");

            id114_RingDurationMilliseconds = Reader.NameTable.Add(@"RingDurationMilliseconds");

            id601_VolumePlayerSelectableResponse = Reader.NameTable.Add(@"VolumePlayerSelectableResponse");

            id20_CsiBankSynchronizationV1xsd = Reader.NameTable.Add(@"CsiBankSynchronizationV1.xsd");

            id156_LoadContentErrorCode = Reader.NameTable.Add(@"LoadContentErrorCode");

            id528_ChangeZOrderResponse = Reader.NameTable.Add(@"ChangeZOrderResponse");

            id133_HidePortalResponse = Reader.NameTable.Add(@"HidePortalResponse");

            id466_SetRecoveryRequest = Reader.NameTable.Add(@"SetRecoveryRequest");

            id358_driver = Reader.NameTable.Add(@"driver");

            id82_GetPlayerServiceRequest = Reader.NameTable.Add(@"GetPlayerServiceRequest");

            id292_Monitor = Reader.NameTable.Add(@"Monitor");

            id84_Item = Reader.NameTable.Add(@"GetPromptPlayerOnCashoutConfigItemValueRequest");

            id316_Frames = Reader.NameTable.Add(@"Frames");

            id475_SetToPositionResponse = Reader.NameTable.Add(@"SetToPositionResponse");

            id604_SoundResponse = Reader.NameTable.Add(@"SoundResponse");

            id493_Reel = Reader.NameTable.Add(@"Reel");

            id671_StartingLight = Reader.NameTable.Add(@"StartingLight");

            id284_SetTransmissiveSupportResponse = Reader.NameTable.Add(@"SetTransmissiveSupportResponse");

            id173_TextureSize = Reader.NameTable.Add(@"TextureSize");

            id577_ChairEnablePowerRequest = Reader.NameTable.Add(@"ChairEnablePowerRequest");

            id651_CandleStateRequest = Reader.NameTable.Add(@"CandleStateRequest");

            id336_ReadyState = Reader.NameTable.Add(@"ReadyState");

            id627_AcquireDeviceResponse = Reader.NameTable.Add(@"AcquireDeviceResponse");

            id372_DigitizerInterval = Reader.NameTable.Add(@"DigitizerInterval");

            id532_DestroyedResponse = Reader.NameTable.Add(@"DestroyedResponse");

            id670_LightId = Reader.NameTable.Add(@"LightId");

            id353_Item = Reader.NameTable.Add(@"TouchScreenConnectionChangedEvent");

            id241_HapticDevice = Reader.NameTable.Add(@"HapticDevice");

            id350_Item = Reader.NameTable.Add(@"SetDigitizerToMinimumDebounceIntervalRequest");

            id551_ViewportId = Reader.NameTable.Add(@"ViewportId");

            id428_ReelIndex = Reader.NameTable.Add(@"ReelIndex");

            id104_State = Reader.NameTable.Add(@"State");

            id708_InactivityDelay = Reader.NameTable.Add(@"InactivityDelay");

            id375_Item = Reader.NameTable.Add(@"BankSynchronizationInfoResponse");

            id313_CsiDisplayTypesV1xsd = Reader.NameTable.Add(@"CsiDisplayTypesV1.xsd");

            id379_SendSynchronizationPayload = Reader.NameTable.Add(@"SendSynchronizationPayload");

            id4_CsiCabinetV1xsd = Reader.NameTable.Add(@"CsiCabinetV1.xsd");

            id168_Priority = Reader.NameTable.Add(@"Priority");

            id536_MultiWindowRepositionResponse = Reader.NameTable.Add(@"MultiWindowRepositionResponse");

            id144_ShowPortalResponse = Reader.NameTable.Add(@"ShowPortalResponse");

            id340_ClientIdentifier = Reader.NameTable.Add(@"ClientIdentifier");

            id384_PayloadData = Reader.NameTable.Add(@"PayloadData");

            id523_Period = Reader.NameTable.Add(@"Period");

            id703_AttractAestheticConfiguration = Reader.NameTable.Add(@"AttractAestheticConfiguration");

            id591_VolumeAllGroupsResponse = Reader.NameTable.Add(@"VolumeAllGroupsResponse");

            id458_ChangeSpeedResponse = Reader.NameTable.Add(@"ChangeSpeedResponse");

            id530_CreatedResponse = Reader.NameTable.Add(@"CreatedResponse");

            id566_MultitouchSupported = Reader.NameTable.Add(@"MultitouchSupported");

            id38_CsiMechanicalBellV1xsd = Reader.NameTable.Add(@"CsiMechanicalBellV1.xsd");

            id88_Item = Reader.NameTable.Add(@"PlayerServiceRequestChangedEvent");

            id204_WebsocketEMDIPort = Reader.NameTable.Add(@"WebsocketEMDIPort");

            id127_GetEMDIConfigResponse = Reader.NameTable.Add(@"GetEMDIConfigResponse");

            id729_Lamp = Reader.NameTable.Add(@"Lamp");

            id713_ConfigurationResponse = Reader.NameTable.Add(@"ConfigurationResponse");

            id65_ClientType = Reader.NameTable.Add(@"ClientType");

            id377_MessageRegistrationResponse = Reader.NameTable.Add(@"MessageRegistrationResponse");

            id514_Times = Reader.NameTable.Add(@"Times");

            id447_LightsWorkingFeedbackSupported = Reader.NameTable.Add(@"LightsWorkingFeedbackSupported");

            id169_Screen = Reader.NameTable.Add(@"Screen");

            id436_GroupId = Reader.NameTable.Add(@"GroupId");

            id191_X = Reader.NameTable.Add(@"X");

            id620_Endpoints = Reader.NameTable.Add(@"Endpoints");

            id198_Item = Reader.NameTable.Add(@"AuthorizeDefaultEMDICapabilities");

            id142_ReleaseContentResponse = Reader.NameTable.Add(@"ReleaseContentResponse");

            id139_PortalListRequest = Reader.NameTable.Add(@"PortalListRequest");

            id15_CsiSolenoid = Reader.NameTable.Add(@"CsiSolenoid");

            id275_GetCurrentColorProfileRequest = Reader.NameTable.Add(@"GetCurrentColorProfileRequest");

            id306_Vendor = Reader.NameTable.Add(@"Vendor");

            id360_display = Reader.NameTable.Add(@"display");

            id741_PanelID = Reader.NameTable.Add(@"PanelID");

            id120_DestroyPortalRequest = Reader.NameTable.Add(@"DestroyPortalRequest");

            id295_Model = Reader.NameTable.Add(@"Model");

            id116_Item = Reader.NameTable.Add(@"ConfigureVisibilityGroupRequest");

            id109_MechanicalBellStopRequest = Reader.NameTable.Add(@"MechanicalBellStopRequest");

            id267_MimeType = Reader.NameTable.Add(@"MimeType");

            id533_MonitorConfigurationRequest = Reader.NameTable.Add(@"MonitorConfigurationRequest");

            id714_DownloadImageSetRequest = Reader.NameTable.Add(@"DownloadImageSetRequest");

            id607_VolumeLevel = Reader.NameTable.Add(@"VolumeLevel");

            id264_VideoTopperResolution = Reader.NameTable.Add(@"VideoTopperResolution");

            id709_GameAttractsEnabled = Reader.NameTable.Add(@"GameAttractsEnabled");

            id9_CsiSound = Reader.NameTable.Add(@"CsiSound");

            id218_GetDepthCameraDevicesRequest = Reader.NameTable.Add(@"GetDepthCameraDevicesRequest");

            id408_StartLightSequenceRequest = Reader.NameTable.Add(@"StartLightSequenceRequest");

            id461_GetReelDevicesRequest = Reader.NameTable.Add(@"GetReelDevicesRequest");

            id249_DeviceCapabilitiesResponse = Reader.NameTable.Add(@"DeviceCapabilitiesResponse");

            id387_SynchronizationInfo = Reader.NameTable.Add(@"SynchronizationInfo");

            id745_HardwareButtonId = Reader.NameTable.Add(@"HardwareButtonId");

            id243_HapticDeviceLocation = Reader.NameTable.Add(@"HapticDeviceLocation");

            id362_offscreen = Reader.NameTable.Add(@"offscreen");

            id13_CsiReel = Reader.NameTable.Add(@"CsiReel");

            id53_InitializeCsiResponse = Reader.NameTable.Add(@"InitializeCsiResponse");

            id557_RequestedViewportRectangle = Reader.NameTable.Add(@"RequestedViewportRectangle");

            id712_ConfigurationRequest = Reader.NameTable.Add(@"ConfigurationRequest");

            id307_UniqueIdentifier = Reader.NameTable.Add(@"UniqueIdentifier");

            id614_MuteAll = Reader.NameTable.Add(@"MuteAll");

            id545_Window = Reader.NameTable.Add(@"Window");

            id654_SequenceRunningResponse = Reader.NameTable.Add(@"SequenceRunningResponse");

            id335_ReadinessResponse = Reader.NameTable.Add(@"ReadinessResponse");

            id338_Subscription = Reader.NameTable.Add(@"Subscription");

            id677_LightsOnTop = Reader.NameTable.Add(@"LightsOnTop");

            id125_GetContentStateResponse = Reader.NameTable.Add(@"GetContentStateResponse");

            id646_BitwiseControlRequest = Reader.NameTable.Add(@"BitwiseControlRequest");

            id450_NumberOfFramesSupported = Reader.NameTable.Add(@"NumberOfFramesSupported");

            id230_DepthCameraDeviceStatus = Reader.NameTable.Add(@"DepthCameraDeviceStatus");

            id159_ReleaseContentErrorCode = Reader.NameTable.Add(@"ReleaseContentErrorCode");

            id691_Item = Reader.NameTable.Add(@"AttractAestheticConfigurationResponse");

            id100_RegistrationAction = Reader.NameTable.Add(@"RegistrationAction");

            id106_CallAttendant = Reader.NameTable.Add(@"CallAttendant");

            id510_ReelType = Reader.NameTable.Add(@"ReelType");

            id254_VideoTopperContentEvent = Reader.NameTable.Add(@"VideoTopperContentEvent");

            id181_PortalExtents = Reader.NameTable.Add(@"PortalExtents");

            id373_interval = Reader.NameTable.Add(@"interval");

            id253_StopContentResponse = Reader.NameTable.Add(@"StopContentResponse");

            id425_SymbolHotPositionDataList = Reader.NameTable.Add(@"SymbolHotPositionDataList");

            id129_GetPortalIdByNameResponse = Reader.NameTable.Add(@"GetPortalIdByNameResponse");

            id511_Speeds = Reader.NameTable.Add(@"Speeds");

            id101_Prompt = Reader.NameTable.Add(@"Prompt");

            id647_BitwiseControlResponse = Reader.NameTable.Add(@"BitwiseControlResponse");

            id66_Token = Reader.NameTable.Add(@"Token");

            id541_SizeRequest = Reader.NameTable.Add(@"SizeRequest");

            id397_GetLightDevicesRequest = Reader.NameTable.Add(@"GetLightDevicesRequest");

            id239_HapticResponse = Reader.NameTable.Add(@"HapticResponse");

            id339_ReadyStateResponse = Reader.NameTable.Add(@"ReadyStateResponse");

            id58_CategoryVersion = Reader.NameTable.Add(@"CategoryVersion");

            id749_Pressed = Reader.NameTable.Add(@"Pressed");

            id271_EnableStereoscopyRequest = Reader.NameTable.Add(@"EnableStereoscopyRequest");

            id560_StereoscopicFrameList = Reader.NameTable.Add(@"StereoscopicFrameList");

            id327_Version = Reader.NameTable.Add(@"Version");

            id639_ResourceResponse = Reader.NameTable.Add(@"ResourceResponse");

            id354_TouchScreenInfoEvent = Reader.NameTable.Add(@"TouchScreenInfoEvent");

            id86_Item = Reader.NameTable.Add(@"GetTheButtonsThatTheEGMRequiresToBeEmulatedRequest");

            id96_Item = Reader.NameTable.Add(@"RegisterForPromptPlayerOnCashoutConfigItemChangedEventsRequest");

            id268_FileExtension = Reader.NameTable.Add(@"FileExtension");

            id137_PortalInfoRequest = Reader.NameTable.Add(@"PortalInfoRequest");

            id711_ButtonEvent = Reader.NameTable.Add(@"ButtonEvent");

            id202_PortalName = Reader.NameTable.Add(@"PortalName");

            id21_CsiTouchScreen = Reader.NameTable.Add(@"CsiTouchScreen");

            id22_CsiTouchScreenV1xsd = Reader.NameTable.Add(@"CsiTouchScreenV1.xsd");

            id548_Viewports = Reader.NameTable.Add(@"Viewports");

            id36_CsiPortalV1xsd = Reader.NameTable.Add(@"CsiPortalV1.xsd");

            id652_CandleStateResponse = Reader.NameTable.Add(@"CandleStateResponse");

            id434_EnabledSymbolHighlightFeatures = Reader.NameTable.Add(@"EnabledSymbolHighlightFeatures");

            id571_Animations = Reader.NameTable.Add(@"Animations");

            id347_Item = Reader.NameTable.Add(@"ResetDigitizerDebounceIntervalRequest");

            id303_StereoscopicSettings = Reader.NameTable.Add(@"StereoscopicSettings");

            id217_Item = Reader.NameTable.Add(@"GetDepthCameraDeviceStatusResponse");

            id64_ClientConnection = Reader.NameTable.Add(@"ClientConnection");

            id136_PortalActionNotifyEvent = Reader.NameTable.Add(@"PortalActionNotifyEvent");

            id455_ApplyAttributesRequest = Reader.NameTable.Add(@"ApplyAttributesRequest");

            id518_Stops = Reader.NameTable.Add(@"Stops");

            id274_GetConfigurationResponse = Reader.NameTable.Add(@"GetConfigurationResponse");

            id52_InitializeCsiRequest = Reader.NameTable.Add(@"InitializeCsiRequest");

            id655_SetColorRequest = Reader.NameTable.Add(@"SetColorRequest");

            id345_Item = Reader.NameTable.Add(@"RequestMinimumDigitizerDebounceIntervalForDPP");

            id732_Lamps = Reader.NameTable.Add(@"Lamps");

            id283_SetTransmissiveSupportRequest = Reader.NameTable.Add(@"SetTransmissiveSupportRequest");

            id608_PlayerSelectable = Reader.NameTable.Add(@"PlayerSelectable");

            id501_HoverLimits = Reader.NameTable.Add(@"HoverLimits");

            id619_HeadphoneJackState = Reader.NameTable.Add(@"HeadphoneJackState");

            id385_ReceivedPayload = Reader.NameTable.Add(@"ReceivedPayload");

            id93_Item = Reader.NameTable.Add(@"RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsResponse");

            id183_Max = Reader.NameTable.Add(@"Max");

            id245_HapticDeviceStatus = Reader.NameTable.Add(@"HapticDeviceStatus");

            id242_HapticDeviceType = Reader.NameTable.Add(@"HapticDeviceType");

            id153_GetPortalIdByNameErrorCode = Reader.NameTable.Add(@"GetPortalIdByNameErrorCode");

            id442_AdjustableIntensity = Reader.NameTable.Add(@"AdjustableIntensity");

            id680_LightsOnRight = Reader.NameTable.Add(@"LightsOnRight");

            id422_FrameDataSize = Reader.NameTable.Add(@"FrameDataSize");

            id30_CsiHapticV1xsd = Reader.NameTable.Add(@"CsiHapticV1.xsd");

            id334_SetReadyStateResponse = Reader.NameTable.Add(@"SetReadyStateResponse");

            id331_ReadyStateSubscriptionRequest = Reader.NameTable.Add(@"ReadyStateSubscriptionRequest");

            id74_EmulatedCashoutServiceResponse = Reader.NameTable.Add(@"EmulatedCashoutServiceResponse");

            id145_PortalResponse = Reader.NameTable.Add(@"PortalResponse");

            id600_VolumePlayerSelectableRequest = Reader.NameTable.Add(@"VolumePlayerSelectableRequest");

            id579_ChairPoweredRequest = Reader.NameTable.Add(@"ChairPoweredRequest");

            id117_Item = Reader.NameTable.Add(@"ConfigureVisibilityGroupResponse");

            id314_Technology = Reader.NameTable.Add(@"Technology");

            id172_Bounds = Reader.NameTable.Add(@"Bounds");

            id219_GetDepthCameraDevicesResponse = Reader.NameTable.Add(@"GetDepthCameraDevicesResponse");

            id396_ClearSymbolHighlightsResponse = Reader.NameTable.Add(@"ClearSymbolHighlightsResponse");

            id568_PriorityType = Reader.NameTable.Add(@"PriorityType");

            id49_MessageType = Reader.NameTable.Add(@"MessageType");

            id503_UpperLimit = Reader.NameTable.Add(@"UpperLimit");

            id289_Role = Reader.NameTable.Add(@"Role");

            id531_DestroyedRequest = Reader.NameTable.Add(@"DestroyedRequest");

            id527_ChangeZOrderRequest = Reader.NameTable.Add(@"ChangeZOrderRequest");

            id437_Notification = Reader.NameTable.Add(@"Notification");

            id179_ConfigGroup = Reader.NameTable.Add(@"ConfigGroup");

            id700_CreditDisplayType = Reader.NameTable.Add(@"CreditDisplayType");

            id550_Viewport = Reader.NameTable.Add(@"Viewport");

            id624_Success = Reader.NameTable.Add(@"Success");

            id310_SubSystemIdentifier = Reader.NameTable.Add(@"SubSystemIdentifier");

            id130_GetVisibilityStateRequest = Reader.NameTable.Add(@"GetVisibilityStateRequest");

            id538_MultiWindowSizeResponse = Reader.NameTable.Add(@"MultiWindowSizeResponse");

            id281_SetColorProfileRequest = Reader.NameTable.Add(@"SetColorProfileRequest");

            id610_VolumePlayerSelectable = Reader.NameTable.Add(@"VolumePlayerSelectable");

            id238_HapticDeviceEventSeverity = Reader.NameTable.Add(@"HapticDeviceEventSeverity");

            id78_CashOutRequest = Reader.NameTable.Add(@"CashOutRequest");

            id19_CsiBankSynchronization = Reader.NameTable.Add(@"CsiBankSynchronization");

            id187_PortalBounds = Reader.NameTable.Add(@"PortalBounds");

            id237_HapticDeviceEvent = Reader.NameTable.Add(@"HapticDeviceEvent");

            id383_PayloadSize = Reader.NameTable.Add(@"PayloadSize");

            id246_CacheContentRequest = Reader.NameTable.Add(@"CacheContentRequest");

            id666_Parameters = Reader.NameTable.Add(@"Parameters");

            id684_BitControl = Reader.NameTable.Add(@"BitControl");

            id17_CsiStreamingLight = Reader.NameTable.Add(@"CsiStreamingLight");

            id225_DepthCameraModel = Reader.NameTable.Add(@"DepthCameraModel");

            id357_driverSubClass = Reader.NameTable.Add(@"driverSubClass");

            id630_DeviceAcquiredEvent = Reader.NameTable.Add(@"DeviceAcquiredEvent");

            id37_CsiMechanicalBell = Reader.NameTable.Add(@"CsiMechanicalBell");

            id94_Item = Reader.NameTable.Add(@"RegisterForPlayerServiceRequestChangedEventsRequest");

            id266_SupportsPortals = Reader.NameTable.Add(@"SupportsPortals");

            id121_DestroyPortalResponse = Reader.NameTable.Add(@"DestroyPortalResponse");

            id702_Value = Reader.NameTable.Add(@"Value");

            id261_LoopVideo = Reader.NameTable.Add(@"LoopVideo");

            id26_CsiMonitorV1xsd = Reader.NameTable.Add(@"CsiMonitorV1.xsd");

            id68_Item = Reader.NameTable.Add(@"HideEmulatedCashoutServiceEvent");

            id176_SoundGroup = Reader.NameTable.Add(@"SoundGroup");

            id394_BreakLoopResponse = Reader.NameTable.Add(@"BreakLoopResponse");

            id681_Candle = Reader.NameTable.Add(@"Candle");

            id479_StopResponse = Reader.NameTable.Add(@"StopResponse");

            id631_DeviceConnectedEvent = Reader.NameTable.Add(@"DeviceConnectedEvent");

            id215_DepthCameraDeviceEvent = Reader.NameTable.Add(@"DepthCameraDeviceEvent");

            id483_SynchronousStopResponse = Reader.NameTable.Add(@"SynchronousStopResponse");

            id344_GetTouchScreenInfoResponse = Reader.NameTable.Add(@"GetTouchScreenInfoResponse");

            id561_VirtualRectangle = Reader.NameTable.Add(@"VirtualRectangle");

            id435_SymbolHighlightFeatureType = Reader.NameTable.Add(@"SymbolHighlightFeatureType");

            id6_CsiLightV1xsd = Reader.NameTable.Add(@"CsiLightV1.xsd");

            id351_TouchCalibrationCompleteEvent = Reader.NameTable.Add(@"TouchCalibrationCompleteEvent");

            id716_GetLampStateRequest = Reader.NameTable.Add(@"GetLampStateRequest");

            id376_MessageRegistrationRequest = Reader.NameTable.Add(@"MessageRegistrationRequest");

            id682_Illuminated = Reader.NameTable.Add(@"Illuminated");

            id108_MechanicalBellRingResponse = Reader.NameTable.Add(@"MechanicalBellRingResponse");

            id491_Reels = Reader.NameTable.Add(@"Reels");

            id391_PositionInBank = Reader.NameTable.Add(@"PositionInBank");

            id14_CsiReelV1xsd = Reader.NameTable.Add(@"CsiReelV1.xsd");

            id412_GroupNumber = Reader.NameTable.Add(@"GroupNumber");

            id718_PlayAnimationRequest = Reader.NameTable.Add(@"PlayAnimationRequest");

            id175_DefaultEMDIAccessToken = Reader.NameTable.Add(@"DefaultEMDIAccessToken");

            id370_Interval = Reader.NameTable.Add(@"Interval");

            id186_Height = Reader.NameTable.Add(@"Height");

            id98_ServiceRequest = Reader.NameTable.Add(@"ServiceRequest");

            id554_RequestedViewportCoordinates = Reader.NameTable.Add(@"RequestedViewportCoordinates");

            id95_Item = Reader.NameTable.Add(@"RegisterForPlayerServiceRequestChangedEventsResponse");

            id468_SetRequireDeviceRequest = Reader.NameTable.Add(@"SetRequireDeviceRequest");

            id597_VolumePlayerLevelRequest = Reader.NameTable.Add(@"VolumePlayerLevelRequest");

            id276_GetCurrentColorProfileResponse = Reader.NameTable.Add(@"GetCurrentColorProfileResponse");

            id744_Dynamic = Reader.NameTable.Add(@"Dynamic");

            id562_Windows = Reader.NameTable.Add(@"Windows");

            id547_ViewportExtents = Reader.NameTable.Add(@"ViewportExtents");

            id556_AdjustedViewportRectangle = Reader.NameTable.Add(@"AdjustedViewportRectangle");

            id453_SolenoidActionType = Reader.NameTable.Add(@"SolenoidActionType");

            id29_CsiHaptic = Reader.NameTable.Add(@"CsiHaptic");

            id232_Severity = Reader.NameTable.Add(@"Severity");

            id457_ChangeSpeedRequest = Reader.NameTable.Add(@"ChangeSpeedRequest");

            id416_SequenceFile = Reader.NameTable.Add(@"SequenceFile");

            id662_TurnOffResponse = Reader.NameTable.Add(@"TurnOffResponse");

            id395_ClearSymbolHighlightsRequest = Reader.NameTable.Add(@"ClearSymbolHighlightsRequest");

            id348_Item = Reader.NameTable.Add(@"SetDigitizerExclusiveModeRequest");

            id315_Format = Reader.NameTable.Add(@"Format");

            id690_Item = Reader.NameTable.Add(@"AttractAestheticConfigurationRequest");

            id519_MaxSeekTime = Reader.NameTable.Add(@"MaxSeekTime");

            id92_Item = Reader.NameTable.Add(@"RegisterForEmulatedServiceButtonEnabledConfigItemChangedEventsRequest");

            id417_StreamingLightSequenceData = Reader.NameTable.Add(@"StreamingLightSequenceData");

            id157_PortalInfoErrorCode = Reader.NameTable.Add(@"PortalInfoErrorCode");

            id262_ImageDuration = Reader.NameTable.Add(@"ImageDuration");

            id644_GroupResponse = Reader.NameTable.Add(@"GroupResponse");

            id616_Endpoint = Reader.NameTable.Add(@"Endpoint");

            id414_FrameData = Reader.NameTable.Add(@"FrameData");

            id252_StopContentRequest = Reader.NameTable.Add(@"StopContentRequest");

            id460_Item = Reader.NameTable.Add(@"ClearStatusRegistrationResponse");

            id135_LoadContentResponse = Reader.NameTable.Add(@"LoadContentResponse");

            id195_ContentURL = Reader.NameTable.Add(@"ContentURL");

            id328_GetReadyStateRequest = Reader.NameTable.Add(@"GetReadyStateRequest");

            id165_PortalClass = Reader.NameTable.Add(@"PortalClass");

            id293_Style = Reader.NameTable.Add(@"Style");

            id526_AnimateResponse = Reader.NameTable.Add(@"AnimateResponse");

            id279_GetStereoscopyStateRequest = Reader.NameTable.Add(@"GetStereoscopyStateRequest");

            id704_GameAttractPlaylistGroup = Reader.NameTable.Add(@"GameAttractPlaylistGroup");

            id312_PrimaryAdapter = Reader.NameTable.Add(@"PrimaryAdapter");

            id583_HeadphoneJackChangedEvent = Reader.NameTable.Add(@"HeadphoneJackChangedEvent");

            id546_Status = Reader.NameTable.Add(@"Status");

            id154_GetVisibilityStateErrorCode = Reader.NameTable.Add(@"GetVisibilityStateErrorCode");

            id3_CsiCabinet = Reader.NameTable.Add(@"CsiCabinet");

            id62_ErrorDescription = Reader.NameTable.Add(@"ErrorDescription");

            id194_Result = Reader.NameTable.Add(@"Result");

            id24_CsiReadinessV1xsd = Reader.NameTable.Add(@"CsiReadinessV1.xsd");

            id199_PortalContentToken = Reader.NameTable.Add(@"PortalContentToken");

            id500_Hover = Reader.NameTable.Add(@"Hover");

            id124_GetContentStateRequest = Reader.NameTable.Add(@"GetContentStateRequest");

            id605_GroupVolume = Reader.NameTable.Add(@"GroupVolume");

            id69_Item = Reader.NameTable.Add(@"RegisterAsEmulatedCashoutServiceWindowRequest");

            id61_ErrorCode = Reader.NameTable.Add(@"ErrorCode");

            id5_CsiLight = Reader.NameTable.Add(@"CsiLight");

            id73_Item = Reader.NameTable.Add(@"ShowEmulatedCashoutServiceEvent");

            id413_PlayMode = Reader.NameTable.Add(@"PlayMode");

            id163_PortalIds = Reader.NameTable.Add(@"PortalIds");

            id696_GetCreditDisplayTypeResponse = Reader.NameTable.Add(@"GetCreditDisplayTypeResponse");

            id406_SetSymbolHighlightsRequest = Reader.NameTable.Add(@"SetSymbolHighlightsRequest");

            id196_StartAfterLoad = Reader.NameTable.Add(@"StartAfterLoad");

            id513_AccelerationDecelerationTimes = Reader.NameTable.Add(@"AccelerationDecelerationTimes");

            id486_ReelResponse = Reader.NameTable.Add(@"ReelResponse");

            id540_RepositionResponse = Reader.NameTable.Add(@"RepositionResponse");

            id650_Item = Reader.NameTable.Add(@"CandleStateChangeRegistrationResponse");

            id596_VolumePlayerLevelChangedEvent = Reader.NameTable.Add(@"VolumePlayerLevelChangedEvent");

            id67_CultureChangedEvent = Reader.NameTable.Add(@"CultureChangedEvent");

            id481_SynchronousSpinResponse = Reader.NameTable.Add(@"SynchronousSpinResponse");

            id18_CsiStreamingLightV1xsd = Reader.NameTable.Add(@"CsiStreamingLightV1.xsd");

            id549_ViewportList = Reader.NameTable.Add(@"ViewportList");

            id748_ButtonState = Reader.NameTable.Add(@"ButtonState");

            id220_DepthCameraResponse = Reader.NameTable.Add(@"DepthCameraResponse");

            id594_VolumeMuteAllStatusRequest = Reader.NameTable.Add(@"VolumeMuteAllStatusRequest");

            id122_ExecuteContentRequest = Reader.NameTable.Add(@"ExecuteContentRequest");

            id567_SimulateMouseEventsOnDpp = Reader.NameTable.Add(@"SimulateMouseEventsOnDpp");

            id724_SetLampStateRequest = Reader.NameTable.Add(@"SetLampStateRequest");

            id570_AbsolutePosition = Reader.NameTable.Add(@"AbsolutePosition");

            id197_EMDIAccessToken = Reader.NameTable.Add(@"EMDIAccessToken");

            id707_AttractInterval = Reader.NameTable.Add(@"AttractInterval");

            id633_DeviceRemovedEvent = Reader.NameTable.Add(@"DeviceRemovedEvent");

            id366_DigitizerExclusiveMode = Reader.NameTable.Add(@"DigitizerExclusiveMode");

            id119_CreatePortalResponse = Reader.NameTable.Add(@"CreatePortalResponse");

            id216_Item = Reader.NameTable.Add(@"GetDepthCameraDeviceStatusRequest");

            id72_Item = Reader.NameTable.Add(@"SetEmulatedCashoutServiceVisibleResponse");

            id433_Intensity = Reader.NameTable.Add(@"Intensity");

            id426_SymbolHotPositionDataData = Reader.NameTable.Add(@"SymbolHotPositionDataData");

            id443_SymbolHighlightsSupported = Reader.NameTable.Add(@"SymbolHighlightsSupported");

            id739_PanelLocation = Reader.NameTable.Add(@"PanelLocation");

            id648_CandleStateChangeEvent = Reader.NameTable.Add(@"CandleStateChangeEvent");

            id409_StartLightSequenceResponse = Reader.NameTable.Add(@"StartLightSequenceResponse");

            id419_StreamingLightFrameData = Reader.NameTable.Add(@"StreamingLightFrameData");

            id189_Size = Reader.NameTable.Add(@"Size");

            id698_SetCreditDisplayTypeResponse = Reader.NameTable.Add(@"SetCreditDisplayTypeResponse");

            id60_MinorVersion = Reader.NameTable.Add(@"MinorVersion");

            id205_ContentState = Reader.NameTable.Add(@"ContentState");

            id83_GetPlayerServiceResponse = Reader.NameTable.Add(@"GetPlayerServiceResponse");

            id233_GetHapticDeviceStatusRequest = Reader.NameTable.Add(@"GetHapticDeviceStatusRequest");

            id134_LoadContentRequest = Reader.NameTable.Add(@"LoadContentRequest");

            id735_AnimationId = Reader.NameTable.Add(@"AnimationId");

            id193_Action = Reader.NameTable.Add(@"Action");

            id226_DepthCameraUsbLocationPath = Reader.NameTable.Add(@"DepthCameraUsbLocationPath");

            id382_SynchronizationPayloadData = Reader.NameTable.Add(@"SynchronizationPayloadData");

            id192_Y = Reader.NameTable.Add(@"Y");

            id485_UnregisterStatusResponse = Reader.NameTable.Add(@"UnregisterStatusResponse");

            id240_HapticDevices = Reader.NameTable.Add(@"HapticDevices");

            id534_MonitorConfigurationResponse = Reader.NameTable.Add(@"MonitorConfigurationResponse");

            id638_DeviceType = Reader.NameTable.Add(@"DeviceType");

            id131_GetVisibilityStateResponse = Reader.NameTable.Add(@"GetVisibilityStateResponse");

            id201_VisibilityState = Reader.NameTable.Add(@"VisibilityState");

            id162_RequestorName = Reader.NameTable.Add(@"RequestorName");

            id574_AnimationViewport = Reader.NameTable.Add(@"AnimationViewport");

            id236_GetHapticDevicesResponse = Reader.NameTable.Add(@"GetHapticDevicesResponse");

            id87_Item = Reader.NameTable.Add(@"GetTheButtonsThatTheEGMRequiresToBeEmulatedResponse");

            id469_SetRequireDeviceResponse = Reader.NameTable.Add(@"SetRequireDeviceResponse");

            id695_GetCreditDisplayTypeRequest = Reader.NameTable.Add(@"GetCreditDisplayTypeRequest");

            id452_SolenoidResponse = Reader.NameTable.Add(@"SolenoidResponse");

            id462_GetReelDevicesResponse = Reader.NameTable.Add(@"GetReelDevicesResponse");

            id10_CsiSoundV1xsd = Reader.NameTable.Add(@"CsiSoundV1.xsd");

            id719_PlayAnimationResponse = Reader.NameTable.Add(@"PlayAnimationResponse");

            id321_x = Reader.NameTable.Add(@"x");

            id99_ServiceResponse = Reader.NameTable.Add(@"ServiceResponse");

            id701_CabinetEventRegistrationAction = Reader.NameTable.Add(@"CabinetEventRegistrationAction");

            id521_ReelRequestError = Reader.NameTable.Add(@"ReelRequestError");

            id305_Gpu = Reader.NameTable.Add(@"Gpu");

            id323_w = Reader.NameTable.Add(@"w");

            id665_Sequence = Reader.NameTable.Add(@"Sequence");

            id463_ReelStatusChangedEvent = Reader.NameTable.Add(@"ReelStatusChangedEvent");

            id7_CsiResource = Reader.NameTable.Add(@"CsiResource");

            id184_PortalSize = Reader.NameTable.Add(@"PortalSize");

            id586_SetDefaultAudioEndpointRequest = Reader.NameTable.Add(@"SetDefaultAudioEndpointRequest");

            id653_SequenceRunningRequest = Reader.NameTable.Add(@"SequenceRunningRequest");

            id2_CsiButtonV1xsd = Reader.NameTable.Add(@"CsiButtonV1.xsd");

            id257_EventMessage = Reader.NameTable.Add(@"EventMessage");

            id578_ChairEnablePowerResponse = Reader.NameTable.Add(@"ChairEnablePowerResponse");

            id658_SetIntensityResponse = Reader.NameTable.Add(@"SetIntensityResponse");

            id621_EndpointList = Reader.NameTable.Add(@"EndpointList");

            id265_SupportedMedia = Reader.NameTable.Add(@"SupportedMedia");

            id543_WindowResponse = Reader.NameTable.Add(@"WindowResponse");

            id715_DownloadImageSetResponse = Reader.NameTable.Add(@"DownloadImageSetResponse");

            id50_MessageId = Reader.NameTable.Add(@"MessageId");

            id374_BankSynchronizationInfoRequest = Reader.NameTable.Add(@"BankSynchronizationInfoRequest");

            id269_DisableStereoscopyRequest = Reader.NameTable.Add(@"DisableStereoscopyRequest");

            id494_Direction = Reader.NameTable.Add(@"Direction");

            id141_ReleaseContentRequest = Reader.NameTable.Add(@"ReleaseContentRequest");

            id23_CsiReadiness = Reader.NameTable.Add(@"CsiReadiness");

            id263_PlayCount = Reader.NameTable.Add(@"PlayCount");

            id398_GetLightDevicesResponse = Reader.NameTable.Add(@"GetLightDevicesResponse");

            id399_GetLightIntensityRequest = Reader.NameTable.Add(@"GetLightIntensityRequest");

            id54_ShutdownSend = Reader.NameTable.Add(@"ShutdownSend");

            id448_CanShowGameOutcome = Reader.NameTable.Add(@"CanShowGameOutcome");

            id291_MonitorConfiguration = Reader.NameTable.Add(@"MonitorConfiguration");

            id270_DisableStereoscopyResponse = Reader.NameTable.Add(@"DisableStereoscopyResponse");

            id174_Extents = Reader.NameTable.Add(@"Extents");

            id668_Random = Reader.NameTable.Add(@"Random");

            id697_SetCreditDisplayTypeRequest = Reader.NameTable.Add(@"SetCreditDisplayTypeRequest");

            id430_WindowStopIndex = Reader.NameTable.Add(@"WindowStopIndex");

            id287_ColorProfile = Reader.NameTable.Add(@"ColorProfile");

            id282_SetColorProfileResponse = Reader.NameTable.Add(@"SetColorProfileResponse");

            id580_ChairPoweredResponse = Reader.NameTable.Add(@"ChairPoweredResponse");

            id300_LayerOffset = Reader.NameTable.Add(@"LayerOffset");

            id329_GetReadyStateResponse = Reader.NameTable.Add(@"GetReadyStateResponse");

            id525_AnimateRequest = Reader.NameTable.Add(@"AnimateRequest");

            id148_CreatePortalErrorCode = Reader.NameTable.Add(@"CreatePortalErrorCode");

            id223_DepthCameraType = Reader.NameTable.Add(@"DepthCameraType");

            id603_VolumeResponse = Reader.NameTable.Add(@"VolumeResponse");

            id51_CsiBody = Reader.NameTable.Add(@"CsiBody");

            id727_PreviousLampStates = Reader.NameTable.Add(@"PreviousLampStates");

            id598_VolumePlayerLevelResponse = Reader.NameTable.Add(@"VolumePlayerLevelResponse");

            id649_Item = Reader.NameTable.Add(@"CandleStateChangeRegistrationRequest");

            id618_Muted = Reader.NameTable.Add(@"Muted");

            id369_DigitizerIntervals = Reader.NameTable.Add(@"DigitizerIntervals");

            id615_Volumes = Reader.NameTable.Add(@"Volumes");

            id367_DigitizerRole = Reader.NameTable.Add(@"DigitizerRole");

            id569_WindowHandle = Reader.NameTable.Add(@"WindowHandle");

            id432_RowIndex = Reader.NameTable.Add(@"RowIndex");

            id407_SetSymbolHighlightsResponse = Reader.NameTable.Add(@"SetSymbolHighlightsResponse");

            id477_SpinResponse = Reader.NameTable.Add(@"SpinResponse");

            id34_CsiPresentationSpeedV1xsd = Reader.NameTable.Add(@"CsiPresentationSpeedV1.xsd");

            id147_Item = Reader.NameTable.Add(@"ConfigureVisibilityGroupErrorCode");

            id57_Categories = Reader.NameTable.Add(@"Categories");

            id160_ShowPortalErrorCode = Reader.NameTable.Add(@"ShowPortalErrorCode");

            id590_VolumeAllGroupsRequest = Reader.NameTable.Add(@"VolumeAllGroupsRequest");

            id90_Item = Reader.NameTable.Add(@"RegisterForCallAttendantChangedEventsRequest");

            id27_CsiVideoTopper = Reader.NameTable.Add(@"CsiVideoTopper");

            id212_PresentationSpeedResponse = Reader.NameTable.Add(@"PresentationSpeedResponse");

            id388_SynchronizationInformationData = Reader.NameTable.Add(@"SynchronizationInformationData");

            id371_SpecificDigitizerInterval = Reader.NameTable.Add(@"SpecificDigitizerInterval");

            id674_HasRGB = Reader.NameTable.Add(@"HasRGB");

            id637_ReleaseDeviceResponse = Reader.NameTable.Add(@"ReleaseDeviceResponse");

            id288_ProfilePath = Reader.NameTable.Add(@"ProfilePath");

            id402_Item = Reader.NameTable.Add(@"SetEnabledSymbolHighlightFeaturesRequest");

            id512_Decelerations = Reader.NameTable.Add(@"Decelerations");

            id710_Active = Reader.NameTable.Add(@"Active");

            id111_MechanicalBellResponse = Reader.NameTable.Add(@"MechanicalBellResponse");

            id318_OffsetX = Reader.NameTable.Add(@"OffsetX");

            id319_OffsetY = Reader.NameTable.Add(@"OffsetY");

            id657_SetIntensityRequest = Reader.NameTable.Add(@"SetIntensityRequest");

            id517_Item = Reader.NameTable.Add(@"DecelerationTimeToPreviousSpeed");

            id506_Ascending = Reader.NameTable.Add(@"Ascending");

            id733_PixelState = Reader.NameTable.Add(@"PixelState");

            id459_ClearStatusRegistrationRequest = Reader.NameTable.Add(@"ClearStatusRegistrationRequest");

            id297_VirtualX = Reader.NameTable.Add(@"VirtualX");

            id77_CallAttendantChangedEvent = Reader.NameTable.Add(@"CallAttendantChangedEvent");

            id208_GetPresentationSpeedRequest = Reader.NameTable.Add(@"GetPresentationSpeedRequest");

            id227_DepthCameraDeviceId = Reader.NameTable.Add(@"DepthCameraDeviceId");

            id149_DestroyPortalErrorCode = Reader.NameTable.Add(@"DestroyPortalErrorCode");

            id301_ColorProfileId = Reader.NameTable.Add(@"ColorProfileId");

            id539_RepositionRequest = Reader.NameTable.Add(@"RepositionRequest");

            id146_PortalErrorCode = Reader.NameTable.Add(@"PortalErrorCode");

            id742_Buttons = Reader.NameTable.Add(@"Buttons");

            id612_PlayerMuteSelected = Reader.NameTable.Add(@"PlayerMuteSelected");

            id480_SynchronousSpinRequest = Reader.NameTable.Add(@"SynchronousSpinRequest");

            id427_SymbolHotPositionData = Reader.NameTable.Add(@"SymbolHotPositionData");

            id734_ImageSetId = Reader.NameTable.Add(@"ImageSetId");

            id694_Item = Reader.NameTable.Add(@"CabinetEventRegistrationResponse");

            id675_LightBar = Reader.NameTable.Add(@"LightBar");

            id599_Item = Reader.NameTable.Add(@"VolumePlayerSelectableChangedEvent");

            id464_RegisterStatusRequest = Reader.NameTable.Add(@"RegisterStatusRequest");

            id185_Width = Reader.NameTable.Add(@"Width");

            id676_LightBezel = Reader.NameTable.Add(@"LightBezel");

            id669_Light = Reader.NameTable.Add(@"Light");

            id206_PortalConfig = Reader.NameTable.Add(@"PortalConfig");

            id628_ConnectedDevicesRequest = Reader.NameTable.Add(@"ConnectedDevicesRequest");

            id747_timestamp = Reader.NameTable.Add(@"timestamp");

            id324_h = Reader.NameTable.Add(@"h");

            id234_GetHapticDeviceStatusResponse = Reader.NameTable.Add(@"GetHapticDeviceStatusResponse");

            id359_deviceId = Reader.NameTable.Add(@"deviceId");

            id558_LayerIndex = Reader.NameTable.Add(@"LayerIndex");

            id424_SymbolTrackingData = Reader.NameTable.Add(@"SymbolTrackingData");

            id392_TotalBankPositions = Reader.NameTable.Add(@"TotalBankPositions");

            id446_NumberOfLights = Reader.NameTable.Add(@"NumberOfLights");

            id75_Visible = Reader.NameTable.Add(@"Visible");

            id492_SpeedIndex = Reader.NameTable.Add(@"SpeedIndex");

            id170_Type = Reader.NameTable.Add(@"Type");

            id441_TotalLightCount = Reader.NameTable.Add(@"TotalLightCount");

            id32_CsiDepthCameraV1xsd = Reader.NameTable.Add(@"CsiDepthCameraV1.xsd");

            id693_Item = Reader.NameTable.Add(@"CabinetEventRegistrationRequest");

            id221_DepthCameraDevices = Reader.NameTable.Add(@"DepthCameraDevices");

            id515_AccelerationDecelerationTime = Reader.NameTable.Add(@"AccelerationDecelerationTime");

            id81_GetCallAttendantResponse = Reader.NameTable.Add(@"GetCallAttendantResponse");

            id520_MulipleReelResponse = Reader.NameTable.Add(@"MulipleReelResponse");

            id522_ChangeReelSpeed = Reader.NameTable.Add(@"ChangeReelSpeed");

            id411_InterfaceName = Reader.NameTable.Add(@"InterfaceName");

            id740_PanelType = Reader.NameTable.Add(@"PanelType");

            id11_CsiWindow = Reader.NameTable.Add(@"CsiWindow");

            id97_Item = Reader.NameTable.Add(@"RegisterForPromptPlayerOnCashoutConfigItemChangedEventsResponse");

            id499_Shake = Reader.NameTable.Add(@"Shake");

            id365_TouchScreenResponse = Reader.NameTable.Add(@"TouchScreenResponse");

            id431_Color = Reader.NameTable.Add(@"Color");

            id737_Repeat = Reader.NameTable.Add(@"Repeat");

            id55_ShutdownDescription = Reader.NameTable.Add(@"ShutdownDescription");

            id128_GetPortalIdByNameRequest = Reader.NameTable.Add(@"GetPortalIdByNameRequest");

            id346_Item = Reader.NameTable.Add(@"ResetDigitizerDebounceIntervalForDPP");

            id277_GetPreferredUIDisplayRequest = Reader.NameTable.Add(@"GetPreferredUIDisplayRequest");

            id589_SetVolumePlayerLevelResponse = Reader.NameTable.Add(@"SetVolumePlayerLevelResponse");

            id31_CsiDepthCamera = Reader.NameTable.Add(@"CsiDepthCamera");

            id364_Instance = Reader.NameTable.Add(@"Instance");

            id625_EnablePower = Reader.NameTable.Add(@"EnablePower");

            id636_ReleaseDeviceRequest = Reader.NameTable.Add(@"ReleaseDeviceRequest");

            id478_StopRequest = Reader.NameTable.Add(@"StopRequest");

            id403_Item = Reader.NameTable.Add(@"SetEnabledSymbolHighlightFeaturesResponse");

            id474_SetToPositionRequest = Reader.NameTable.Add(@"SetToPositionRequest");

            id70_Item = Reader.NameTable.Add(@"RegisterAsEmulatedCashoutServiceWindowResponse");

            id565_Flags = Reader.NameTable.Add(@"Flags");

            id381_Destination = Reader.NameTable.Add(@"Destination");

            id390_TimeFramePrecision = Reader.NameTable.Add(@"TimeFramePrecision");

            id309_DeviceIdentifier = Reader.NameTable.Add(@"DeviceIdentifier");

            id564_Identifier = Reader.NameTable.Add(@"Identifier");

            id686_ActivityStatusEvent = Reader.NameTable.Add(@"ActivityStatusEvent");

            id559_StereoscopicFrames = Reader.NameTable.Add(@"StereoscopicFrames");

            id40_CsiServiceV1xsd = Reader.NameTable.Add(@"CsiServiceV1.xsd");

            id728_LampStates = Reader.NameTable.Add(@"LampStates");

            id214_DefaultPresentationSpeed = Reader.NameTable.Add(@"DefaultPresentationSpeed");

            id444_Group = Reader.NameTable.Add(@"Group");

            id656_SetColorResponse = Reader.NameTable.Add(@"SetColorResponse");

            id471_SetStopOrderResponse = Reader.NameTable.Add(@"SetStopOrderResponse");

            id553_DockPriority = Reader.NameTable.Add(@"DockPriority");

            id260_SeekTime = Reader.NameTable.Add(@"SeekTime");

            id294_Aspect = Reader.NameTable.Add(@"Aspect");

            id672_Running = Reader.NameTable.Add(@"Running");

            id563_Data = Reader.NameTable.Add(@"Data");

            id743_Button = Reader.NameTable.Add(@"Button");

            id171_Position = Reader.NameTable.Add(@"Position");

            id229_DeviceId = Reader.NameTable.Add(@"DeviceId");

            id320_DesktopRectangle = Reader.NameTable.Add(@"DesktopRectangle");

            id529_CreatedRequest = Reader.NameTable.Add(@"CreatedRequest");

            id244_HapticDeviceStatusResponse = Reader.NameTable.Add(@"HapticDeviceStatusResponse");

            id623_Powered = Reader.NameTable.Add(@"Powered");

            id211_SetPresentationSpeedResponse = Reader.NameTable.Add(@"SetPresentationSpeedResponse");

            id389_TimeFrame = Reader.NameTable.Add(@"TimeFrame");

            id617_PriorityMuteState = Reader.NameTable.Add(@"PriorityMuteState");

            id118_CreatePortalRequest = Reader.NameTable.Add(@"CreatePortalRequest");

            id12_CsiWindowV1xsd = Reader.NameTable.Add(@"CsiWindowV1.xsd");

            id420_FrameName = Reader.NameTable.Add(@"FrameName");

            id472_SetSynchronousStopRequest = Reader.NameTable.Add(@"SetSynchronousStopRequest");

            id317_StereoscopicFrame = Reader.NameTable.Add(@"StereoscopicFrame");

            id573_AnimationViewports = Reader.NameTable.Add(@"AnimationViewports");

            id80_GetCallAttendantRequest = Reader.NameTable.Add(@"GetCallAttendantRequest");

            id164_PortalIdList = Reader.NameTable.Add(@"PortalIdList");

            id706_NewGame = Reader.NameTable.Add(@"NewGame");

            id592_VolumeChangedEvent = Reader.NameTable.Add(@"VolumeChangedEvent");

            id56_ConnectResponse = Reader.NameTable.Add(@"ConnectResponse");

            id333_SetReadyStateRequest = Reader.NameTable.Add(@"SetReadyStateRequest");

            id661_TurnOffRequest = Reader.NameTable.Add(@"TurnOffRequest");

            id576_End = Reader.NameTable.Add(@"End");

            id161_PortalId = Reader.NameTable.Add(@"PortalId");

            id222_DepthCameraDevice = Reader.NameTable.Add(@"DepthCameraDevice");

            id410_StreamingLightResponse = Reader.NameTable.Add(@"StreamingLightResponse");

            id720_RemoveImageSetRequest = Reader.NameTable.Add(@"RemoveImageSetRequest");

            id91_Item = Reader.NameTable.Add(@"RegisterForCallAttendantChangedEventsResponse");

            id224_DepthCameraDeviceIndex = Reader.NameTable.Add(@"DepthCameraDeviceIndex");

            id476_SpinRequest = Reader.NameTable.Add(@"SpinRequest");

            id167_Name = Reader.NameTable.Add(@"Name");

            id248_DeviceCapabilitiesRequest = Reader.NameTable.Add(@"DeviceCapabilitiesRequest");

            id664_TransitionMode = Reader.NameTable.Add(@"TransitionMode");

            id484_UnregisterStatusRequest = Reader.NameTable.Add(@"UnregisterStatusRequest");

            id723_SetAllPixelsResponse = Reader.NameTable.Add(@"SetAllPixelsResponse");

            id1_CsiButton = Reader.NameTable.Add(@"CsiButton");

            id150_ExecuteContentErrorCode = Reader.NameTable.Add(@"ExecuteContentErrorCode");

            id404_SetLightIntensityRequest = Reader.NameTable.Add(@"SetLightIntensityRequest");

            id418_SequenceName = Reader.NameTable.Add(@"SequenceName");

            id393_BreakLoopRequest = Reader.NameTable.Add(@"BreakLoopRequest");

            id454_SolenoidActionState = Reader.NameTable.Add(@"SolenoidActionState");

            id368_ExclusiveModeRequested = Reader.NameTable.Add(@"ExclusiveModeRequested");

            id746_ButtonFunctions = Reader.NameTable.Add(@"ButtonFunctions");

            id251_PlayContentResponse = Reader.NameTable.Add(@"PlayContentResponse");

            id107_MechanicalBellRingRequest = Reader.NameTable.Add(@"MechanicalBellRingRequest");

            id386_SynchronizationInfoError = Reader.NameTable.Add(@"SynchronizationInfoError");

            id688_ActivityStatusResponse = Reader.NameTable.Add(@"ActivityStatusResponse");

            id273_GetConfigurationRequest = Reader.NameTable.Add(@"GetConfigurationRequest");

            id25_CsiMonitor = Reader.NameTable.Add(@"CsiMonitor");

            id640_GroupList = Reader.NameTable.Add(@"GroupList");

            id103_EmulatableButton = Reader.NameTable.Add(@"EmulatableButton");

            id685_LightData = Reader.NameTable.Add(@"LightData");

            id378_ReceivedSynchronizationPayload = Reader.NameTable.Add(@"ReceivedSynchronizationPayload");

            id330_ReadyStateNotificationEvent = Reader.NameTable.Add(@"ReadyStateNotificationEvent");

            id726_ButtonResponse = Reader.NameTable.Add(@"ButtonResponse");

            id299_AdditionalLayers = Reader.NameTable.Add(@"AdditionalLayers");

            id705_GameAttractStyle = Reader.NameTable.Add(@"GameAttractStyle");

            id632_DeviceReleasedEvent = Reader.NameTable.Add(@"DeviceReleasedEvent");

            id535_MultiWindowRepositionRequest = Reader.NameTable.Add(@"MultiWindowRepositionRequest");

            id635_EventRegistrationResponse = Reader.NameTable.Add(@"EventRegistrationResponse");

            id355_TouchScreens = Reader.NameTable.Add(@"TouchScreens");

            id497_Cock = Reader.NameTable.Add(@"Cock");

            id352_TouchDisplayTargetEvent = Reader.NameTable.Add(@"TouchDisplayTargetEvent");

            id415_SequenceData = Reader.NameTable.Add(@"SequenceData");

            id683_StartLight = Reader.NameTable.Add(@"StartLight");

            id45_Csi = Reader.NameTable.Add(@"Csi");

            id421_FrameCount = Reader.NameTable.Add(@"FrameCount");

            id489_Number = Reader.NameTable.Add(@"Number");

            id429_ReelStop = Reader.NameTable.Add(@"ReelStop");

            id498_Bounce = Reader.NameTable.Add(@"Bounce");

            id401_NotificationEvent = Reader.NameTable.Add(@"NotificationEvent");

            id35_CsiPortal = Reader.NameTable.Add(@"CsiPortal");

            id606_GroupVolumeSetting = Reader.NameTable.Add(@"GroupVolumeSetting");

            id731_ButtonId = Reader.NameTable.Add(@"ButtonId");

            id250_PlayContentRequest = Reader.NameTable.Add(@"PlayContentRequest");

            id629_ConnectedDevicesResponse = Reader.NameTable.Add(@"ConnectedDevicesResponse");

            id123_ExecuteContentResponse = Reader.NameTable.Add(@"ExecuteContentResponse");

            id537_MultiWindowSizeRequest = Reader.NameTable.Add(@"MultiWindowSizeRequest");

            id42_Item = Reader.NameTable.Add(@"CsiEmulatedCashoutServiceV1.xsd");

            id641_Reason = Reader.NameTable.Add(@"Reason");

            id400_GetLightIntensityResponse = Reader.NameTable.Add(@"GetLightIntensityResponse");

            id667_Consecutive = Reader.NameTable.Add(@"Consecutive");

            id505_Speed = Reader.NameTable.Add(@"Speed");

            id28_CsiVideoTopperV1xsd = Reader.NameTable.Add(@"CsiVideoTopperV1.xsd");

            id180_MediaDisplayId = Reader.NameTable.Add(@"MediaDisplayId");

            id311_RevisionIdentifier = Reader.NameTable.Add(@"RevisionIdentifier");

            id322_y = Reader.NameTable.Add(@"y");

            id298_VirtualY = Reader.NameTable.Add(@"VirtualY");

            id585_MuteClientsResponse = Reader.NameTable.Add(@"MuteClientsResponse");

            id438_StreamingLightFeatures = Reader.NameTable.Add(@"StreamingLightFeatures");

            id200_PortalContentId = Reader.NameTable.Add(@"PortalContentId");

            id730_LampState = Reader.NameTable.Add(@"LampState");

            id609_PlayerMuteSelectable = Reader.NameTable.Add(@"PlayerMuteSelectable");

            id296_DesktopCoordinates = Reader.NameTable.Add(@"DesktopCoordinates");

            id496_Stop = Reader.NameTable.Add(@"Stop");

            id41_CsiEmulatedCashoutService = Reader.NameTable.Add(@"CsiEmulatedCashoutService");

            id495_Duration = Reader.NameTable.Add(@"Duration");

            id308_VendorIdentifier = Reader.NameTable.Add(@"VendorIdentifier");

            id642_Device = Reader.NameTable.Add(@"Device");

            id140_PortalListResponse = Reader.NameTable.Add(@"PortalListResponse");

            id213_PresentationSpeed = Reader.NameTable.Add(@"PresentationSpeed");

            id341_Item = Reader.NameTable.Add(@"DPPDigitizerDebounceIntervalResponse");

            id593_Item = Reader.NameTable.Add(@"VolumeMuteAllStatusChangedEvent");

            id552_Dock = Reader.NameTable.Add(@"Dock");

            id473_SetSynchronousStopResponse = Reader.NameTable.Add(@"SetSynchronousStopResponse");

            id285_MonitorResponse = Reader.NameTable.Add(@"MonitorResponse");

            id138_PortalInfoResponse = Reader.NameTable.Add(@"PortalInfoResponse");

            id105_Enabled = Reader.NameTable.Add(@"Enabled");

            id584_MuteClientsRequest = Reader.NameTable.Add(@"MuteClientsRequest");

            id209_GetPresentationSpeedResponse = Reader.NameTable.Add(@"GetPresentationSpeedResponse");

            id112_FeatureId = Reader.NameTable.Add(@"FeatureId");

            id44_CsiConnectV1xsd = Reader.NameTable.Add(@"CsiConnectV1.xsd");

            id349_Item = Reader.NameTable.Add(@"SetDigitizerExclusiveModeResponse");

            id380_SendPayload = Reader.NameTable.Add(@"SendPayload");

            id634_EventRegistrationRequest = Reader.NameTable.Add(@"EventRegistrationRequest");

            id465_RegisterStatusResponse = Reader.NameTable.Add(@"RegisterStatusResponse");

            id155_HidePortalErrorCode = Reader.NameTable.Add(@"HidePortalErrorCode");

            id602_VolumeRequest = Reader.NameTable.Add(@"VolumeRequest");

            id504_Deceleration = Reader.NameTable.Add(@"Deceleration");

            id717_GetLampStateResponse = Reader.NameTable.Add(@"GetLampStateResponse");

            id643_Acquired = Reader.NameTable.Add(@"Acquired");

            id8_CsiResourceV1xsd = Reader.NameTable.Add(@"CsiResourceV1.xsd");

            id423_SymbolTrackingDataList = Reader.NameTable.Add(@"SymbolTrackingDataList");

            id572_Animation = Reader.NameTable.Add(@"Animation");

            id255_Event = Reader.NameTable.Add(@"Event");

            id645_AcquisitionStatus = Reader.NameTable.Add(@"AcquisitionStatus");

            id507_Features = Reader.NameTable.Add(@"Features");

            id43_CsiConnect = Reader.NameTable.Add(@"CsiConnect");

            id440_LightType = Reader.NameTable.Add(@"LightType");

            id203_XMLSocketEMDIPort = Reader.NameTable.Add(@"XMLSocketEMDIPort");

            id490_ReelStatus = Reader.NameTable.Add(@"ReelStatus");

            id48_Category = Reader.NameTable.Add(@"Category");

            id488_ReelStatusEvent = Reader.NameTable.Add(@"ReelStatusEvent");

            id280_GetStereoscopyStateResponse = Reader.NameTable.Add(@"GetStereoscopyStateResponse");

            id272_EnableStereoscopyResponse = Reader.NameTable.Add(@"EnableStereoscopyResponse");

            id509_FeatureData = Reader.NameTable.Add(@"FeatureData");

            id611_VolumePlayerLevel = Reader.NameTable.Add(@"VolumePlayerLevel");

            id663_LightResponse = Reader.NameTable.Add(@"LightResponse");

            id678_LightsOnBottom = Reader.NameTable.Add(@"LightsOnBottom");

            id721_RemoveImageSetResponse = Reader.NameTable.Add(@"RemoveImageSetResponse");

            id110_MechanicalBellStopResponse = Reader.NameTable.Add(@"MechanicalBellStopResponse");

            id126_GetEMDIConfigRequest = Reader.NameTable.Add(@"GetEMDIConfigRequest");

            id516_AccelerationTimeToNextSpeed = Reader.NameTable.Add(@"AccelerationTimeToNextSpeed");

            id304_ParentGpu = Reader.NameTable.Add(@"ParentGpu");

            id290_Desktop = Reader.NameTable.Add(@"Desktop");

            id659_StartSequenceRequest = Reader.NameTable.Add(@"StartSequenceRequest");

            id258_VideoTopperResponse = Reader.NameTable.Add(@"VideoTopperResponse");

            id449_RealTimeFrameControlSupported = Reader.NameTable.Add(@"RealTimeFrameControlSupported");

            id595_VolumeMuteAllStatusResponse = Reader.NameTable.Add(@"VolumeMuteAllStatusResponse");

            id356_TouchScreenInfo = Reader.NameTable.Add(@"TouchScreenInfo");

            id278_GetPreferredUIDisplayResponse = Reader.NameTable.Add(@"GetPreferredUIDisplayResponse");

            id325_MonitorModel = Reader.NameTable.Add(@"MonitorModel");

            id542_SizeResponse = Reader.NameTable.Add(@"SizeResponse");

            id256_ContentKey = Reader.NameTable.Add(@"ContentKey");

            id456_ApplyAttributesResponse = Reader.NameTable.Add(@"ApplyAttributesResponse");

            id622_Unused = Reader.NameTable.Add(@"Unused");

            id177_TouchSupported = Reader.NameTable.Add(@"TouchSupported");

            id113_Count = Reader.NameTable.Add(@"Count");

            id361_connectionStatus = Reader.NameTable.Add(@"connectionStatus");

            id178_AudioSupported = Reader.NameTable.Add(@"AudioSupported");

            id152_GetEMDIConfigErrorCode = Reader.NameTable.Add(@"GetEMDIConfigErrorCode");

            id482_SynchronousStopRequest = Reader.NameTable.Add(@"SynchronousStopRequest");

            id508_Feature = Reader.NameTable.Add(@"Feature");

            id405_SetLightIntensityResponse = Reader.NameTable.Add(@"SetLightIntensityResponse");

            id79_Item = Reader.NameTable.Add(@"EmulatedServiceButtonEnabledConfigItemChangedEvent");

            id302_AvailableColorProfiles = Reader.NameTable.Add(@"AvailableColorProfiles");

            id228_Item = Reader.NameTable.Add(@"DepthCameraDeviceStatusResponse");

            id750_IsDiagnostic = Reader.NameTable.Add(@"IsDiagnostic");

            id259_ContentPath = Reader.NameTable.Add(@"ContentPath");

            id555_AdjustedViewportCoordinates = Reader.NameTable.Add(@"AdjustedViewportCoordinates");

            id231_Description = Reader.NameTable.Add(@"Description");

            id132_HidePortalRequest = Reader.NameTable.Add(@"HidePortalRequest");

            id575_Start = Reader.NameTable.Add(@"Start");

            id343_GetTouchScreenInfoRequest = Reader.NameTable.Add(@"GetTouchScreenInfoRequest");

            id326_Manufacturer = Reader.NameTable.Add(@"Manufacturer");

            id158_PortalListErrorCode = Reader.NameTable.Add(@"PortalListErrorCode");

            id679_LightsOnLeft = Reader.NameTable.Add(@"LightsOnLeft");

            id582_GetAudioEndpointsResponse = Reader.NameTable.Add(@"GetAudioEndpointsResponse");

            id210_SetPresentationSpeedRequest = Reader.NameTable.Add(@"SetPresentationSpeedRequest");

            id587_Item = Reader.NameTable.Add(@"SetDefaultAudioEndpointResponse");

            id687_ActivityStatusRequest = Reader.NameTable.Add(@"ActivityStatusRequest");

            id342_Item = Reader.NameTable.Add(@"DigitizerDebounceIntervalResponse");

            id143_ShowPortalRequest = Reader.NameTable.Add(@"ShowPortalRequest");

            id115_PauseDurationMilliseconds = Reader.NameTable.Add(@"PauseDurationMilliseconds");

            id470_SetStopOrderRequest = Reader.NameTable.Add(@"SetStopOrderRequest");

            id451_SolenoidRequest = Reader.NameTable.Add(@"SolenoidRequest");

            id59_MajorVersion = Reader.NameTable.Add(@"MajorVersion");

            id502_LowerLimit = Reader.NameTable.Add(@"LowerLimit");

            id337_ClientPriority = Reader.NameTable.Add(@"ClientPriority");

            id33_CsiPresentationSpeed = Reader.NameTable.Add(@"CsiPresentationSpeed");

            id151_GetContentStateErrorCode = Reader.NameTable.Add(@"GetContentStateErrorCode");

            id692_CabinetEvent = Reader.NameTable.Add(@"CabinetEvent");

            id46_CsiMessageV1xsd = Reader.NameTable.Add(@"CsiMessageV1.xsd");

            id699_CabinetResponse = Reader.NameTable.Add(@"CabinetResponse");

            id188_Location = Reader.NameTable.Add(@"Location");

            id85_Item = Reader.NameTable.Add(@"GetPromptPlayerOnCashoutConfigItemValueResponse");

            id363_digitizer = Reader.NameTable.Add(@"digitizer");

            id722_SetAllPixelsRequest = Reader.NameTable.Add(@"SetAllPixelsRequest");

            id445_StreamingLightGroup = Reader.NameTable.Add(@"StreamingLightGroup");

            id71_Item = Reader.NameTable.Add(@"SetEmulatedCashoutServiceVisibleRequest");

            id332_ReadyStateSubscriptionResponse = Reader.NameTable.Add(@"ReadyStateSubscriptionResponse");

            id102_PlayerServiceRequested = Reader.NameTable.Add(@"PlayerServiceRequested");

            id626_AcquireDeviceRequest = Reader.NameTable.Add(@"AcquireDeviceRequest");

            id182_Min = Reader.NameTable.Add(@"Min");

            id689_Item = Reader.NameTable.Add(@"AttractAestheticConfigurationChangedEvent");

            id736_FrameDelay = Reader.NameTable.Add(@"FrameDelay");

            id286_Support = Reader.NameTable.Add(@"Support");

            id581_GetAudioEndpointsRequest = Reader.NameTable.Add(@"GetAudioEndpointsRequest");

            id76_Culture = Reader.NameTable.Add(@"Culture");

            id467_SetRecoveryResponse = Reader.NameTable.Add(@"SetRecoveryResponse");

            id725_SetLampStateResponse = Reader.NameTable.Add(@"SetLampStateResponse");

            id487_StatusSubscription = Reader.NameTable.Add(@"StatusSubscription");

            id524_Immediate = Reader.NameTable.Add(@"Immediate");

            id166_PortalInfo = Reader.NameTable.Add(@"PortalInfo");

            id588_SetVolumePlayerLevelRequest = Reader.NameTable.Add(@"SetVolumePlayerLevelRequest");

            id247_CacheContentResponse = Reader.NameTable.Add(@"CacheContentResponse");

            id47_Item = Reader.NameTable.Add(@"");

            id613_DefaultVolumePlayerLevel = Reader.NameTable.Add(@"DefaultVolumePlayerLevel");

            id207_VisibilityGroupName = Reader.NameTable.Add(@"VisibilityGroupName");

            id39_CsiService = Reader.NameTable.Add(@"CsiService");

            id89_Item = Reader.NameTable.Add(@"PromptPlayerOnCashoutConfigItemChangedEvent");

            id660_StartSequenceResponse = Reader.NameTable.Add(@"StartSequenceResponse");

            id16_CsiSolenoidV1xsd = Reader.NameTable.Add(@"CsiSolenoidV1.xsd");

            id738_Filename = Reader.NameTable.Add(@"Filename");

            id439_StreamingLightFeatureData = Reader.NameTable.Add(@"StreamingLightFeatureData");

            id544_WindowId = Reader.NameTable.Add(@"WindowId");

            id235_GetHapticDevicesRequest = Reader.NameTable.Add(@"GetHapticDevicesRequest");

            id673_SequenceNumber = Reader.NameTable.Add(@"SequenceNumber");

        }

    }



    public abstract class XmlSerializer1 : System.Xml.Serialization.XmlSerializer {

        protected override System.Xml.Serialization.XmlSerializationReader CreateReader() {

            return new XmlSerializationReader1();

        }

        protected override System.Xml.Serialization.XmlSerializationWriter CreateWriter() {

            return new XmlSerializationWriter1();

        }

    }



    public sealed class CsiButtonSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiButton", @"CsiButtonV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write531_CsiButton(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read531_CsiButton();

        }

    }



    public sealed class CsiCabinetSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiCabinet", @"CsiCabinetV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write532_CsiCabinet(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read532_CsiCabinet();

        }

    }



    public sealed class CsiLightSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiLight", @"CsiLightV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write533_CsiLight(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read533_CsiLight();

        }

    }



    public sealed class CsiResourceSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiResource", @"CsiResourceV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write534_CsiResource(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read534_CsiResource();

        }

    }



    public sealed class CsiSoundSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiSound", @"CsiSoundV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write535_CsiSound(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read535_CsiSound();

        }

    }



    public sealed class CsiWindowSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiWindow", @"CsiWindowV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write536_CsiWindow(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read536_CsiWindow();

        }

    }



    public sealed class CsiReelSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiReel", @"CsiReelV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write537_CsiReel(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read537_CsiReel();

        }

    }



    public sealed class CsiSolenoidSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiSolenoid", @"CsiSolenoidV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write538_CsiSolenoid(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read538_CsiSolenoid();

        }

    }



    public sealed class CsiStreamingLightSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiStreamingLight", @"CsiStreamingLightV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write539_CsiStreamingLight(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read539_CsiStreamingLight();

        }

    }



    public sealed class CsiBankSynchronizationSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiBankSynchronization", @"CsiBankSynchronizationV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write540_CsiBankSynchronization(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read540_CsiBankSynchronization();

        }

    }



    public sealed class CsiTouchScreenSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiTouchScreen", @"CsiTouchScreenV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write541_CsiTouchScreen(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read541_CsiTouchScreen();

        }

    }



    public sealed class CsiReadinessSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiReadiness", @"CsiReadinessV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write542_CsiReadiness(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read542_CsiReadiness();

        }

    }



    public sealed class CsiMonitorSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiMonitor", @"CsiMonitorV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write543_CsiMonitor(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read543_CsiMonitor();

        }

    }



    public sealed class CsiVideoTopperSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiVideoTopper", @"CsiVideoTopperV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write544_CsiVideoTopper(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read544_CsiVideoTopper();

        }

    }



    public sealed class CsiHapticSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiHaptic", @"CsiHapticV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write545_CsiHaptic(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read545_CsiHaptic();

        }

    }



    public sealed class CsiDepthCameraSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiDepthCamera", @"CsiDepthCameraV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write546_CsiDepthCamera(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read546_CsiDepthCamera();

        }

    }



    public sealed class CsiPresentationSpeedSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiPresentationSpeed", @"CsiPresentationSpeedV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write547_CsiPresentationSpeed(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read547_CsiPresentationSpeed();

        }

    }



    public sealed class CsiPortalSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiPortal", @"CsiPortalV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write548_CsiPortal(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read548_CsiPortal();

        }

    }



    public sealed class CsiMechanicalBellSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiMechanicalBell", @"CsiMechanicalBellV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write549_CsiMechanicalBell(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read549_CsiMechanicalBell();

        }

    }



    public sealed class CsiServiceSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiService", @"CsiServiceV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write550_CsiService(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read550_CsiService();

        }

    }



    public sealed class CsiEmulatedCashoutServiceSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiEmulatedCashoutService", @"CsiEmulatedCashoutServiceV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write551_CsiEmulatedCashoutService(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read551_CsiEmulatedCashoutService();

        }

    }



    public sealed class CsiConnectSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"CsiConnect", @"CsiConnectV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write552_CsiConnect(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read552_CsiConnect();

        }

    }



    public sealed class CsiSerializer : XmlSerializer1 {



        public override System.Boolean CanDeserialize(System.Xml.XmlReader xmlReader) {

            return xmlReader.IsStartElement(@"Csi", @"CsiMessageV1.xsd");

        }



        protected override void Serialize(object objectToSerialize, System.Xml.Serialization.XmlSerializationWriter writer) {

            ((XmlSerializationWriter1)writer).Write553_Csi(objectToSerialize);

        }



        protected override object Deserialize(System.Xml.Serialization.XmlSerializationReader reader) {

            return ((XmlSerializationReader1)reader).Read553_Csi();

        }

    }



    public partial class XmlSerializerContract : global::System.Xml.Serialization.XmlSerializerImplementation {

        public override global::System.Xml.Serialization.XmlSerializationReader Reader { get { return new XmlSerializationReader1(); } }

        public override global::System.Xml.Serialization.XmlSerializationWriter Writer { get { return new XmlSerializationWriter1(); } }

        System.Collections.Hashtable readMethods = null;

        public override System.Collections.Hashtable ReadMethods {

            get {

                if (readMethods == null) {

                    System.Collections.Hashtable _tmp = new System.Collections.Hashtable();

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton:CsiButtonV1.xsd::False:"] = @"Read531_CsiButton";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet:CsiCabinetV1.xsd::False:"] = @"Read532_CsiCabinet";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight:CsiLightV1.xsd::False:"] = @"Read533_CsiLight";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource:CsiResourceV1.xsd::False:"] = @"Read534_CsiResource";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound:CsiSoundV1.xsd::False:"] = @"Read535_CsiSound";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow:CsiWindowV1.xsd::False:"] = @"Read536_CsiWindow";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel:CsiReelV1.xsd::False:"] = @"Read537_CsiReel";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid:CsiSolenoidV1.xsd::False:"] = @"Read538_CsiSolenoid";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight:CsiStreamingLightV1.xsd::False:"] = @"Read539_CsiStreamingLight";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization:CsiBankSynchronizationV1.xsd::False:"] = @"Read540_CsiBankSynchronization";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen:CsiTouchScreenV1.xsd::False:"] = @"Read541_CsiTouchScreen";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness:CsiReadinessV1.xsd::False:"] = @"Read542_CsiReadiness";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor:CsiMonitorV1.xsd::False:"] = @"Read543_CsiMonitor";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper:CsiVideoTopperV1.xsd::False:"] = @"Read544_CsiVideoTopper";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic:CsiHapticV1.xsd::False:"] = @"Read545_CsiHaptic";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera:CsiDepthCameraV1.xsd::False:"] = @"Read546_CsiDepthCamera";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed:CsiPresentationSpeedV1.xsd::False:"] = @"Read547_CsiPresentationSpeed";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal:CsiPortalV1.xsd::False:"] = @"Read548_CsiPortal";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell:CsiMechanicalBellV1.xsd::False:"] = @"Read549_CsiMechanicalBell";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService:CsiServiceV1.xsd::False:"] = @"Read550_CsiService";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService:CsiEmulatedCashoutServiceV1.xsd::False:"] = @"Read551_CsiEmulatedCashoutService";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect:CsiConnectV1.xsd::False:"] = @"Read552_CsiConnect";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi:CsiMessageV1.xsd::False:"] = @"Read553_Csi";

                    if (readMethods == null) readMethods = _tmp;

                }

                return readMethods;

            }

        }

        System.Collections.Hashtable writeMethods = null;

        public override System.Collections.Hashtable WriteMethods {

            get {

                if (writeMethods == null) {

                    System.Collections.Hashtable _tmp = new System.Collections.Hashtable();

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton:CsiButtonV1.xsd::False:"] = @"Write531_CsiButton";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet:CsiCabinetV1.xsd::False:"] = @"Write532_CsiCabinet";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight:CsiLightV1.xsd::False:"] = @"Write533_CsiLight";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource:CsiResourceV1.xsd::False:"] = @"Write534_CsiResource";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound:CsiSoundV1.xsd::False:"] = @"Write535_CsiSound";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow:CsiWindowV1.xsd::False:"] = @"Write536_CsiWindow";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel:CsiReelV1.xsd::False:"] = @"Write537_CsiReel";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid:CsiSolenoidV1.xsd::False:"] = @"Write538_CsiSolenoid";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight:CsiStreamingLightV1.xsd::False:"] = @"Write539_CsiStreamingLight";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization:CsiBankSynchronizationV1.xsd::False:"] = @"Write540_CsiBankSynchronization";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen:CsiTouchScreenV1.xsd::False:"] = @"Write541_CsiTouchScreen";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness:CsiReadinessV1.xsd::False:"] = @"Write542_CsiReadiness";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor:CsiMonitorV1.xsd::False:"] = @"Write543_CsiMonitor";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper:CsiVideoTopperV1.xsd::False:"] = @"Write544_CsiVideoTopper";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic:CsiHapticV1.xsd::False:"] = @"Write545_CsiHaptic";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera:CsiDepthCameraV1.xsd::False:"] = @"Write546_CsiDepthCamera";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed:CsiPresentationSpeedV1.xsd::False:"] = @"Write547_CsiPresentationSpeed";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal:CsiPortalV1.xsd::False:"] = @"Write548_CsiPortal";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell:CsiMechanicalBellV1.xsd::False:"] = @"Write549_CsiMechanicalBell";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService:CsiServiceV1.xsd::False:"] = @"Write550_CsiService";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService:CsiEmulatedCashoutServiceV1.xsd::False:"] = @"Write551_CsiEmulatedCashoutService";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect:CsiConnectV1.xsd::False:"] = @"Write552_CsiConnect";

                    _tmp[@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi:CsiMessageV1.xsd::False:"] = @"Write553_Csi";

                    if (writeMethods == null) writeMethods = _tmp;

                }

                return writeMethods;

            }

        }

        System.Collections.Hashtable typedSerializers = null;

        public override System.Collections.Hashtable TypedSerializers {

            get {

                if (typedSerializers == null) {

                    System.Collections.Hashtable _tmp = new System.Collections.Hashtable();

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid:CsiSolenoidV1.xsd::False:", new CsiSolenoidSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService:CsiServiceV1.xsd::False:", new CsiServiceSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource:CsiResourceV1.xsd::False:", new CsiResourceSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic:CsiHapticV1.xsd::False:", new CsiHapticSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect:CsiConnectV1.xsd::False:", new CsiConnectSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness:CsiReadinessV1.xsd::False:", new CsiReadinessSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen:CsiTouchScreenV1.xsd::False:", new CsiTouchScreenSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow:CsiWindowV1.xsd::False:", new CsiWindowSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight:CsiLightV1.xsd::False:", new CsiLightSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal:CsiPortalV1.xsd::False:", new CsiPortalSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton:CsiButtonV1.xsd::False:", new CsiButtonSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera:CsiDepthCameraV1.xsd::False:", new CsiDepthCameraSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet:CsiCabinetV1.xsd::False:", new CsiCabinetSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight:CsiStreamingLightV1.xsd::False:", new CsiStreamingLightSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound:CsiSoundV1.xsd::False:", new CsiSoundSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService:CsiEmulatedCashoutServiceV1.xsd::False:", new CsiEmulatedCashoutServiceSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed:CsiPresentationSpeedV1.xsd::False:", new CsiPresentationSpeedSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization:CsiBankSynchronizationV1.xsd::False:", new CsiBankSynchronizationSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi:CsiMessageV1.xsd::False:", new CsiSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell:CsiMechanicalBellV1.xsd::False:", new CsiMechanicalBellSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor:CsiMonitorV1.xsd::False:", new CsiMonitorSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper:CsiVideoTopperV1.xsd::False:", new CsiVideoTopperSerializer());

                    _tmp.Add(@"IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel:CsiReelV1.xsd::False:", new CsiReelSerializer());

                    if (typedSerializers == null) typedSerializers = _tmp;

                }

                return typedSerializers;

            }

        }

        public override System.Boolean CanSerialize(System.Type type) {

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect)) return true;

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi)) return true;

            return false;

        }

        public override System.Xml.Serialization.XmlSerializer GetSerializer(System.Type type) {

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiButton)) return new CsiButtonSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiCabinet)) return new CsiCabinetSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiLight)) return new CsiLightSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiResource)) return new CsiResourceSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSound)) return new CsiSoundSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiWindow)) return new CsiWindowSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReel)) return new CsiReelSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiSolenoid)) return new CsiSolenoidSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiStreamingLight)) return new CsiStreamingLightSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiBankSynchronization)) return new CsiBankSynchronizationSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiTouchScreen)) return new CsiTouchScreenSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiReadiness)) return new CsiReadinessSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMonitor)) return new CsiMonitorSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiVideoTopper)) return new CsiVideoTopperSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiHaptic)) return new CsiHapticSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiDepthCamera)) return new CsiDepthCameraSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPresentationSpeed)) return new CsiPresentationSpeedSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiPortal)) return new CsiPortalSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiMechanicalBell)) return new CsiMechanicalBellSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiService)) return new CsiServiceSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiEmulatedCashoutService)) return new CsiEmulatedCashoutServiceSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.CsiConnect)) return new CsiConnectSerializer();

            if (type == typeof(global::IGT.Game.Core.Communication.Cabinet.CSI.Schemas.Internal.Csi)) return new CsiSerializer();

            return null;

        }

    }

}

#pragma warning restore
